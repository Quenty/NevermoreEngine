{"searchDocs":[{"title":"AccessoryTypeUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AccessoryTypeUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AccessoryTypeUtils","url":"/NevermoreEngine/api/AccessoryTypeUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"tryGetAccessoryType​","type":1,"pageTitle":"AccessoryTypeUtils","url":"/NevermoreEngine/api/AccessoryTypeUtils#tryGetAccessoryType","content":"&lt;/&gt; AccessoryTypeUtils.tryGetAccessoryType(avatarAssetType: Enum.AvatarAssetType) → Enum.AccessoryType? Converts an enum value (retrieved from AvatarEditorService) into a proper enum if possible  ","version":null,"tagName":"h3"},{"title":"getAccessoryTypeFromName​","type":1,"pageTitle":"AccessoryTypeUtils","url":"/NevermoreEngine/api/AccessoryTypeUtils#getAccessoryTypeFromName","content":"&lt;/&gt; AccessoryTypeUtils.getAccessoryTypeFromName(accessoryType: string) → Enum.AccessoryType Converts a string into an enum value  ","version":null,"tagName":"h3"},{"title":"convertAssetTypeIdToAssetType​","type":1,"pageTitle":"AccessoryTypeUtils","url":"/NevermoreEngine/api/AccessoryTypeUtils#convertAssetTypeIdToAssetType","content":"&lt;/&gt; AccessoryTypeUtils.convertAssetTypeIdToAssetType(assetTypeId: number) → Enum.AssetType? Converts an enum value (retrieved from MarketplaceService) into a proper enum if possible  ","version":null,"tagName":"h3"},{"title":"convertAssetTypeIdToAvatarAssetType​","type":1,"pageTitle":"AccessoryTypeUtils","url":"/NevermoreEngine/api/AccessoryTypeUtils#convertAssetTypeIdToAvatarAssetType","content":"&lt;/&gt; AccessoryTypeUtils.convertAssetTypeIdToAvatarAssetType(avatarAssetTypeId: number) → Enum.AvatarAssetType? Converts an enum value (retrieved from MarketplaceService) into a proper enum if possible ","version":null,"tagName":"h3"},{"title":"AdorneeBoundingBox","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AdorneeBoundingBox","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AdorneeBoundingBox","url":"/NevermoreEngine/api/AdorneeBoundingBox#functions","content":" ","version":null,"tagName":"h2"},{"title":"ObserveBoundingBox​","type":1,"pageTitle":"AdorneeBoundingBox","url":"/NevermoreEngine/api/AdorneeBoundingBox#ObserveBoundingBox","content":"&lt;/&gt; AdorneeBoundingBox.ObserveBoundingBox(self: AdorneeBoundingBox) → Observable&lt;BoundingBoxData&gt; Observes the bounding box of the adornee  ","version":null,"tagName":"h3"},{"title":"GetBoundingBox​","type":1,"pageTitle":"AdorneeBoundingBox","url":"/NevermoreEngine/api/AdorneeBoundingBox#GetBoundingBox","content":"&lt;/&gt; AdorneeBoundingBox.GetBoundingBox(self: AdorneeBoundingBox) → BoundingBoxData? Gets the bounding box of the adornee  ","version":null,"tagName":"h3"},{"title":"ObserveCFrame​","type":1,"pageTitle":"AdorneeBoundingBox","url":"/NevermoreEngine/api/AdorneeBoundingBox#ObserveCFrame","content":"&lt;/&gt; AdorneeBoundingBox.ObserveCFrame(self: AdorneeBoundingBox) → Observable&lt;Vector3 &gt; Observes the cframe of the adornee  ","version":null,"tagName":"h3"},{"title":"GetCFrame​","type":1,"pageTitle":"AdorneeBoundingBox","url":"/NevermoreEngine/api/AdorneeBoundingBox#GetCFrame","content":"&lt;/&gt; AdorneeBoundingBox.GetCFrame(self: AdorneeBoundingBox) → Vector3  Gets the CFrame of the adornee  ","version":null,"tagName":"h3"},{"title":"ObserveSize​","type":1,"pageTitle":"AdorneeBoundingBox","url":"/NevermoreEngine/api/AdorneeBoundingBox#ObserveSize","content":"&lt;/&gt; AdorneeBoundingBox.ObserveSize(self: AdorneeBoundingBox) → Observable&lt;Vector3 &gt; Observes the size of the adornee  ","version":null,"tagName":"h3"},{"title":"GetSize​","type":1,"pageTitle":"AdorneeBoundingBox","url":"/NevermoreEngine/api/AdorneeBoundingBox#GetSize","content":"&lt;/&gt; AdorneeBoundingBox.GetSize(self: AdorneeBoundingBox) → Vector3  Gets the size of the adornee ","version":null,"tagName":"h3"},{"title":"ActionManager","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ActionManager","content":"ActionManager Holds single toggleable actions (like a tool system). INFO This is legacy code and probably should not be used in new games.","keywords":"","version":null},{"title":"AccelTween","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AccelTween","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AccelTween","url":"/NevermoreEngine/api/AccelTween#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"AccelTween","url":"/NevermoreEngine/api/AccelTween#new","content":"&lt;/&gt; AccelTween.new( maxaccel: number?-- The maximum acceleration applied to reach its target. Defaults to 1 ) → AccelTween Constructs a new AccelTween. local accelTween = AccelTween.new(30) accelTween.t = 1 conn = RunService.RenderStepped:Connect(function() print(accelTween.p) end) task.delay(accelTween.rtime, function() conn:Disconnect() end)  ","version":null,"tagName":"h3"},{"title":"AdorneeDataEntry","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AdorneeDataEntry","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AdorneeDataEntry","url":"/NevermoreEngine/api/AdorneeDataEntry#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"AdorneeDataEntry","url":"/NevermoreEngine/api/AdorneeDataEntry#new","content":"&lt;/&gt; AdorneeDataEntry.new( interface: string | (value: any) → ( boolean, string? ), createValueObject: (adornee: Instance ) → ValueObject&lt;T&gt;, defaultValue: T? ) → AdorneeDataEntry&lt;T&gt; Creates a new adornee data entry  ","version":null,"tagName":"h3"},{"title":"optionalAttribute​","type":1,"pageTitle":"AdorneeDataEntry","url":"/NevermoreEngine/api/AdorneeDataEntry#optionalAttribute","content":"&lt;/&gt; AdorneeDataEntry.optionalAttribute( interface: string | ValueInterface, name: string ) → AdorneeDataEntry&lt;T&gt; Sets up an optional attribute which can be nil to begin with.  ","version":null,"tagName":"h3"},{"title":"isAdorneeDataEntry​","type":1,"pageTitle":"AdorneeDataEntry","url":"/NevermoreEngine/api/AdorneeDataEntry#isAdorneeDataEntry","content":"&lt;/&gt; AdorneeDataEntry.isAdorneeDataEntry(data: any) → boolean Returns true if the implementation is an AdorneeDataEntry  ","version":null,"tagName":"h3"},{"title":"Create​","type":1,"pageTitle":"AdorneeDataEntry","url":"/NevermoreEngine/api/AdorneeDataEntry#Create","content":"&lt;/&gt; AdorneeDataEntry.Create( self: AdorneeDataEntry&lt;T&gt;, adornee: Instance ) → ValueObject&lt;T&gt; Creates a value object for the given adornee  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"AdorneeDataEntry","url":"/NevermoreEngine/api/AdorneeDataEntry#Observe","content":"&lt;/&gt; AdorneeDataEntry.Observe( self: AdorneeDataEntry&lt;T&gt;, adornee: Instance ) → Observable&lt;T&gt; Observes the current value for the adornee  ","version":null,"tagName":"h3"},{"title":"Get​","type":1,"pageTitle":"AdorneeDataEntry","url":"/NevermoreEngine/api/AdorneeDataEntry#Get","content":"&lt;/&gt; AdorneeDataEntry.Get( self: AdorneeDataEntry&lt;T&gt;, adornee: Instance ) → T Gets the value for the adornee  ","version":null,"tagName":"h3"},{"title":"Set​","type":1,"pageTitle":"AdorneeDataEntry","url":"/NevermoreEngine/api/AdorneeDataEntry#Set","content":"&lt;/&gt; AdorneeDataEntry.Set( self: AdorneeDataEntry&lt;T&gt;, adornee: Instance , value: T ) → () Sets the value for the adornee  ","version":null,"tagName":"h3"},{"title":"GetDefaultValue​","type":1,"pageTitle":"AdorneeDataEntry","url":"/NevermoreEngine/api/AdorneeDataEntry#GetDefaultValue","content":"&lt;/&gt; AdorneeDataEntry.GetDefaultValue(self: AdorneeDataEntry&lt;T&gt;) → T? Gets the default value  ","version":null,"tagName":"h3"},{"title":"GetStrictInterface​","type":1,"pageTitle":"AdorneeDataEntry","url":"/NevermoreEngine/api/AdorneeDataEntry#GetStrictInterface","content":"&lt;/&gt; AdorneeDataEntry.GetStrictInterface(self: AdorneeDataEntry&lt;T&gt;) → (value: any) → ( boolean, string? ) Gets the estrict interface for the entry  ","version":null,"tagName":"h3"},{"title":"IsValid​","type":1,"pageTitle":"AdorneeDataEntry","url":"/NevermoreEngine/api/AdorneeDataEntry#IsValid","content":"&lt;/&gt; AdorneeDataEntry.IsValid( self: AdorneeDataEntry&lt;T&gt;, value: any ) → ( boolean, string? ) Returns true if the item is valid. ","version":null,"tagName":"h3"},{"title":"AdorneeDataValue","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AdorneeDataValue","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"AdorneeDataValue","url":"/NevermoreEngine/api/AdorneeDataValue#properties","content":" ","version":null,"tagName":"h2"},{"title":"Value​","type":1,"pageTitle":"AdorneeDataValue","url":"/NevermoreEngine/api/AdorneeDataValue#Value","content":"&lt;/&gt; AdorneeDataValue.Value: T The current property of the Attribute. Can be assigned to to write the attribute.  ","version":null,"tagName":"h3"},{"title":"Changed​","type":1,"pageTitle":"AdorneeDataValue","url":"/NevermoreEngine/api/AdorneeDataValue#Changed","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; AdorneeDataValue.Changed: Signal&lt;()&gt; Signal that fires when the attribute changes ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"AdorneeDataValue","url":"/NevermoreEngine/api/AdorneeDataValue#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"AdorneeDataValue","url":"/NevermoreEngine/api/AdorneeDataValue#new","content":"&lt;/&gt; AdorneeDataValue.new( adornee: Instance , prototype: table ) → AdorneeDataValue&lt;T&gt; Constructs a new AdorneeDataValue  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"AdorneeDataValue","url":"/NevermoreEngine/api/AdorneeDataValue#Observe","content":"&lt;/&gt; AdorneeDataValue:Observe() → Observable&lt;any&gt; Observes an attribute on an instance. ","version":null,"tagName":"h3"},{"title":"AdorneeData","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AdorneeData","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AdorneeData","url":"/NevermoreEngine/api/AdorneeData#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"AdorneeData","url":"/NevermoreEngine/api/AdorneeData#new","content":"&lt;/&gt; AdorneeData.new(prototype: any) → AdorneeData&lt;T&gt; Attribute data specification  ","version":null,"tagName":"h3"},{"title":"IsStrictData​","type":1,"pageTitle":"AdorneeData","url":"/NevermoreEngine/api/AdorneeData#IsStrictData","content":"&lt;/&gt; AdorneeData:IsStrictData(data: any) → ( boolean, string-- Error message ) Returns true if the data is valid data, otherwise returns false and an error.  ","version":null,"tagName":"h3"},{"title":"CreateStrictData​","type":1,"pageTitle":"AdorneeData","url":"/NevermoreEngine/api/AdorneeData#CreateStrictData","content":"&lt;/&gt; AdorneeData:CreateStrictData(data: TStrict) → TStrict Validates and creates a new data table for the data that is readonly and frozen  ","version":null,"tagName":"h3"},{"title":"CreateFullData​","type":1,"pageTitle":"AdorneeData","url":"/NevermoreEngine/api/AdorneeData#CreateFullData","content":"&lt;/&gt; AdorneeData:CreateFullData(data: T) → T Validates and creates a new data table that is readonly. This table will have all values or the defaults  ","version":null,"tagName":"h3"},{"title":"CreateData​","type":1,"pageTitle":"AdorneeData","url":"/NevermoreEngine/api/AdorneeData#CreateData","content":"&lt;/&gt; AdorneeData:CreateData(data: TPartial) → TPartial Validates and creates a new data table that is readonly and frozen, but for partial data. The data can just be part of the attributes.  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"AdorneeData","url":"/NevermoreEngine/api/AdorneeData#Observe","content":"&lt;/&gt; AdorneeData:Observe(adornee: Instance ) → Observable&lt;TStrict&gt; Observes the attribute table for adornee  ","version":null,"tagName":"h3"},{"title":"Create​","type":1,"pageTitle":"AdorneeData","url":"/NevermoreEngine/api/AdorneeData#Create","content":"&lt;/&gt; AdorneeData:Create(adornee: Instance ) → AdorneeDataValue Gets attribute table for the data  ","version":null,"tagName":"h3"},{"title":"Get​","type":1,"pageTitle":"AdorneeData","url":"/NevermoreEngine/api/AdorneeData#Get","content":"&lt;/&gt; AdorneeData:Get(adornee: Instance ) → TStrict Gets the attributes for the adornee  ","version":null,"tagName":"h3"},{"title":"Set​","type":1,"pageTitle":"AdorneeData","url":"/NevermoreEngine/api/AdorneeData#Set","content":"&lt;/&gt; AdorneeData:Set( adornee: Instance , data: T ) → () Sets the attributes for the adornee  ","version":null,"tagName":"h3"},{"title":"Unset​","type":1,"pageTitle":"AdorneeData","url":"/NevermoreEngine/api/AdorneeData#Unset","content":"&lt;/&gt; AdorneeData:Unset(adornee: Instance ) → () Unsets the adornee's attributes (only for baseline attributes)  ","version":null,"tagName":"h3"},{"title":"SetStrict​","type":1,"pageTitle":"AdorneeData","url":"/NevermoreEngine/api/AdorneeData#SetStrict","content":"&lt;/&gt; AdorneeData:SetStrict( adornee: Instance , data: TStrict ) → () Sets the attributes for the adornee  ","version":null,"tagName":"h3"},{"title":"InitAttributes​","type":1,"pageTitle":"AdorneeData","url":"/NevermoreEngine/api/AdorneeData#InitAttributes","content":"&lt;/&gt; AdorneeData:InitAttributes( adornee: Instance , data: T? ) → () Initializes the attributes for the adornee  ","version":null,"tagName":"h3"},{"title":"GetStrictTInterface​","type":1,"pageTitle":"AdorneeData","url":"/NevermoreEngine/api/AdorneeData#GetStrictTInterface","content":"&lt;/&gt; AdorneeData:GetStrictTInterface() → function Gets a strict interface which will return true if the value is a partial interface and false otherwise.  ","version":null,"tagName":"h3"},{"title":"GetTInterface​","type":1,"pageTitle":"AdorneeData","url":"/NevermoreEngine/api/AdorneeData#GetTInterface","content":"&lt;/&gt; AdorneeData:GetTInterface() → function Gets a [t] interface which will return true if the value is a partial interface, and false otherwise.  ","version":null,"tagName":"h3"},{"title":"IsData​","type":1,"pageTitle":"AdorneeData","url":"/NevermoreEngine/api/AdorneeData#IsData","content":"&lt;/&gt; AdorneeData:IsData(data: any) → ( boolean, string-- Error message ) Returns true if the data is valid partial data, otherwise returns false and an error. ","version":null,"tagName":"h3"},{"title":"AdorneeConditionUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AdorneeConditionUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AdorneeConditionUtils","url":"/NevermoreEngine/api/AdorneeConditionUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeConditionsMet​","type":1,"pageTitle":"AdorneeConditionUtils","url":"/NevermoreEngine/api/AdorneeConditionUtils#observeConditionsMet","content":"&lt;/&gt; AdorneeConditionUtils.observeConditionsMet( conditionObj: BindableFunction ,-- Condition to invoke adornee: Instance -- Adornee to check conditions on ) → Observable&lt;boolean&gt; Observes whether conditions are met or not. AdorneeConditionUtils.observeConditionsMet(gun.AmmoAllowedConditions, ammo):Subscribe(function(allowed) if allowed then print(&quot;Can use this ammo to refill this gun&quot;) end end)   ","version":null,"tagName":"h3"},{"title":"promiseQueryConditionsMet​","type":1,"pageTitle":"AdorneeConditionUtils","url":"/NevermoreEngine/api/AdorneeConditionUtils#promiseQueryConditionsMet","content":"&lt;/&gt; AdorneeConditionUtils.promiseQueryConditionsMet( conditionObj: BindableFunction ,-- Condition to invoke adornee: Instance ,-- Adornee to check conditions on cancelToken: CancelToken? ) → Promise&lt;boolean&gt; Promises a query result of whether conditions are met or not. Unlike the observable, this will return a result once all combinations are met.  ","version":null,"tagName":"h3"},{"title":"createConditionContainer​","type":1,"pageTitle":"AdorneeConditionUtils","url":"/NevermoreEngine/api/AdorneeConditionUtils#createConditionContainer","content":"&lt;/&gt; AdorneeConditionUtils.createConditionContainer() → BindableFunction  Creates a new condition container which conditions can be parented to. By default this is an &quot;and&quot; container, that is, all conditions underneath this container must be met for something to be allowed.  ","version":null,"tagName":"h3"},{"title":"create​","type":1,"pageTitle":"AdorneeConditionUtils","url":"/NevermoreEngine/api/AdorneeConditionUtils#create","content":"&lt;/&gt; AdorneeConditionUtils.create(observeCallback: function) → BindableFunction  Creates a new adornee condition  ","version":null,"tagName":"h3"},{"title":"createRequiredProperty​","type":1,"pageTitle":"AdorneeConditionUtils","url":"/NevermoreEngine/api/AdorneeConditionUtils#createRequiredProperty","content":"&lt;/&gt; AdorneeConditionUtils.createRequiredProperty( propertyName: string, requiredValue: any ) → BindableFunction  Creates a new condition that a property is a set value.  ","version":null,"tagName":"h3"},{"title":"createRequiredAttribute​","type":1,"pageTitle":"AdorneeConditionUtils","url":"/NevermoreEngine/api/AdorneeConditionUtils#createRequiredAttribute","content":"&lt;/&gt; AdorneeConditionUtils.createRequiredAttribute( attributeName: string, attributeValue: any ) → BindableFunction  Creates a new condition that an attribute must be set to the current value  ","version":null,"tagName":"h3"},{"title":"createRequiredTieInterface​","type":1,"pageTitle":"AdorneeConditionUtils","url":"/NevermoreEngine/api/AdorneeConditionUtils#createRequiredTieInterface","content":"&lt;/&gt; AdorneeConditionUtils.createRequiredTieInterface(tieInterfaceDefinition: TieDefinition) → BindableFunction  Creates a new condition that a tie interface must be implemented for the object  ","version":null,"tagName":"h3"},{"title":"createOrConditionGroup​","type":1,"pageTitle":"AdorneeConditionUtils","url":"/NevermoreEngine/api/AdorneeConditionUtils#createOrConditionGroup","content":"&lt;/&gt; AdorneeConditionUtils.createOrConditionGroup() → BindableFunction  Creates a new &quot;or&quot; condition group where conditions are &quot;or&quot;ed together. Conditions should be parented underneath this BindableFunction.  ","version":null,"tagName":"h3"},{"title":"createAndConditionGroup​","type":1,"pageTitle":"AdorneeConditionUtils","url":"/NevermoreEngine/api/AdorneeConditionUtils#createAndConditionGroup","content":"&lt;/&gt; AdorneeConditionUtils.createAndConditionGroup() → BindableFunction  Creates a new &quot;and&quot; condition group where conditions are &quot;and&quot;ed together. Conditions should be parented underneath this BindableFunction.  ","version":null,"tagName":"h3"},{"title":"getRequiredTag​","type":1,"pageTitle":"AdorneeConditionUtils","url":"/NevermoreEngine/api/AdorneeConditionUtils#getRequiredTag","content":"&lt;/&gt; AdorneeConditionUtils.getRequiredTag() → string Conditions must be tagged with a specific tag to make sure we don't invoke random code, or code on the wrong host.  ","version":null,"tagName":"h3"},{"title":"getConditionNamePostfix​","type":1,"pageTitle":"AdorneeConditionUtils","url":"/NevermoreEngine/api/AdorneeConditionUtils#getConditionNamePostfix","content":"&lt;/&gt; AdorneeConditionUtils.getConditionNamePostfix() → string Gets the postfix for the condition name to make it clear to users if this condition is on the server or the client.  ","version":null,"tagName":"h3"},{"title":"setValueWhenEmpty​","type":1,"pageTitle":"AdorneeConditionUtils","url":"/NevermoreEngine/api/AdorneeConditionUtils#setValueWhenEmpty","content":"&lt;/&gt; AdorneeConditionUtils.setValueWhenEmpty( container: BindableFunction , value: boolean-- Value to default to ) → () Sets the default value if we have no value  ","version":null,"tagName":"h3"},{"title":"getValueWhenEmpty​","type":1,"pageTitle":"AdorneeConditionUtils","url":"/NevermoreEngine/api/AdorneeConditionUtils#getValueWhenEmpty","content":"&lt;/&gt; AdorneeConditionUtils.getValueWhenEmpty(container: BindableFunction ) → boolean Gets the default value on a container when empty  ","version":null,"tagName":"h3"},{"title":"observeValueWhenEmpty​","type":1,"pageTitle":"AdorneeConditionUtils","url":"/NevermoreEngine/api/AdorneeConditionUtils#observeValueWhenEmpty","content":"&lt;/&gt; AdorneeConditionUtils.observeValueWhenEmpty(container: BindableFunction ) → Observable&lt;boolean&gt; Sets the default value if we have no value ","version":null,"tagName":"h3"},{"title":"AdorneeModelBoundingBox","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AdorneeModelBoundingBox","content":"AdorneeModelBoundingBox","keywords":"","version":null},{"title":"AdorneeUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AdorneeUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AdorneeUtils","url":"/NevermoreEngine/api/AdorneeUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getCenter​","type":1,"pageTitle":"AdorneeUtils","url":"/NevermoreEngine/api/AdorneeUtils#getCenter","content":"&lt;/&gt; AdorneeUtils.getCenter(adornee: Instance ) → Vector3?  Gets the center of the adornee  ","version":null,"tagName":"h3"},{"title":"getBoundingBox​","type":1,"pageTitle":"AdorneeUtils","url":"/NevermoreEngine/api/AdorneeUtils#getBoundingBox","content":"&lt;/&gt; AdorneeUtils.getBoundingBox(adornee: Instance ) → ( CFrame? ,-- Center of the bounding box Vector3? -- Size of the bounding box ) Gets the bounding box of the adornee  ","version":null,"tagName":"h3"},{"title":"isPartOfAdornee​","type":1,"pageTitle":"AdorneeUtils","url":"/NevermoreEngine/api/AdorneeUtils#isPartOfAdornee","content":"&lt;/&gt; AdorneeUtils.isPartOfAdornee( adornee: Instance , part: BasePart ) → boolean Returns whether a part is a part of an adornee  ","version":null,"tagName":"h3"},{"title":"getParts​","type":1,"pageTitle":"AdorneeUtils","url":"/NevermoreEngine/api/AdorneeUtils#getParts","content":"&lt;/&gt; AdorneeUtils.getParts(adornee: Instance ) → {BasePart } Retrieves all parts of an adornee  ","version":null,"tagName":"h3"},{"title":"getAlignedSize​","type":1,"pageTitle":"AdorneeUtils","url":"/NevermoreEngine/api/AdorneeUtils#getAlignedSize","content":"&lt;/&gt; AdorneeUtils.getAlignedSize(adornee: Instance ) → Vector3?  Retrieves a size aligned the adornee's CFrame  ","version":null,"tagName":"h3"},{"title":"getPartCFrame​","type":1,"pageTitle":"AdorneeUtils","url":"/NevermoreEngine/api/AdorneeUtils#getPartCFrame","content":"&lt;/&gt; AdorneeUtils.getPartCFrame(adornee: Instance ) → CFrame  Retrieves this adornee's &quot;part&quot;'s CFrame.  ","version":null,"tagName":"h3"},{"title":"getPartPosition​","type":1,"pageTitle":"AdorneeUtils","url":"/NevermoreEngine/api/AdorneeUtils#getPartPosition","content":"&lt;/&gt; AdorneeUtils.getPartPosition(adornee: Instance ) → Position Retrieves this adornee's &quot;part&quot;'s position.  ","version":null,"tagName":"h3"},{"title":"getPartVelocity​","type":1,"pageTitle":"AdorneeUtils","url":"/NevermoreEngine/api/AdorneeUtils#getPartVelocity","content":"&lt;/&gt; AdorneeUtils.getPartVelocity(adornee: Instance ) → Vector3  Retrieves this adornee's &quot;part&quot;'s Velocity.  ","version":null,"tagName":"h3"},{"title":"getPart​","type":1,"pageTitle":"AdorneeUtils","url":"/NevermoreEngine/api/AdorneeUtils#getPart","content":"&lt;/&gt; AdorneeUtils.getPart(adornee: Instance ) → BasePart  Retrieves this adornee's part  ","version":null,"tagName":"h3"},{"title":"getRenderAdornee​","type":1,"pageTitle":"AdorneeUtils","url":"/NevermoreEngine/api/AdorneeUtils#getRenderAdornee","content":"&lt;/&gt; AdorneeUtils.getRenderAdornee(adornee: Instance ) → Instance  Retrieves this adornee's part on which to attach a rendering instance to ","version":null,"tagName":"h3"},{"title":"AdorneePartBoundingBox","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AdorneePartBoundingBox","content":"AdorneePartBoundingBox","keywords":"","version":null},{"title":"Aggregator","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Aggregator","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Aggregator","url":"/NevermoreEngine/api/Aggregator#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Aggregator","url":"/NevermoreEngine/api/Aggregator#new","content":"&lt;/&gt; Aggregator.new( debugName: string, promiseBulkQuery: ({number}) → Promise&lt;T&gt; ) → Aggregator&lt;T&gt; Creates a new aggregator that aggregates promised results together  ","version":null,"tagName":"h3"},{"title":"SetMaxBatchSize​","type":1,"pageTitle":"Aggregator","url":"/NevermoreEngine/api/Aggregator#SetMaxBatchSize","content":"&lt;/&gt; Aggregator.SetMaxBatchSize( self: Aggregator&lt;T&gt;, maxBatchSize: number ) → () Sets the max batch size  ","version":null,"tagName":"h3"},{"title":"Promise​","type":1,"pageTitle":"Aggregator","url":"/NevermoreEngine/api/Aggregator#Promise","content":"&lt;/&gt; Aggregator.Promise( self: Aggregator&lt;T&gt;, id: number ) → Promise&lt;T&gt;   ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"Aggregator","url":"/NevermoreEngine/api/Aggregator#Observe","content":"&lt;/&gt; Aggregator.Observe( self: Aggregator&lt;T&gt;, id: number ) → Observable&lt;T&gt; Observes the aggregated data ","version":null,"tagName":"h3"},{"title":"AnimatedHighlightGroup","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AnimatedHighlightGroup","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AnimatedHighlightGroup","url":"/NevermoreEngine/api/AnimatedHighlightGroup#functions","content":" ","version":null,"tagName":"h2"},{"title":"SetDefaultHighlightDepthMode​","type":1,"pageTitle":"AnimatedHighlightGroup","url":"/NevermoreEngine/api/AnimatedHighlightGroup#SetDefaultHighlightDepthMode","content":"&lt;/&gt; AnimatedHighlightGroup:SetDefaultHighlightDepthMode(depthMode: Enum.HighlightDepthMode) → () Sets the depth mode. Either can be: Enum.HighlightDepthMode.AlwaysOnTop Enum.HighlightDepthMode.Occluded  ","version":null,"tagName":"h3"},{"title":"Highlight​","type":1,"pageTitle":"AnimatedHighlightGroup","url":"/NevermoreEngine/api/AnimatedHighlightGroup#Highlight","content":"&lt;/&gt; AnimatedHighlightGroup:Highlight( adornee: Instance , observeScore: number ) → AnimatedHighlightModel Returns an AnimatedHighlightModel which can be used to adjust the values ","version":null,"tagName":"h3"},{"title":"AnimatedHighlight","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AnimatedHighlight","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AnimatedHighlight","url":"/NevermoreEngine/api/AnimatedHighlight#functions","content":" ","version":null,"tagName":"h2"},{"title":"isAnimatedHighlight​","type":1,"pageTitle":"AnimatedHighlight","url":"/NevermoreEngine/api/AnimatedHighlight#isAnimatedHighlight","content":"&lt;/&gt; AnimatedHighlight.isAnimatedHighlight(value: any) → boolean Returns true if it's an animated highlight  ","version":null,"tagName":"h3"},{"title":"SetHighlightDepthMode​","type":1,"pageTitle":"AnimatedHighlight","url":"/NevermoreEngine/api/AnimatedHighlight#SetHighlightDepthMode","content":"&lt;/&gt; AnimatedHighlight.SetHighlightDepthMode( self: AnimatedHighlight, depthMode: Enum.HighlightDepthMode ) → () Sets the depth mode. Either can be: Enum.HighlightDepthMode.AlwaysOnTop Enum.HighlightDepthMode.Occluded  ","version":null,"tagName":"h3"},{"title":"SetFillColor​","type":1,"pageTitle":"AnimatedHighlight","url":"/NevermoreEngine/api/AnimatedHighlight#SetFillColor","content":"&lt;/&gt; AnimatedHighlight.SetFillColor( self: AnimatedHighlight, color: Color3 , doNotAnimate: boolean? ) → () Sets the fill color  ","version":null,"tagName":"h3"},{"title":"SetOutlineColor​","type":1,"pageTitle":"AnimatedHighlight","url":"/NevermoreEngine/api/AnimatedHighlight#SetOutlineColor","content":"&lt;/&gt; AnimatedHighlight.SetOutlineColor( self: AnimatedHighlight, color: Color3 , doNotAnimate: boolean? ) → () Sets the outline color  ","version":null,"tagName":"h3"},{"title":"SetAdornee​","type":1,"pageTitle":"AnimatedHighlight","url":"/NevermoreEngine/api/AnimatedHighlight#SetAdornee","content":"&lt;/&gt; AnimatedHighlight.SetAdornee( self: AnimatedHighlight, adornee: Instance? ) → () Sets the adornee  ","version":null,"tagName":"h3"},{"title":"GetAdornee​","type":1,"pageTitle":"AnimatedHighlight","url":"/NevermoreEngine/api/AnimatedHighlight#GetAdornee","content":"&lt;/&gt; AnimatedHighlight.GetAdornee(self: AnimatedHighlight) → Instance?  Gets the adornee  ","version":null,"tagName":"h3"},{"title":"SetOutlineTransparency​","type":1,"pageTitle":"AnimatedHighlight","url":"/NevermoreEngine/api/AnimatedHighlight#SetOutlineTransparency","content":"&lt;/&gt; AnimatedHighlight.SetOutlineTransparency( self: AnimatedHighlight, outlineTransparency: number, doNotAnimate: boolean? ) → () Sets the outlineTransparency  ","version":null,"tagName":"h3"},{"title":"SetFillTransparency​","type":1,"pageTitle":"AnimatedHighlight","url":"/NevermoreEngine/api/AnimatedHighlight#SetFillTransparency","content":"&lt;/&gt; AnimatedHighlight.SetFillTransparency( self: AnimatedHighlight, fillTransparency: number, doNotAnimate: boolean? ) → () Sets the fillTransparency ","version":null,"tagName":"h3"},{"title":"AdorneeValue","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AdorneeValue","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"AdorneeValue","url":"/NevermoreEngine/api/AdorneeValue#properties","content":" ","version":null,"tagName":"h2"},{"title":"Changed​","type":1,"pageTitle":"AdorneeValue","url":"/NevermoreEngine/api/AdorneeValue#Changed","content":"&lt;/&gt; AdorneeValue.Changed: Signal&lt;T&gt;--fireswitholdValue,newValue Event fires when adornee changes  ","version":null,"tagName":"h3"},{"title":"Value​","type":1,"pageTitle":"AdorneeValue","url":"/NevermoreEngine/api/AdorneeValue#Value","content":"&lt;/&gt; AdorneeValue.Value: Instance | CFrame | Vector3 | nil The value of the AdorneeValue ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"AdorneeValue","url":"/NevermoreEngine/api/AdorneeValue#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"AdorneeValue","url":"/NevermoreEngine/api/AdorneeValue#new","content":"&lt;/&gt; AdorneeValue.new() → AdorneeValue Constructs a new AdorneeValue  ","version":null,"tagName":"h3"},{"title":"GetAdornee​","type":1,"pageTitle":"AdorneeValue","url":"/NevermoreEngine/api/AdorneeValue#GetAdornee","content":"&lt;/&gt; AdorneeValue.GetAdornee(self: AdorneeValue) → Instance | CFrame | Vector3 | nil Gets the current adornee. This is useful for attaching things to the world.  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"AdorneeValue","url":"/NevermoreEngine/api/AdorneeValue#Observe","content":"&lt;/&gt; AdorneeValue.Observe(self: AdorneeValue) → Observable&lt;Instance | CFrame | Vector3 | nil&gt; Observes the current adornee.  ","version":null,"tagName":"h3"},{"title":"ObserveBottomCFrame​","type":1,"pageTitle":"AdorneeValue","url":"/NevermoreEngine/api/AdorneeValue#ObserveBottomCFrame","content":"&lt;/&gt; AdorneeValue.ObserveBottomCFrame(self: AdorneeValue) → Observable&lt;CFrame | nil&gt; Observes the bottom cframe of the adornee  ","version":null,"tagName":"h3"},{"title":"ObserveCenterPosition​","type":1,"pageTitle":"AdorneeValue","url":"/NevermoreEngine/api/AdorneeValue#ObserveCenterPosition","content":"&lt;/&gt; AdorneeValue.ObserveCenterPosition(self: AdorneeValue) → Observable&lt;Vector3 | nil&gt; Observes the center position of the adornee  ","version":null,"tagName":"h3"},{"title":"GetCenterPosition​","type":1,"pageTitle":"AdorneeValue","url":"/NevermoreEngine/api/AdorneeValue#GetCenterPosition","content":"&lt;/&gt; AdorneeValue.GetCenterPosition(self: AdorneeValue) → Vector3 | nil Gets the center position of the adornee  ","version":null,"tagName":"h3"},{"title":"ObserveRadius​","type":1,"pageTitle":"AdorneeValue","url":"/NevermoreEngine/api/AdorneeValue#ObserveRadius","content":"&lt;/&gt; AdorneeValue.ObserveRadius(self: AdorneeValue) → Observable&lt;number?&gt; Observes the approximate radius of the adornee  ","version":null,"tagName":"h3"},{"title":"GetRadius​","type":1,"pageTitle":"AdorneeValue","url":"/NevermoreEngine/api/AdorneeValue#GetRadius","content":"&lt;/&gt; AdorneeValue.GetRadius(self: AdorneeValue) → number? Gets the approximate radius of the adornee  ","version":null,"tagName":"h3"},{"title":"ObservePositionTowards​","type":1,"pageTitle":"AdorneeValue","url":"/NevermoreEngine/api/AdorneeValue#ObservePositionTowards","content":"&lt;/&gt; AdorneeValue.ObservePositionTowards( self: AdorneeValue, observeTargetPosition: Observable&lt;Vector3 &gt;, observeRadius: Observable&lt;number&gt; ) → Observable Observes the position towards a given target. This projects the current adornee's bounding box and the position of the target to attach something generally near the outside of the box.  ","version":null,"tagName":"h3"},{"title":"GetPositionTowards​","type":1,"pageTitle":"AdorneeValue","url":"/NevermoreEngine/api/AdorneeValue#GetPositionTowards","content":"&lt;/&gt; AdorneeValue.GetPositionTowards( self: AdorneeValue, target: Vector3 , radius: Vector3 , center: Vector3 ) → Vector3  Gets a position projected from our current center and radius towards the given target vector. Useful for attaching arrows and stuff.  ","version":null,"tagName":"h3"},{"title":"ObserveAttachmentParent​","type":1,"pageTitle":"AdorneeValue","url":"/NevermoreEngine/api/AdorneeValue#ObserveAttachmentParent","content":"&lt;/&gt; AdorneeValue.ObserveAttachmentParent(self: AdorneeValue) → Observable&lt;Instance? &gt; Observes a parent value to use or an attachment we'll attach to the adornee. May end up being the terrain if using an absolute position.  ","version":null,"tagName":"h3"},{"title":"RenderPositionAttachment​","type":1,"pageTitle":"AdorneeValue","url":"/NevermoreEngine/api/AdorneeValue#RenderPositionAttachment","content":"&lt;/&gt; AdorneeValue.RenderPositionAttachment( self: AdorneeValue, props: {}-- Takes Blend.Children as an option ) → Observable&lt;Instance? &gt; Returns an Observable which when used can to render an attachment at a given CFrame which can be used to play back a variety of effects. See Blend for details. ","version":null,"tagName":"h3"},{"title":"AnimatedHighlightModel","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AnimatedHighlightModel","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AnimatedHighlightModel","url":"/NevermoreEngine/api/AnimatedHighlightModel#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"AnimatedHighlightModel","url":"/NevermoreEngine/api/AnimatedHighlightModel#new","content":"&lt;/&gt; AnimatedHighlightModel.new() → AnimatedHighlightModel Constructs a new data model for an animated highlight. Probably retrieve via anAnimatedHighlightStack or more likely an AnimatedHighlightGroup or even the HighlightServiceClient.Highlight.  ","version":null,"tagName":"h3"},{"title":"isAnimatedHighlightModel​","type":1,"pageTitle":"AnimatedHighlightModel","url":"/NevermoreEngine/api/AnimatedHighlightModel#isAnimatedHighlightModel","content":"&lt;/&gt; AnimatedHighlightModel.isAnimatedHighlightModel(value: any) → boolean Returns true if it's an animated highlight model  ","version":null,"tagName":"h3"},{"title":"SetHighlightDepthMode​","type":1,"pageTitle":"AnimatedHighlightModel","url":"/NevermoreEngine/api/AnimatedHighlightModel#SetHighlightDepthMode","content":"&lt;/&gt; AnimatedHighlightModel:SetHighlightDepthMode(depthMode: HighlightDepthMode ) → () Sets the highlight depth mode  ","version":null,"tagName":"h3"},{"title":"SetTransparencySpeed​","type":1,"pageTitle":"AnimatedHighlightModel","url":"/NevermoreEngine/api/AnimatedHighlightModel#SetTransparencySpeed","content":"&lt;/&gt; AnimatedHighlightModel:SetTransparencySpeed(speed: number?) → () Sets the transparency speed  ","version":null,"tagName":"h3"},{"title":"SetColorSpeed​","type":1,"pageTitle":"AnimatedHighlightModel","url":"/NevermoreEngine/api/AnimatedHighlightModel#SetColorSpeed","content":"&lt;/&gt; AnimatedHighlightModel:SetColorSpeed(speed: number?) → () Sets the color speed  ","version":null,"tagName":"h3"},{"title":"SetSpeed​","type":1,"pageTitle":"AnimatedHighlightModel","url":"/NevermoreEngine/api/AnimatedHighlightModel#SetSpeed","content":"&lt;/&gt; AnimatedHighlightModel:SetSpeed(speed: number?) → () Sets the visiblity speed speed  ","version":null,"tagName":"h3"},{"title":"SetFillColor​","type":1,"pageTitle":"AnimatedHighlightModel","url":"/NevermoreEngine/api/AnimatedHighlightModel#SetFillColor","content":"&lt;/&gt; AnimatedHighlightModel:SetFillColor( color: Color3? , doNotAnimate: boolean? ) → () Sets fill color  ","version":null,"tagName":"h3"},{"title":"GetFillColor​","type":1,"pageTitle":"AnimatedHighlightModel","url":"/NevermoreEngine/api/AnimatedHighlightModel#GetFillColor","content":"&lt;/&gt; AnimatedHighlightModel:GetFillColor() → Color3?  Gets the fill color  ","version":null,"tagName":"h3"},{"title":"SetOutlineColor​","type":1,"pageTitle":"AnimatedHighlightModel","url":"/NevermoreEngine/api/AnimatedHighlightModel#SetOutlineColor","content":"&lt;/&gt; AnimatedHighlightModel:SetOutlineColor( color: Color3? , doNotAnimate: boolean? ) → () Sets the outline color  ","version":null,"tagName":"h3"},{"title":"GetOutlineColor​","type":1,"pageTitle":"AnimatedHighlightModel","url":"/NevermoreEngine/api/AnimatedHighlightModel#GetOutlineColor","content":"&lt;/&gt; AnimatedHighlightModel:GetOutlineColor() → Color3?  Gets the outline color  ","version":null,"tagName":"h3"},{"title":"SetOutlineTransparency​","type":1,"pageTitle":"AnimatedHighlightModel","url":"/NevermoreEngine/api/AnimatedHighlightModel#SetOutlineTransparency","content":"&lt;/&gt; AnimatedHighlightModel:SetOutlineTransparency( outlineTransparency: number, doNotAnimate: boolean? ) → () Sets the outline transparency  ","version":null,"tagName":"h3"},{"title":"SetFillTransparency​","type":1,"pageTitle":"AnimatedHighlightModel","url":"/NevermoreEngine/api/AnimatedHighlightModel#SetFillTransparency","content":"&lt;/&gt; AnimatedHighlightModel:SetFillTransparency( fillTransparency: number, doNotAnimate: boolean? ) → () Sets the fill transparency ","version":null,"tagName":"h3"},{"title":"AnimatedHighlightStack","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AnimatedHighlightStack","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AnimatedHighlightStack","url":"/NevermoreEngine/api/AnimatedHighlightStack#functions","content":" ","version":null,"tagName":"h2"},{"title":"isAnimatedHighlightStack​","type":1,"pageTitle":"AnimatedHighlightStack","url":"/NevermoreEngine/api/AnimatedHighlightStack#isAnimatedHighlightStack","content":"&lt;/&gt; AnimatedHighlightStack.isAnimatedHighlightStack(value: any) → boolean Returns true if the value is an animated highlight stack  ","version":null,"tagName":"h3"},{"title":"SetPropertiesFrom​","type":1,"pageTitle":"AnimatedHighlightStack","url":"/NevermoreEngine/api/AnimatedHighlightStack#SetPropertiesFrom","content":"&lt;/&gt; AnimatedHighlightStack:SetPropertiesFrom(source: AnimatedHighlightStack) → () Sets the stacks initial properties to mirror the given stacks  ","version":null,"tagName":"h3"},{"title":"ObserveHasEntries​","type":1,"pageTitle":"AnimatedHighlightStack","url":"/NevermoreEngine/api/AnimatedHighlightStack#ObserveHasEntries","content":"&lt;/&gt; AnimatedHighlightStack:ObserveHasEntries() → Observable&lt;boolean&gt;   ","version":null,"tagName":"h3"},{"title":"GetHandle​","type":1,"pageTitle":"AnimatedHighlightStack","url":"/NevermoreEngine/api/AnimatedHighlightStack#GetHandle","content":"&lt;/&gt; AnimatedHighlightStack:GetHandle(observeScore: Observable&lt;number&gt;) → AnimatedHighlightModel Gets a new handle for the stack ","version":null,"tagName":"h3"},{"title":"AnimationGroup","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AnimationGroup","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AnimationGroup","url":"/NevermoreEngine/api/AnimationGroup#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"AnimationGroup","url":"/NevermoreEngine/api/AnimationGroup#new","content":"&lt;/&gt; AnimationGroup.new(weightedTracks: {WeightedTrack}) → AnimationGroup   ","version":null,"tagName":"h3"},{"title":"Play​","type":1,"pageTitle":"AnimationGroup","url":"/NevermoreEngine/api/AnimationGroup#Play","content":"&lt;/&gt; AnimationGroup.Play( self: AnimationGroup, transitionTime: number ) → () Plays the animations  ","version":null,"tagName":"h3"},{"title":"SetWeightedTracks​","type":1,"pageTitle":"AnimationGroup","url":"/NevermoreEngine/api/AnimationGroup#SetWeightedTracks","content":"&lt;/&gt; AnimationGroup.SetWeightedTracks( self: AnimationGroup, weightedTracks: {WeightedTrack}, transitionTime: number? ) → ()   ","version":null,"tagName":"h3"},{"title":"Stop​","type":1,"pageTitle":"AnimationGroup","url":"/NevermoreEngine/api/AnimationGroup#Stop","content":"&lt;/&gt; AnimationGroup.Stop( self: AnimationGroup, transitionTime: number? ) → () Stops the animations ","version":null,"tagName":"h3"},{"title":"AnimationGroupUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AnimationGroupUtils","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"AnimationGroupUtils","url":"/NevermoreEngine/api/AnimationGroupUtils#types","content":" ","version":null,"tagName":"h2"},{"title":"WeightedAnimation​","type":1,"pageTitle":"AnimationGroupUtils","url":"/NevermoreEngine/api/AnimationGroupUtils#WeightedAnimation","content":"&lt;/&gt; interface WeightedAnimation { animationId: string weight: number }   ","version":null,"tagName":"h3"},{"title":"WeightedTrack​","type":1,"pageTitle":"AnimationGroupUtils","url":"/NevermoreEngine/api/AnimationGroupUtils#WeightedTrack","content":"&lt;/&gt; interface WeightedTrack { track: Track weight: number }  ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"AnimationGroupUtils","url":"/NevermoreEngine/api/AnimationGroupUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"createdWeightedTracks​","type":1,"pageTitle":"AnimationGroupUtils","url":"/NevermoreEngine/api/AnimationGroupUtils#createdWeightedTracks","content":"&lt;/&gt; AnimationGroupUtils.createdWeightedTracks( animatorOrHumanoid: Humanoid | Animator , weightedAnimationList: {WeightedAnimation} ) → {WeightedTrack} Creates a new weighted track list.  ","version":null,"tagName":"h3"},{"title":"createdWeightedAnimation​","type":1,"pageTitle":"AnimationGroupUtils","url":"/NevermoreEngine/api/AnimationGroupUtils#createdWeightedAnimation","content":"&lt;/&gt; AnimationGroupUtils.createdWeightedAnimation( animationId: string, weight: number ) → WeightedAnimation Creates a new weighted animation.  ","version":null,"tagName":"h3"},{"title":"createdWeightedTrack​","type":1,"pageTitle":"AnimationGroupUtils","url":"/NevermoreEngine/api/AnimationGroupUtils#createdWeightedTrack","content":"&lt;/&gt; AnimationGroupUtils.createdWeightedTrack( track: AnimationTrack , weight: number ) → WeightedTrack Creates a new weighted track.  ","version":null,"tagName":"h3"},{"title":"selectFromWeightedTracks​","type":1,"pageTitle":"AnimationGroupUtils","url":"/NevermoreEngine/api/AnimationGroupUtils#selectFromWeightedTracks","content":"&lt;/&gt; AnimationGroupUtils.selectFromWeightedTracks(weightedTracks: {WeightedTrack}) → WeightedTrack? Picks a weighted track for playback. ","version":null,"tagName":"h3"},{"title":"AnimationPromiseUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AnimationPromiseUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AnimationPromiseUtils","url":"/NevermoreEngine/api/AnimationPromiseUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseFinished​","type":1,"pageTitle":"AnimationPromiseUtils","url":"/NevermoreEngine/api/AnimationPromiseUtils#promiseFinished","content":"&lt;/&gt; AnimationPromiseUtils.promiseFinished( animationTrack: AnimationTrack , endMarkerName: string? ) → Promise Promises that the track is finished  ","version":null,"tagName":"h3"},{"title":"promiseLoaded​","type":1,"pageTitle":"AnimationPromiseUtils","url":"/NevermoreEngine/api/AnimationPromiseUtils#promiseLoaded","content":"&lt;/&gt; AnimationPromiseUtils.promiseLoaded(animationTrack: AnimationTrack ) → Promise Promises that the track has been loaded  ","version":null,"tagName":"h3"},{"title":"promiseKeyframeReached​","type":1,"pageTitle":"AnimationPromiseUtils","url":"/NevermoreEngine/api/AnimationPromiseUtils#promiseKeyframeReached","content":"&lt;/&gt; AnimationPromiseUtils.promiseKeyframeReached( animationTrack: AnimationTrack , keyframeName: string ) → Promise Promises that the track reached a keyframe or is finished ","version":null,"tagName":"h3"},{"title":"AnimationProvider","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AnimationProvider","content":"AnimationProvider Provides animations for anything tagged with &quot;AnimationContainer&quot; and from a folder named &quot;Animations&quot; in ReplicatedStorage. See TemplateProvider.","keywords":"","version":null},{"title":"AnimationTrackPlayer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AnimationTrackPlayer","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AnimationTrackPlayer","url":"/NevermoreEngine/api/AnimationTrackPlayer#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"AnimationTrackPlayer","url":"/NevermoreEngine/api/AnimationTrackPlayer#new","content":"&lt;/&gt; AnimationTrackPlayer.new( animationTarget: Instance | Observable&lt;Instance &gt;, animationId: string | number? ) → AnimationTrackPlayer Plays an animation track in the target. Async loads the track when all data is found.  ","version":null,"tagName":"h3"},{"title":"SetAnimationId​","type":1,"pageTitle":"AnimationTrackPlayer","url":"/NevermoreEngine/api/AnimationTrackPlayer#SetAnimationId","content":"&lt;/&gt; AnimationTrackPlayer:SetAnimationId(animationId: string | number) → () Sets the animation id to play  ","version":null,"tagName":"h3"},{"title":"GetAnimationId​","type":1,"pageTitle":"AnimationTrackPlayer","url":"/NevermoreEngine/api/AnimationTrackPlayer#GetAnimationId","content":"&lt;/&gt; AnimationTrackPlayer:GetAnimationId() → string | number Returns the current animation id  ","version":null,"tagName":"h3"},{"title":"SetAnimationTarget​","type":1,"pageTitle":"AnimationTrackPlayer","url":"/NevermoreEngine/api/AnimationTrackPlayer#SetAnimationTarget","content":"&lt;/&gt; AnimationTrackPlayer:SetAnimationTarget(animationTarget: Instance | Observable&lt;Instance &gt;) → () Sets an animation target to play the animation on  ","version":null,"tagName":"h3"},{"title":"SetWeightTargetIfNotSet​","type":1,"pageTitle":"AnimationTrackPlayer","url":"/NevermoreEngine/api/AnimationTrackPlayer#SetWeightTargetIfNotSet","content":"&lt;/&gt; AnimationTrackPlayer:SetWeightTargetIfNotSet( weight: number, fadeTime: number ) → () Sets the weight target if it hasn't been set  ","version":null,"tagName":"h3"},{"title":"Play​","type":1,"pageTitle":"AnimationTrackPlayer","url":"/NevermoreEngine/api/AnimationTrackPlayer#Play","content":"&lt;/&gt; AnimationTrackPlayer:Play( fadeTime: number, weight: number, speed: number ) → () Plays the current animation specified  ","version":null,"tagName":"h3"},{"title":"Stop​","type":1,"pageTitle":"AnimationTrackPlayer","url":"/NevermoreEngine/api/AnimationTrackPlayer#Stop","content":"&lt;/&gt; AnimationTrackPlayer:Stop(fadeTime: number) → () Stops the current animation  ","version":null,"tagName":"h3"},{"title":"AdjustWeight​","type":1,"pageTitle":"AnimationTrackPlayer","url":"/NevermoreEngine/api/AnimationTrackPlayer#AdjustWeight","content":"&lt;/&gt; AnimationTrackPlayer:AdjustWeight( weight: number, fadeTime: number ) → () Adjusts the weight of the animation track  ","version":null,"tagName":"h3"},{"title":"AdjustSpeed​","type":1,"pageTitle":"AnimationTrackPlayer","url":"/NevermoreEngine/api/AnimationTrackPlayer#AdjustSpeed","content":"&lt;/&gt; AnimationTrackPlayer:AdjustSpeed( speed: number, fadeTime: number ) → () Adjusts the speed of the animation track  ","version":null,"tagName":"h3"},{"title":"IsPlaying​","type":1,"pageTitle":"AnimationTrackPlayer","url":"/NevermoreEngine/api/AnimationTrackPlayer#IsPlaying","content":"&lt;/&gt; AnimationTrackPlayer:IsPlaying() → boolean Returns true if playing ","version":null,"tagName":"h3"},{"title":"AnimationSlotPlayer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AnimationSlotPlayer","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AnimationSlotPlayer","url":"/NevermoreEngine/api/AnimationSlotPlayer#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"AnimationSlotPlayer","url":"/NevermoreEngine/api/AnimationSlotPlayer#new","content":"&lt;/&gt; AnimationSlotPlayer.new(animationTarget: Instance? | Observable&lt;Instance &gt;) → AnimationSlotPlayer Creates a new AnimationSlotPlayer with a target to play the animation on.  ","version":null,"tagName":"h3"},{"title":"SetDefaultFadeTime​","type":1,"pageTitle":"AnimationSlotPlayer","url":"/NevermoreEngine/api/AnimationSlotPlayer#SetDefaultFadeTime","content":"&lt;/&gt; AnimationSlotPlayer.SetDefaultFadeTime( self: AnimationSlotPlayer, defaultFadeTime: number ) → () Sets a new default fade time  ","version":null,"tagName":"h3"},{"title":"SetDefaultAnimationPriority​","type":1,"pageTitle":"AnimationSlotPlayer","url":"/NevermoreEngine/api/AnimationSlotPlayer#SetDefaultAnimationPriority","content":"&lt;/&gt; AnimationSlotPlayer.SetDefaultAnimationPriority( self: AnimationSlotPlayer, defaultAnimationPriority: number ) → () Sets a new default animation priority  ","version":null,"tagName":"h3"},{"title":"SetAnimationTarget​","type":1,"pageTitle":"AnimationSlotPlayer","url":"/NevermoreEngine/api/AnimationSlotPlayer#SetAnimationTarget","content":"&lt;/&gt; AnimationSlotPlayer.SetAnimationTarget( self: AnimationSlotPlayer, animationTarget: Instance | Observable&lt;Instance &gt; ) → () Sets an animation target to play the animation on  ","version":null,"tagName":"h3"},{"title":"PromiseStopped​","type":1,"pageTitle":"AnimationSlotPlayer","url":"/NevermoreEngine/api/AnimationSlotPlayer#PromiseStopped","content":"&lt;/&gt; AnimationSlotPlayer.PromiseStopped(self: AnimationSlotPlayer) → Promise.Promise&lt;boolean&gt; Promises that the animation has stopped playing  ","version":null,"tagName":"h3"},{"title":"AdjustSpeed​","type":1,"pageTitle":"AnimationSlotPlayer","url":"/NevermoreEngine/api/AnimationSlotPlayer#AdjustSpeed","content":"&lt;/&gt; AnimationSlotPlayer.AdjustSpeed( self: AnimationSlotPlayer, id: string | number, speed: number ) → () → ()-- Callback to clean things up Adjusts the speed of the animation playing in the slot  ","version":null,"tagName":"h3"},{"title":"AdjustWeight​","type":1,"pageTitle":"AnimationSlotPlayer","url":"/NevermoreEngine/api/AnimationSlotPlayer#AdjustWeight","content":"&lt;/&gt; AnimationSlotPlayer.AdjustWeight( self: AnimationSlotPlayer, id: string | number, weight: number, fadeTime: number? ) → () → ()-- Callback to clean things up Adjusts the weight of the animation playing in the slot  ","version":null,"tagName":"h3"},{"title":"Play​","type":1,"pageTitle":"AnimationSlotPlayer","url":"/NevermoreEngine/api/AnimationSlotPlayer#Play","content":"&lt;/&gt; AnimationSlotPlayer.Play( self: AnimationSlotPlayer, id: string | number, fadeTime: number?, weight: number?, speed: number?, priority: Enum.AnimationPriority? ) → () → ()-- Callback to clean things up Plays the animation in the slot, overriding any previous animation  ","version":null,"tagName":"h3"},{"title":"Stop​","type":1,"pageTitle":"AnimationSlotPlayer","url":"/NevermoreEngine/api/AnimationSlotPlayer#Stop","content":"&lt;/&gt; AnimationSlotPlayer.Stop(self: AnimationSlotPlayer) → () Stops the current animation playing ","version":null,"tagName":"h3"},{"title":"AnimationTrackUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AnimationTrackUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AnimationTrackUtils","url":"/NevermoreEngine/api/AnimationTrackUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"loadAnimationFromId​","type":1,"pageTitle":"AnimationTrackUtils","url":"/NevermoreEngine/api/AnimationTrackUtils#loadAnimationFromId","content":"&lt;/&gt; AnimationTrackUtils.loadAnimationFromId( animatorOrHumanoid: Humanoid | Animator , animationId: string ) → Animation  Loads an animation from the animation id  ","version":null,"tagName":"h3"},{"title":"setWeightTargetIfNotSet​","type":1,"pageTitle":"AnimationTrackUtils","url":"/NevermoreEngine/api/AnimationTrackUtils#setWeightTargetIfNotSet","content":"&lt;/&gt; AnimationTrackUtils.setWeightTargetIfNotSet( track: AnimationTrack , weight: number, fadeTime: number ) → Animation  Sets the weight target if not set ","version":null,"tagName":"h3"},{"title":"ArmIKBase","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ArmIKBase","content":"ArmIKBase Provides IK for a given arm","keywords":"","version":null},{"title":"ApplyTagToTaggedChildren","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ApplyTagToTaggedChildren","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ApplyTagToTaggedChildren","url":"/NevermoreEngine/api/ApplyTagToTaggedChildren#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"ApplyTagToTaggedChildren","url":"/NevermoreEngine/api/ApplyTagToTaggedChildren#new","content":"&lt;/&gt; ApplyTagToTaggedChildren.new( parent: Instance , tag: string, requiredTag: string ) → ApplyTagToTaggedChildren Creates a new ApplyTagToTaggedChildren. ","version":null,"tagName":"h3"},{"title":"AnimationUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AnimationUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AnimationUtils","url":"/NevermoreEngine/api/AnimationUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"playAnimation​","type":1,"pageTitle":"AnimationUtils","url":"/NevermoreEngine/api/AnimationUtils#playAnimation","content":"&lt;/&gt; AnimationUtils.playAnimation( target: Animator | Player | Model | AnimationController , id: string | number, fadeTime: number?, weight: number?, speed: number?, priority: Enum.AnimationPriority? ) → AnimationTrack?  Plays the animation on the target instance. TIP If you play an animation at 1 priority, and then request another animation track at a different priority, it will give you 2 separate animation tracks. Otherwise it tries to reuse the same animation track.  ","version":null,"tagName":"h3"},{"title":"stopAnimation​","type":1,"pageTitle":"AnimationUtils","url":"/NevermoreEngine/api/AnimationUtils#stopAnimation","content":"&lt;/&gt; AnimationUtils.stopAnimation( target: Animator | Player | Model | AnimationController , id: string | number, fadeTime: number? ) → AnimationTrack?  Stops the animation on the target instance.  ","version":null,"tagName":"h3"},{"title":"getOrCreateAnimationTrack​","type":1,"pageTitle":"AnimationUtils","url":"/NevermoreEngine/api/AnimationUtils#getOrCreateAnimationTrack","content":"&lt;/&gt; AnimationUtils.getOrCreateAnimationTrack( target: Animator | Player | Model | AnimationController , id: string | number, priority: Enum.AnimationPriority? ) → AnimationTrack?  Gets or creates an animation track for the player  ","version":null,"tagName":"h3"},{"title":"getOrCreateAnimationFromIdInAnimator​","type":1,"pageTitle":"AnimationUtils","url":"/NevermoreEngine/api/AnimationUtils#getOrCreateAnimationFromIdInAnimator","content":"&lt;/&gt; AnimationUtils.getOrCreateAnimationFromIdInAnimator( animator: Animator , id: string | number, priority: Enum.AnimationPriority? ) → Animation  Gets or creates an animation from the id in the animator  ","version":null,"tagName":"h3"},{"title":"findAnimationTrack​","type":1,"pageTitle":"AnimationUtils","url":"/NevermoreEngine/api/AnimationUtils#findAnimationTrack","content":"&lt;/&gt; AnimationUtils.findAnimationTrack( target: Animator | Player | Model | AnimationController , id: string | number, priority: Enum.AnimationPriority? ) → AnimationTrack?  Finds an animation track  ","version":null,"tagName":"h3"},{"title":"isMatchingAnimationTrack​","type":1,"pageTitle":"AnimationUtils","url":"/NevermoreEngine/api/AnimationUtils#isMatchingAnimationTrack","content":"&lt;/&gt; AnimationUtils.isMatchingAnimationTrack( animationTrack: AnimationTrack , id: string | number, priority: Enum.AnimationPriority? ) → boolean Computes whether a given animation track matches the id and priority  ","version":null,"tagName":"h3"},{"title":"findAnimationTrackInAnimator​","type":1,"pageTitle":"AnimationUtils","url":"/NevermoreEngine/api/AnimationUtils#findAnimationTrackInAnimator","content":"&lt;/&gt; AnimationUtils.findAnimationTrackInAnimator( animator: Animator , id: string | number, priority: Enum.AnimationPriority? ) → AnimationTrack?  Finds an animation track in an animator  ","version":null,"tagName":"h3"},{"title":"getOrCreateAnimator​","type":1,"pageTitle":"AnimationUtils","url":"/NevermoreEngine/api/AnimationUtils#getOrCreateAnimator","content":"&lt;/&gt; AnimationUtils.getOrCreateAnimator(target: Animator | Player | Model | Humanoid | AnimationController ) → Animator?  Finds an animator for the current instance  ","version":null,"tagName":"h3"},{"title":"getAnimationName​","type":1,"pageTitle":"AnimationUtils","url":"/NevermoreEngine/api/AnimationUtils#getAnimationName","content":"&lt;/&gt; AnimationUtils.getAnimationName(animationId: string) → string Gets a specific animation name for an animation id  ","version":null,"tagName":"h3"},{"title":"createAnimationFromId​","type":1,"pageTitle":"AnimationUtils","url":"/NevermoreEngine/api/AnimationUtils#createAnimationFromId","content":"&lt;/&gt; AnimationUtils.createAnimationFromId(id: string | number) → Animation  Creates a new animation object from the given id ","version":null,"tagName":"h3"},{"title":"ArmIKUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ArmIKUtils","content":"ArmIKUtils","keywords":"","version":null},{"title":"AssetServiceCache","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AssetServiceCache","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AssetServiceCache","url":"/NevermoreEngine/api/AssetServiceCache#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"AssetServiceCache","url":"/NevermoreEngine/api/AssetServiceCache#Init","content":"&lt;/&gt; AssetServiceCache:Init(serviceBag: ServiceBag) → () Initializes the AssetServiceCache.  ","version":null,"tagName":"h3"},{"title":"PromiseBundleDetails​","type":1,"pageTitle":"AssetServiceCache","url":"/NevermoreEngine/api/AssetServiceCache#PromiseBundleDetails","content":"&lt;/&gt; AssetServiceCache:PromiseBundleDetails(bundleId: number) → Promise&lt;BundleDetails&gt; Returns a promise that resolves to the bundle details for the given bundleId. ","version":null,"tagName":"h3"},{"title":"AssetServiceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AssetServiceUtils","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"AssetServiceUtils","url":"/NevermoreEngine/api/AssetServiceUtils#types","content":" ","version":null,"tagName":"h2"},{"title":"BundleDetailsItem​","type":1,"pageTitle":"AssetServiceUtils","url":"/NevermoreEngine/api/AssetServiceUtils#BundleDetailsItem","content":"&lt;/&gt; interface BundleDetailsItem { Id: number-- Item's id Name: string-- Item name Type: string-- Item Type eg: &quot;UserOutfit&quot; or &quot;Asset&quot; } Details for a specific bundle item  ","version":null,"tagName":"h3"},{"title":"BundleDetails​","type":1,"pageTitle":"AssetServiceUtils","url":"/NevermoreEngine/api/AssetServiceUtils#BundleDetails","content":"&lt;/&gt; interface BundleDetails { Id: number-- Bundle Id (passed in as an argument) Name: string-- Bundle name Description: string-- Bundle description BundleType: string-- Bundle Type. eg. BodyParts or AvatarAnimation|AvatarAnimations Items: {BundleDetailsItem}-- An array of ValueTable objects } Details for the bundle ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"AssetServiceUtils","url":"/NevermoreEngine/api/AssetServiceUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseAssetIdsForPackage​","type":1,"pageTitle":"AssetServiceUtils","url":"/NevermoreEngine/api/AssetServiceUtils#promiseAssetIdsForPackage","content":"&lt;/&gt; AssetServiceUtils.promiseAssetIdsForPackage(packageAssetId: number) → Promise&lt;{number}&gt; Retrieves the assetIds for a package  ","version":null,"tagName":"h3"},{"title":"promiseGamePlaces​","type":1,"pageTitle":"AssetServiceUtils","url":"/NevermoreEngine/api/AssetServiceUtils#promiseGamePlaces","content":"&lt;/&gt; AssetServiceUtils.promiseGamePlaces() → Promise&lt;Pages &gt; Gets the places and their name for the current game.  ","version":null,"tagName":"h3"},{"title":"promiseBundleDetails​","type":1,"pageTitle":"AssetServiceUtils","url":"/NevermoreEngine/api/AssetServiceUtils#promiseBundleDetails","content":"&lt;/&gt; AssetServiceUtils.promiseBundleDetails(bundleId: number) → Promise&lt;BundleDetails&gt; Gets the bundle details ","version":null,"tagName":"h3"},{"title":"AttributeUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AttributeUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AttributeUtils","url":"/NevermoreEngine/api/AttributeUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"isValidAttributeType​","type":1,"pageTitle":"AttributeUtils","url":"/NevermoreEngine/api/AttributeUtils#isValidAttributeType","content":"&lt;/&gt; AttributeUtils.isValidAttributeType(valueType: string) → boolean Returns whether the attribute is a valid type or not for an attribute. print(AttributeUtils.isValidAttributeType(typeof(&quot;hi&quot;))) --&gt; true   ","version":null,"tagName":"h3"},{"title":"promiseAttribute​","type":1,"pageTitle":"AttributeUtils","url":"/NevermoreEngine/api/AttributeUtils#promiseAttribute","content":"&lt;/&gt; AttributeUtils.promiseAttribute( instance: Instance , attributeName: string, predicate: function | nil, cancelToken: CancelToken ) → Promise&lt;unknown&gt; Promises attribute value fits predicate  ","version":null,"tagName":"h3"},{"title":"bindToBinder​","type":1,"pageTitle":"AttributeUtils","url":"/NevermoreEngine/api/AttributeUtils#bindToBinder","content":"&lt;/&gt; AttributeUtils.bindToBinder( instance: Instance , attributeName: string, binder: Binder&lt;T&gt; ) → Maid Whenever the attribute is true, the binder will be bound, and when the binder is bound, the attribute will be true.  ","version":null,"tagName":"h3"},{"title":"initAttribute​","type":1,"pageTitle":"AttributeUtils","url":"/NevermoreEngine/api/AttributeUtils#initAttribute","content":"&lt;/&gt; AttributeUtils.initAttribute( instance: Instance , attributeName: string, default: any ) → any?-- The value of the attribute Initializes an attribute for a given instance  ","version":null,"tagName":"h3"},{"title":"getAttribute​","type":1,"pageTitle":"AttributeUtils","url":"/NevermoreEngine/api/AttributeUtils#getAttribute","content":"&lt;/&gt; AttributeUtils.getAttribute( instance: Instance , attributeName: string, default: T? ) → T? Retrieves an attribute, and if it is nil, returns the default instead.  ","version":null,"tagName":"h3"},{"title":"removeAllAttributes​","type":1,"pageTitle":"AttributeUtils","url":"/NevermoreEngine/api/AttributeUtils#removeAllAttributes","content":"&lt;/&gt; AttributeUtils.removeAllAttributes(instance: Instance ) → () Removes all attributes from an instance. ","version":null,"tagName":"h3"},{"title":"AttributeValue","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AttributeValue","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"AttributeValue","url":"/NevermoreEngine/api/AttributeValue#properties","content":" ","version":null,"tagName":"h2"},{"title":"Value​","type":1,"pageTitle":"AttributeValue","url":"/NevermoreEngine/api/AttributeValue#Value","content":"&lt;/&gt; AttributeValue.Value: T The current property of the Attribute. Can be assigned to to write the attribute.  ","version":null,"tagName":"h3"},{"title":"Changed​","type":1,"pageTitle":"AttributeValue","url":"/NevermoreEngine/api/AttributeValue#Changed","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; AttributeValue.Changed: Signal&lt;()&gt; Signal that fires when the attribute changes ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"AttributeValue","url":"/NevermoreEngine/api/AttributeValue#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"AttributeValue","url":"/NevermoreEngine/api/AttributeValue#new","content":"&lt;/&gt; AttributeValue.new( object: Instance , attributeName: string, defaultValue: T ) → AttributeValue&lt;T&gt; Constructs a new AttributeValue. If a defaultValue that is not nil is defined, then this value will be set on the Roblox object.  ","version":null,"tagName":"h3"},{"title":"ObserveBrio​","type":1,"pageTitle":"AttributeValue","url":"/NevermoreEngine/api/AttributeValue#ObserveBrio","content":"&lt;/&gt; AttributeValue.ObserveBrio( self: AttributeValue&lt;T&gt;, condition: function | nil ) → Observable&lt;Brio&lt;any&gt;&gt; Handles observing the value conditionalli  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"AttributeValue","url":"/NevermoreEngine/api/AttributeValue#Observe","content":"&lt;/&gt; AttributeValue.Observe(self: AttributeValue&lt;T&gt;) → Observable&lt;any&gt; Observes an attribute on an instance. ","version":null,"tagName":"h3"},{"title":"AvatarEditorInventory","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AvatarEditorInventory","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AvatarEditorInventory","url":"/NevermoreEngine/api/AvatarEditorInventory#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"AvatarEditorInventory","url":"/NevermoreEngine/api/AvatarEditorInventory#new","content":"&lt;/&gt; AvatarEditorInventory.new() → AvatarEditorInventory Constructs a new AvatarEditorInventory  ","version":null,"tagName":"h3"},{"title":"PromiseProcessPages​","type":1,"pageTitle":"AvatarEditorInventory","url":"/NevermoreEngine/api/AvatarEditorInventory#PromiseProcessPages","content":"&lt;/&gt; AvatarEditorInventory.PromiseProcessPages( self: AvatarEditorInventory, inventoryPages: Pages ) → Promise.Promise&lt;()&gt; Processes the pages and stores the asset data in the inventory.  ","version":null,"tagName":"h3"},{"title":"IsAssetIdInInventory​","type":1,"pageTitle":"AvatarEditorInventory","url":"/NevermoreEngine/api/AvatarEditorInventory#IsAssetIdInInventory","content":"&lt;/&gt; AvatarEditorInventory.IsAssetIdInInventory( self: AvatarEditorInventory, assetId: number ) → boolean Returns the asset data for the given assetId.  ","version":null,"tagName":"h3"},{"title":"ObserveAssetIdInInventory​","type":1,"pageTitle":"AvatarEditorInventory","url":"/NevermoreEngine/api/AvatarEditorInventory#ObserveAssetIdInInventory","content":"&lt;/&gt; AvatarEditorInventory.ObserveAssetIdInInventory( self: AvatarEditorInventory, assetId: number ) → Observable&lt;AssetData&gt; Observes the assetId in the inventory. Returns true if it is in the inventory. ","version":null,"tagName":"h3"},{"title":"AvatarEditorInventoryServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AvatarEditorInventoryServiceClient","content":"AvatarEditorInventoryServiceClient","keywords":"","version":null},{"title":"AxisAngleUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AxisAngleUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"AxisAngleUtils","url":"/NevermoreEngine/api/AxisAngleUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"toCFrame​","type":1,"pageTitle":"AxisAngleUtils","url":"/NevermoreEngine/api/AxisAngleUtils#toCFrame","content":"&lt;/&gt; AxisAngleUtils.toCFrame( axisAngle: Vector3 , position: Vector3 ) → CFrame  Converts an AxisAngle and position to a CFrame  ","version":null,"tagName":"h3"},{"title":"fromCFrame​","type":1,"pageTitle":"AxisAngleUtils","url":"/NevermoreEngine/api/AxisAngleUtils#fromCFrame","content":"&lt;/&gt; AxisAngleUtils.fromCFrame(cframe: CFrame ) → ( Vector3 ,-- AxisAngle Vector3 -- position ) Converts a CFrame to an AxisAngle and position ","version":null,"tagName":"h3"},{"title":"BadgeUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BadgeUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"BadgeUtils","url":"/NevermoreEngine/api/BadgeUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseAwardBadge​","type":1,"pageTitle":"BadgeUtils","url":"/NevermoreEngine/api/BadgeUtils#promiseAwardBadge","content":"This item only works when running on the server. Server &lt;/&gt; BadgeUtils.promiseAwardBadge( player: Player , badgeId: number ) → Promise Tries to reward a player to a badge inside of a promise.  ","version":null,"tagName":"h3"},{"title":"promiseBadgeInfo​","type":1,"pageTitle":"BadgeUtils","url":"/NevermoreEngine/api/BadgeUtils#promiseBadgeInfo","content":"&lt;/&gt; BadgeUtils.promiseBadgeInfo(badgeId: number) → Promise&lt;BadgeInfoDictionary&gt; ","version":null,"tagName":"h3"},{"title":"Types","type":1,"pageTitle":"BadgeUtils","url":"/NevermoreEngine/api/BadgeUtils##","content":"","version":null,"tagName":"h3"},{"title":"​","type":1,"pageTitle":"BadgeUtils","url":"/NevermoreEngine/api/BadgeUtils#BadgeInfoDictionary","content":"interface BadgeInfoDictionary { Name: string-- The name of the badge. Description: string-- The description of the badge. IconImageId: int64-- The asset ID of the image for the badge. IsEnabled: bool-- Indicates whether the badge is available to be awarded. }  Gets the badge info for the given badgeId.  ","version":null,"tagName":"h3"},{"title":"promiseUserHasBadge​","type":1,"pageTitle":"BadgeUtils","url":"/NevermoreEngine/api/BadgeUtils#promiseUserHasBadge","content":"&lt;/&gt; BadgeUtils.promiseUserHasBadge( userId: number, badgeId: number ) → Promise&lt;boolean&gt; Returns true if the uesr has the badge ","version":null,"tagName":"h3"},{"title":"BaseAction","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BaseAction","content":"BaseAction BaseAction state for ActionManager. INFO This is legacy code and probably shoudl not be used in new games.","keywords":"","version":null},{"title":"BaseObject","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BaseObject","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"BaseObject","url":"/NevermoreEngine/api/BaseObject#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"BaseObject","url":"/NevermoreEngine/api/BaseObject#new","content":"&lt;/&gt; BaseObject.new(obj?: Instance ) → BaseObject Constructs a new BaseObject  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"BaseObject","url":"/NevermoreEngine/api/BaseObject#Destroy","content":"&lt;/&gt; BaseObject.Destroy(self: BaseObject) → () Cleans up the BaseObject and sets the metatable to nil ","version":null,"tagName":"h3"},{"title":"AvatarEditorUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/AvatarEditorUtils","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#types","content":" ","version":null,"tagName":"h2"},{"title":"AvatarItemBundledItemDetails​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#AvatarItemBundledItemDetails","content":"&lt;/&gt; interface AvatarItemBundledItemDetails { Owned: boolean Id: number Name: string Type: string } Holds item details for a bundlehttps://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#GetItemDetails  ","version":null,"tagName":"h3"},{"title":"PremiumPricingItemDetails​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#PremiumPricingItemDetails","content":"&lt;/&gt; interface PremiumPricingItemDetails { PremiumDiscountPercentage: number PremiumPriceInRobux: number } Holds premium pricing detailhttps://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#GetItemDetails  ","version":null,"tagName":"h3"},{"title":"AvatarItemDetails​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#AvatarItemDetails","content":"&lt;/&gt; interface AvatarItemDetails { IsForRent: boolean ExpectedSellerId: number Owned: boolean IsPurchasable: boolean Id: number ItemType: &quot;Asset&quot; | &quot;Bundle&quot; | string AssetType: &quot;Image&quot; | string BundleType: &quot;BodyParts&quot; | string Name: string Description: string ProductId: number Genres: {string} BundledItems: {AvatarItemBundledItemDetails} ItemStatus: {string} ItemRestrictions: {&quot;ThirteenPlus&quot;} CreatorType: &quot;User&quot; | string CreatorTargetId: number CreatorName: string Price: number PremiumPricing: PremiumPricingItemDetails LowestPrice: number PriceStatus: string UnitsAvailableForConsumption: number PurchaseCount: number FavoriteCount: number } A table with a variety of information about avatar items and details.https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#GetItemDetails  ","version":null,"tagName":"h3"},{"title":"AvatarRulesWearableAssetType​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#AvatarRulesWearableAssetType","content":"&lt;/&gt; interface AvatarRulesWearableAssetType { MaxNumber: number Id: number Name: string } https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#GetAvatarRules  ","version":null,"tagName":"h3"},{"title":"AvatarRulesBodyColor​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#AvatarRulesBodyColor","content":"&lt;/&gt; interface AvatarRulesBodyColor { BrickColorId: 0 NexColor: string Name: string } https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#GetAvatarRules  ","version":null,"tagName":"h3"},{"title":"AvatarRuleDefaultClothingAssetLists​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#AvatarRuleDefaultClothingAssetLists","content":"&lt;/&gt; interface AvatarRuleDefaultClothingAssetLists { DefaultShirtAssetIds: {number} DefaultPantAssetIds: {number} }   ","version":null,"tagName":"h3"},{"title":"AvatarRules​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#AvatarRules","content":"&lt;/&gt; interface AvatarRules { PlayerAvatarTypes: &quot;R6&quot; | &quot;R15&quot; | string Scales: table WearableAssetTypes&quot;:: {AvatarRulesWearableAssetType} BodyColorsPalette&quot;:: {AvatarRulesBodyColor} BasicBodyColorsPalette&quot;:: {AvatarRulesBodyColor} MinimumDeltaEBodyColorDifference: number ProportionsAndBodyTypeEnabledForUser: boolean DefaultClothingAssetLists&quot;:: AvatarRuleDefaultClothingAssetLists BundlesEnabledForUser: boolean EmotesEnabledForUser: boolean } https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#GetAvatarRules ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseItemDetails​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#promiseItemDetails","content":"&lt;/&gt; AvatarEditorUtils.promiseItemDetails( itemId: number, itemType: AvatarItemType ) → Promise&lt;AvatarItemDetails&gt; This function returns the item details for the given item. It accepts two parameters - the first indicating the ID of the item being retrieved and the second indicating its Enum.ItemType.  ","version":null,"tagName":"h3"},{"title":"promiseBatchItemDetails​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#promiseBatchItemDetails","content":"&lt;/&gt; AvatarEditorUtils.promiseBatchItemDetails( itemIds: {number}, itemType: AvatarItemType ) → Promise&lt;{{AvatarItemDetails}&gt;} Gets the item details for a list of items at once. More efficient than AvatarEditorService.GetItemDetails if you need to get all the item details of a list.  ","version":null,"tagName":"h3"},{"title":"promiseCheckApplyDefaultClothing​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#promiseCheckApplyDefaultClothing","content":"&lt;/&gt; AvatarEditorUtils.promiseCheckApplyDefaultClothing(humanoidDescription: HumanoidDescription ) → Promise&lt;HumanoidDescription? &gt; Returns a new HumanoidDescription with the Shirt and Pants properties updated if necessary. Returns nil if default clothing was not needed. Default clothing is necessary if the HumanoidDescription does not currently have Shirt and Pants equipped and the body colors are too similar.  ","version":null,"tagName":"h3"},{"title":"promiseConformToAvatarRules​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#promiseConformToAvatarRules","content":"&lt;/&gt; AvatarEditorUtils.promiseConformToAvatarRules(humanoidDescription: HumanoidDescription ) → Promise&lt;HumanoidDescription &gt; Probably makes the humanoid description conform to avatar rules.  ","version":null,"tagName":"h3"},{"title":"promiseAvatarRules​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#promiseAvatarRules","content":"&lt;/&gt; AvatarEditorUtils.promiseAvatarRules() → Promise&lt;AvatarRules&gt; Returns the platform Avatar rules for things such as scaling, default shirts and pants, number of wearable assets. https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#GetAvatarRules  ","version":null,"tagName":"h3"},{"title":"promiseIsFavorited​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#promiseIsFavorited","content":"&lt;/&gt; AvatarEditorUtils.promiseIsFavorited( itemId: number, itemType: AvatarItemType ) → Promise&lt;boolean&gt; This function returns if the Players.LocalPlayer has favorited the given bundle or asset.  ","version":null,"tagName":"h3"},{"title":"promiseSearchCatalog​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#promiseSearchCatalog","content":"&lt;/&gt; AvatarEditorUtils.promiseSearchCatalog(catalogSearchParams: CatalogSearchParams) → Promise&lt;CatalogPages &gt; This function returns if the Players.LocalPlayer has favorited the given bundle or asset.  ","version":null,"tagName":"h3"},{"title":"promiseInventoryPages​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#promiseInventoryPages","content":"&lt;/&gt; AvatarEditorUtils.promiseInventoryPages(assetTypes: {AvatarAssetType }) → Promise&lt;InventoryPages &gt; Returns an InventoryPages object with information about owned items in the users inventory with the given AvatarAssetTypes.  ","version":null,"tagName":"h3"},{"title":"promiseOutfitPages​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#promiseOutfitPages","content":"&lt;/&gt; AvatarEditorUtils.promiseOutfitPages( outfitSource: OutfitSource , outfitType: OutfitType ) → Promise&lt;OutfitPages &gt; This function returns outfit data for the Players.LocalPlayer. This would be used withPlayers.GetHumanoidDescriptionFromOutfitId to update the players character to the outfit. Access to this would also depend on AvatarEditorService.PromptAllowInventoryReadAccess being accepted by the user.  ","version":null,"tagName":"h3"},{"title":"promiseRecommendedAssets​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#promiseRecommendedAssets","content":"&lt;/&gt; AvatarEditorUtils.promiseRecommendedAssets( assetType: AvatarAssetType , contextAssetId: number?-- Optional. if not provided just gives recommendations in general ) → Promise&lt;{number}&gt; This function returns a list of recommendations based on the given AssetType. https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#GetRecommendedAssets WARNING This API surface currently returns &quot;AvatarEditorService is not yet enabled&quot; when queried outside of approved games.  ","version":null,"tagName":"h3"},{"title":"promiseRecommendedBundles​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#promiseRecommendedBundles","content":"&lt;/&gt; AvatarEditorUtils.promiseRecommendedBundles(bundleId: number) → Promise&lt;{number}&gt; This function returns a list of recommended bundles for a given bundle id.  ","version":null,"tagName":"h3"},{"title":"promptAllowInventoryReadAccess​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#promptAllowInventoryReadAccess","content":"&lt;/&gt; AvatarEditorUtils.promptAllowInventoryReadAccess() → Promise&lt;AvatarPromptResult &gt; Prompts the Players.LocalPlayer to allow the developer to read what items the user has in their inventory and other avatar editor related information. The prompt needs to be confirmed by the user for the developer to use AvatarEditorService:GetInventory(), AvatarEditorService:GetOutfits() and AvatarEditorService:GetFavorite(). Permission does not persist between sessions.  ","version":null,"tagName":"h3"},{"title":"promptCreateOutfit​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#promptCreateOutfit","content":"&lt;/&gt; AvatarEditorUtils.promptCreateOutfit( outfit: HumanoidDescription , rigType: HumanoidRigType ) → Promise&lt;AvatarPromptResult &gt; Prompts the Players.LocalPlayer to save the given HumanoidDescription as an outfit.  ","version":null,"tagName":"h3"},{"title":"promptDeleteOutfit​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#promptDeleteOutfit","content":"&lt;/&gt; AvatarEditorUtils.promptDeleteOutfit(outfitId: number) → Promise&lt;AvatarPromptResult &gt; Prompts the Players.LocalPlayer to delete the given outfit.  ","version":null,"tagName":"h3"},{"title":"promptRenameOutfit​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#promptRenameOutfit","content":"&lt;/&gt; AvatarEditorUtils.promptRenameOutfit(outfitId: number) → Promise&lt;AvatarPromptResult &gt; Prompts the Players.LocalPlayer to delete the given outfit.  ","version":null,"tagName":"h3"},{"title":"promptSaveAvatar​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#promptSaveAvatar","content":"&lt;/&gt; AvatarEditorUtils.promptSaveAvatar( humanoidDescription: HumanoidDescription , rigType: HumanoidRigType ) → Promise&lt;AvatarPromptResult &gt;   ","version":null,"tagName":"h3"},{"title":"promptSetFavorite​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#promptSetFavorite","content":"&lt;/&gt; AvatarEditorUtils.promptSetFavorite( itemId: number, itemType: Enum.AvatarItemType, shouldFavorite: boolean ) → Promise&lt;AvatarPromptResult &gt; This function prompts the Players.LocalPlayer to favorite or unfavorite the given asset or bundle.  ","version":null,"tagName":"h3"},{"title":"promptUpdateOutfit​","type":1,"pageTitle":"AvatarEditorUtils","url":"/NevermoreEngine/api/AvatarEditorUtils#promptUpdateOutfit","content":"&lt;/&gt; AvatarEditorUtils.promptUpdateOutfit( outfitId: number, updatedOutfit: HumanoidDescription , rigType: HumanoidRigType ) → Promise&lt;AvatarPromptResult &gt; Prompts the Players.LocalPlayer to update the given outfit with the given HumanoidDescription. ","version":null,"tagName":"h3"},{"title":"BasicPane","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BasicPane","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"BasicPane","url":"/NevermoreEngine/api/BasicPane#properties","content":" ","version":null,"tagName":"h2"},{"title":"VisibleChanged​","type":1,"pageTitle":"BasicPane","url":"/NevermoreEngine/api/BasicPane#VisibleChanged","content":"&lt;/&gt; BasicPane.VisibleChanged: Signal&lt;boolean,boolean&gt; Fires whenever visibility changes. FIres with isVisible, doNotAnimate, and a maid which has the lifetime of the visibility. INFO Do not use the Maid if you want the code to work in Deferred signal mode. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"BasicPane","url":"/NevermoreEngine/api/BasicPane#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"BasicPane","url":"/NevermoreEngine/api/BasicPane#new","content":"&lt;/&gt; BasicPane.new( gui: GuiObject? -- Optional Gui object ) → BasicPane Constructs a new BasicPane with the .Gui property set.  ","version":null,"tagName":"h3"},{"title":"isBasicPane​","type":1,"pageTitle":"BasicPane","url":"/NevermoreEngine/api/BasicPane#isBasicPane","content":"&lt;/&gt; BasicPane.isBasicPane(value: any) → boolean Returns whether the value is a basic pane  ","version":null,"tagName":"h3"},{"title":"SetVisible​","type":1,"pageTitle":"BasicPane","url":"/NevermoreEngine/api/BasicPane#SetVisible","content":"&lt;/&gt; BasicPane.SetVisible( self: BasicPane, isVisible: boolean,-- Whether or not the pane should be visible doNotAnimate: boolean?-- True if this visiblity should not animate ) → () Sets the BasicPane to be visible  ","version":null,"tagName":"h3"},{"title":"ObserveVisible​","type":1,"pageTitle":"BasicPane","url":"/NevermoreEngine/api/BasicPane#ObserveVisible","content":"&lt;/&gt; BasicPane.ObserveVisible(self: BasicPane) → Observable&lt;boolean,boolean?&gt; Returns an observable that observes visibility  ","version":null,"tagName":"h3"},{"title":"ObserveVisibleBrio​","type":1,"pageTitle":"BasicPane","url":"/NevermoreEngine/api/BasicPane#ObserveVisibleBrio","content":"&lt;/&gt; BasicPane.ObserveVisibleBrio( self: BasicPane, predicate: function | nil-- Optional predicate. If not includeded returns the value. ) → Observable&lt;Brio&lt;boolean&gt;&gt; Returns an observable that observes visibility  ","version":null,"tagName":"h3"},{"title":"Show​","type":1,"pageTitle":"BasicPane","url":"/NevermoreEngine/api/BasicPane#Show","content":"&lt;/&gt; BasicPane.Show( self: BasicPane, doNotAnimate: boolean?-- True if this visiblity should not animate ) → () Shows the pane  ","version":null,"tagName":"h3"},{"title":"Hide​","type":1,"pageTitle":"BasicPane","url":"/NevermoreEngine/api/BasicPane#Hide","content":"&lt;/&gt; BasicPane.Hide( self: BasicPane, doNotAnimate: boolean?-- True if this visiblity should not animate ) → () Hides the pane  ","version":null,"tagName":"h3"},{"title":"Toggle​","type":1,"pageTitle":"BasicPane","url":"/NevermoreEngine/api/BasicPane#Toggle","content":"&lt;/&gt; BasicPane.Toggle( self: BasicPane, doNotAnimate: boolean?-- True if this visiblity should not animate ) → () Toggles the pane  ","version":null,"tagName":"h3"},{"title":"IsVisible​","type":1,"pageTitle":"BasicPane","url":"/NevermoreEngine/api/BasicPane#IsVisible","content":"&lt;/&gt; BasicPane.IsVisible(self: BasicPane) → boolean Returns if the pane is visible  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"BasicPane","url":"/NevermoreEngine/api/BasicPane#Destroy","content":"&lt;/&gt; BasicPane.Destroy(self: BasicPane) → () Cleans up the BasicPane, invoking Maid:DoCleaning() on the BasicPane and setting the metatable to nil. ","version":null,"tagName":"h3"},{"title":"BasePermissionProvider","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BasePermissionProvider","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"BasePermissionProvider","url":"/NevermoreEngine/api/BasePermissionProvider#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"BasePermissionProvider","url":"/NevermoreEngine/api/BasePermissionProvider#new","content":"&lt;/&gt; BasePermissionProvider.new(config: {remoteFunctionName: string}) → BasePermissionProvider Initializes a new permission provider  ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"BasePermissionProvider","url":"/NevermoreEngine/api/BasePermissionProvider#Start","content":"&lt;/&gt; BasePermissionProvider.Start(self: BasePermissionProvider) → () Starts the permission provider. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"PromiseIsPermissionLevel​","type":1,"pageTitle":"BasePermissionProvider","url":"/NevermoreEngine/api/BasePermissionProvider#PromiseIsPermissionLevel","content":"&lt;/&gt; BasePermissionProvider.PromiseIsPermissionLevel( _self: BasePermissionProvider, player: Player , permissionLevel: PermissionLevel ) → Promise&lt;boolean&gt; Returns whether the player is a creator.  ","version":null,"tagName":"h3"},{"title":"IsPermissionLevel​","type":1,"pageTitle":"BasePermissionProvider","url":"/NevermoreEngine/api/BasePermissionProvider#IsPermissionLevel","content":"&lt;/&gt; BasePermissionProvider.IsPermissionLevel( self: BasePermissionProvider, player: Player , permissionLevel: PermissionLevel ) → Promise&lt;boolean&gt; Returns whether the player is a creator.  ","version":null,"tagName":"h3"},{"title":"PromiseIsCreator​","type":1,"pageTitle":"BasePermissionProvider","url":"/NevermoreEngine/api/BasePermissionProvider#PromiseIsCreator","content":"&lt;/&gt; BasePermissionProvider.PromiseIsCreator( self: BasePermissionProvider, player: Player ) → Promise&lt;boolean&gt; Returns whether the player is a creator.  ","version":null,"tagName":"h3"},{"title":"PromiseIsAdmin​","type":1,"pageTitle":"BasePermissionProvider","url":"/NevermoreEngine/api/BasePermissionProvider#PromiseIsAdmin","content":"&lt;/&gt; BasePermissionProvider.PromiseIsAdmin( self: BasePermissionProvider, player: Player ) → Promise&lt;boolean&gt; Returns whether the player is an admin.  ","version":null,"tagName":"h3"},{"title":"IsCreator​","type":1,"pageTitle":"BasePermissionProvider","url":"/NevermoreEngine/api/BasePermissionProvider#IsCreator","content":"&lt;/&gt; BasePermissionProvider.IsCreator( self: BasePermissionProvider, player: Player ) → boolean Returns whether the player is a creator. INFO May return false if not loaded. Prefer using the promise version.  ","version":null,"tagName":"h3"},{"title":"IsAdmin​","type":1,"pageTitle":"BasePermissionProvider","url":"/NevermoreEngine/api/BasePermissionProvider#IsAdmin","content":"&lt;/&gt; BasePermissionProvider.IsAdmin( self: BasePermissionProvider, player: Player ) → boolean Returns whether the player is an admin. INFO May return false if not loaded. Prefer using the promise version. ","version":null,"tagName":"h3"},{"title":"BasicPaneUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BasicPaneUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"BasicPaneUtils","url":"/NevermoreEngine/api/BasicPaneUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeVisible​","type":1,"pageTitle":"BasicPaneUtils","url":"/NevermoreEngine/api/BasicPaneUtils#observeVisible","content":"&lt;/&gt; BasicPaneUtils.observeVisible(basicPane: BasicPane) → Observable&lt;boolean&gt; Observes visibility of the basicPane, returning true when visible and false otherwise. BasicPaneUtils.observeVisible(basicPane):Subscribe(function(isVisible) print(&quot;isVisible&quot;, isVisible) --&gt; false end)   ","version":null,"tagName":"h3"},{"title":"whenVisibleBrio​","type":1,"pageTitle":"BasicPaneUtils","url":"/NevermoreEngine/api/BasicPaneUtils#whenVisibleBrio","content":"&lt;/&gt; BasicPaneUtils.whenVisibleBrio(createBasicPane: (maid: Maid) → BasicPane) → (source: Observable&lt;boolean&gt;) → Observable&lt;Brio&lt;GuiBase &gt;&gt; Shows the basic pane only when the emitting observable is visible. This allows the basic pane 1 second to hide. If the pane gets reshown in that time it will reshow it. This can help lead to performance gains when you have a generally hidden pane underneath another one and it needs to be shown. See GuiVisibleManager for the OOP version. Rx.of(true):Pipe({ BasicPaneUtils.whenVisibleBrio(function(maid) -- generally you'd have your subclass here local pane = BasicPane.new() pane.Gui.Parent = screenGui return pane end) })   ","version":null,"tagName":"h3"},{"title":"observePercentVisible​","type":1,"pageTitle":"BasicPaneUtils","url":"/NevermoreEngine/api/BasicPaneUtils#observePercentVisible","content":"&lt;/&gt; BasicPaneUtils.observePercentVisible(basicPane: BasicPane) → Observable&lt;number&gt; Observes percent visibility. Useful in Blend.  ","version":null,"tagName":"h3"},{"title":"toTransparency​","type":1,"pageTitle":"BasicPaneUtils","url":"/NevermoreEngine/api/BasicPaneUtils#toTransparency","content":"&lt;/&gt; BasicPaneUtils.toTransparency(source: Observable&lt;number&gt;) → Observable&lt;number&gt; Convert percentVisible observable to transparency. Useful for Blend.  ","version":null,"tagName":"h3"},{"title":"observeShow​","type":1,"pageTitle":"BasicPaneUtils","url":"/NevermoreEngine/api/BasicPaneUtils#observeShow","content":"&lt;/&gt; BasicPaneUtils.observeShow(basicPane: BasicPane) → Observable&lt;boolean&gt; Observes showing a basic pane. Useful for playing back animations only when the pane shows. ","version":null,"tagName":"h3"},{"title":"batchRaycast","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/batchRaycast","content":"batchRaycast This item is only intended to be used by the module's authors. Private Batch raycast utility function","keywords":"","version":null},{"title":"BinarySearchUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BinarySearchUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"BinarySearchUtils","url":"/NevermoreEngine/api/BinarySearchUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"spanSearch​","type":1,"pageTitle":"BinarySearchUtils","url":"/NevermoreEngine/api/BinarySearchUtils#spanSearch","content":"&lt;/&gt; BinarySearchUtils.spanSearch( list: {T}, t: number ) → ( number?, number? ) if t lands within the domain of two spans of time t = 5 [3 5][5 7] ^ picks this one   ","version":null,"tagName":"h3"},{"title":"spanSearchNodes​","type":1,"pageTitle":"BinarySearchUtils","url":"/NevermoreEngine/api/BinarySearchUtils#spanSearchNodes","content":"&lt;/&gt; BinarySearchUtils.spanSearchNodes( list: {TNode}, index: string, t: number ) → ( number?, number? ) Same as searching a span, but uses a list of nodes  ","version":null,"tagName":"h3"},{"title":"spanSearchAnything​","type":1,"pageTitle":"BinarySearchUtils","url":"/NevermoreEngine/api/BinarySearchUtils#spanSearchAnything","content":"&lt;/&gt; BinarySearchUtils.spanSearchAnything( n: number, indexFunc: (number) → number, t: number ) → ( number, number ) Same as span search, but uses an indexFunc to retrieve the index ","version":null,"tagName":"h3"},{"title":"BindableRagdollHumanoidOnFall","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BindableRagdollHumanoidOnFall","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"BindableRagdollHumanoidOnFall","url":"/NevermoreEngine/api/BindableRagdollHumanoidOnFall#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"BindableRagdollHumanoidOnFall","url":"/NevermoreEngine/api/BindableRagdollHumanoidOnFall#new","content":"&lt;/&gt; BindableRagdollHumanoidOnFall.new( humanoid: Humanoid , ragdollBinder: Binder&lt;Ragdoll | RagdollClient&gt; ) → BindableRagdollHumanoidOnFall Constructs a new BindableRagdollHumanoidOnFall. ","version":null,"tagName":"h3"},{"title":"BinderGroup","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BinderGroup","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"BinderGroup","url":"/NevermoreEngine/api/BinderGroup#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"BinderGroup","url":"/NevermoreEngine/api/BinderGroup#new","content":"&lt;/&gt; BinderGroup.new( binders: {Binder&lt;T&gt;},-- A list of binders that validateConstructor: (constructor: any) → boolean-- Validates a binder matches T ) → BinderGroup&lt;T&gt; Constructs a new BinderGroup  ","version":null,"tagName":"h3"},{"title":"AddList​","type":1,"pageTitle":"BinderGroup","url":"/NevermoreEngine/api/BinderGroup#AddList","content":"&lt;/&gt; BinderGroup.AddList( self: BinderGroup, binders: {Binder&lt;T&gt;} ) → () Adds a list of binders to the group.  ","version":null,"tagName":"h3"},{"title":"Add​","type":1,"pageTitle":"BinderGroup","url":"/NevermoreEngine/api/BinderGroup#Add","content":"&lt;/&gt; BinderGroup.Add( self: BinderGroup, binder: Binder&lt;T&gt; ) → () Adds the specific binder to the list  ","version":null,"tagName":"h3"},{"title":"GetBinders​","type":1,"pageTitle":"BinderGroup","url":"/NevermoreEngine/api/BinderGroup#GetBinders","content":"&lt;/&gt; BinderGroup.GetBinders(self: BinderGroup) → {Binder.Binder&lt;any&gt;} Returns a list of binders. WARNING Do not modify the list of binders returned here ","version":null,"tagName":"h3"},{"title":"BezierUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BezierUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"BezierUtils","url":"/NevermoreEngine/api/BezierUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"createBezierFactory​","type":1,"pageTitle":"BezierUtils","url":"/NevermoreEngine/api/BezierUtils#createBezierFactory","content":"&lt;/&gt; BezierUtils.createBezierFactory( p1x: number, p1y: number, p2x: number, p2y: number ) → (aX: number) → number Creates a new bezier factory which can smoothly translate between 0 to 1. ","version":null,"tagName":"h3"},{"title":"BinderGroupProvider","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BinderGroupProvider","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"BinderGroupProvider","url":"/NevermoreEngine/api/BinderGroupProvider#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"BinderGroupProvider","url":"/NevermoreEngine/api/BinderGroupProvider#new","content":"&lt;/&gt; BinderGroupProvider.new(initMethod: (BinderGroupProvider) → ()) → BinderGroupProvider Constructs a new BinderGroupProvider  ","version":null,"tagName":"h3"},{"title":"PromiseGroupsAdded​","type":1,"pageTitle":"BinderGroupProvider","url":"/NevermoreEngine/api/BinderGroupProvider#PromiseGroupsAdded","content":"&lt;/&gt; BinderGroupProvider:PromiseGroupsAdded() → Promise Returns a promise that will resolve once groups are added.  ","version":null,"tagName":"h3"},{"title":"Init​","type":1,"pageTitle":"BinderGroupProvider","url":"/NevermoreEngine/api/BinderGroupProvider#Init","content":"&lt;/&gt; BinderGroupProvider:Init(...: ServiceBag | any) → () Starts the binder provider. Should be called via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"BinderGroupProvider","url":"/NevermoreEngine/api/BinderGroupProvider#Start","content":"&lt;/&gt; BinderGroupProvider:Start() → () Starts the binder provider. Should be called via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"Get​","type":1,"pageTitle":"BinderGroupProvider","url":"/NevermoreEngine/api/BinderGroupProvider#Get","content":"&lt;/&gt; BinderGroupProvider:Get(groupName: string) → BinderGroup? Returns a binder group given the binderName  ","version":null,"tagName":"h3"},{"title":"Add​","type":1,"pageTitle":"BinderGroupProvider","url":"/NevermoreEngine/api/BinderGroupProvider#Add","content":"&lt;/&gt; BinderGroupProvider:Add( groupName: string, binderGroup: BinderGroup ) → () Adds a new group at the given name ","version":null,"tagName":"h3"},{"title":"BinderTouchingCalculator","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BinderTouchingCalculator","content":"BinderTouchingCalculator Extends PartTouchingCalculator with generic binder stuff","keywords":"","version":null},{"title":"BinderProvider","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BinderProvider","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"BinderProvider","url":"/NevermoreEngine/api/BinderProvider#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"BinderProvider","url":"/NevermoreEngine/api/BinderProvider#new","content":"&lt;/&gt; BinderProvider.new( serviceName: string,-- Name of the service (used for memory tracking) initMethod: ( self, serviceBag: ServiceBag ) ) → BinderProvider Constructs a new BinderProvider. TIP Don't use this! You can retrieve binders from the service bag directly local serviceBag = ServiceBag.new() -- Usually in a separate file! local binderProvider = BinderProvider.new(&quot;BirdBinders&quot;, function(self, serviceBag) self:Add(Binder.new(&quot;Bird&quot;, require(&quot;Bird&quot;), serviceBag)) end) -- Retrieve binders local binders = serviceBag:GetService(binderProvider) -- Runs the game (including binders) serviceBag:Init() serviceBag:Start()   ","version":null,"tagName":"h3"},{"title":"isBinderProvider​","type":1,"pageTitle":"BinderProvider","url":"/NevermoreEngine/api/BinderProvider#isBinderProvider","content":"&lt;/&gt; BinderProvider.isBinderProvider(value: any) → boolean-- True if it is a binder provider Retrieves whether or not its a binder provider  ","version":null,"tagName":"h3"},{"title":"PromiseBinder​","type":1,"pageTitle":"BinderProvider","url":"/NevermoreEngine/api/BinderProvider#PromiseBinder","content":"&lt;/&gt; BinderProvider:PromiseBinder(binderName: string) → Promise&lt;Binder&lt;T&gt;&gt; Resolves to the given binder given the binderName.  ","version":null,"tagName":"h3"},{"title":"Init​","type":1,"pageTitle":"BinderProvider","url":"/NevermoreEngine/api/BinderProvider#Init","content":"&lt;/&gt; BinderProvider:Init(...: ServiceBag | any) → () Initializes itself and all binders  ","version":null,"tagName":"h3"},{"title":"PromiseBindersAdded​","type":1,"pageTitle":"BinderProvider","url":"/NevermoreEngine/api/BinderProvider#PromiseBindersAdded","content":"&lt;/&gt; BinderProvider:PromiseBindersAdded() → Promise Returns a promise that will resolve once all binders are added.  ","version":null,"tagName":"h3"},{"title":"PromiseBindersStarted​","type":1,"pageTitle":"BinderProvider","url":"/NevermoreEngine/api/BinderProvider#PromiseBindersStarted","content":"&lt;/&gt; BinderProvider:PromiseBindersStarted() → Promise Returns a promise that will resolve once all binders are started.  ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"BinderProvider","url":"/NevermoreEngine/api/BinderProvider#Start","content":"&lt;/&gt; BinderProvider:Start() → () Starts all of the binders.  ","version":null,"tagName":"h3"},{"title":"Get​","type":1,"pageTitle":"BinderProvider","url":"/NevermoreEngine/api/BinderProvider#Get","content":"&lt;/&gt; BinderProvider:Get(tagName: string) → Binder&lt;T&gt;? Retrieves a binder given a tagName  ","version":null,"tagName":"h3"},{"title":"Add​","type":1,"pageTitle":"BinderProvider","url":"/NevermoreEngine/api/BinderProvider#Add","content":"&lt;/&gt; BinderProvider:Add(binder: Binder&lt;T&gt;) → () Adds a binder given a tag name. ","version":null,"tagName":"h3"},{"title":"Binder","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Binder","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#types","content":" ","version":null,"tagName":"h2"},{"title":"BinderContructor​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#BinderContructor","content":"&lt;/&gt; type BinderContructor = ( Instance , ...: any ) → T | {new: ( Instance , ...: any )} | { Create(self, Instance , ...: any) } Constructor for a binder ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#new","content":"&lt;/&gt; Binder.new( tagName: string,-- Name of the tag to bind to. This uses CollectionService's tag system constructor: BinderContructor, ...: any-- Variable arguments that will be passed into the constructor ) → Binder&lt;T&gt; Constructs a new binder object. local binder = Binder.new(&quot;Bird&quot;, function(inst) print(&quot;Wow, a new bird!&quot;, inst) return { Destroy = function() print(&quot;Uh oh, the bird is gone!&quot;) end; } end) binder:Start()   ","version":null,"tagName":"h3"},{"title":"isBinder​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#isBinder","content":"&lt;/&gt; Binder.isBinder(value: any) → booleantrueorfalse,whetherornotitisavalue Retrieves whether or not the given value is a binder.  ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#Start","content":"&lt;/&gt; Binder.Start(self: Binder&lt;T&gt;) → () Listens for new instances and connects to the GetInstanceAddedSignal() and removed signal!  ","version":null,"tagName":"h3"},{"title":"GetTag​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#GetTag","content":"&lt;/&gt; Binder.GetTag(self: Binder&lt;T&gt;) → string Returns the tag name that the binder has.  ","version":null,"tagName":"h3"},{"title":"GetConstructor​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#GetConstructor","content":"&lt;/&gt; Binder.GetConstructor(self: Binder&lt;T&gt;) → BinderContructor Returns whatever was set for the construtor. Used for meta-analysis of the binder, such as extracting if parameters are allowed.  ","version":null,"tagName":"h3"},{"title":"ObserveAllBrio​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#ObserveAllBrio","content":"&lt;/&gt; Binder.ObserveAllBrio(self: Binder&lt;T&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Observes all entries in the binder  ","version":null,"tagName":"h3"},{"title":"ObserveBrio​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#ObserveBrio","content":"&lt;/&gt; Binder.ObserveBrio( self: Binder&lt;T&gt;, instance: Instance ) → Observable&lt;Brio&lt;T&gt;&gt; Observes a bound class on a given instance.  ","version":null,"tagName":"h3"},{"title":"ObserveInstance​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#ObserveInstance","content":"&lt;/&gt; Binder.ObserveInstance( self: Binder&lt;T&gt;, inst: Instance , callback: function ) → function-- Cleanup function Fired when added, and then after removal, but before destroy! INFO This is before Rx so it doesn't follow the same Rx pattern. See Binder.Observe for an Rx compatible interface.  ","version":null,"tagName":"h3"},{"title":"GetClassAddedSignal​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#GetClassAddedSignal","content":"&lt;/&gt; Binder.GetClassAddedSignal(self: Binder&lt;T&gt;) → Signal&lt;T&gt; Returns a new signal that will fire whenever a class is bound to the binder local birdBinder = Binder.new(&quot;Bird&quot;, require(&quot;Bird&quot;)) -- Load bird into binder birdBinder:GetClassAddedSignal():Connect(function(bird) bird:Squack() -- Make the bird squack when it's first spawned end) -- Load all birds birdBinder:Start()   ","version":null,"tagName":"h3"},{"title":"GetClassRemovingSignal​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#GetClassRemovingSignal","content":"&lt;/&gt; Binder.GetClassRemovingSignal(self: Binder&lt;T&gt;) → Signal&lt;T&gt; Returns a new signal that will fire whenever a class is removing from the binder.  ","version":null,"tagName":"h3"},{"title":"GetClassRemovedSignal​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#GetClassRemovedSignal","content":"&lt;/&gt; Binder.GetClassRemovedSignal(self: Binder&lt;T&gt;) → Signal&lt;T&gt; Returns a new signal that will fire whenever a class is removed from the binder.  ","version":null,"tagName":"h3"},{"title":"GetAll​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#GetAll","content":"&lt;/&gt; Binder.GetAll(self: Binder&lt;T&gt;) → {T} Returns all of the classes in a new table. local birdBinder = Binder.new(&quot;Bird&quot;, require(&quot;Bird&quot;)) -- Load bird into binder -- Update every bird every frame RunService.Stepped:Connect(function() for _, bird in birdBinder:GetAll() do bird:Update() end end) birdBinder:Start()   ","version":null,"tagName":"h3"},{"title":"GetAllSet​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#GetAllSet","content":"&lt;/&gt; Binder.GetAllSet(self: Binder&lt;T&gt;) → {[T]: true} Faster method to get all items in a binder local birdBinder = Binder.new(&quot;Bird&quot;, require(&quot;Bird&quot;)) -- Load bird into binder -- Update every bird every frame RunService.Stepped:Connect(function() for bird, _ in pairs(birdBinder:GetAllSet()) do bird:Update() end end) birdBinder:Start() WARNING Do not mutate this set directly  ","version":null,"tagName":"h3"},{"title":"Bind​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#Bind","content":"This item only works when running on the server. Server &lt;/&gt; Binder.Bind( self: Binder&lt;T&gt;, inst: Instance -- Instance to check ) → T?-- Bound class Binds an instance to this binder using collection service and attempts to return it if it's bound properly. See BinderUtils.promiseBoundClass() for a safe way to retrieve it. WARNING Do not assume that a bound object will be retrieved  ","version":null,"tagName":"h3"},{"title":"Tag​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#Tag","content":"&lt;/&gt; Binder.Tag( self: Binder&lt;T&gt;, inst: Instance ) → () Tags the instance with the tag for the binder  ","version":null,"tagName":"h3"},{"title":"HasTag​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#HasTag","content":"&lt;/&gt; Binder.HasTag( self: Binder&lt;T&gt;, inst: Instance ) → boolean Returns true if the instance has a tag  ","version":null,"tagName":"h3"},{"title":"Untag​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#Untag","content":"&lt;/&gt; Binder.Untag( self: Binder&lt;T&gt;, inst: Instance ) → () Untags the instance with the tag for the binder  ","version":null,"tagName":"h3"},{"title":"Unbind​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#Unbind","content":"This item only works when running on the server. Server &lt;/&gt; Binder.Unbind( self: Binder&lt;T&gt;, inst: Instance -- Instance to unbind ) → () Unbinds the instance by removing the tag.  ","version":null,"tagName":"h3"},{"title":"BindClient​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#BindClient","content":"This item only works when running on the client. Client &lt;/&gt; Binder.BindClient( self: Binder&lt;T&gt;, inst: Instance -- Instance to bind ) → T?-- Bound class (potentially) See :Bind(). Acknowledges the risk of doing this on the client. Using this acknowledges that we're intentionally binding on a safe client object, i.e. one without replication. If another tag is changed on this instance, this tag will be lost/changed.  ","version":null,"tagName":"h3"},{"title":"UnbindClient​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#UnbindClient","content":"This item only works when running on the client. Client &lt;/&gt; Binder.UnbindClient( self: Binder&lt;T&gt;, inst: Instance -- Instance to unbind ) → () See Unbind(), acknowledges risk of doing this on the client.  ","version":null,"tagName":"h3"},{"title":"Get​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#Get","content":"&lt;/&gt; Binder.Get( self: Binder&lt;T&gt;, inst: Instance -- Instance to check ) → T? Returns a instance of the class that is bound to the instance given.  ","version":null,"tagName":"h3"},{"title":"Promise​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#Promise","content":"&lt;/&gt; Binder.Promise( self: Binder&lt;T&gt;, inst: Instance ,-- Instance to check cancelToken: CancelToken? ) → Promise&lt;T&gt; Returns a promise which will resolve when the instance is bound.  ","version":null,"tagName":"h3"},{"title":"Create​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#Create","content":"&lt;/&gt; Binder.Create( self: Binder&lt;T&gt;, className: string? ) → Instance  Creates a new class tagged with this binder's instance  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#Destroy","content":"&lt;/&gt; Binder.Destroy(self: Binder&lt;T&gt;) → () Cleans up all bound classes, and disconnects all events.  ","version":null,"tagName":"h3"},{"title":"Init​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#Init","content":"&lt;/&gt; Binder:Init(...: any) → () Initializes the Binder. Designed to be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"Binder","url":"/NevermoreEngine/api/Binder#Observe","content":"&lt;/&gt; Binder:Observe(instance: Instance ) → Observable&lt;T?&gt; Observes the current value of the instance ","version":null,"tagName":"h3"},{"title":"BindToCloseService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BindToCloseService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"BindToCloseService","url":"/NevermoreEngine/api/BindToCloseService#functions","content":" ","version":null,"tagName":"h2"},{"title":"RegisterPromiseOnCloseCallback​","type":1,"pageTitle":"BindToCloseService","url":"/NevermoreEngine/api/BindToCloseService#RegisterPromiseOnCloseCallback","content":"&lt;/&gt; BindToCloseService:RegisterPromiseOnCloseCallback(saveCallback: function) → function-- Call to unregister callback Binds the promise to call on close. Can be unregistered ","version":null,"tagName":"h3"},{"title":"BinderUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BinderUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"BinderUtils","url":"/NevermoreEngine/api/BinderUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"findFirstAncestor​","type":1,"pageTitle":"BinderUtils","url":"/NevermoreEngine/api/BinderUtils#findFirstAncestor","content":"&lt;/&gt; BinderUtils.findFirstAncestor( binder: Binder&lt;T&gt;, child: Instance ) → T? Finds the first ancestor that is bound with the current child. Skips the child class, of course.  ","version":null,"tagName":"h3"},{"title":"findFirstChild​","type":1,"pageTitle":"BinderUtils","url":"/NevermoreEngine/api/BinderUtils#findFirstChild","content":"&lt;/&gt; BinderUtils.findFirstChild( binder: Binder&lt;T&gt;, parent: Instance ) → T? Finds the first child bound with the given binder and returns the bound class.  ","version":null,"tagName":"h3"},{"title":"getChildren​","type":1,"pageTitle":"BinderUtils","url":"/NevermoreEngine/api/BinderUtils#getChildren","content":"&lt;/&gt; BinderUtils.getChildren( binder: Binder&lt;T&gt;, parent: Instance ) → {T} Gets all bound children of the given binder for the parent.  ","version":null,"tagName":"h3"},{"title":"mapBinderListToTable​","type":1,"pageTitle":"BinderUtils","url":"/NevermoreEngine/api/BinderUtils#mapBinderListToTable","content":"&lt;/&gt; BinderUtils.mapBinderListToTable(bindersList: {Binder&lt;any&gt;}) → {[string]: Binder&lt;any&gt;} Maps a list of binders into a look up table where the keys are tags and the value is the binder. Duplicates are overwritten by the last entry.  ","version":null,"tagName":"h3"},{"title":"getMappedFromList​","type":1,"pageTitle":"BinderUtils","url":"/NevermoreEngine/api/BinderUtils#getMappedFromList","content":"&lt;/&gt; BinderUtils.getMappedFromList( tagsMap: {[string]: Binder&lt;T&gt;}, instanceList: {Instance } ) → {T} Given a mapping of tags to binders, retrieves the bound values from an instanceList by quering the list of :GetTags() instead of iterating over each binder. This lookup should be faster when there are potentially many interaction points for a given tag map, but the actual bound list should be low.  ","version":null,"tagName":"h3"},{"title":"getChildrenOfBinders​","type":1,"pageTitle":"BinderUtils","url":"/NevermoreEngine/api/BinderUtils#getChildrenOfBinders","content":"&lt;/&gt; BinderUtils.getChildrenOfBinders( bindersList: {Binder&lt;T&gt;}, parent: Instance ) → {T} Given a list of binders retrieves all children bound with the given value.  ","version":null,"tagName":"h3"},{"title":"getLinkedChildren​","type":1,"pageTitle":"BinderUtils","url":"/NevermoreEngine/api/BinderUtils#getLinkedChildren","content":"&lt;/&gt; BinderUtils.getLinkedChildren( binder: Binder&lt;T&gt;, linkName: string,-- Name of the object values required parent: Instance ) → {T} Gets all the linked (via objectValues of name linkName) bound objects  ","version":null,"tagName":"h3"},{"title":"getDescendants​","type":1,"pageTitle":"BinderUtils","url":"/NevermoreEngine/api/BinderUtils#getDescendants","content":"&lt;/&gt; BinderUtils.getDescendants( binder: Binder&lt;T&gt;, parent: Instance ) → {T} Gets all bound descendants of the given binder for the parent. ","version":null,"tagName":"h3"},{"title":"BodyColorsDataConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BodyColorsDataConstants","content":"BodyColorsDataConstants","keywords":"","version":null},{"title":"Blend","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Blend","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#functions","content":" ","version":null,"tagName":"h2"},{"title":"New​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#New","content":"&lt;/&gt; Blend.New(className: string) → (props: {[string]: any;}) → Observable&lt;Instance &gt; Creates a new function which will return an observable that, given the props in question, will construct a new instance and assign all props. This is the equivalent of a pipe-able Rx command. local render = Blend.New &quot;ScreenGui&quot; { Parent = game.Players.LocalPlayer.PlayerGui; Blend.New &quot;Frame&quot; { Size = UDim2.new(1, 0, 1, 0); BackgroundTransparency = 0.5; }; }; maid:GiveTask(render:Subscribe(function(gui) print(gui) end))   ","version":null,"tagName":"h3"},{"title":"State​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#State","content":"&lt;/&gt; Blend.State( defaultValue: T, checkType: string? ) → ValueObject&lt;T&gt; Creates a new Blend State which is actually just a ValueObject underneath.  ","version":null,"tagName":"h3"},{"title":"Throttled​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#Throttled","content":"&lt;/&gt; Blend.Throttled(observable: Observable&lt;T&gt;) → Observable&lt;T&gt; Throttles the update to the end of the defer lane. Can help optimize scenarios when Compute() can trigger multiple times per a frame. Generally not needed.  ","version":null,"tagName":"h3"},{"title":"Shared​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#Shared","content":"&lt;/&gt; Blend.Shared(observable: Observable&lt;T&gt;) → Observable&lt;T&gt; Shares this observables state/computation with all down-stream observables. This can be useful when a very expensive computation was done and needs to be shared. Generally not needed.  ","version":null,"tagName":"h3"},{"title":"Computed​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#Computed","content":"&lt;/&gt; Blend.Computed(...: Aseriesofconvertablestates,followedbyafunctionattheend.) → Observable&lt;T&gt; Takes a list of variables and uses them to compute an observable that will combine into any value. These variables can be any value, and if they can be converted into an Observable, they will be, which will be used to compute the value. local verbState = Blend.State(&quot;hi&quot;) local nameState = Blend.State(&quot;alice&quot;) local computed = Blend.Computed(verbState, nameState, function(verb, name) return verb .. &quot; &quot; .. name end) maid:GiveTask(computed:Subscribe(function(sentence) print(sentence) end)) --&gt; &quot;hi alice&quot; nameState.Value = &quot;bob&quot; --&gt; &quot;hi bob&quot; verbState.Value = &quot;bye&quot; --&gt; &quot;bye bob&quot; nameState.Value = &quot;alice&quot; --&gt; &quot;bye alice&quot;   ","version":null,"tagName":"h3"},{"title":"OnChange​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#OnChange","content":"&lt;/&gt; Blend.OnChange(propertyName: string) → (instance: Instance ) → Observable Short hand to register a propertyEvent changing Blend.mount(workspace, { [Blend.OnChange &quot;Name&quot;] = function(name) print(name) end; }) --&gt; Immediately will print &quot;Workspace&quot; workspace.Name = &quot;Hello&quot; --&gt; Prints &quot;Hello&quot;   ","version":null,"tagName":"h3"},{"title":"OnEvent​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#OnEvent","content":"&lt;/&gt; Blend.OnEvent(eventName: string) → (instance: Instance ) → Observable Short hand to register an event from the instance Blend.mount(workspace, { [Blend.OnEvent &quot;ChildAdded&quot;] = function(child) print(&quot;Child added&quot;, child) end; }) local folder = Instance.new(&quot;Folder&quot;) folder.Name = &quot;Hi&quot; folder.Parent = workspace --&gt; prints &quot;Child added Hi&quot;   ","version":null,"tagName":"h3"},{"title":"Attached​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#Attached","content":"&lt;/&gt; Blend.Attached(constructor: T) → (parent: Instance ) → Observable&lt;T&gt; Uses the constructor to attach a class or resource to the actual object for the lifetime of the subscription of that object. return Blend.New &quot;Frame&quot; { Parent = variables.Parent; [Blend.Attached(function(parent) local maid = Maid.new() print(&quot;Got&quot;, parent) maid:GiveTask(function() print(&quot;Dead!&quot;) end) return maid end)] = true; }   ","version":null,"tagName":"h3"},{"title":"ComputedPairs​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#ComputedPairs","content":"&lt;/&gt; Blend.ComputedPairs( source: Observable&lt;T&gt; | any, compute: ( key: any, value: any, innerMaid: Maid ) → Instance | Observable&lt;Instance &gt; ) → Observable&lt;Brio&lt;Instance &gt;&gt; Similiar to Fusion's ComputedPairs, where the changes are cached, and the lifetime limited.  ","version":null,"tagName":"h3"},{"title":"AccelTween​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#AccelTween","content":"&lt;/&gt; Blend.AccelTween( source: any,-- Source observable (or convertable) acceleration: any-- Source acceleration (or convertable) ) → Observable Like Blend.Spring, but for AccelTween  ","version":null,"tagName":"h3"},{"title":"Spring​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#Spring","content":"&lt;/&gt; Blend.Spring( source: any, speed: any, damper: any ) → Observable? Converts this arbitrary value into an observable that will initialize a spring and interpolate it between values upon subscription. local percentVisible = Blend.State(0) local visibleSpring = Blend.Spring(percentVisible, 30) local transparency = Blend.Computed(visibleSpring, function(percent) return 1 - percent end); Blend.mount(frame, { BackgroundTransparency = visibleSpring; })   ","version":null,"tagName":"h3"},{"title":"toPropertyObservable​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#toPropertyObservable","content":"&lt;/&gt; Blend.toPropertyObservable(value: any) → Observable? Converts this arbitrary value into an observable suitable for use in properties.  ","version":null,"tagName":"h3"},{"title":"toNumberObservable​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#toNumberObservable","content":"&lt;/&gt; Blend.toNumberObservable(value: number | any) → Observable&lt;number&gt;? Converts this arbitrary value into an observable that emits numbers.  ","version":null,"tagName":"h3"},{"title":"toEventObservable​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#toEventObservable","content":"&lt;/&gt; Blend.toEventObservable(value: any) → Observable? Converts this arbitrary value into an observable that can be used to emit events.  ","version":null,"tagName":"h3"},{"title":"toEventHandler​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#toEventHandler","content":"&lt;/&gt; Blend.toEventHandler(value: any) → function? Converts this arbitrary value into an event handler, which can be subscribed to  ","version":null,"tagName":"h3"},{"title":"Children​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#Children","content":"&lt;/&gt; Blend.Children( parent: Instance , value: any ) → Observable Mounts children to the parent and returns an object which will cleanup and delete all children when removed. Note that this effectively recursively mounts children and their values, which is the heart of the reactive tree. Blend.New &quot;ScreenGui&quot; { Parent = game.Players.LocalPlayer.PlayerGui; [Blend.Children] = { Blend.New &quot;Frame&quot; { Size = UDim2.new(1, 0, 1, 0); BackgroundTransparency = 0.5; }; }; }; Note since 6.14 you don't need to be explicit about Blend.Children. Any number-based index in the mounting process will be automatically inferred as children to mount. Blend.New &quot;ScreenGui&quot; { Parent = game.Players.LocalPlayer.PlayerGui; Blend.New &quot;Frame&quot; { Size = UDim2.new(1, 0, 1, 0); BackgroundTransparency = 0.5; }; }; Rules: { Instance } - Tables of instances are all parented to the parent Brio will last for the lifetime of the brio Brio&lt;Observable&gt; will last for the lifetime of the brio Brio&lt;Signal&gt; will also act as above Brio&lt;Promise&gt; will also act as above Brio&lt;{ Instance } will also act as above Observable will parent to the parent Signal will act as Observable ValueObject will act as an Observable Promise will act as an Observable will parent all instances to the parent Observables may emit non-observables (in form of Computed/Dynamic) Observable&lt;Brio&gt; will last for the lifetime of the brio, and parent the instance. Observable&lt;Observable&gt; occurs when computed returns a value. ValueObject will switch to the current value function - Will be invoked as func(parent) and then the standard scheme will be applied Cleanup: Instances will be cleaned up on unsubscribe  ","version":null,"tagName":"h3"},{"title":"Tags​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#Tags","content":"&lt;/&gt; Blend.Tags( parent: Instance , value: any ) → Observable Allows you to add CollectionService tags to a Blend object. Blend.New &quot;ScreenGui&quot; { [Blend.Tags] = { &quot;Hide&quot;, &quot;ScreenGui&quot; }; };   ","version":null,"tagName":"h3"},{"title":"Find​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#Find","content":"&lt;/&gt; Blend.Find(className: string) → function Mounts Blend objects into an existing instance. TIP Normally specifying ClassName as a property breaks mounting, since you can't write to ClassName. However, if you specify ClassName here, it will only listen to changes on children with that class name. If multiple instances are named the same thing, then this will bind to both. TIP This explicitly listens for any children underneath the mounted instance with the name passed in here. This is fine for small amounts of instances, like in most Gui hierarchies. However, it will be way less performance friendly for large class hierarchies. maid:GiveTask(Blend.mount(frame, { Size = UDim2.new(0.5, 0, 0.5, 0); Blend.Find &quot;UIScale&quot; { Scale = 2; }; })) TIP   ","version":null,"tagName":"h3"},{"title":"Instance​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#Instance","content":"&lt;/&gt; Blend.Instance(parent: Instance ) → Observable&lt;Instance &gt; An event emitter that emits the instance that was actually created. This is useful for a variety of things. Using this to track an instance local currentCamera = Blend.State() return Blend.New &quot;ViewportFrame&quot; { CurrentCamera = currentCamera; [Blend.Children] = { self._current; Blend.New &quot;Camera&quot; { [Blend.Instance] = currentCamera; }; }; }; Note that since 6.14 you should also be able to just use the reification scheme ofBlend.Children implicitly in Blend.mount to get somewhat equivalent behavior. Blend.mount(frame, { -- Array indexed methods get treated as children-constructors, which get the parent -- in them; function(parent) print(&quot;Got parent!&quot;, parent) end; }) You can also use this to execute code against an instance. return Blend.New &quot;Frame&quot; { [Blend.Instance] = function(frame) print(&quot;We got a new frame!&quot;) end; }; Note that if you subscribe twice to the resulting observable, the internal function will execute twice.  ","version":null,"tagName":"h3"},{"title":"Single​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#Single","content":"&lt;/&gt; Blend.Single(Observable&lt;Instance: | Brio&lt;Instance &gt;&gt;) → Observable&lt;Brio&lt;Instance &gt;&gt; Ensures the computed version of a value is limited by lifetime instead of multiple. Used in conjunction with Blend.Children and Blend.Computed. WARNING In general, cosntructing new instances like this is a bad idea, so it's recommended against it. local render = Blend.New &quot;ScreenGui&quot; { Parent = game.Players.LocalPlayer.PlayerGui; [Blend.Children] = { Blend.Single(Blend.Computed(percentVisible, function() -- you generally would not want to do this anyway because this reconstructs a new frame -- every frame. Blend.New &quot;Frame&quot; { Size = UDim2.new(1, 0, 1, 0); BackgroundTransparency = 0.5; }; end) }; }; maid:GiveTask(render:Subscribe(function(gui) print(gui) end))   ","version":null,"tagName":"h3"},{"title":"_observeChildren​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#_observeChildren","content":"&lt;/&gt; Blend._observeChildren( value: any, parent: Instance ) → Observable&lt;Instance &gt; Observes children and ensures that the value is cleaned up afterwards.  ","version":null,"tagName":"h3"},{"title":"mount​","type":1,"pageTitle":"Blend","url":"/NevermoreEngine/api/Blend#mount","content":"&lt;/&gt; Blend.mount( instance: Instance , props: table ) → Maid Mounts the instance to the props. This handles mounting children, and events. The contract is that the props table is turned into observables. Note the following. Keys of strings are turned into properties If this can be turned into an observable, it will be used to subscribe to this event Otherwise, we assign directly Keys of functions are invoked on the instance in question `(instance, value) -&gt; Observable If this returns an observable (or can be turned into one), we subscribe the event immediately Keys of numbers (array components) are treated as implicit children If the key is Blend.Children then we invoke mountChildren on it. maid:GiveTask(Blend.mount(frame, { BackgroundTransparency = 1; -- All items named InventoryFrame Blend.Find &quot;Frame&quot; { Name = &quot;InventoryFrame&quot; -- Apply the following properties Blend.New &quot;UIScale&quot; { Scale = 0.5; }; }; }))  ","version":null,"tagName":"h3"},{"title":"BodyColorsDataUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BodyColorsDataUtils","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"BodyColorsDataUtils","url":"/NevermoreEngine/api/BodyColorsDataUtils#types","content":" ","version":null,"tagName":"h2"},{"title":"BodyColorsData​","type":1,"pageTitle":"BodyColorsDataUtils","url":"/NevermoreEngine/api/BodyColorsDataUtils#BodyColorsData","content":"&lt;/&gt; interface BodyColorsData { headColor: Color3 leftArmColor: Color3 leftLegColor: Color3 rightArmColor: Color3 rightLegColor: Color3 torsoColor: Color3 } Represents body colors data for a humanoid ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"BodyColorsDataUtils","url":"/NevermoreEngine/api/BodyColorsDataUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"createBodyColorsData​","type":1,"pageTitle":"BodyColorsDataUtils","url":"/NevermoreEngine/api/BodyColorsDataUtils#createBodyColorsData","content":"&lt;/&gt; BodyColorsDataUtils.createBodyColorsData(bodyColorsData: any) → BodyColorsData Creates a new BodyColorsData  ","version":null,"tagName":"h3"},{"title":"isBodyColorsData​","type":1,"pageTitle":"BodyColorsDataUtils","url":"/NevermoreEngine/api/BodyColorsDataUtils#isBodyColorsData","content":"&lt;/&gt; BodyColorsDataUtils.isBodyColorsData(value: any) → boolean Returns true if it's a body color data  ","version":null,"tagName":"h3"},{"title":"fromUniformColor​","type":1,"pageTitle":"BodyColorsDataUtils","url":"/NevermoreEngine/api/BodyColorsDataUtils#fromUniformColor","content":"&lt;/&gt; BodyColorsDataUtils.fromUniformColor(color3: Color3 ) → BodyColorsData Creates a new BodyColorsData from a single color  ","version":null,"tagName":"h3"},{"title":"fromBodyColors​","type":1,"pageTitle":"BodyColorsDataUtils","url":"/NevermoreEngine/api/BodyColorsDataUtils#fromBodyColors","content":"&lt;/&gt; BodyColorsDataUtils.fromBodyColors(bodyColors: BodyColors ) → BodyColorsData Creates a new BodyColorsData from a BodyColors instance  ","version":null,"tagName":"h3"},{"title":"isDataStoreSafeBodyColorsData​","type":1,"pageTitle":"BodyColorsDataUtils","url":"/NevermoreEngine/api/BodyColorsDataUtils#isDataStoreSafeBodyColorsData","content":"&lt;/&gt; BodyColorsDataUtils.isDataStoreSafeBodyColorsData(value: any) → boolean Returns true if the data is a datastore safe body color  ","version":null,"tagName":"h3"},{"title":"toDataStoreSafeBodyColorsData​","type":1,"pageTitle":"BodyColorsDataUtils","url":"/NevermoreEngine/api/BodyColorsDataUtils#toDataStoreSafeBodyColorsData","content":"&lt;/&gt; BodyColorsDataUtils.toDataStoreSafeBodyColorsData(bodyColorsData: BodyColorsData) → DataStoreSafeBodyColorsData Gets a datastore safe version of body color  ","version":null,"tagName":"h3"},{"title":"fromDataStoreSafeBodyColorsData​","type":1,"pageTitle":"BodyColorsDataUtils","url":"/NevermoreEngine/api/BodyColorsDataUtils#fromDataStoreSafeBodyColorsData","content":"&lt;/&gt; BodyColorsDataUtils.fromDataStoreSafeBodyColorsData(data: DataStoreSafeBodyColorsData) → BodyColorsData Constructs a BodyColorsData from a datastore safe body color  ","version":null,"tagName":"h3"},{"title":"fromHumanoidDescription​","type":1,"pageTitle":"BodyColorsDataUtils","url":"/NevermoreEngine/api/BodyColorsDataUtils#fromHumanoidDescription","content":"&lt;/&gt; BodyColorsDataUtils.fromHumanoidDescription(humanoidDescription: HumanoidDescription ) → BodyColorsData Constructs a BodyColorsData from a humanoidDescription  ","version":null,"tagName":"h3"},{"title":"isUniformColor​","type":1,"pageTitle":"BodyColorsDataUtils","url":"/NevermoreEngine/api/BodyColorsDataUtils#isUniformColor","content":"&lt;/&gt; BodyColorsDataUtils.isUniformColor(bodyColorsData: BodyColorsData) → boolean Returns if the body colors data represents one solid color for all body parts.  ","version":null,"tagName":"h3"},{"title":"toBodyColors​","type":1,"pageTitle":"BodyColorsDataUtils","url":"/NevermoreEngine/api/BodyColorsDataUtils#toBodyColors","content":"&lt;/&gt; BodyColorsDataUtils.toBodyColors(bodyColorsData: BodyColorsData) → BodyColors  Constructs a BodyColors from the bodyColorsData  ","version":null,"tagName":"h3"},{"title":"applyToBodyColors​","type":1,"pageTitle":"BodyColorsDataUtils","url":"/NevermoreEngine/api/BodyColorsDataUtils#applyToBodyColors","content":"&lt;/&gt; BodyColorsDataUtils.applyToBodyColors( bodyColorsData: BodyColorsData, bodyColors: BodyColors ) → BodyColors  Applies body colors to the actual body color property  ","version":null,"tagName":"h3"},{"title":"fromAttributes​","type":1,"pageTitle":"BodyColorsDataUtils","url":"/NevermoreEngine/api/BodyColorsDataUtils#fromAttributes","content":"&lt;/&gt; BodyColorsDataUtils.fromAttributes(instance: Instance ) → BodyColorsData Extracts body colors from attributes  ","version":null,"tagName":"h3"},{"title":"setAttributes​","type":1,"pageTitle":"BodyColorsDataUtils","url":"/NevermoreEngine/api/BodyColorsDataUtils#setAttributes","content":"&lt;/&gt; BodyColorsDataUtils.setAttributes( instance: Instance , bodyColorsData: BodyColorsData ) → () Sets attributes to store body colors.  ","version":null,"tagName":"h3"},{"title":"applyToHumanoidDescription​","type":1,"pageTitle":"BodyColorsDataUtils","url":"/NevermoreEngine/api/BodyColorsDataUtils#applyToHumanoidDescription","content":"&lt;/&gt; BodyColorsDataUtils.applyToHumanoidDescription( bodyColorsData: BodyColorsData, humanoidDescription: HumanoidDescription ) → BodyColors  Applies body colors to the actual body color property ","version":null,"tagName":"h3"},{"title":"BoundAncestorTracker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BoundAncestorTracker","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"BoundAncestorTracker","url":"/NevermoreEngine/api/BoundAncestorTracker#properties","content":" ","version":null,"tagName":"h2"},{"title":"Class​","type":1,"pageTitle":"BoundAncestorTracker","url":"/NevermoreEngine/api/BoundAncestorTracker#Class","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; BoundAncestorTracker.Class: ValueObject&lt;T&gt; Bound value ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"BoundAncestorTracker","url":"/NevermoreEngine/api/BoundAncestorTracker#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"BoundAncestorTracker","url":"/NevermoreEngine/api/BoundAncestorTracker#new","content":"&lt;/&gt; BoundAncestorTracker.new( binder: Binder&lt;T&gt;, child: Instance ) → BoundAncestorTracker Constructs a new BoundAncestorTracker ","version":null,"tagName":"h3"},{"title":"BoundChildCollection","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BoundChildCollection","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"BoundChildCollection","url":"/NevermoreEngine/api/BoundChildCollection#properties","content":" ","version":null,"tagName":"h2"},{"title":"ClassAdded​","type":1,"pageTitle":"BoundChildCollection","url":"/NevermoreEngine/api/BoundChildCollection#ClassAdded","content":"&lt;/&gt; BoundChildCollection.ClassAdded: Signal&lt;T&gt; Fires on class addition  ","version":null,"tagName":"h3"},{"title":"ClassRemoved​","type":1,"pageTitle":"BoundChildCollection","url":"/NevermoreEngine/api/BoundChildCollection#ClassRemoved","content":"&lt;/&gt; BoundChildCollection.ClassRemoved: Signal&lt;T&gt; Fires on class removal ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"BoundChildCollection","url":"/NevermoreEngine/api/BoundChildCollection#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"BoundChildCollection","url":"/NevermoreEngine/api/BoundChildCollection#new","content":"&lt;/&gt; BoundChildCollection.new( binder: Binder&lt;T&gt;, parent: Instance ) → BoundChildCollection&lt;T&gt; Constructcs a new BoundChildCollection.  ","version":null,"tagName":"h3"},{"title":"HasClass​","type":1,"pageTitle":"BoundChildCollection","url":"/NevermoreEngine/api/BoundChildCollection#HasClass","content":"&lt;/&gt; BoundChildCollection.HasClass( self: BoundChildCollection&lt;T&gt;, class: T ) → boolean?-- true if the class exists, nil otherwise Returns whether the track has the class  ","version":null,"tagName":"h3"},{"title":"GetSize​","type":1,"pageTitle":"BoundChildCollection","url":"/NevermoreEngine/api/BoundChildCollection#GetSize","content":"&lt;/&gt; BoundChildCollection.GetSize(self: BoundChildCollection&lt;T&gt;) → number Gets the size  ","version":null,"tagName":"h3"},{"title":"GetSet​","type":1,"pageTitle":"BoundChildCollection","url":"/NevermoreEngine/api/BoundChildCollection#GetSet","content":"&lt;/&gt; BoundChildCollection.GetSet(self: BoundChildCollection&lt;T&gt;) → {[T]=true}-- The set Returns the raw classes variable as [class] = true. WARNING Do not modify the set  ","version":null,"tagName":"h3"},{"title":"GetClasses​","type":1,"pageTitle":"BoundChildCollection","url":"/NevermoreEngine/api/BoundChildCollection#GetClasses","content":"&lt;/&gt; BoundChildCollection.GetClasses(self: BoundChildCollection&lt;T&gt;) → {T} Slow than :GetSet(), but adds them in an ordered list ","version":null,"tagName":"h3"},{"title":"BoundLinkCollection","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BoundLinkCollection","content":"BoundLinkCollection Handles searching for bound objects following links (object values) under a parent with a specific name.","keywords":"","version":null},{"title":"BoundingBoxUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BoundingBoxUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"BoundingBoxUtils","url":"/NevermoreEngine/api/BoundingBoxUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getPartsBoundingBox​","type":1,"pageTitle":"BoundingBoxUtils","url":"/NevermoreEngine/api/BoundingBoxUtils#getPartsBoundingBox","content":"&lt;/&gt; BoundingBoxUtils.getPartsBoundingBox( parts: {Instance | {{ CFrame: CFrame , Size: Vector3 }}}, relativeTo: CFrame? ) → ( Vector3 ,-- size Vector3 -- position ) Retrieves a bounding box for a given set of parts  ","version":null,"tagName":"h3"},{"title":"clampPointToBoundingBox​","type":1,"pageTitle":"BoundingBoxUtils","url":"/NevermoreEngine/api/BoundingBoxUtils#clampPointToBoundingBox","content":"&lt;/&gt; BoundingBoxUtils.clampPointToBoundingBox( cframe: CFrame ,-- CFrame of bounding box size: Vector3 ,-- Size of bounding box point: Vector3 -- Point to transform ) → ( Vector3 ,-- Clamped point Vector3 -- Center of bounding box ) Clamps a point inside of a given bounding box See: https://devforum.roblox.com/t/finding-the-closest-vector3-point-on-a-part-from-the-character/130679/2  ","version":null,"tagName":"h3"},{"title":"pushPointToLieOnBoundingBox​","type":1,"pageTitle":"BoundingBoxUtils","url":"/NevermoreEngine/api/BoundingBoxUtils#pushPointToLieOnBoundingBox","content":"&lt;/&gt; BoundingBoxUtils.pushPointToLieOnBoundingBox( cframe: CFrame ,-- CFrame of bounding box size: Vector3 ,-- Size of bounding box point: Vector3 -- Point to transform ) → ( Vector3 , Vector3 -- Center of bounding box ) Pushes a point to lie within the bounding box  ","version":null,"tagName":"h3"},{"title":"getChildrenBoundingBox​","type":1,"pageTitle":"BoundingBoxUtils","url":"/NevermoreEngine/api/BoundingBoxUtils#getChildrenBoundingBox","content":"&lt;/&gt; BoundingBoxUtils.getChildrenBoundingBox( parent: Instance , relativeTo: CFrame? ) → ( Vector3? ,-- size Vector3? -- position ) Given a parent, retrieve the bounding box for this parent  ","version":null,"tagName":"h3"},{"title":"axisAlignedBoxSize​","type":1,"pageTitle":"BoundingBoxUtils","url":"/NevermoreEngine/api/BoundingBoxUtils#axisAlignedBoxSize","content":"&lt;/&gt; BoundingBoxUtils.axisAlignedBoxSize( cframe: CFrame , size: Vector3 ) → Vector3  Returns the size of an axis aligned bounding box for a given CFrame  ","version":null,"tagName":"h3"},{"title":"getBoundingBox​","type":1,"pageTitle":"BoundingBoxUtils","url":"/NevermoreEngine/api/BoundingBoxUtils#getBoundingBox","content":"&lt;/&gt; BoundingBoxUtils.getBoundingBox( data: Instance | {{CFrame: CFrame; Size: Vector3 }},-- List of things with both Size and CFrame relativeTo: CFrame? ) → ( Vector3 ,-- size Vector3 -- position ) Gets a boundingBox for the given data. See: https://gist.github.com/zeux/1a67e8930df782d5474276e218831e22  ","version":null,"tagName":"h3"},{"title":"inBoundingBox​","type":1,"pageTitle":"BoundingBoxUtils","url":"/NevermoreEngine/api/BoundingBoxUtils#inBoundingBox","content":"&lt;/&gt; BoundingBoxUtils.inBoundingBox( cframe: CFrame , size: Vector3 , testPosition: Vector3 ) → boolean Returns if a point is in a bounding box  ","version":null,"tagName":"h3"},{"title":"inCylinderBoundingBox​","type":1,"pageTitle":"BoundingBoxUtils","url":"/NevermoreEngine/api/BoundingBoxUtils#inCylinderBoundingBox","content":"&lt;/&gt; BoundingBoxUtils.inCylinderBoundingBox( cframe: CFrame , size: Vector3 , testPosition: Vector3 ) → boolean Returns if a point is in a bounding box defined by a Roblox part with the Cylinder shape.  ","version":null,"tagName":"h3"},{"title":"inBallBoundingBox​","type":1,"pageTitle":"BoundingBoxUtils","url":"/NevermoreEngine/api/BoundingBoxUtils#inBallBoundingBox","content":"&lt;/&gt; BoundingBoxUtils.inBallBoundingBox( cframe: CFrame , size: Vector3 , testPosition: Vector3 ) → boolean Returns if a point is in a bounding box defined by a Roblox part with the ball shape. ","version":null,"tagName":"h3"},{"title":"BoundLinkUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BoundLinkUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"BoundLinkUtils","url":"/NevermoreEngine/api/BoundLinkUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getLinkClass​","type":1,"pageTitle":"BoundLinkUtils","url":"/NevermoreEngine/api/BoundLinkUtils#getLinkClass","content":"&lt;/&gt; BoundLinkUtils.getLinkClass( binder: Binder&lt;T&gt;, linkName: string, from: Instance ) → T? Gets a linked object from the current instance.  ","version":null,"tagName":"h3"},{"title":"getLinkClasses​","type":1,"pageTitle":"BoundLinkUtils","url":"/NevermoreEngine/api/BoundLinkUtils#getLinkClasses","content":"&lt;/&gt; BoundLinkUtils.getLinkClasses( binder: Binder&lt;T&gt;, linkName: string, from: Instance ) → {T} Gets a linked objects from the current instance.  ","version":null,"tagName":"h3"},{"title":"getClassesForLinkValues​","type":1,"pageTitle":"BoundLinkUtils","url":"/NevermoreEngine/api/BoundLinkUtils#getClassesForLinkValues","content":"&lt;/&gt; BoundLinkUtils.getClassesForLinkValues( binders: {Binder&lt;T&gt;}, linkName: string, from: Instance ) → {T} Gets a linked objects from the current instance.  ","version":null,"tagName":"h3"},{"title":"callMethodOnLinkedClasses​","type":1,"pageTitle":"BoundLinkUtils","url":"/NevermoreEngine/api/BoundLinkUtils#callMethodOnLinkedClasses","content":"&lt;/&gt; BoundLinkUtils.callMethodOnLinkedClasses( binders: {Binder&lt;T&gt;}, linkName: string, from: Instance , methodName: string, args: {} ) → () Calls a method on the binders ","version":null,"tagName":"h3"},{"title":"BoundParentTracker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BoundParentTracker","content":"BoundParentTracker Tracks a parent bound to a specific binder","keywords":"","version":null},{"title":"BrioUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/BrioUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"BrioUtils","url":"/NevermoreEngine/api/BrioUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"clone​","type":1,"pageTitle":"BrioUtils","url":"/NevermoreEngine/api/BrioUtils#clone","content":"&lt;/&gt; BrioUtils.clone(brio: Brio&lt;T&gt;) → Brio&lt;T&gt; Clones a brio, such that it may be killed without affecting the original brio.  ","version":null,"tagName":"h3"},{"title":"aliveOnly​","type":1,"pageTitle":"BrioUtils","url":"/NevermoreEngine/api/BrioUtils#aliveOnly","content":"&lt;/&gt; BrioUtils.aliveOnly(brios: {Brio&lt;T&gt;}) → {Brio&lt;T&gt;} Returns a list of alive Brios only  ","version":null,"tagName":"h3"},{"title":"firstAlive​","type":1,"pageTitle":"BrioUtils","url":"/NevermoreEngine/api/BrioUtils#firstAlive","content":"&lt;/&gt; BrioUtils.firstAlive(brios: {Brio&lt;T&gt;}) → Brio&lt;T&gt; Returns the first alive Brio in a list  ","version":null,"tagName":"h3"},{"title":"flatten​","type":1,"pageTitle":"BrioUtils","url":"/NevermoreEngine/api/BrioUtils#flatten","content":"&lt;/&gt; BrioUtils.flatten(brioTable: {any: Brio&lt;T&gt; | T}) → Brio&lt;{T}&gt; Given a list of brios of brios, flattens that list into a brio with just one T value.  ","version":null,"tagName":"h3"},{"title":"first​","type":1,"pageTitle":"BrioUtils","url":"/NevermoreEngine/api/BrioUtils#first","content":"&lt;/&gt; BrioUtils.first( brios: {Brio&lt;T&gt;}, ...: U... ) → Brio&lt;U&gt; Returns a brio that dies whenever the first Brio in the list dies. The value of the Brio is the ... value.  ","version":null,"tagName":"h3"},{"title":"withOtherValues​","type":1,"pageTitle":"BrioUtils","url":"/NevermoreEngine/api/BrioUtils#withOtherValues","content":"since 3.6.0 &lt;/&gt; BrioUtils.withOtherValues( brio: Brio&lt;T&gt;, ...: U ) → Brio&lt;U&gt; Clones a brio, such that it may be killed without affecting the original brio.  ","version":null,"tagName":"h3"},{"title":"extend​","type":1,"pageTitle":"BrioUtils","url":"/NevermoreEngine/api/BrioUtils#extend","content":"&lt;/&gt; BrioUtils.extend( brio: Brio&lt;U&gt;, ...: T ) → Brio&lt;T&gt; Makes a brio that is limited by the lifetime of its parent (but could be shorter) and has the new values given.  ","version":null,"tagName":"h3"},{"title":"prepend​","type":1,"pageTitle":"BrioUtils","url":"/NevermoreEngine/api/BrioUtils#prepend","content":"since 3.6.0 &lt;/&gt; BrioUtils.prepend( brio: Brio&lt;U&gt;, ...: T ) → Brio&lt;T&gt; Makes a brio that is limited by the lifetime of its parent (but could be shorter) and has the new values given at the beginning of the result  ","version":null,"tagName":"h3"},{"title":"merge​","type":1,"pageTitle":"BrioUtils","url":"/NevermoreEngine/api/BrioUtils#merge","content":"&lt;/&gt; BrioUtils.merge( brio: Brio&lt;{T}&gt;, otherBrio: Brio&lt;{U}&gt; ) → Brio&lt;{T | U}&gt; Merges the existing brio value with the other brio ","version":null,"tagName":"h3"},{"title":"ButtonDragModel","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ButtonDragModel","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ButtonDragModel","url":"/NevermoreEngine/api/ButtonDragModel#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"ButtonDragModel","url":"/NevermoreEngine/api/ButtonDragModel#new","content":"&lt;/&gt; ButtonDragModel.new( initialButton: GuiButton? -- Optional ) → ButtonDragModel Construst a new drag model for the button  ","version":null,"tagName":"h3"},{"title":"IsPressed​","type":1,"pageTitle":"ButtonDragModel","url":"/NevermoreEngine/api/ButtonDragModel#IsPressed","content":"&lt;/&gt; ButtonDragModel.IsPressed(self: ButtonDragModel) → boolean Returns true if pressed  ","version":null,"tagName":"h3"},{"title":"ObserveIsPressed​","type":1,"pageTitle":"ButtonDragModel","url":"/NevermoreEngine/api/ButtonDragModel#ObserveIsPressed","content":"&lt;/&gt; ButtonDragModel.ObserveIsPressed(self: ButtonDragModel) → Observable&lt;boolean&gt; Observes if anything is pressing down on the button itself  ","version":null,"tagName":"h3"},{"title":"ObserveIsPressedBrio​","type":1,"pageTitle":"ButtonDragModel","url":"/NevermoreEngine/api/ButtonDragModel#ObserveIsPressedBrio","content":"&lt;/&gt; ButtonDragModel.ObserveIsPressedBrio(self: ButtonDragModel) → Observable&lt;Brio&lt;true&gt;&gt;   ","version":null,"tagName":"h3"},{"title":"ObserveDragDelta​","type":1,"pageTitle":"ButtonDragModel","url":"/NevermoreEngine/api/ButtonDragModel#ObserveDragDelta","content":"&lt;/&gt; ButtonDragModel.ObserveDragDelta(self: ButtonDragModel) → Observable&lt;Vector2? &gt;   ","version":null,"tagName":"h3"},{"title":"GetDragDelta​","type":1,"pageTitle":"ButtonDragModel","url":"/NevermoreEngine/api/ButtonDragModel#GetDragDelta","content":"&lt;/&gt; ButtonDragModel.GetDragDelta(self: ButtonDragModel) → Vector2?    ","version":null,"tagName":"h3"},{"title":"GetDragPosition​","type":1,"pageTitle":"ButtonDragModel","url":"/NevermoreEngine/api/ButtonDragModel#GetDragPosition","content":"&lt;/&gt; ButtonDragModel.GetDragPosition(self: ButtonDragModel) → Vector2?  Returns the scale position on the Gui from 0 to 1 This is reletive to the GUI, so top left is 0, 0  ","version":null,"tagName":"h3"},{"title":"ObserveDragPosition​","type":1,"pageTitle":"ButtonDragModel","url":"/NevermoreEngine/api/ButtonDragModel#ObserveDragPosition","content":"&lt;/&gt; ButtonDragModel.ObserveDragPosition(self: ButtonDragModel) → Observable&lt;Vector2? &gt; Observes the scale position on the Gui from 0 to 1 This is reletive to the GUI, so top left is 0, 0  ","version":null,"tagName":"h3"},{"title":"SetClampWithinButton​","type":1,"pageTitle":"ButtonDragModel","url":"/NevermoreEngine/api/ButtonDragModel#SetClampWithinButton","content":"&lt;/&gt; ButtonDragModel.SetClampWithinButton( self: ButtonDragModel, clampWithinButton: boolean ) → () Sets whether to clamp the results within the button bounds  ","version":null,"tagName":"h3"},{"title":"SetButton​","type":1,"pageTitle":"ButtonDragModel","url":"/NevermoreEngine/api/ButtonDragModel#SetButton","content":"&lt;/&gt; ButtonDragModel.SetButton( self: ButtonDragModel, button: GuiButton ) → () → ()-- Cleanup function Sets the current button for the model ","version":null,"tagName":"h3"},{"title":"Brio","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Brio","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"Brio","url":"/NevermoreEngine/api/Brio#properties","content":" ","version":null,"tagName":"h2"},{"title":"DEAD​","type":1,"pageTitle":"Brio","url":"/NevermoreEngine/api/Brio#DEAD","content":"&lt;/&gt; Brio.DEAD: Brio An already dead brio which may be used for identity purposes. print(Brio.DEAD:IsDead()) --&gt; true  ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Brio","url":"/NevermoreEngine/api/Brio#functions","content":" ","version":null,"tagName":"h2"},{"title":"isBrio​","type":1,"pageTitle":"Brio","url":"/NevermoreEngine/api/Brio#isBrio","content":"&lt;/&gt; Brio.isBrio(value: any) → boolean Returns whether a value is a Brio. print(Brio.isBrio(&quot;yolo&quot;)) --&gt; false   ","version":null,"tagName":"h3"},{"title":"new​","type":1,"pageTitle":"Brio","url":"/NevermoreEngine/api/Brio#new","content":"&lt;/&gt; Brio.new( ...: any-- Brio values ) → Brio Constructs a new Brio. local brio = Brio.new(&quot;a&quot;, &quot;b&quot;) print(brio:GetValue()) --&gt; a b   ","version":null,"tagName":"h3"},{"title":"delayed​","type":1,"pageTitle":"Brio","url":"/NevermoreEngine/api/Brio#delayed","content":"since 3.6.0 &lt;/&gt; Brio.delayed( time: number, ...: any-- Brio values ) → Brio Constructs a new brio that will cleanup afer the set amount of time  ","version":null,"tagName":"h3"},{"title":"GetDiedSignal​","type":1,"pageTitle":"Brio","url":"/NevermoreEngine/api/Brio#GetDiedSignal","content":"&lt;/&gt; Brio.GetDiedSignal(self: Brio&lt;T...&gt;) → Signal Gets a signal that will fire when the Brio dies. If the brio is already dead calling this method will error. INFO Calling this while the brio is already dead will throw a error. local brio = Brio.new(&quot;a&quot;, &quot;b&quot;) brio:GetDiedSignal():Connect(function() print(&quot;Brio died&quot;) end) brio:Kill() --&gt; Brio died brio:Kill() -- no output   ","version":null,"tagName":"h3"},{"title":"IsDead​","type":1,"pageTitle":"Brio","url":"/NevermoreEngine/api/Brio#IsDead","content":"&lt;/&gt; Brio.IsDead(self: Brio&lt;T...&gt;) → boolean Returns true is the brio is dead. local brio = Brio.new(&quot;a&quot;, &quot;b&quot;) print(brio:IsDead()) --&gt; false brio:Kill() print(brio:IsDead()) --&gt; true   ","version":null,"tagName":"h3"},{"title":"ErrorIfDead​","type":1,"pageTitle":"Brio","url":"/NevermoreEngine/api/Brio#ErrorIfDead","content":"&lt;/&gt; Brio.ErrorIfDead(self: Brio&lt;T...&gt;) → () Throws an error if the Brio is dead. brio.DEAD:ErrorIfDead() --&gt; ERROR: [Brio.ErrorIfDead] - Brio is dead   ","version":null,"tagName":"h3"},{"title":"ToMaid​","type":1,"pageTitle":"Brio","url":"/NevermoreEngine/api/Brio#ToMaid","content":"&lt;/&gt; Brio.ToMaid(self: Brio&lt;T...&gt;) → Maid Constructs a new Maid which will clean up when the brio dies. Will error if the Brio is dead. INFO Calling this while the brio is already dead will throw a error. local brio = Brio.new(&quot;a&quot;) local maid = brio:ToMaid() maid:GiveTask(function() print(&quot;Cleaning up!&quot;) end) brio:Kill() --&gt; Cleaning up!   ","version":null,"tagName":"h3"},{"title":"GetValue​","type":1,"pageTitle":"Brio","url":"/NevermoreEngine/api/Brio#GetValue","content":"&lt;/&gt; Brio.GetValue(self: Brio&lt;T...&gt;) → any If the brio is not dead, will return the values unpacked from the brio. INFO Calling this while the brio is already dead will throw a error. Values should not be used past the lifetime of the brio, and can be considered invalid. local brio = Brio.new(&quot;a&quot;, 1, 2) print(brio:GetValue()) --&gt; &quot;a&quot; 1 2 brio:Kill() print(brio:GetValue()) --&gt; ERROR: Brio is dead   ","version":null,"tagName":"h3"},{"title":"GetPackedValues​","type":1,"pageTitle":"Brio","url":"/NevermoreEngine/api/Brio#GetPackedValues","content":"since 3.6.0 &lt;/&gt; Brio.GetPackedValues(self: Brio&lt;T...&gt;) → { n: number, ...T } Returns the packed values from table.pack() format  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"Brio","url":"/NevermoreEngine/api/Brio#Destroy","content":"&lt;/&gt; Brio.Destroy(self: Brio&lt;T...&gt;) → () Kills the Brio. INFO You can call this multiple times and it will not error if the brio is dead. local brio = Brio.new(&quot;hi&quot;) print(brio:GetValue()) --&gt; &quot;hi&quot; brio:Kill() print(brio:GetValue()) --&gt; ERROR: Brio is dead   ","version":null,"tagName":"h3"},{"title":"Kill​","type":1,"pageTitle":"Brio","url":"/NevermoreEngine/api/Brio#Kill","content":"&lt;/&gt; Brio:Kill() → () Alias for Destroy. ","version":null,"tagName":"h3"},{"title":"ButtonUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ButtonUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ButtonUtils","url":"/NevermoreEngine/api/ButtonUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getMouseOverColor​","type":1,"pageTitle":"ButtonUtils","url":"/NevermoreEngine/api/ButtonUtils#getMouseOverColor","content":"&lt;/&gt; ButtonUtils.getMouseOverColor( originalColor: Color3 , factor: number?-- Defaults to 1 ) → Color3  Gets a tinted mouse over color ","version":null,"tagName":"h3"},{"title":"CameraControls","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CameraControls","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CameraControls","url":"/NevermoreEngine/api/CameraControls#functions","content":" ","version":null,"tagName":"h2"},{"title":"SetGamepadRotationAcceleration​","type":1,"pageTitle":"CameraControls","url":"/NevermoreEngine/api/CameraControls#SetGamepadRotationAcceleration","content":"&lt;/&gt; CameraControls.SetGamepadRotationAcceleration( self: CameraControls, acceleration: number ) → () Sets the gamepad rotation acceleration  ","version":null,"tagName":"h3"},{"title":"Enable​","type":1,"pageTitle":"CameraControls","url":"/NevermoreEngine/api/CameraControls#Enable","content":"&lt;/&gt; CameraControls.Enable(self: CameraControls) → () Enables the control.  ","version":null,"tagName":"h3"},{"title":"Disable​","type":1,"pageTitle":"CameraControls","url":"/NevermoreEngine/api/CameraControls#Disable","content":"&lt;/&gt; CameraControls.Disable(self: CameraControls) → () Disables the control. ","version":null,"tagName":"h3"},{"title":"ButtonHighlightModel","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ButtonHighlightModel","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#new","content":"&lt;/&gt; ButtonHighlightModel.new( button?: GuiObject , onUpdate: function? ) → ButtonHighlightModel A model that dictates the current state of a button.  ","version":null,"tagName":"h3"},{"title":"SetButton​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#SetButton","content":"&lt;/&gt; ButtonHighlightModel.SetButton( self: ButtonHighlightModel, button: GuiObject? ) → () Sets the button for the highlight model.  ","version":null,"tagName":"h3"},{"title":"IsPressed​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#IsPressed","content":"&lt;/&gt; ButtonHighlightModel.IsPressed(self: ButtonHighlightModel) → boolean Gets if the button is pressed  ","version":null,"tagName":"h3"},{"title":"ObserveIsPressed​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#ObserveIsPressed","content":"&lt;/&gt; ButtonHighlightModel.ObserveIsPressed(self: ButtonHighlightModel) → Observable&lt;boolean&gt; Observes if the button is pressed  ","version":null,"tagName":"h3"},{"title":"ObservePercentPressed​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#ObservePercentPressed","content":"&lt;/&gt; ButtonHighlightModel.ObservePercentPressed( self: ButtonHighlightModel, acceleration: number? ) → Observable&lt;number&gt; Observes how pressed down the button is  ","version":null,"tagName":"h3"},{"title":"ObservePercentPressedTarget​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#ObservePercentPressedTarget","content":"&lt;/&gt; ButtonHighlightModel.ObservePercentPressedTarget(self: ButtonHighlightModel) → Observable&lt;number&gt; Observes target for how pressed the button is  ","version":null,"tagName":"h3"},{"title":"IsHighlighted​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#IsHighlighted","content":"&lt;/&gt; ButtonHighlightModel.IsHighlighted(self: ButtonHighlightModel) → boolean Returns true if highlighted  ","version":null,"tagName":"h3"},{"title":"ObserveIsHighlighted​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#ObserveIsHighlighted","content":"&lt;/&gt; ButtonHighlightModel.ObserveIsHighlighted(self: ButtonHighlightModel) → Observable&lt;boolean&gt; Observes if we're highlighted  ","version":null,"tagName":"h3"},{"title":"ObservePercentHighlightedTarget​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#ObservePercentHighlightedTarget","content":"&lt;/&gt; ButtonHighlightModel.ObservePercentHighlightedTarget(self: ButtonHighlightModel) → Observable&lt;number&gt; Observes target for how highlighted the button is  ","version":null,"tagName":"h3"},{"title":"ObservePercentHighlighted​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#ObservePercentHighlighted","content":"&lt;/&gt; ButtonHighlightModel.ObservePercentHighlighted( self: ButtonHighlightModel, acceleration: number? ) → Observable&lt;number&gt; Observes how highlighted the button is  ","version":null,"tagName":"h3"},{"title":"IsSelected​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#IsSelected","content":"&lt;/&gt; ButtonHighlightModel.IsSelected(self: ButtonHighlightModel) → boolean Returns true if selected  ","version":null,"tagName":"h3"},{"title":"ObserveIsSelected​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#ObserveIsSelected","content":"&lt;/&gt; ButtonHighlightModel.ObserveIsSelected(self: ButtonHighlightModel) → Observable&lt;boolean&gt; Returns an observable for if we're selected  ","version":null,"tagName":"h3"},{"title":"IsMouseOrTouchOver​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#IsMouseOrTouchOver","content":"&lt;/&gt; ButtonHighlightModel.IsMouseOrTouchOver(self: ButtonHighlightModel) → Observable&lt;boolean&gt; Gets if mouse or touch is over specifically. This can be used for hover effects.  ","version":null,"tagName":"h3"},{"title":"ObserveIsMouseOrTouchOver​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#ObserveIsMouseOrTouchOver","content":"&lt;/&gt; ButtonHighlightModel.ObserveIsMouseOrTouchOver(self: ButtonHighlightModel) → Observable&lt;boolean&gt; Observes if mouse or touch is over specifically. This can be used for hover effects.  ","version":null,"tagName":"h3"},{"title":"SetIsChoosen​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#SetIsChoosen","content":"&lt;/&gt; ButtonHighlightModel.SetIsChoosen( self: ButtonHighlightModel, isChoosen: boolean, doNotAnimate: boolean ) → () Sets whether the model is choosen  ","version":null,"tagName":"h3"},{"title":"IsChoosen​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#IsChoosen","content":"&lt;/&gt; ButtonHighlightModel.IsChoosen(self: ButtonHighlightModel) → boolean Returns true if choosen  ","version":null,"tagName":"h3"},{"title":"ObserveIsChoosen​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#ObserveIsChoosen","content":"&lt;/&gt; ButtonHighlightModel.ObserveIsChoosen(self: ButtonHighlightModel) → boolean Observes if the instance is &quot;choosen&quot;  ","version":null,"tagName":"h3"},{"title":"ObservePercentChoosenTarget​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#ObservePercentChoosenTarget","content":"&lt;/&gt; ButtonHighlightModel.ObservePercentChoosenTarget(self: ButtonHighlightModel) → Observable&lt;number&gt; Observes target for if the button is selected or not  ","version":null,"tagName":"h3"},{"title":"ObservePercentChoosen​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#ObservePercentChoosen","content":"&lt;/&gt; ButtonHighlightModel.ObservePercentChoosen( self: ButtonHighlightModel, acceleration: number? ) → Observable&lt;number&gt; Observes how choosen the button is  ","version":null,"tagName":"h3"},{"title":"SetInteractionEnabled​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#SetInteractionEnabled","content":"&lt;/&gt; ButtonHighlightModel.SetInteractionEnabled( self: ButtonHighlightModel, interactionEnabled: boolean ) → () Sets whether interaction is enabled  ","version":null,"tagName":"h3"},{"title":"IsInteractionEnabled​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#IsInteractionEnabled","content":"&lt;/&gt; ButtonHighlightModel.IsInteractionEnabled(self: ButtonHighlightModel) → boolean Gets if interaction enabled  ","version":null,"tagName":"h3"},{"title":"ObserveIsInteractionEnabled​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#ObserveIsInteractionEnabled","content":"&lt;/&gt; ButtonHighlightModel.ObserveIsInteractionEnabled(self: ButtonHighlightModel) → Observable&lt;boolean&gt; Observes if interaction enabled  ","version":null,"tagName":"h3"},{"title":"SetKeyDown​","type":1,"pageTitle":"ButtonHighlightModel","url":"/NevermoreEngine/api/ButtonHighlightModel#SetKeyDown","content":"&lt;/&gt; ButtonHighlightModel.SetKeyDown( self: ButtonHighlightModel, isKeyDown: boolean, doNotAnimate: boolean-- Optional ) → () Sets whether a key is down ","version":null,"tagName":"h3"},{"title":"CameraEffectUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CameraEffectUtils","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"CameraEffectUtils","url":"/NevermoreEngine/api/CameraEffectUtils#types","content":" ","version":null,"tagName":"h2"},{"title":"CameraEffect​","type":1,"pageTitle":"CameraEffectUtils","url":"/NevermoreEngine/api/CameraEffectUtils#CameraEffect","content":"&lt;/&gt; interface CameraEffect { CameraState: CameraState } Represents an effect that can be used in combination with other effects.  ","version":null,"tagName":"h3"},{"title":"CameraLike​","type":1,"pageTitle":"CameraEffectUtils","url":"/NevermoreEngine/api/CameraEffectUtils#CameraLike","content":"&lt;/&gt; type CameraLike = CameraEffect | CameraState Something that is like a camera ","version":null,"tagName":"h3"},{"title":"CameraFrame","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CameraFrame","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CameraFrame","url":"/NevermoreEngine/api/CameraFrame#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"CameraFrame","url":"/NevermoreEngine/api/CameraFrame#new","content":"&lt;/&gt; CameraFrame.new( qFrame: QFrame, fieldOfView: number ) → CameraFrame Constructs a new CameraFrame  ","version":null,"tagName":"h3"},{"title":"isCameraFrame​","type":1,"pageTitle":"CameraFrame","url":"/NevermoreEngine/api/CameraFrame#isCameraFrame","content":"&lt;/&gt; CameraFrame.isCameraFrame(value: any) → boolean Returns whether a value is a CameraFrame  ","version":null,"tagName":"h3"},{"title":"__add​","type":1,"pageTitle":"CameraFrame","url":"/NevermoreEngine/api/CameraFrame#__add","content":"&lt;/&gt; CameraFrame.__add( a: CameraFrame, b: CameraFrame ) → CameraFrame Linearly adds the camera frames together.  ","version":null,"tagName":"h3"},{"title":"__sub​","type":1,"pageTitle":"CameraFrame","url":"/NevermoreEngine/api/CameraFrame#__sub","content":"&lt;/&gt; CameraFrame.__sub( a: CameraFrame, b: CameraFrame ) → CameraFrame Linearly subtractions the camera frames together.  ","version":null,"tagName":"h3"},{"title":"__unm​","type":1,"pageTitle":"CameraFrame","url":"/NevermoreEngine/api/CameraFrame#__unm","content":"&lt;/&gt; CameraFrame.__unm(a: CameraFrame) → CameraFrame Inverts the QFrame and the field of view.  ","version":null,"tagName":"h3"},{"title":"__mul​","type":1,"pageTitle":"CameraFrame","url":"/NevermoreEngine/api/CameraFrame#__mul","content":"&lt;/&gt; CameraFrame.__mul( a: CameraFrame | number, b: CameraFrame | number ) → CameraFrame Multiplies the camera frame with the given value  ","version":null,"tagName":"h3"},{"title":"__div​","type":1,"pageTitle":"CameraFrame","url":"/NevermoreEngine/api/CameraFrame#__div","content":"&lt;/&gt; CameraFrame.__div( a: CameraFrame, b: number ) → CameraFrame Divides the camera frame by the value  ","version":null,"tagName":"h3"},{"title":"__pow​","type":1,"pageTitle":"CameraFrame","url":"/NevermoreEngine/api/CameraFrame#__pow","content":"&lt;/&gt; CameraFrame.__pow( a: CameraFrame, b: number ) → CameraFrame Takes the camera frame to the Nth power  ","version":null,"tagName":"h3"},{"title":"__eq​","type":1,"pageTitle":"CameraFrame","url":"/NevermoreEngine/api/CameraFrame#__eq","content":"&lt;/&gt; CameraFrame.__eq( a: CameraFrame, b: CameraFrame ) → boolean Compares the camera frame to make sure they're equal ","version":null,"tagName":"h3"},{"title":"CameraGamepadInputUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CameraGamepadInputUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CameraGamepadInputUtils","url":"/NevermoreEngine/api/CameraGamepadInputUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"outOfDeadZone​","type":1,"pageTitle":"CameraGamepadInputUtils","url":"/NevermoreEngine/api/CameraGamepadInputUtils#outOfDeadZone","content":"&lt;/&gt; CameraGamepadInputUtils.outOfDeadZone(inputObject: InputObject ) → boolean Returns true if the input is outside the deadzone. @param inputObject InputObject @return boolean   ","version":null,"tagName":"h3"},{"title":"gamepadLinearToCurve​","type":1,"pageTitle":"CameraGamepadInputUtils","url":"/NevermoreEngine/api/CameraGamepadInputUtils#gamepadLinearToCurve","content":"&lt;/&gt; CameraGamepadInputUtils.gamepadLinearToCurve(thumbstickPosition: Vector2 ) → Vector2  Converts a thumbstick position to a curve space. ","version":null,"tagName":"h3"},{"title":"CameraInfoUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CameraInfoUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CameraInfoUtils","url":"/NevermoreEngine/api/CameraInfoUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"createCameraInfo​","type":1,"pageTitle":"CameraInfoUtils","url":"/NevermoreEngine/api/CameraInfoUtils#createCameraInfo","content":"&lt;/&gt; CameraInfoUtils.createCameraInfo( cframe: CFrame , viewPortSize: Vector2 , fieldOfView: number ) → CameraInfo Creates a new camera info.  ","version":null,"tagName":"h3"},{"title":"fromCamera​","type":1,"pageTitle":"CameraInfoUtils","url":"/NevermoreEngine/api/CameraInfoUtils#fromCamera","content":"&lt;/&gt; CameraInfoUtils.fromCamera(camera: Camera ) → CameraInfo Creates a new camera info from a camera.  ","version":null,"tagName":"h3"},{"title":"isCameraInfo​","type":1,"pageTitle":"CameraInfoUtils","url":"/NevermoreEngine/api/CameraInfoUtils#isCameraInfo","content":"&lt;/&gt; CameraInfoUtils.isCameraInfo(cameraInfo: any) → boolean Returns true if the value is a cameraInfo ","version":null,"tagName":"h3"},{"title":"CameraInputUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CameraInputUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CameraInputUtils","url":"/NevermoreEngine/api/CameraInputUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getPanBy​","type":1,"pageTitle":"CameraInputUtils","url":"/NevermoreEngine/api/CameraInputUtils#getPanBy","content":"&lt;/&gt; CameraInputUtils.getPanBy( panDelta: Vector2 , sensivity: Vector2 ) → Vector2  Computes the pan delta based on the given pan delta and sensitivity.  ","version":null,"tagName":"h3"},{"title":"convertToPanDelta​","type":1,"pageTitle":"CameraInputUtils","url":"/NevermoreEngine/api/CameraInputUtils#convertToPanDelta","content":"&lt;/&gt; CameraInputUtils.convertToPanDelta(vector3: Vector3 ) → Vector2  Converts a Vector3 to a Vector2 for camera panning  ","version":null,"tagName":"h3"},{"title":"getInversionVector​","type":1,"pageTitle":"CameraInputUtils","url":"/NevermoreEngine/api/CameraInputUtils#getInversionVector","content":"&lt;/&gt; CameraInputUtils.getInversionVector(userGameSettings: UserGameSettings ) → Vector2  Returns the inversion vector based on the user game settings.  ","version":null,"tagName":"h3"},{"title":"invertSensitivity​","type":1,"pageTitle":"CameraInputUtils","url":"/NevermoreEngine/api/CameraInputUtils#invertSensitivity","content":"&lt;/&gt; CameraInputUtils.invertSensitivity(sensivity: Vector2 ) → Vector2  Inverts the sensitivity vector.  ","version":null,"tagName":"h3"},{"title":"isPortraitMode​","type":1,"pageTitle":"CameraInputUtils","url":"/NevermoreEngine/api/CameraInputUtils#isPortraitMode","content":"&lt;/&gt; CameraInputUtils.isPortraitMode(aspectRatio: number) → boolean Returns true if in portrait mode, false otherwise.  ","version":null,"tagName":"h3"},{"title":"getCappedAspectRatio​","type":1,"pageTitle":"CameraInputUtils","url":"/NevermoreEngine/api/CameraInputUtils#getCappedAspectRatio","content":"&lt;/&gt; CameraInputUtils.getCappedAspectRatio(viewportSize: Vector2 ) → number Computes a capped aspect ratio based on the viewport size. ","version":null,"tagName":"h3"},{"title":"CameraPyramidUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CameraPyramidUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CameraPyramidUtils","url":"/NevermoreEngine/api/CameraPyramidUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"rayIntersection​","type":1,"pageTitle":"CameraPyramidUtils","url":"/NevermoreEngine/api/CameraPyramidUtils#rayIntersection","content":"&lt;/&gt; CameraPyramidUtils.rayIntersection( camera: Camera , rayOrigin: Vector3 , unitRayDirection: Vector3 , debugMaid: Maid?-- Optional debug maid ) → ( Vector3? ,-- Screen point1 Vector3? -- Screen point2 ) Treating the camera like a pyramid, compute points on the screen that the ray intersects with the screen. Returns the screen points in the same order as the ray orientation, such that the line is always moving away from the ray. ","version":null,"tagName":"h3"},{"title":"CameraStack","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CameraStack","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CameraStack","url":"/NevermoreEngine/api/CameraStack#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"CameraStack","url":"/NevermoreEngine/api/CameraStack#new","content":"&lt;/&gt; CameraStack.new() → CameraStack Constructs a new camera stack  ","version":null,"tagName":"h3"},{"title":"isCameraStack​","type":1,"pageTitle":"CameraStack","url":"/NevermoreEngine/api/CameraStack#isCameraStack","content":"&lt;/&gt; CameraStack.isCameraStack(value: any) → boolean   ","version":null,"tagName":"h3"},{"title":"PushDisable​","type":1,"pageTitle":"CameraStack","url":"/NevermoreEngine/api/CameraStack#PushDisable","content":"&lt;/&gt; CameraStack.PushDisable(self: CameraStack) → function-- Function to cancel disable Pushes a disable state onto the camera stack  ","version":null,"tagName":"h3"},{"title":"PrintCameraStack​","type":1,"pageTitle":"CameraStack","url":"/NevermoreEngine/api/CameraStack#PrintCameraStack","content":"&lt;/&gt; CameraStack.PrintCameraStack(self: CameraStack) → () Outputs the camera stack. Intended for diagnostics.  ","version":null,"tagName":"h3"},{"title":"GetTopCamera​","type":1,"pageTitle":"CameraStack","url":"/NevermoreEngine/api/CameraStack#GetTopCamera","content":"&lt;/&gt; CameraStack.GetTopCamera(self: CameraStack) → CameraEffect Gets the camera current on the top of the stack  ","version":null,"tagName":"h3"},{"title":"GetTopState​","type":1,"pageTitle":"CameraStack","url":"/NevermoreEngine/api/CameraStack#GetTopState","content":"&lt;/&gt; CameraStack.GetTopState(self: CameraStack) → CameraState? Retrieves the top state off the stack at this time  ","version":null,"tagName":"h3"},{"title":"GetNewStateBelow​","type":1,"pageTitle":"CameraStack","url":"/NevermoreEngine/api/CameraStack#GetNewStateBelow","content":"&lt;/&gt; CameraStack.GetNewStateBelow(self: CameraStack) → ( CustomCameraEffect,-- Effect below (CameraState) → ()-- Function to set the state ) Returns a new camera state that retrieves the state below its set state.  ","version":null,"tagName":"h3"},{"title":"GetIndex​","type":1,"pageTitle":"CameraStack","url":"/NevermoreEngine/api/CameraStack#GetIndex","content":"&lt;/&gt; CameraStack.GetIndex( self: CameraStack, state: CameraEffect ) → number?-- index Retrieves the index of a state  ","version":null,"tagName":"h3"},{"title":"GetStack​","type":1,"pageTitle":"CameraStack","url":"/NevermoreEngine/api/CameraStack#GetStack","content":"&lt;/&gt; CameraStack.GetStack(self: CameraStack) → {CameraLike} Returns the current stack. WARNING Do not modify this stack, this is the raw memory of the stack  ","version":null,"tagName":"h3"},{"title":"Remove​","type":1,"pageTitle":"CameraStack","url":"/NevermoreEngine/api/CameraStack#Remove","content":"&lt;/&gt; CameraStack.Remove( self: CameraStack, state: CameraLike ) → () Removes the state from the stack  ","version":null,"tagName":"h3"},{"title":"Add​","type":1,"pageTitle":"CameraStack","url":"/NevermoreEngine/api/CameraStack#Add","content":"&lt;/&gt; CameraStack.Add( self: CameraStack, state: CameraState ) → () → ()-- Cleanup function Adds the state from the stack ","version":null,"tagName":"h3"},{"title":"CameraStackService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CameraStackService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CameraStackService","url":"/NevermoreEngine/api/CameraStackService#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"CameraStackService","url":"/NevermoreEngine/api/CameraStackService#Init","content":"&lt;/&gt; CameraStackService.Init( self: CameraStackService, serviceBag: ServiceBag ) → () Initializes a new camera stack. Should be done via the ServiceBag.  ","version":null,"tagName":"h3"},{"title":"SetDoNotUseDefaultCamera​","type":1,"pageTitle":"CameraStackService","url":"/NevermoreEngine/api/CameraStackService#SetDoNotUseDefaultCamera","content":"&lt;/&gt; CameraStackService.SetDoNotUseDefaultCamera( self: CameraStackService, doNotUseDefaultCamera: boolean ) → () Prevents the default camera from being used  ","version":null,"tagName":"h3"},{"title":"PushDisable​","type":1,"pageTitle":"CameraStackService","url":"/NevermoreEngine/api/CameraStackService#PushDisable","content":"&lt;/&gt; CameraStackService.PushDisable(self: CameraStackService) → function-- Function to cancel disable Pushes a disable state onto the camera stack  ","version":null,"tagName":"h3"},{"title":"PrintCameraStack​","type":1,"pageTitle":"CameraStackService","url":"/NevermoreEngine/api/CameraStackService#PrintCameraStack","content":"&lt;/&gt; CameraStackService.PrintCameraStack(self: CameraStackService) → () Outputs the camera stack. Intended for diagnostics.  ","version":null,"tagName":"h3"},{"title":"GetDefaultCamera​","type":1,"pageTitle":"CameraStackService","url":"/NevermoreEngine/api/CameraStackService#GetDefaultCamera","content":"&lt;/&gt; CameraStackService.GetDefaultCamera(self: CameraStackService) → SummedCamera-- DefaultCamera + ImpulseCamera Returns the default camera  ","version":null,"tagName":"h3"},{"title":"GetImpulseCamera​","type":1,"pageTitle":"CameraStackService","url":"/NevermoreEngine/api/CameraStackService#GetImpulseCamera","content":"&lt;/&gt; CameraStackService.GetImpulseCamera(self: CameraStackService) → ImpulseCamera Returns the impulse camera. Useful for adding camera shake. Shaking the camera: self._cameraStackService:GetImpulseCamera():Impulse(Vector3.new(0.25, 0, 0.25*(math.random()-0.5))) You can also sum the impulse camera into another effect to layer the shake on top of the effect as desired. -- Adding global custom camera shake to a custom camera effect local customCameraEffect = ... return (customCameraEffect + self._cameraStackService:GetImpulseCamera()):SetMode(&quot;Relative&quot;)   ","version":null,"tagName":"h3"},{"title":"GetRawDefaultCamera​","type":1,"pageTitle":"CameraStackService","url":"/NevermoreEngine/api/CameraStackService#GetRawDefaultCamera","content":"&lt;/&gt; CameraStackService.GetRawDefaultCamera(self: CameraStackService) → DefaultCamera Returns the default camera without any impulse cameras  ","version":null,"tagName":"h3"},{"title":"GetTopCamera​","type":1,"pageTitle":"CameraStackService","url":"/NevermoreEngine/api/CameraStackService#GetTopCamera","content":"&lt;/&gt; CameraStackService.GetTopCamera(self: CameraStackService) → CameraEffect Gets the camera current on the top of the stack  ","version":null,"tagName":"h3"},{"title":"GetTopState​","type":1,"pageTitle":"CameraStackService","url":"/NevermoreEngine/api/CameraStackService#GetTopState","content":"&lt;/&gt; CameraStackService.GetTopState(self: CameraStackService) → CameraState? Retrieves the top state off the stack at this time  ","version":null,"tagName":"h3"},{"title":"GetNewStateBelow​","type":1,"pageTitle":"CameraStackService","url":"/NevermoreEngine/api/CameraStackService#GetNewStateBelow","content":"&lt;/&gt; CameraStackService.GetNewStateBelow(self: CameraStackService) → ( CustomCameraEffect,-- Effect below (CameraState) → ()-- Function to set the state ) Returns a new camera state that retrieves the state below its set state.  ","version":null,"tagName":"h3"},{"title":"GetIndex​","type":1,"pageTitle":"CameraStackService","url":"/NevermoreEngine/api/CameraStackService#GetIndex","content":"&lt;/&gt; CameraStackService.GetIndex( self: CameraStackService, state: CameraEffect ) → number?-- index Retrieves the index of a state  ","version":null,"tagName":"h3"},{"title":"GetRawStack​","type":1,"pageTitle":"CameraStackService","url":"/NevermoreEngine/api/CameraStackService#GetRawStack","content":"&lt;/&gt; CameraStackService.GetRawStack(self: CameraStackService) → {CameraState&lt;T&gt;} Returns the current stack. WARNING Do not modify this stack, this is the raw memory of the stack  ","version":null,"tagName":"h3"},{"title":"GetCameraStack​","type":1,"pageTitle":"CameraStackService","url":"/NevermoreEngine/api/CameraStackService#GetCameraStack","content":"&lt;/&gt; CameraStackService.GetCameraStack(self: CameraStackService) → CameraStack Gets the global camera stack for this service  ","version":null,"tagName":"h3"},{"title":"Remove​","type":1,"pageTitle":"CameraStackService","url":"/NevermoreEngine/api/CameraStackService#Remove","content":"&lt;/&gt; CameraStackService.Remove( self: CameraStackService, state: CameraState ) → () Removes the state from the stack  ","version":null,"tagName":"h3"},{"title":"Add​","type":1,"pageTitle":"CameraStackService","url":"/NevermoreEngine/api/CameraStackService#Add","content":"&lt;/&gt; CameraStackService.Add( self: CameraStackService, state: CameraState ) → () → ()-- Cleanup function Adds the state from the stack ","version":null,"tagName":"h3"},{"title":"CameraState","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CameraState","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"CameraState","url":"/NevermoreEngine/api/CameraState#properties","content":" ","version":null,"tagName":"h2"},{"title":"cframe​","type":1,"pageTitle":"CameraState","url":"/NevermoreEngine/api/CameraState#cframe","content":"&lt;/&gt; CameraState.cframe: CFrame   ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"CameraState","url":"/NevermoreEngine/api/CameraState#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"CameraState","url":"/NevermoreEngine/api/CameraState#new","content":"&lt;/&gt; CameraState.new( cameraFrame: (CameraFrame | Camera )?, cameraFrameDerivative: CameraFrame? ) → CameraState Constructs a new CameraState  ","version":null,"tagName":"h3"},{"title":"isCameraState​","type":1,"pageTitle":"CameraState","url":"/NevermoreEngine/api/CameraState#isCameraState","content":"&lt;/&gt; CameraState.isCameraState(value: any) → boolean Returns true if the result is a camera state  ","version":null,"tagName":"h3"},{"title":"Set​","type":1,"pageTitle":"CameraState","url":"/NevermoreEngine/api/CameraState#Set","content":"&lt;/&gt; CameraState.Set( self: CameraState, camera: Camera -- A CameraState to set, also accepts a Roblox Camera ) → () Set another camera state. Typically used to set Workspace.CurrentCamera's state to match this camera's state ","version":null,"tagName":"h3"},{"title":"CameraStateTweener","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CameraStateTweener","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CameraStateTweener","url":"/NevermoreEngine/api/CameraStateTweener#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"CameraStateTweener","url":"/NevermoreEngine/api/CameraStateTweener#new","content":"&lt;/&gt; CameraStateTweener.new( serviceBagOrCameraStack: ServiceBag | CameraStack,-- Service bag to find the CameraStackService in cameraEffect: CameraLike,-- A camera effect speed: number?-- Speed that the camera tweener tweens at. Defaults to 20 ) → CameraStateTweener Constructs a new camera state tweener  ","version":null,"tagName":"h3"},{"title":"GetPercentVisible​","type":1,"pageTitle":"CameraStateTweener","url":"/NevermoreEngine/api/CameraStateTweener#GetPercentVisible","content":"&lt;/&gt; CameraStateTweener.GetPercentVisible(self: CameraStateTweener) → number Returns percent visible, from 0 to 1.  ","version":null,"tagName":"h3"},{"title":"Show​","type":1,"pageTitle":"CameraStateTweener","url":"/NevermoreEngine/api/CameraStateTweener#Show","content":"&lt;/&gt; CameraStateTweener.Show( self: CameraStateTweener, doNotAnimate?: boolean-- Optional, defaults to animating ) → () Shows the camera to fade in.  ","version":null,"tagName":"h3"},{"title":"Hide​","type":1,"pageTitle":"CameraStateTweener","url":"/NevermoreEngine/api/CameraStateTweener#Hide","content":"&lt;/&gt; CameraStateTweener.Hide( self: CameraStateTweener, doNotAnimate?: boolean-- Optional, defaults to animating ) → () Hides the camera to fade in.  ","version":null,"tagName":"h3"},{"title":"IsFinishedHiding​","type":1,"pageTitle":"CameraStateTweener","url":"/NevermoreEngine/api/CameraStateTweener#IsFinishedHiding","content":"&lt;/&gt; CameraStateTweener.IsFinishedHiding(self: CameraStateTweener) → boolean Returns true if we're done hiding  ","version":null,"tagName":"h3"},{"title":"IsFinishedShowing​","type":1,"pageTitle":"CameraStateTweener","url":"/NevermoreEngine/api/CameraStateTweener#IsFinishedShowing","content":"&lt;/&gt; CameraStateTweener.IsFinishedShowing(self: CameraStateTweener) → boolean Returns true if we're done showing  ","version":null,"tagName":"h3"},{"title":"Finish​","type":1,"pageTitle":"CameraStateTweener","url":"/NevermoreEngine/api/CameraStateTweener#Finish","content":"&lt;/&gt; CameraStateTweener.Finish( self: CameraStateTweener, doNotAnimate: boolean?,-- Optional, defaults to animating callback: function ) → () Hides the tweener, and invokes the callback once the tweener is finished hiding.  ","version":null,"tagName":"h3"},{"title":"GetCameraEffect​","type":1,"pageTitle":"CameraStateTweener","url":"/NevermoreEngine/api/CameraStateTweener#GetCameraEffect","content":"&lt;/&gt; CameraStateTweener.GetCameraEffect(self: CameraStateTweener) → CameraEffect Gets the current effect we're tweening  ","version":null,"tagName":"h3"},{"title":"GetCameraBelow​","type":1,"pageTitle":"CameraStateTweener","url":"/NevermoreEngine/api/CameraStateTweener#GetCameraBelow","content":"&lt;/&gt; CameraStateTweener.GetCameraBelow(self: CameraStateTweener) → CameraEffect Gets the camera below this camera on the camera stack  ","version":null,"tagName":"h3"},{"title":"SetTarget​","type":1,"pageTitle":"CameraStateTweener","url":"/NevermoreEngine/api/CameraStateTweener#SetTarget","content":"&lt;/&gt; CameraStateTweener.SetTarget( self: CameraStateTweener, target: number, doNotAnimate: boolean?-- Optional, defaults to animating ) → CameraStateTweener-- self Sets the percent visible target  ","version":null,"tagName":"h3"},{"title":"SetSpeed​","type":1,"pageTitle":"CameraStateTweener","url":"/NevermoreEngine/api/CameraStateTweener#SetSpeed","content":"&lt;/&gt; CameraStateTweener.SetSpeed( self: CameraStateTweener, speed: number ) → CameraStateTweener-- self Sets the speed of transition  ","version":null,"tagName":"h3"},{"title":"SetVisible​","type":1,"pageTitle":"CameraStateTweener","url":"/NevermoreEngine/api/CameraStateTweener#SetVisible","content":"&lt;/&gt; CameraStateTweener.SetVisible( self: CameraStateTweener, isVisible: boolean, doNotAnimate: boolean?-- Optional, defaults to animating ) → () Sets whether the tweener is visible  ","version":null,"tagName":"h3"},{"title":"GetFader​","type":1,"pageTitle":"CameraStateTweener","url":"/NevermoreEngine/api/CameraStateTweener#GetFader","content":"&lt;/&gt; CameraStateTweener.GetFader(self: CameraStateTweener) → CameraEffect Retrieves the fading camera being used to interpolate. ","version":null,"tagName":"h3"},{"title":"CameraStoryUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CameraStoryUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CameraStoryUtils","url":"/NevermoreEngine/api/CameraStoryUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"reflectCamera​","type":1,"pageTitle":"CameraStoryUtils","url":"/NevermoreEngine/api/CameraStoryUtils#reflectCamera","content":"&lt;/&gt; CameraStoryUtils.reflectCamera( maid: Maid, topCamera: Camera ) → Camera  Reflects the camera state to the original camera  ","version":null,"tagName":"h3"},{"title":"setupViewportFrame​","type":1,"pageTitle":"CameraStoryUtils","url":"/NevermoreEngine/api/CameraStoryUtils#setupViewportFrame","content":"&lt;/&gt; CameraStoryUtils.setupViewportFrame( maid: Maid, target: GuiBase ) → ViewportFrame  Sets up a viewport frame  ","version":null,"tagName":"h3"},{"title":"promiseCrate​","type":1,"pageTitle":"CameraStoryUtils","url":"/NevermoreEngine/api/CameraStoryUtils#promiseCrate","content":"&lt;/&gt; CameraStoryUtils.promiseCrate( maid: Maid, viewportFrame: ViewportFrame , properties: {[string]}: any} ) → Promise&lt;Instance &gt; REturns a promise that resolves to a crate in front of the camera.  ","version":null,"tagName":"h3"},{"title":"getInterpolationFactory​","type":1,"pageTitle":"CameraStoryUtils","url":"/NevermoreEngine/api/CameraStoryUtils#getInterpolationFactory","content":"&lt;/&gt; CameraStoryUtils.getInterpolationFactory( maid: Maid, viewportFrame: ViewportFrame , low: number, high: number, period: number, toCFrame: CFrame ) → ( interpolate: function, color: Color3 , label: string?, labelOffset: Vector2? ) → () Retrieves the interpolation ","version":null,"tagName":"h3"},{"title":"CameraSubjectUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CameraSubjectUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CameraSubjectUtils","url":"/NevermoreEngine/api/CameraSubjectUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getRobloxCameraSubjectCFrame​","type":1,"pageTitle":"CameraSubjectUtils","url":"/NevermoreEngine/api/CameraSubjectUtils#getRobloxCameraSubjectCFrame","content":"&lt;/&gt; CameraSubjectUtils.getRobloxCameraSubjectCFrame(cameraSubject: Instance ) → CFrame?  Follows the same logic as Roblox's default camera ","version":null,"tagName":"h3"},{"title":"CameraTouchInputUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CameraTouchInputUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CameraTouchInputUtils","url":"/NevermoreEngine/api/CameraTouchInputUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"adjustTouchSensitivity​","type":1,"pageTitle":"CameraTouchInputUtils","url":"/NevermoreEngine/api/CameraTouchInputUtils#adjustTouchSensitivity","content":"&lt;/&gt; CameraTouchInputUtils.adjustTouchSensitivity( currPitchAngle: number, sensitivity: Vector2 , delta: Vector2 ) → Vector2  Adjusts the camera Y touch Sensitivity when moving away from the center and in the TOUCH_SENSITIVTY_ADJUST_AREA Straight from Roblox's code ","version":null,"tagName":"h3"},{"title":"cancellableDelay","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/cancellableDelay","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"cancellableDelay","url":"/NevermoreEngine/api/cancellableDelay#functions","content":" ","version":null,"tagName":"h2"},{"title":"cancellableDelay​","type":1,"pageTitle":"cancellableDelay","url":"/NevermoreEngine/api/cancellableDelay#cancellableDelay","content":"&lt;/&gt; cancellableDelay.cancellableDelay( timeoutInSeconds: number, func: function, ...: any-- Args to pass into the function ) → function?-- Can be used to cancel  ","version":null,"tagName":"h3"},{"title":"CameraUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CameraUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CameraUtils","url":"/NevermoreEngine/api/CameraUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getCubeoidDiameter​","type":1,"pageTitle":"CameraUtils","url":"/NevermoreEngine/api/CameraUtils#getCubeoidDiameter","content":"&lt;/&gt; CameraUtils.getCubeoidDiameter(size: Vector3 ) → number Computes the diameter of a cubeid  ","version":null,"tagName":"h3"},{"title":"fitBoundingBoxToCamera​","type":1,"pageTitle":"CameraUtils","url":"/NevermoreEngine/api/CameraUtils#fitBoundingBoxToCamera","content":"&lt;/&gt; CameraUtils.fitBoundingBoxToCamera( size: Vector3 ,-- Size of the bounding box fovDeg: number,-- Field of view in degrees (vertical) aspectRatio: number-- Aspect ratio of the screen ) → number-- Distance to move the camera back from the bounding box Use spherical bounding box to calculate how far back to move a camera See: https://community.khronos.org/t/zoom-to-fit-screen/59857/12  ","version":null,"tagName":"h3"},{"title":"fitSphereToCamera​","type":1,"pageTitle":"CameraUtils","url":"/NevermoreEngine/api/CameraUtils#fitSphereToCamera","content":"&lt;/&gt; CameraUtils.fitSphereToCamera( radius: number,-- Radius of the sphere fovDeg: number,-- Field of view in degrees (vertical) aspectRatio: number-- Aspect ratio of the screen ) → number-- Distance to move the camera back from the bounding box Fits a sphere to the camera, computing how far back to zoom the camera from the center of the sphere.  ","version":null,"tagName":"h3"},{"title":"isOnScreen​","type":1,"pageTitle":"CameraUtils","url":"/NevermoreEngine/api/CameraUtils#isOnScreen","content":"&lt;/&gt; CameraUtils.isOnScreen( camera: Camera , position: Vector3 ) → boolean Checks if a position is on screen on a camera ","version":null,"tagName":"h3"},{"title":"CancelToken","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CancelToken","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CancelToken","url":"/NevermoreEngine/api/CancelToken#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"CancelToken","url":"/NevermoreEngine/api/CancelToken#new","content":"&lt;/&gt; CancelToken.new(executor: (cancel: () → ()) → ()) → CancelToken Constructs a new CancelToken  ","version":null,"tagName":"h3"},{"title":"isCancelToken​","type":1,"pageTitle":"CancelToken","url":"/NevermoreEngine/api/CancelToken#isCancelToken","content":"&lt;/&gt; CancelToken.isCancelToken(value: any) → boolean Returns true if the value is a cancel token  ","version":null,"tagName":"h3"},{"title":"fromMaid​","type":1,"pageTitle":"CancelToken","url":"/NevermoreEngine/api/CancelToken#fromMaid","content":"&lt;/&gt; CancelToken.fromMaid(maid: Maid) → CancelToken Constructs a new CancelToken that cancels whenever the maid does.  ","version":null,"tagName":"h3"},{"title":"fromSeconds​","type":1,"pageTitle":"CancelToken","url":"/NevermoreEngine/api/CancelToken#fromSeconds","content":"&lt;/&gt; CancelToken.fromSeconds(seconds: number) → CancelToken Cancels after the set amount of seconds  ","version":null,"tagName":"h3"},{"title":"ErrorIfCancelled​","type":1,"pageTitle":"CancelToken","url":"/NevermoreEngine/api/CancelToken#ErrorIfCancelled","content":"&lt;/&gt; CancelToken.ErrorIfCancelled(self: CancelToken) → () Errors if cancelled  ","version":null,"tagName":"h3"},{"title":"IsCancelled​","type":1,"pageTitle":"CancelToken","url":"/NevermoreEngine/api/CancelToken#IsCancelled","content":"&lt;/&gt; CancelToken.IsCancelled(self: CancelToken) → boolean Returns true if cancelled ","version":null,"tagName":"h3"},{"title":"CatalogSearchServiceCache","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CatalogSearchServiceCache","content":"CatalogSearchServiceCache","keywords":"","version":null},{"title":"CFrameSerializer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CFrameSerializer","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CFrameSerializer","url":"/NevermoreEngine/api/CFrameSerializer#functions","content":" ","version":null,"tagName":"h2"},{"title":"outputRotationAzure​","type":1,"pageTitle":"CFrameSerializer","url":"/NevermoreEngine/api/CFrameSerializer#outputRotationAzure","content":"&lt;/&gt; CFrameSerializer.outputRotationAzure(cf: CFrame ) → { number, number, number, number, number, number } Outputs the rotation  ","version":null,"tagName":"h3"},{"title":"toJSONString​","type":1,"pageTitle":"CFrameSerializer","url":"/NevermoreEngine/api/CFrameSerializer#toJSONString","content":"&lt;/&gt; CFrameSerializer.toJSONString(cf: CFrame ) → string Encodes a CFrame into JSON for serialization in attributes.  ","version":null,"tagName":"h3"},{"title":"isRotationAzure​","type":1,"pageTitle":"CFrameSerializer","url":"/NevermoreEngine/api/CFrameSerializer#isRotationAzure","content":"&lt;/&gt; CFrameSerializer.isRotationAzure(data: any) → boolean Returnst true if it's a table encoded cframe  ","version":null,"tagName":"h3"},{"title":"fromJSONString​","type":1,"pageTitle":"CFrameSerializer","url":"/NevermoreEngine/api/CFrameSerializer#fromJSONString","content":"&lt;/&gt; CFrameSerializer.fromJSONString(str: string) → CFrame  Decodes a CFrame from JSON. For serialization in attributes.  ","version":null,"tagName":"h3"},{"title":"readPosition​","type":1,"pageTitle":"CFrameSerializer","url":"/NevermoreEngine/api/CFrameSerializer#readPosition","content":"&lt;/&gt; CFrameSerializer.readPosition(data: { number, number, number, number, number, number }) → Vector3  Returns the position  ","version":null,"tagName":"h3"},{"title":"readRotationAzure​","type":1,"pageTitle":"CFrameSerializer","url":"/NevermoreEngine/api/CFrameSerializer#readRotationAzure","content":"&lt;/&gt; CFrameSerializer.readRotationAzure(data: { number, number, number, number, number, number }) → CFrame  Returns the CFrame ","version":null,"tagName":"h3"},{"title":"CharacterPromiseUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CharacterPromiseUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CharacterPromiseUtils","url":"/NevermoreEngine/api/CharacterPromiseUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseCharacter​","type":1,"pageTitle":"CharacterPromiseUtils","url":"/NevermoreEngine/api/CharacterPromiseUtils#promiseCharacter","content":"&lt;/&gt; CharacterPromiseUtils.promiseCharacter(player: Player ) → Promise&lt;Model &gt; Returns a promise that will resolve once a character exists. ","version":null,"tagName":"h3"},{"title":"CFrameUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CFrameUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CFrameUtils","url":"/NevermoreEngine/api/CFrameUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"lookAt​","type":1,"pageTitle":"CFrameUtils","url":"/NevermoreEngine/api/CFrameUtils#lookAt","content":"&lt;/&gt; CFrameUtils.lookAt( position: Vector3 , target: Vector3 , upVector: Vector3? -- Optional, defaults to (0, 1, 0) ) → CFrame  Makes a CFrame look at a position and target with bias towards the upVector. -- orient a hypothetical gun such that it's relative to the root part's upVector local gunCFrame = CFrameUtils.lookAt(gunPos, gunTarget, rootPart.CFrame.upVector)   ","version":null,"tagName":"h3"},{"title":"cframeFromTo​","type":1,"pageTitle":"CFrameUtils","url":"/NevermoreEngine/api/CFrameUtils#cframeFromTo","content":"&lt;/&gt; CFrameUtils.cframeFromTo( a: Vector3 , b: Vector3 ) → CFrame  Constructs a CFrame from a to b  ","version":null,"tagName":"h3"},{"title":"redirectLocalAxis​","type":1,"pageTitle":"CFrameUtils","url":"/NevermoreEngine/api/CFrameUtils#redirectLocalAxis","content":"&lt;/&gt; CFrameUtils.redirectLocalAxis( cframe: CFrame , localAxis: Vector3 , worldGoal: Vector3 ) → CFrame  Returns a CFrame which is minimally rotated from cframe such that the following condition is true: returnedCFrame:VectorToWorldSpace(localAxis) = worldGoal -- Redirects an axis from world space up, to a spawn block's up vector -- so we could spawn something there. cframe = CFrameUtils.redirectLocalAxis(cframe, Vector3.new(0, 1, 0), spawnBlock.CFrame.upVector) TIP This returns cframe in the scenario where the localAxis is already oriented in exactly the direction as the other option (i.e. it's ambiguous)  ","version":null,"tagName":"h3"},{"title":"axisAngleToCFrame​","type":1,"pageTitle":"CFrameUtils","url":"/NevermoreEngine/api/CFrameUtils#axisAngleToCFrame","content":"&lt;/&gt; CFrameUtils.axisAngleToCFrame( axisAngle: Vector3 , position: Vector3 | nil ) → CFrame  Returns a CFrame from an axis angle, handling NaN values  ","version":null,"tagName":"h3"},{"title":"fromUpRight​","type":1,"pageTitle":"CFrameUtils","url":"/NevermoreEngine/api/CFrameUtils#fromUpRight","content":"&lt;/&gt; CFrameUtils.fromUpRight( position: Vector3 , upVector: Vector3 , rightVector: Vector3 ) → CFrame?  Constructs a CFrame from a position, upVector, and rightVector even if these upVector and rightVectors are not orthogonal to each other. NOTE upVector and rightVector do not need to be orthogonal. However, if they are parallel, this function returns nil. Always check to ensure that the value returned is reasonable before continuing.  ","version":null,"tagName":"h3"},{"title":"scalePosition​","type":1,"pageTitle":"CFrameUtils","url":"/NevermoreEngine/api/CFrameUtils#scalePosition","content":"&lt;/&gt; CFrameUtils.scalePosition( cframe: CFrame , scale: number ) → CFrame  Scales just the positional part of a CFrame.  ","version":null,"tagName":"h3"},{"title":"mirror​","type":1,"pageTitle":"CFrameUtils","url":"/NevermoreEngine/api/CFrameUtils#mirror","content":"&lt;/&gt; CFrameUtils.mirror( cframe: CFrame , point: Vector3? , normal: Vector3? ) → CFrame  Reflects the CFrame over the given axis  ","version":null,"tagName":"h3"},{"title":"areClose​","type":1,"pageTitle":"CFrameUtils","url":"/NevermoreEngine/api/CFrameUtils#areClose","content":"&lt;/&gt; CFrameUtils.areClose( a: CFrame , b: CFrame , epsilon: number ) → boolean Fuzzy comparison between 2 CFrames ","version":null,"tagName":"h3"},{"title":"CharacterUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CharacterUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CharacterUtils","url":"/NevermoreEngine/api/CharacterUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getPlayerHumanoid​","type":1,"pageTitle":"CharacterUtils","url":"/NevermoreEngine/api/CharacterUtils#getPlayerHumanoid","content":"&lt;/&gt; CharacterUtils.getPlayerHumanoid(player: Player ) → Humanoid? -- Nil if not found Gets a player's humanoid, if it exists  ","version":null,"tagName":"h3"},{"title":"getAlivePlayerHumanoid​","type":1,"pageTitle":"CharacterUtils","url":"/NevermoreEngine/api/CharacterUtils#getAlivePlayerHumanoid","content":"&lt;/&gt; CharacterUtils.getAlivePlayerHumanoid(player: Player ) → Humanoid? -- Nil if not found Gets a player's humanoid, and ensures it is alive, otherwise returns nil  ","version":null,"tagName":"h3"},{"title":"getAlivePlayerRootPart​","type":1,"pageTitle":"CharacterUtils","url":"/NevermoreEngine/api/CharacterUtils#getAlivePlayerRootPart","content":"&lt;/&gt; CharacterUtils.getAlivePlayerRootPart(player: Player ) → BasePart? -- Nil if not found Gets a player's humanoid's rootPart, and ensures the humanoid is alive, otherwise returns nil  ","version":null,"tagName":"h3"},{"title":"getPlayerRootPart​","type":1,"pageTitle":"CharacterUtils","url":"/NevermoreEngine/api/CharacterUtils#getPlayerRootPart","content":"&lt;/&gt; CharacterUtils.getPlayerRootPart(player: Player ) → BasePart? -- Nil if not found Gets a player's humanoid's rootPart otherwise returns nil  ","version":null,"tagName":"h3"},{"title":"unequipTools​","type":1,"pageTitle":"CharacterUtils","url":"/NevermoreEngine/api/CharacterUtils#unequipTools","content":"&lt;/&gt; CharacterUtils.unequipTools(player: Player ) → () Unequips all tools for a give player's humanomid, if the humanoid exists local Players = game:GetService(&quot;Players&quot;) for _, player in Players:GetPlayers() do CharacterUtils.unequipTools(player) end   ","version":null,"tagName":"h3"},{"title":"getPlayerFromCharacter​","type":1,"pageTitle":"CharacterUtils","url":"/NevermoreEngine/api/CharacterUtils#getPlayerFromCharacter","content":"&lt;/&gt; CharacterUtils.getPlayerFromCharacter( descendant: Instance -- A child of the potential character. ) → Player? -- Nil if not found Returns the player that a descendent is part of, if it is part of one. script.Parent.Touched:Connect(function(inst) local player = CharacterUtils.getPlayerFromCharacter(inst) if player then -- activate button! end end) TIP This method is useful in a ton of different situations. For example, you can use it on classes bound to a humanoid, to determine the player. You can also use it to determine, upon touched events, if a part is part of a character. ","version":null,"tagName":"h3"},{"title":"ChatProviderCommandService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ChatProviderCommandService","content":"ChatProviderCommandService","keywords":"","version":null},{"title":"ChatProviderCommandServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ChatProviderCommandServiceClient","content":"ChatProviderCommandServiceClient","keywords":"","version":null},{"title":"ChatProviderService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ChatProviderService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ChatProviderService","url":"/NevermoreEngine/api/ChatProviderService#functions","content":" ","version":null,"tagName":"h2"},{"title":"SetDeveloperTag​","type":1,"pageTitle":"ChatProviderService","url":"/NevermoreEngine/api/ChatProviderService#SetDeveloperTag","content":"&lt;/&gt; ChatProviderService:SetDeveloperTag(chatTagData: ChatTagData?) → Maid Sets the developer chat tag  ","version":null,"tagName":"h3"},{"title":"SetAdminTag​","type":1,"pageTitle":"ChatProviderService","url":"/NevermoreEngine/api/ChatProviderService#SetAdminTag","content":"&lt;/&gt; ChatProviderService:SetAdminTag(chatTagData: ChatTagData?) → Maid Sets the admin tag to the game  ","version":null,"tagName":"h3"},{"title":"PromiseAddChatTag​","type":1,"pageTitle":"ChatProviderService","url":"/NevermoreEngine/api/ChatProviderService#PromiseAddChatTag","content":"&lt;/&gt; ChatProviderService:PromiseAddChatTag( player: Player , chatTagData: ChatTagData ) → Promise&lt;Instance &gt; Promises to add a chat tag to the player  ","version":null,"tagName":"h3"},{"title":"ClearChatTags​","type":1,"pageTitle":"ChatProviderService","url":"/NevermoreEngine/api/ChatProviderService#ClearChatTags","content":"&lt;/&gt; ChatProviderService:ClearChatTags(player: Player ) → () Clears the player's chat chatTagData.  ","version":null,"tagName":"h3"},{"title":"PromiseSetSpeakerTags​","type":1,"pageTitle":"ChatProviderService","url":"/NevermoreEngine/api/ChatProviderService#PromiseSetSpeakerTags","content":"&lt;/&gt; ChatProviderService:PromiseSetSpeakerTags( speakerName: string, chatTagDataList: {ChatTagData} ) → Promise Sets the speaker's tag (by speaker name) ","version":null,"tagName":"h3"},{"title":"ChatProviderServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ChatProviderServiceClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ChatProviderServiceClient","url":"/NevermoreEngine/api/ChatProviderServiceClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"SendSystemMessage​","type":1,"pageTitle":"ChatProviderServiceClient","url":"/NevermoreEngine/api/ChatProviderServiceClient#SendSystemMessage","content":"&lt;/&gt; ChatProviderServiceClient:SendSystemMessage( message: string, encodedMessageData: string, channel: TextChannel? ) → () Sends a system message to the provided TextChannel. ","version":null,"tagName":"h3"},{"title":"ChatTagBase","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ChatTagBase","content":"ChatTagBase","keywords":"","version":null},{"title":"ChatTag","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ChatTag","content":"ChatTag","keywords":"","version":null},{"title":"ChatTagClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ChatTagClient","content":"ChatTagClient","keywords":"","version":null},{"title":"ChatTagCmdrUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ChatTagCmdrUtils","content":"ChatTagCmdrUtils","keywords":"","version":null},{"title":"ChatTagConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ChatTagConstants","content":"ChatTagConstants","keywords":"","version":null},{"title":"ChatTagDataUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ChatTagDataUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ChatTagDataUtils","url":"/NevermoreEngine/api/ChatTagDataUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"createChatTagData​","type":1,"pageTitle":"ChatTagDataUtils","url":"/NevermoreEngine/api/ChatTagDataUtils#createChatTagData","content":"&lt;/&gt; ChatTagDataUtils.createChatTagData(data: ChatTagData) → ChatTagData Creates new chat tag data  ","version":null,"tagName":"h3"},{"title":"isChatTagDataList​","type":1,"pageTitle":"ChatTagDataUtils","url":"/NevermoreEngine/api/ChatTagDataUtils#isChatTagDataList","content":"&lt;/&gt; ChatTagDataUtils.isChatTagDataList(data: any) → ( boolean, string-- reason why ) Returns true if a valid list  ","version":null,"tagName":"h3"},{"title":"isChatTagData​","type":1,"pageTitle":"ChatTagDataUtils","url":"/NevermoreEngine/api/ChatTagDataUtils#isChatTagData","content":"&lt;/&gt; ChatTagDataUtils.isChatTagData(data: any) → boolean Returns if chat tag data ","version":null,"tagName":"h3"},{"title":"CircleUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CircleUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CircleUtils","url":"/NevermoreEngine/api/CircleUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"updatePositionToSmallestDistOnCircle​","type":1,"pageTitle":"CircleUtils","url":"/NevermoreEngine/api/CircleUtils#updatePositionToSmallestDistOnCircle","content":"&lt;/&gt; CircleUtils.updatePositionToSmallestDistOnCircle( position: number, target: number, circumference: number ) → number https://math.stackexchange.com/questions/110080/shortest-way-to-achieve-target-angle Note: target should be within 0 and circumference ","version":null,"tagName":"h3"},{"title":"ClipCharacterConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ClipCharacterConstants","content":"ClipCharacterConstants","keywords":"","version":null},{"title":"ClipCharacters","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ClipCharacters","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ClipCharacters","url":"/NevermoreEngine/api/ClipCharacters#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"ClipCharacters","url":"/NevermoreEngine/api/ClipCharacters#new","content":"&lt;/&gt; ClipCharacters.new() → ClipCharacters Prevents characters from clipping together ","version":null,"tagName":"h3"},{"title":"ClipCharactersService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ClipCharactersService","content":"ClipCharactersService","keywords":"","version":null},{"title":"ClipCharactersServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ClipCharactersServiceClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ClipCharactersServiceClient","url":"/NevermoreEngine/api/ClipCharactersServiceClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"PushDisableCharacterCollisionsWithDefault​","type":1,"pageTitle":"ClipCharactersServiceClient","url":"/NevermoreEngine/api/ClipCharactersServiceClient#PushDisableCharacterCollisionsWithDefault","content":"&lt;/&gt; ClipCharactersServiceClient:PushDisableCharacterCollisionsWithDefault() → () Disables collisions between default geometry and other charaters which stops some random physics glitches from occuring. ","version":null,"tagName":"h3"},{"title":"CmdrExecutionTemplate","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CmdrExecutionTemplate","content":"CmdrExecutionTemplate Generic command definition template which we can use to","keywords":"","version":null},{"title":"CmdrService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CmdrService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CmdrService","url":"/NevermoreEngine/api/CmdrService#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"CmdrService","url":"/NevermoreEngine/api/CmdrService#Init","content":"&lt;/&gt; CmdrService.Init( self: CmdrService, serviceBag: ServiceBag ) → () Initializes the CmdrService. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"PromiseCmdr​","type":1,"pageTitle":"CmdrService","url":"/NevermoreEngine/api/CmdrService#PromiseCmdr","content":"&lt;/&gt; CmdrService.PromiseCmdr(self: CmdrService) → Promise&lt;Cmdr&gt; Returns cmdr  ","version":null,"tagName":"h3"},{"title":"RegisterCommand​","type":1,"pageTitle":"CmdrService","url":"/NevermoreEngine/api/CmdrService#RegisterCommand","content":"&lt;/&gt; CmdrService.RegisterCommand( self: CmdrService, commandData: table, execute: ( context: table, ...T ) ) → () Registers a command into cmdr. ","version":null,"tagName":"h3"},{"title":"CmdrServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CmdrServiceClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CmdrServiceClient","url":"/NevermoreEngine/api/CmdrServiceClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"CmdrServiceClient","url":"/NevermoreEngine/api/CmdrServiceClient#Init","content":"&lt;/&gt; CmdrServiceClient:Init(serviceBag: ServiceBag) → () Starts the cmdr service on the client. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"CmdrServiceClient","url":"/NevermoreEngine/api/CmdrServiceClient#Start","content":"&lt;/&gt; CmdrServiceClient:Start() → () Starts the service. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"PromiseCmdr​","type":1,"pageTitle":"CmdrServiceClient","url":"/NevermoreEngine/api/CmdrServiceClient#PromiseCmdr","content":"&lt;/&gt; CmdrServiceClient:PromiseCmdr() → Promise&lt;CmdrClient&gt; Retrieves the cmdr for the client. ","version":null,"tagName":"h3"},{"title":"CmdrCommandDefinitionTemplate","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CmdrCommandDefinitionTemplate","content":"CmdrCommandDefinitionTemplate Generic command definition template","keywords":"","version":null},{"title":"CmdrTemplateProviderServer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CmdrTemplateProviderServer","content":"CmdrTemplateProviderServer Retrieves CmdrTemplateProviderServer","keywords":"","version":null},{"title":"Color3SerializationUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Color3SerializationUtils","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"Color3SerializationUtils","url":"/NevermoreEngine/api/Color3SerializationUtils#types","content":" ","version":null,"tagName":"h2"},{"title":"SerializedColor3​","type":1,"pageTitle":"Color3SerializationUtils","url":"/NevermoreEngine/api/Color3SerializationUtils#SerializedColor3","content":"&lt;/&gt; type SerializedColor3 = { [1]: number, [2]: number, [3]: number }  ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Color3SerializationUtils","url":"/NevermoreEngine/api/Color3SerializationUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"serialize​","type":1,"pageTitle":"Color3SerializationUtils","url":"/NevermoreEngine/api/Color3SerializationUtils#serialize","content":"&lt;/&gt; Color3SerializationUtils.serialize(color3: Color3 ) → SerializedColor3 Serializes a Color3 into a JSON or DataStore safe value.  ","version":null,"tagName":"h3"},{"title":"isSerializedColor3​","type":1,"pageTitle":"Color3SerializationUtils","url":"/NevermoreEngine/api/Color3SerializationUtils#isSerializedColor3","content":"&lt;/&gt; Color3SerializationUtils.isSerializedColor3(color3: any) → boolean Returns whether a value is a serialized Color3  ","version":null,"tagName":"h3"},{"title":"fromRGB​","type":1,"pageTitle":"Color3SerializationUtils","url":"/NevermoreEngine/api/Color3SerializationUtils#fromRGB","content":"&lt;/&gt; Color3SerializationUtils.fromRGB( r: number, g: number, b: number ) → SerializedColor3 Creates a SerializedColor3 from r g b (0, 255)  ","version":null,"tagName":"h3"},{"title":"deserialize​","type":1,"pageTitle":"Color3SerializationUtils","url":"/NevermoreEngine/api/Color3SerializationUtils#deserialize","content":"&lt;/&gt; Color3SerializationUtils.deserialize(color3: Color3 ) → SerializedColor3 Deserializes the color into a Color3 ","version":null,"tagName":"h3"},{"title":"CollectionServiceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CollectionServiceUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CollectionServiceUtils","url":"/NevermoreEngine/api/CollectionServiceUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"findFirstAncestor​","type":1,"pageTitle":"CollectionServiceUtils","url":"/NevermoreEngine/api/CollectionServiceUtils#findFirstAncestor","content":"&lt;/&gt; CollectionServiceUtils.findFirstAncestor( tagName: string, child: Instance ) → Instance?  Finds the first ancestor with the given tagName.  ","version":null,"tagName":"h3"},{"title":"findInstanceOrFirstAncestor​","type":1,"pageTitle":"CollectionServiceUtils","url":"/NevermoreEngine/api/CollectionServiceUtils#findInstanceOrFirstAncestor","content":"&lt;/&gt; CollectionServiceUtils.findInstanceOrFirstAncestor( tagName: string, child: Instance ) → Instance?  Finds the child with the tag name, or the first ancestor with the given tagName.  ","version":null,"tagName":"h3"},{"title":"removeAllTags​","type":1,"pageTitle":"CollectionServiceUtils","url":"/NevermoreEngine/api/CollectionServiceUtils#removeAllTags","content":"&lt;/&gt; CollectionServiceUtils.removeAllTags(instance: Instance ) → () Removes all tags from an instance. ","version":null,"tagName":"h3"},{"title":"ColorGradePalette","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ColorGradePalette","content":"ColorGradePalette","keywords":"","version":null},{"title":"Color3Utils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Color3Utils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Color3Utils","url":"/NevermoreEngine/api/Color3Utils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getRelativeLuminance​","type":1,"pageTitle":"Color3Utils","url":"/NevermoreEngine/api/Color3Utils#getRelativeLuminance","content":"&lt;/&gt; Color3Utils.getRelativeLuminance( color: Color3 -- The Color3 to check ) → number-- A scalar from 0 to 1 with 0 as the darkest dark, and 1 as the whitest white Luminance as per W3 per sRGB colorspace normalized with 0 as the darkest dark, and 1 as the whitest white. See https://www.w3.org/TR/WCAG20/#relativeluminancedef  ","version":null,"tagName":"h3"},{"title":"textShouldBeBlack​","type":1,"pageTitle":"Color3Utils","url":"/NevermoreEngine/api/Color3Utils#textShouldBeBlack","content":"&lt;/&gt; Color3Utils.textShouldBeBlack( color: Color3 -- The Color3 to check ) → boolean-- True if the text should be black, false if it should be good Returns whether or not the text should be black using relative luminance as a metric. See https://stackoverflow.com/questions/3942878/  ","version":null,"tagName":"h3"},{"title":"scaleValue​","type":1,"pageTitle":"Color3Utils","url":"/NevermoreEngine/api/Color3Utils#scaleValue","content":"&lt;/&gt; Color3Utils.scaleValue( color3: Color3 , percent: number-- Percent scaling ) → Color3  Scales the value component of hsv  ","version":null,"tagName":"h3"},{"title":"setValue​","type":1,"pageTitle":"Color3Utils","url":"/NevermoreEngine/api/Color3Utils#setValue","content":"&lt;/&gt; Color3Utils.setValue( color3: Color3 , value: number ) → Color3  Sets the value component of hsv  ","version":null,"tagName":"h3"},{"title":"setHue​","type":1,"pageTitle":"Color3Utils","url":"/NevermoreEngine/api/Color3Utils#setHue","content":"&lt;/&gt; Color3Utils.setHue( color3: Color3 , hue: number ) → Color3  Sets the hue component of hsv  ","version":null,"tagName":"h3"},{"title":"scaleSaturation​","type":1,"pageTitle":"Color3Utils","url":"/NevermoreEngine/api/Color3Utils#scaleSaturation","content":"&lt;/&gt; Color3Utils.scaleSaturation( color3: Color3 , percent: number-- Percent scaling ) → Color3  Scales the saturation component of hsv  ","version":null,"tagName":"h3"},{"title":"setSaturation​","type":1,"pageTitle":"Color3Utils","url":"/NevermoreEngine/api/Color3Utils#setSaturation","content":"&lt;/&gt; Color3Utils.setSaturation( color3: Color3 , saturation: number ) → Color3  Sets the saturation component of hsv  ","version":null,"tagName":"h3"},{"title":"areEqual​","type":1,"pageTitle":"Color3Utils","url":"/NevermoreEngine/api/Color3Utils#areEqual","content":"&lt;/&gt; Color3Utils.areEqual( a: Color3 , b: Color3 , epsilon: number?-- Optional ) → boolean Compares 2 color3 values  ","version":null,"tagName":"h3"},{"title":"toHexInteger​","type":1,"pageTitle":"Color3Utils","url":"/NevermoreEngine/api/Color3Utils#toHexInteger","content":"&lt;/&gt; Color3Utils.toHexInteger(color3: Color3 ) → number Converts the color3 to the actual hex integer used in web and other areas.  ","version":null,"tagName":"h3"},{"title":"toHexString​","type":1,"pageTitle":"Color3Utils","url":"/NevermoreEngine/api/Color3Utils#toHexString","content":"&lt;/&gt; Color3Utils.toHexString(color3: Color3 ) → number Converts the color3 to the actual hex integer used in web and other areas. Color3Utils.toHexString(Color3.fromRGB(0, 255, 0)) --&gt; 00FF00   ","version":null,"tagName":"h3"},{"title":"toWebHexString​","type":1,"pageTitle":"Color3Utils","url":"/NevermoreEngine/api/Color3Utils#toWebHexString","content":"&lt;/&gt; Color3Utils.toWebHexString(color3: Color3 ) → number Converts the color3 to the standard web hex string Color3Utils.toWebHexString(Color3.fromRGB(0, 255, 0)) --&gt; #00FF00  ","version":null,"tagName":"h3"},{"title":"ColorPickerCursorPreview","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ColorPickerCursorPreview","content":"ColorPickerCursorPreview Cursor preview for mobile input especially","keywords":"","version":null},{"title":"ColorGradeUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ColorGradeUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ColorGradeUtils","url":"/NevermoreEngine/api/ColorGradeUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"addGrade​","type":1,"pageTitle":"ColorGradeUtils","url":"/NevermoreEngine/api/ColorGradeUtils#addGrade","content":"&lt;/&gt; ColorGradeUtils.addGrade( grade: number, difference: number ) → number Adds to the grade and picks the direction to ensure the best amount of contrast. May consider using ColorGradeUtils.ensureGradeContrast for a more background aware contrast picker.  ","version":null,"tagName":"h3"},{"title":"ensureGradeContrast​","type":1,"pageTitle":"ColorGradeUtils","url":"/NevermoreEngine/api/ColorGradeUtils#ensureGradeContrast","content":"&lt;/&gt; ColorGradeUtils.ensureGradeContrast( color: Color3 , backing: Color3 , amount: number-- Between 0 and 100 ) → Color3  Ensures the given contrast between the color and the backing, with an adjustment to saturation to keep the UI loking good  ","version":null,"tagName":"h3"},{"title":"getGrade​","type":1,"pageTitle":"ColorGradeUtils","url":"/NevermoreEngine/api/ColorGradeUtils#getGrade","content":"&lt;/&gt; ColorGradeUtils.getGrade(color: Color3 ) → number Gets the grade for a given color  ","version":null,"tagName":"h3"},{"title":"getGradedColor​","type":1,"pageTitle":"ColorGradeUtils","url":"/NevermoreEngine/api/ColorGradeUtils#getGradedColor","content":"&lt;/&gt; ColorGradeUtils.getGradedColor( baseColor: Color3 , colorGrade: number,-- 0 to 100 vividness: number? ) → Color3  Converts a color into a graded version of that color. ","version":null,"tagName":"h3"},{"title":"ColorPickerStoryUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ColorPickerStoryUtils","content":"ColorPickerStoryUtils","keywords":"","version":null},{"title":"ColorPalette","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ColorPalette","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ColorPalette","url":"/NevermoreEngine/api/ColorPalette#functions","content":" ","version":null,"tagName":"h2"},{"title":"SetColor​","type":1,"pageTitle":"ColorPalette","url":"/NevermoreEngine/api/ColorPalette#SetColor","content":"&lt;/&gt; ColorPalette.SetColor( self: ColorPalette, colorName: string, color: Observable&lt;Color3 &gt; | Color3 ) → ()  ","version":null,"tagName":"h3"},{"title":"ColorPickerTriangle","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ColorPickerTriangle","content":"ColorPickerTriangle Color picker triangle","keywords":"","version":null},{"title":"ColorPickerUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ColorPickerUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ColorPickerUtils","url":"/NevermoreEngine/api/ColorPickerUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getOutlineWithContrast​","type":1,"pageTitle":"ColorPickerUtils","url":"/NevermoreEngine/api/ColorPickerUtils#getOutlineWithContrast","content":"&lt;/&gt; ColorPickerUtils.getOutlineWithContrast( color: Color3 , backingColor: Color3 ) → Color3  Gets the outline with a guaranteed contrast ","version":null,"tagName":"h3"},{"title":"ColorSwatch","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ColorSwatch","content":"ColorSwatch Provides variants of a given color. In painting a swatch contains different shades of the same color. The same idea is here, except we can provide many variants of a color, with different vividness and brightness grades.","keywords":"","version":null},{"title":"ColorSequenceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ColorSequenceUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ColorSequenceUtils","url":"/NevermoreEngine/api/ColorSequenceUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getColor​","type":1,"pageTitle":"ColorSequenceUtils","url":"/NevermoreEngine/api/ColorSequenceUtils#getColor","content":"&lt;/&gt; ColorSequenceUtils.getColor( colorSequence: ColorSequence , t: number ) → Color3  Gets the current color for the color sequence at the given timestamp.  ","version":null,"tagName":"h3"},{"title":"stripe​","type":1,"pageTitle":"ColorSequenceUtils","url":"/NevermoreEngine/api/ColorSequenceUtils#stripe","content":"&lt;/&gt; ColorSequenceUtils.stripe( stripes: number, backgroundColor3: Color3 , stripeColor3: Color3 , percentStripeThickness: number, percentOffset: number ) → ColorSequence  Makes stripes for color sequences. ","version":null,"tagName":"h3"},{"title":"ContentProviderUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ContentProviderUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ContentProviderUtils","url":"/NevermoreEngine/api/ContentProviderUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promisePreload​","type":1,"pageTitle":"ContentProviderUtils","url":"/NevermoreEngine/api/ContentProviderUtils#promisePreload","content":"&lt;/&gt; ContentProviderUtils.promisePreload(contentIdList: {Instance | string}) → Promise Preloads assets NOTE If strings are passed in, it only preloads textures, and will preload meshes, but only to http client. ","version":null,"tagName":"h3"},{"title":"CompiledBoundingBoxUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CompiledBoundingBoxUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CompiledBoundingBoxUtils","url":"/NevermoreEngine/api/CompiledBoundingBoxUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"compileBBox​","type":1,"pageTitle":"CompiledBoundingBoxUtils","url":"/NevermoreEngine/api/CompiledBoundingBoxUtils#compileBBox","content":"&lt;/&gt; CompiledBoundingBoxUtils.compileBBox( cframe: CFrame , size: Vector3 ) → CFrame  Compiles a bounding box into a CFrame rotation matrix for easy usage.  ","version":null,"tagName":"h3"},{"title":"testPointBBox​","type":1,"pageTitle":"CompiledBoundingBoxUtils","url":"/NevermoreEngine/api/CompiledBoundingBoxUtils#testPointBBox","content":"&lt;/&gt; CompiledBoundingBoxUtils.testPointBBox( point: Vector3 , bbox: CFrame ) → boolean Point-obb occupancy test ","version":null,"tagName":"h3"},{"title":"Cooldown","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Cooldown","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Cooldown","url":"/NevermoreEngine/api/Cooldown#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Cooldown","url":"/NevermoreEngine/api/Cooldown#new","content":"&lt;/&gt; Cooldown.new( numberValue: NumberValue , serviceBag: ServiceBag ) → Cooldown Constructs a new cooldown. Should be done via Binder. ","version":null,"tagName":"h3"},{"title":"ConvexHull2DUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ConvexHull2DUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ConvexHull2DUtils","url":"/NevermoreEngine/api/ConvexHull2DUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"convexHull​","type":1,"pageTitle":"ConvexHull2DUtils","url":"/NevermoreEngine/api/ConvexHull2DUtils#convexHull","content":"&lt;/&gt; ConvexHull2DUtils.convexHull(points: {Vector2 }) → {Vector2 } Computes a convex hull using the gift wrapping algorithm. https://en.wikipedia.org/wiki/Gift_wrapping_algorithm  ","version":null,"tagName":"h3"},{"title":"isClockWiseTurn​","type":1,"pageTitle":"ConvexHull2DUtils","url":"/NevermoreEngine/api/ConvexHull2DUtils#isClockWiseTurn","content":"&lt;/&gt; ConvexHull2DUtils.isClockWiseTurn( p1: Vector2 , p2: Vector2 , p3: Vector2 ) → boolean Retrns whether these 3 points are in a clockwise turn  ","version":null,"tagName":"h3"},{"title":"lineIntersect​","type":1,"pageTitle":"ConvexHull2DUtils","url":"/NevermoreEngine/api/ConvexHull2DUtils#lineIntersect","content":"&lt;/&gt; ConvexHull2DUtils.lineIntersect( a: Vector2 , b: Vector2 , c: Vector2 , d: Vector2 ) → Vector2 | nil Computes line intersection between vectors  ","version":null,"tagName":"h3"},{"title":"raycast​","type":1,"pageTitle":"ConvexHull2DUtils","url":"/NevermoreEngine/api/ConvexHull2DUtils#raycast","content":"&lt;/&gt; ConvexHull2DUtils.raycast( from: Vector2 , to: Vector2 , hull: {Vector2 } ) → ( Vector2 | nil, Vector2 | nil, Vector2 | nil ) Raycasts from from to to against the convex hull. ","version":null,"tagName":"h3"},{"title":"ConvexHull3DUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ConvexHull3DUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ConvexHull3DUtils","url":"/NevermoreEngine/api/ConvexHull3DUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"convexHull​","type":1,"pageTitle":"ConvexHull3DUtils","url":"/NevermoreEngine/api/ConvexHull3DUtils#convexHull","content":"&lt;/&gt; ConvexHull3DUtils.convexHull(points: {Vector3 }) → {Vector3 } Computes the convex hull for a given set of points https://en.wikipedia.org/wiki/Gift_wrapping_algorithm ","version":null,"tagName":"h3"},{"title":"CooldownBase","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CooldownBase","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"CooldownBase","url":"/NevermoreEngine/api/CooldownBase#properties","content":" ","version":null,"tagName":"h2"},{"title":"Done​","type":1,"pageTitle":"CooldownBase","url":"/NevermoreEngine/api/CooldownBase#Done","content":"&lt;/&gt; CooldownBase.Done: Signal&lt;()&gt; Event that fires when the cooldown is done. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"CooldownBase","url":"/NevermoreEngine/api/CooldownBase#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"CooldownBase","url":"/NevermoreEngine/api/CooldownBase#new","content":"&lt;/&gt; CooldownBase.new( numberValue: NumberValue , serviceBag: ServiceBag ) → CooldownBase Constructs a new Cooldown.  ","version":null,"tagName":"h3"},{"title":"GetObject​","type":1,"pageTitle":"CooldownBase","url":"/NevermoreEngine/api/CooldownBase#GetObject","content":"&lt;/&gt; CooldownBase.GetObject(self: CooldownBase) → Instance  Gets the Roblox instance of the cooldown.  ","version":null,"tagName":"h3"},{"title":"GetTimePassed​","type":1,"pageTitle":"CooldownBase","url":"/NevermoreEngine/api/CooldownBase#GetTimePassed","content":"&lt;/&gt; CooldownBase.GetTimePassed(self: CooldownBase) → number? Gets the time passed  ","version":null,"tagName":"h3"},{"title":"GetTimeRemaining​","type":1,"pageTitle":"CooldownBase","url":"/NevermoreEngine/api/CooldownBase#GetTimeRemaining","content":"&lt;/&gt; CooldownBase.GetTimeRemaining(self: CooldownBase) → number? Gets the time remaining  ","version":null,"tagName":"h3"},{"title":"GetEndTime​","type":1,"pageTitle":"CooldownBase","url":"/NevermoreEngine/api/CooldownBase#GetEndTime","content":"&lt;/&gt; CooldownBase.GetEndTime(self: CooldownBase) → number? Gets the syncronized time stamp the cooldown is ending at  ","version":null,"tagName":"h3"},{"title":"GetStartTime​","type":1,"pageTitle":"CooldownBase","url":"/NevermoreEngine/api/CooldownBase#GetStartTime","content":"&lt;/&gt; CooldownBase.GetStartTime(self: CooldownBase) → number? Gets the syncronized time stamp the cooldown is starting at  ","version":null,"tagName":"h3"},{"title":"GetLength​","type":1,"pageTitle":"CooldownBase","url":"/NevermoreEngine/api/CooldownBase#GetLength","content":"&lt;/&gt; CooldownBase.GetLength(self: CooldownBase) → number Gets the length of the cooldown ","version":null,"tagName":"h3"},{"title":"CooldownConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CooldownConstants","content":"CooldownConstants Holds constants for the cooldown.","keywords":"","version":null},{"title":"CooldownClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CooldownClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CooldownClient","url":"/NevermoreEngine/api/CooldownClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"CooldownClient","url":"/NevermoreEngine/api/CooldownClient#new","content":"&lt;/&gt; CooldownClient.new( numberValue: NumberValue , serviceBag: ServiceBag ) → Cooldown Constructs a new cooldown. Should be done via [CooldownBindersClient]. To create an instance of this in Roblox, see CooldownUtils.create. ","version":null,"tagName":"h3"},{"title":"CooldownModel","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CooldownModel","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CooldownModel","url":"/NevermoreEngine/api/CooldownModel#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"CooldownModel","url":"/NevermoreEngine/api/CooldownModel#new","content":"&lt;/&gt; CooldownModel.new() → CooldownModel Creates a new cooldown model  ","version":null,"tagName":"h3"},{"title":"isCooldownModel​","type":1,"pageTitle":"CooldownModel","url":"/NevermoreEngine/api/CooldownModel#isCooldownModel","content":"&lt;/&gt; CooldownModel.isCooldownModel(value: any) → boolean Returns true if the value is a CooldownModel  ","version":null,"tagName":"h3"},{"title":"SetClock​","type":1,"pageTitle":"CooldownModel","url":"/NevermoreEngine/api/CooldownModel#SetClock","content":"&lt;/&gt; CooldownModel.SetClock( self: CooldownModel, clock: Clock ) → () → () Sets the clock to use for the cooldown  ","version":null,"tagName":"h3"},{"title":"SetStartTime​","type":1,"pageTitle":"CooldownModel","url":"/NevermoreEngine/api/CooldownModel#SetStartTime","content":"&lt;/&gt; CooldownModel.SetStartTime( self: CooldownModel, startTime: number ) → () → () Sets the start time for the cooldown  ","version":null,"tagName":"h3"},{"title":"SetLength​","type":1,"pageTitle":"CooldownModel","url":"/NevermoreEngine/api/CooldownModel#SetLength","content":"&lt;/&gt; CooldownModel.SetLength( self: CooldownModel, length: number ) → () → () Sets the length of the cooldown  ","version":null,"tagName":"h3"},{"title":"GetStartTime​","type":1,"pageTitle":"CooldownModel","url":"/NevermoreEngine/api/CooldownModel#GetStartTime","content":"&lt;/&gt; CooldownModel.GetStartTime(self: CooldownModel) → number Gets the syncronized time stamp the cooldown is starting at  ","version":null,"tagName":"h3"},{"title":"GetTimeRemaining​","type":1,"pageTitle":"CooldownModel","url":"/NevermoreEngine/api/CooldownModel#GetTimeRemaining","content":"&lt;/&gt; CooldownModel.GetTimeRemaining(self: CooldownModel) → number Gets the time remaining  ","version":null,"tagName":"h3"},{"title":"GetTimePassed​","type":1,"pageTitle":"CooldownModel","url":"/NevermoreEngine/api/CooldownModel#GetTimePassed","content":"&lt;/&gt; CooldownModel.GetTimePassed(self: CooldownModel) → number Gets the time passed  ","version":null,"tagName":"h3"},{"title":"GetEndTime​","type":1,"pageTitle":"CooldownModel","url":"/NevermoreEngine/api/CooldownModel#GetEndTime","content":"&lt;/&gt; CooldownModel.GetEndTime(self: CooldownModel) → number? Gets the syncronized time stamp the cooldown is ending at  ","version":null,"tagName":"h3"},{"title":"GetLength​","type":1,"pageTitle":"CooldownModel","url":"/NevermoreEngine/api/CooldownModel#GetLength","content":"&lt;/&gt; CooldownModel.GetLength(self: CooldownModel) → number Gets the length of the cooldown ","version":null,"tagName":"h3"},{"title":"CooldownService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CooldownService","content":"CooldownService","keywords":"","version":null},{"title":"CooldownShared","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CooldownShared","content":"CooldownShared","keywords":"","version":null},{"title":"CooldownServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CooldownServiceClient","content":"CooldownServiceClient","keywords":"","version":null},{"title":"CooldownTracker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CooldownTracker","content":"CooldownTracker Tracks current cooldown on an object","keywords":"","version":null},{"title":"CooldownTrackerModel","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CooldownTrackerModel","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CooldownTrackerModel","url":"/NevermoreEngine/api/CooldownTrackerModel#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"CooldownTrackerModel","url":"/NevermoreEngine/api/CooldownTrackerModel#new","content":"&lt;/&gt; CooldownTrackerModel.new() → CooldownTrackerModel Creates a new cooldown tracker model  ","version":null,"tagName":"h3"},{"title":"ObserveActiveCooldownModelBrio​","type":1,"pageTitle":"CooldownTrackerModel","url":"/NevermoreEngine/api/CooldownTrackerModel#ObserveActiveCooldownModelBrio","content":"&lt;/&gt; CooldownTrackerModel.ObserveActiveCooldownModelBrio(self: CooldownTrackerModel) → Observable&lt;Brio&lt;CooldownModel&gt;&gt; Observes the active cooldown model, but only fires when it is not nil  ","version":null,"tagName":"h3"},{"title":"SetCooldownModel​","type":1,"pageTitle":"CooldownTrackerModel","url":"/NevermoreEngine/api/CooldownTrackerModel#SetCooldownModel","content":"&lt;/&gt; CooldownTrackerModel.SetCooldownModel( self: CooldownTrackerModel, cooldownModel: CooldownModel ) → function Sets the cooldown model. Returns a function to unmount the model. ","version":null,"tagName":"h3"},{"title":"CooldownUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CooldownUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CooldownUtils","url":"/NevermoreEngine/api/CooldownUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"create​","type":1,"pageTitle":"CooldownUtils","url":"/NevermoreEngine/api/CooldownUtils#create","content":"&lt;/&gt; CooldownUtils.create( parent: Instance , length: number ) → Instance  Creates a new Roblox instance representing a cooldown.  ","version":null,"tagName":"h3"},{"title":"findCooldown​","type":1,"pageTitle":"CooldownUtils","url":"/NevermoreEngine/api/CooldownUtils#findCooldown","content":"&lt;/&gt; CooldownUtils.findCooldown( cooldownBinder: Binder&lt;Cooldown | CooldownClient&gt;, parent: Instance ) → Cooldown? | CooldownClient? Finds a cooldown in a parent.  ","version":null,"tagName":"h3"},{"title":"clone​","type":1,"pageTitle":"CooldownUtils","url":"/NevermoreEngine/api/CooldownUtils#clone","content":"&lt;/&gt; CooldownUtils.clone(cooldown: Instance ) → Instance  Makes a copy of the cooldown ","version":null,"tagName":"h3"},{"title":"CoreGuiEnabler","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CoreGuiEnabler","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CoreGuiEnabler","url":"/NevermoreEngine/api/CoreGuiEnabler#functions","content":" ","version":null,"tagName":"h2"},{"title":"IsEnabled​","type":1,"pageTitle":"CoreGuiEnabler","url":"/NevermoreEngine/api/CoreGuiEnabler#IsEnabled","content":"&lt;/&gt; CoreGuiEnabler:IsEnabled(coreGuiState: string | CoreGuiType ) → boolean Gets the current state  ","version":null,"tagName":"h3"},{"title":"ObserveIsEnabled​","type":1,"pageTitle":"CoreGuiEnabler","url":"/NevermoreEngine/api/CoreGuiEnabler#ObserveIsEnabled","content":"&lt;/&gt; CoreGuiEnabler:ObserveIsEnabled(coreGuiState: string | CoreGuiType ) → Observable&lt;boolean&gt; Observes the state whenever it changed  ","version":null,"tagName":"h3"},{"title":"AddState​","type":1,"pageTitle":"CoreGuiEnabler","url":"/NevermoreEngine/api/CoreGuiEnabler#AddState","content":"&lt;/&gt; CoreGuiEnabler:AddState( coreGuiState: string | CoreGuiType , onChangeCallback: (isEnabled: boolean) ) → () Adds a state that can be disabled or enabled.  ","version":null,"tagName":"h3"},{"title":"Disable​","type":1,"pageTitle":"CoreGuiEnabler","url":"/NevermoreEngine/api/CoreGuiEnabler#Disable","content":"&lt;/&gt; CoreGuiEnabler:Disable( key: any, coreGuiState: string | CoreGuiType ) → function-- Callback function to re-enable the state Disables a CoreGuiState  ","version":null,"tagName":"h3"},{"title":"Enable​","type":1,"pageTitle":"CoreGuiEnabler","url":"/NevermoreEngine/api/CoreGuiEnabler#Enable","content":"&lt;/&gt; CoreGuiEnabler:Enable( key: any, coreGuiState: string | CoreGuiType ) → () Enables a state for a given key ","version":null,"tagName":"h3"},{"title":"CoreGuiUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CoreGuiUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CoreGuiUtils","url":"/NevermoreEngine/api/CoreGuiUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseRetrySetCore​","type":1,"pageTitle":"CoreGuiUtils","url":"/NevermoreEngine/api/CoreGuiUtils#promiseRetrySetCore","content":"&lt;/&gt; CoreGuiUtils.promiseRetrySetCore( tries: number, initialWaitTime: number, ...: any-- parameters to set core with ) → Promise&lt;()&gt; Retries setting the the core. This is required because sometimes the Core scripts are not initialized by the time that client code executes.  ","version":null,"tagName":"h3"},{"title":"tryToSetCore​","type":1,"pageTitle":"CoreGuiUtils","url":"/NevermoreEngine/api/CoreGuiUtils#tryToSetCore","content":"&lt;/&gt; CoreGuiUtils.tryToSetCore( ...: any-- Args to try to call SetCore with ) → ( boolean,-- false if failed string?-- error, if there was one ) Tries to invoke StarterGui:SetCore with the arguments specified ","version":null,"tagName":"h3"},{"title":"CountdownTextUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CountdownTextUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CountdownTextUtils","url":"/NevermoreEngine/api/CountdownTextUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"formatCountdown​","type":1,"pageTitle":"CountdownTextUtils","url":"/NevermoreEngine/api/CountdownTextUtils#formatCountdown","content":"&lt;/&gt; CountdownTextUtils.formatCountdown( seconds: number, whenAtZeroText: string? ) → string Formats countdown text ","version":null,"tagName":"h3"},{"title":"Counter","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Counter","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Counter","url":"/NevermoreEngine/api/Counter#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Counter","url":"/NevermoreEngine/api/Counter#new","content":"&lt;/&gt; Counter.new() → Counter Creates a new counter  ","version":null,"tagName":"h3"},{"title":"GetValue​","type":1,"pageTitle":"Counter","url":"/NevermoreEngine/api/Counter#GetValue","content":"&lt;/&gt; Counter.GetValue(self: Counter) → number Returns the current count  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"Counter","url":"/NevermoreEngine/api/Counter#Observe","content":"&lt;/&gt; Counter.Observe(self: Counter) → number Observes the current count  ","version":null,"tagName":"h3"},{"title":"Add​","type":1,"pageTitle":"Counter","url":"/NevermoreEngine/api/Counter#Add","content":"&lt;/&gt; Counter.Add( self: Counter, amount: number | Observable&lt;number&gt; ) → MaidTask Adds an amount to the counter. ","version":null,"tagName":"h3"},{"title":"CreatorPermissionProvider","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CreatorPermissionProvider","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CreatorPermissionProvider","url":"/NevermoreEngine/api/CreatorPermissionProvider#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"CreatorPermissionProvider","url":"/NevermoreEngine/api/CreatorPermissionProvider#new","content":"&lt;/&gt; CreatorPermissionProvider.new(config: table) → CreatorPermissionProvider   ","version":null,"tagName":"h3"},{"title":"PromiseIsPermissionLevel​","type":1,"pageTitle":"CreatorPermissionProvider","url":"/NevermoreEngine/api/CreatorPermissionProvider#PromiseIsPermissionLevel","content":"&lt;/&gt; CreatorPermissionProvider.PromiseIsPermissionLevel( self: CreatorPermissionProvider, player: Player , permissionLevel: PermissionLevel ) → Promise&lt;boolean&gt; Returns whether the player is at a specific permission level. ","version":null,"tagName":"h3"},{"title":"CubicSplineUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CubicSplineUtils","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"CubicSplineUtils","url":"/NevermoreEngine/api/CubicSplineUtils#types","content":" ","version":null,"tagName":"h2"},{"title":"CubicSplineNode​","type":1,"pageTitle":"CubicSplineUtils","url":"/NevermoreEngine/api/CubicSplineUtils#CubicSplineNode","content":"&lt;/&gt; interface CubicSplineNode { t: number p: T v: T } A node that can be used as part of a cubic spline. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"CubicSplineUtils","url":"/NevermoreEngine/api/CubicSplineUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"newSplineNode​","type":1,"pageTitle":"CubicSplineUtils","url":"/NevermoreEngine/api/CubicSplineUtils#newSplineNode","content":"&lt;/&gt; CubicSplineUtils.newSplineNode( t: number, position: T, velocity: T ) → CubicSplineNode&lt;T&gt; Creates a new spline node.  ","version":null,"tagName":"h3"},{"title":"tween​","type":1,"pageTitle":"CubicSplineUtils","url":"/NevermoreEngine/api/CubicSplineUtils#tween","content":"&lt;/&gt; CubicSplineUtils.tween( nodeList: {CubicSplineNode&lt;T&gt;},-- Should be sorted. t: number ) → CubicSplineNode&lt;T&gt; Interpolates between the nodes at a given point.  ","version":null,"tagName":"h3"},{"title":"cloneSplineNode​","type":1,"pageTitle":"CubicSplineUtils","url":"/NevermoreEngine/api/CubicSplineUtils#cloneSplineNode","content":"&lt;/&gt; CubicSplineUtils.cloneSplineNode(node: CubicSplineNode&lt;T&gt;) → CubicSplineNode&lt;T&gt; Clones a cubic spline.  ","version":null,"tagName":"h3"},{"title":"tweenSplineNodes​","type":1,"pageTitle":"CubicSplineUtils","url":"/NevermoreEngine/api/CubicSplineUtils#tweenSplineNodes","content":"&lt;/&gt; CubicSplineUtils.tweenSplineNodes( node0: CubicSplineNode&lt;T&gt;, node1: CubicSplineNode&lt;T&gt;, t: number ) → CubicSplineNode&lt;T&gt; Interpolates between 2 cubic spline nodes.  ","version":null,"tagName":"h3"},{"title":"sort​","type":1,"pageTitle":"CubicSplineUtils","url":"/NevermoreEngine/api/CubicSplineUtils#sort","content":"&lt;/&gt; CubicSplineUtils.sort(nodeList: {CubicSplineNode&lt;T&gt;}) → () Sorts a cubic spline nodme based upon the time stamp  ","version":null,"tagName":"h3"},{"title":"populateVelocities​","type":1,"pageTitle":"CubicSplineUtils","url":"/NevermoreEngine/api/CubicSplineUtils#populateVelocities","content":"&lt;/&gt; CubicSplineUtils.populateVelocities( nodeList: {CubicSplineNode&lt;T&gt;}, index0: number?, index1: number? ) → () For a given node list, populates the velocity values of the nodes. ","version":null,"tagName":"h3"},{"title":"curve","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/curve","content":"curve Elliptic curve arithmetic About the Curve Itself Field Size: 168 bits Field Modulus (p): 481 * 2^159 + 3 Equation: x^2 + y^2 = 1 + 122 * x^2 * y^2 Parameters: Edwards Curve with d = 122 Curve Order (n): 351491143778082151827986174289773107581916088585564 Cofactor (h): 4 Generator Order (q): 87872785944520537956996543572443276895479022146391 About the Curve's Security Current best attack security: 81.777 bits (Small Subgroup + Rho) Rho Security: log2(0.884 * sqrt(q)) = 82.777 bits Transfer Security? Yes: p ~= q; k &gt; 20 Field Discriminant Security? Yes: t = 27978492958645335688000168 s = 10 |D| = 6231685068753619775430107799412237267322159383147 &gt; 2^100 Rigidity? No, not at all. XZ/YZ Ladder Security? No: Single coordinate ladders are insecure. Small Subgroup Security? No. Invalid Curve Security? Yes: Points are checked before every operation. Invalid Curve Twist Security? No: Don't use single coordinate ladders. Completeness? Yes: The curve is complete. Indistinguishability? Yes (Elligator 2), but not implemented.","keywords":"","version":null},{"title":"CustomCameraEffect","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CustomCameraEffect","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"CustomCameraEffect","url":"/NevermoreEngine/api/CustomCameraEffect#properties","content":" ","version":null,"tagName":"h2"},{"title":"CameraState​","type":1,"pageTitle":"CustomCameraEffect","url":"/NevermoreEngine/api/CustomCameraEffect#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; CustomCameraEffect.CameraState: CameraState The current state. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"CustomCameraEffect","url":"/NevermoreEngine/api/CustomCameraEffect#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"CustomCameraEffect","url":"/NevermoreEngine/api/CustomCameraEffect#new","content":"&lt;/&gt; CustomCameraEffect.new( getCurrentStateFunc: () → CameraState-- Custom effect generator ) → CustomCameraEffect Constructs a new custom camera effect ","version":null,"tagName":"h3"},{"title":"CubicTweenUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/CubicTweenUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"CubicTweenUtils","url":"/NevermoreEngine/api/CubicTweenUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getConstants​","type":1,"pageTitle":"CubicTweenUtils","url":"/NevermoreEngine/api/CubicTweenUtils#getConstants","content":"&lt;/&gt; CubicTweenUtils.getConstants( l: number, t: number ) → ( number,-- a0 number,-- a1 number,-- a2 number-- a3 ) Constants to be multiplied as p0a0 + v0a1 + p1a2 + v1a3  ","version":null,"tagName":"h3"},{"title":"getDerivativeConstants​","type":1,"pageTitle":"CubicTweenUtils","url":"/NevermoreEngine/api/CubicTweenUtils#getDerivativeConstants","content":"&lt;/&gt; CubicTweenUtils.getDerivativeConstants( l: number, t: number ) → ( number,-- a0 number,-- a1 number,-- a2 number-- a3 )   ","version":null,"tagName":"h3"},{"title":"applyConstants​","type":1,"pageTitle":"CubicTweenUtils","url":"/NevermoreEngine/api/CubicTweenUtils#applyConstants","content":"&lt;/&gt; CubicTweenUtils.applyConstants( c0: number, c1: number, c2: number, c3: number, a: T, u: T, b: T, v: T ) → T Applies the constants for the given nodes  ","version":null,"tagName":"h3"},{"title":"tween​","type":1,"pageTitle":"CubicTweenUtils","url":"/NevermoreEngine/api/CubicTweenUtils#tween","content":"&lt;/&gt; CubicTweenUtils.tween( a: T, u: T, b: T, v: T, l: number, t: number ) → T Tweens betweeen nodes  ","version":null,"tagName":"h3"},{"title":"getAcceleration​","type":1,"pageTitle":"CubicTweenUtils","url":"/NevermoreEngine/api/CubicTweenUtils#getAcceleration","content":"&lt;/&gt; CubicTweenUtils.getAcceleration( a: T, u: T, b: T, v: T, l: number ) → T Computes acceleration ","version":null,"tagName":"h3"},{"title":"DataStoreDeleteToken","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DataStoreDeleteToken","content":"DataStoreDeleteToken This item only works when running on the server. Server Token to use for deleting.","keywords":"","version":null},{"title":"DataStore","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DataStore","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"DataStore","url":"/NevermoreEngine/api/DataStore#properties","content":" ","version":null,"tagName":"h2"},{"title":"Saving​","type":1,"pageTitle":"DataStore","url":"/NevermoreEngine/api/DataStore#Saving","content":"&lt;/&gt; DataStore.Saving: Signal&lt;Promise&gt; Prop that fires when saving. Promise will resolve once saving is complete. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"DataStore","url":"/NevermoreEngine/api/DataStore#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"DataStore","url":"/NevermoreEngine/api/DataStore#new","content":"&lt;/&gt; DataStore.new( robloxDataStore: DataStore, key: string ) → DataStore Constructs a new DataStore. See DataStoreStage for more API. local dataStore = serviceBag:GetService(PlayerDataStoreService):PromiseDataStore(player):Yield()   ","version":null,"tagName":"h3"},{"title":"SetSessionLockingEnabled​","type":1,"pageTitle":"DataStore","url":"/NevermoreEngine/api/DataStore#SetSessionLockingEnabled","content":"&lt;/&gt; DataStore.SetSessionLockingEnabled( self: DataStore, sessionLockingEnabled: boolean ) → () Sets session locking enabled  ","version":null,"tagName":"h3"},{"title":"PromiseSessionLockingFailed​","type":1,"pageTitle":"DataStore","url":"/NevermoreEngine/api/DataStore#PromiseSessionLockingFailed","content":"&lt;/&gt; DataStore.PromiseSessionLockingFailed(self: DataStore) → Promise&lt;&gt; Returns a promise that rejects on datastore cleanup, and resolves only when the session locking code completely fails  ","version":null,"tagName":"h3"},{"title":"SetDoDebugWriting​","type":1,"pageTitle":"DataStore","url":"/NevermoreEngine/api/DataStore#SetDoDebugWriting","content":"&lt;/&gt; DataStore.SetDoDebugWriting( self: DataStore, debugWriting: boolean ) → () Set to true to debug writing this data store  ","version":null,"tagName":"h3"},{"title":"GetFullPath​","type":1,"pageTitle":"DataStore","url":"/NevermoreEngine/api/DataStore#GetFullPath","content":"&lt;/&gt; DataStore.GetFullPath(self: DataStore) → string Returns the full path for the datastore  ","version":null,"tagName":"h3"},{"title":"SetAutoSaveTimeSeconds​","type":1,"pageTitle":"DataStore","url":"/NevermoreEngine/api/DataStore#SetAutoSaveTimeSeconds","content":"&lt;/&gt; DataStore.SetAutoSaveTimeSeconds( self: DataStore, autoSaveTimeSeconds: number? ) → () How frequent the data store will autosave (or sync) to the cloud. If set to nil then the datastore will not do any syncing.  ","version":null,"tagName":"h3"},{"title":"SetSyncOnSave​","type":1,"pageTitle":"DataStore","url":"/NevermoreEngine/api/DataStore#SetSyncOnSave","content":"&lt;/&gt; DataStore.SetSyncOnSave( self: DataStore, syncEnabled: boolean ) → () How frequent the data store will autosave (or sync) to the cloud  ","version":null,"tagName":"h3"},{"title":"DidLoadFail​","type":1,"pageTitle":"DataStore","url":"/NevermoreEngine/api/DataStore#DidLoadFail","content":"&lt;/&gt; DataStore.DidLoadFail(self: DataStore) → boolean Returns whether the datastore failed.  ","version":null,"tagName":"h3"},{"title":"PromiseLoadSuccessful​","type":1,"pageTitle":"DataStore","url":"/NevermoreEngine/api/DataStore#PromiseLoadSuccessful","content":"&lt;/&gt; DataStore.PromiseLoadSuccessful(self: DataStore) → Promise&lt;boolean&gt; Returns whether the datastore has loaded successfully.\\  ","version":null,"tagName":"h3"},{"title":"Save​","type":1,"pageTitle":"DataStore","url":"/NevermoreEngine/api/DataStore#Save","content":"&lt;/&gt; DataStore.Save(self: DataStore) → Promise Saves all stored data.  ","version":null,"tagName":"h3"},{"title":"SaveAndCloseSession​","type":1,"pageTitle":"DataStore","url":"/NevermoreEngine/api/DataStore#SaveAndCloseSession","content":"&lt;/&gt; DataStore.SaveAndCloseSession(self: DataStore) → Promise Saves all stored data.  ","version":null,"tagName":"h3"},{"title":"Sync​","type":1,"pageTitle":"DataStore","url":"/NevermoreEngine/api/DataStore#Sync","content":"&lt;/&gt; DataStore.Sync(self: DataStore) → Promise Same as saving the data but it also loads fresh data from the datastore, which may consume additional data-store query calls.  ","version":null,"tagName":"h3"},{"title":"SetUserIdList​","type":1,"pageTitle":"DataStore","url":"/NevermoreEngine/api/DataStore#SetUserIdList","content":"&lt;/&gt; DataStore.SetUserIdList( self: DataStore, userIdList: {number}? ) → () Sets the user id list associated with this datastore. Can be useful for GDPR compliance.  ","version":null,"tagName":"h3"},{"title":"GetUserIdList​","type":1,"pageTitle":"DataStore","url":"/NevermoreEngine/api/DataStore#GetUserIdList","content":"&lt;/&gt; DataStore.GetUserIdList(self: DataStore) → {number}? Returns a list of user ids or nil  ","version":null,"tagName":"h3"},{"title":"PromiseViewUpToDate​","type":1,"pageTitle":"DataStore","url":"/NevermoreEngine/api/DataStore#PromiseViewUpToDate","content":"&lt;/&gt; DataStore.PromiseViewUpToDate(self: DataStore) → Promise Overridden helper method for data store stage below. ","version":null,"tagName":"h3"},{"title":"DataStorePromises","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DataStorePromises","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"DataStorePromises","url":"/NevermoreEngine/api/DataStorePromises#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseDataStore​","type":1,"pageTitle":"DataStorePromises","url":"/NevermoreEngine/api/DataStorePromises#promiseDataStore","content":"&lt;/&gt; DataStorePromises.promiseDataStore( name: string, scope: string ) → Promise&lt;DataStore&gt; Promises a Roblox datastore object with the name and scope. Generally only fails when you haven't published the place.  ","version":null,"tagName":"h3"},{"title":"promiseOrderedDataStore​","type":1,"pageTitle":"DataStorePromises","url":"/NevermoreEngine/api/DataStorePromises#promiseOrderedDataStore","content":"&lt;/&gt; DataStorePromises.promiseOrderedDataStore( name: string, scope: string ) → Promise&lt;OrderedDataStore &gt; Promises a Roblox datastore object with the name and scope. Generally only fails when you haven't published the place.  ","version":null,"tagName":"h3"},{"title":"getAsync​","type":1,"pageTitle":"DataStorePromises","url":"/NevermoreEngine/api/DataStorePromises#getAsync","content":"&lt;/&gt; DataStorePromises.getAsync( robloxDataStore: DataStore, key: string ) → Promise&lt;T&gt; Wraps :GetAsync() in a promise  ","version":null,"tagName":"h3"},{"title":"updateAsync​","type":1,"pageTitle":"DataStorePromises","url":"/NevermoreEngine/api/DataStorePromises#updateAsync","content":"&lt;/&gt; DataStorePromises.updateAsync( robloxDataStore: DataStore, key: string, updateFunc: (T) → T? ) → Promise&lt;T&gt; Wraps :UpdateAsync() in a promise  ","version":null,"tagName":"h3"},{"title":"setAsync​","type":1,"pageTitle":"DataStorePromises","url":"/NevermoreEngine/api/DataStorePromises#setAsync","content":"&lt;/&gt; DataStorePromises.setAsync( robloxDataStore: DataStore, key: string, value: string, userIds: {number}-- Associated userIds ) → Promise&lt;boolean&gt; Wraps :SetAsync() in a promise  ","version":null,"tagName":"h3"},{"title":"promiseIncrementAsync​","type":1,"pageTitle":"DataStorePromises","url":"/NevermoreEngine/api/DataStorePromises#promiseIncrementAsync","content":"&lt;/&gt; DataStorePromises.promiseIncrementAsync( robloxDataStore: DataStore, key: string, delta: number ) → Promise&lt;boolean&gt; Wraps :IncrementAsync() in a promise  ","version":null,"tagName":"h3"},{"title":"removeAsync​","type":1,"pageTitle":"DataStorePromises","url":"/NevermoreEngine/api/DataStorePromises#removeAsync","content":"&lt;/&gt; DataStorePromises.removeAsync( robloxDataStore: DataStore, key: string ) → Promise&lt;boolean&gt; Wraps :RemoveAsync() in a promise  ","version":null,"tagName":"h3"},{"title":"promiseSortedPagesAsync​","type":1,"pageTitle":"DataStorePromises","url":"/NevermoreEngine/api/DataStorePromises#promiseSortedPagesAsync","content":"&lt;/&gt; DataStorePromises.promiseSortedPagesAsync( orderedDataStore: OrderedDataStore , ascending: boolean, pagesize: int, minValue: number?, maxValue: number? ) → Promise&lt;DataStorePages &gt; Returns a DataStorePages object. The sort order is determined by ascending, the length of each page by pageSize, and minValue/maxValue are optional parameters which filter the results.  ","version":null,"tagName":"h3"},{"title":"promiseOrderedEntries​","type":1,"pageTitle":"DataStorePromises","url":"/NevermoreEngine/api/DataStorePromises#promiseOrderedEntries","content":"&lt;/&gt; DataStorePromises.promiseOrderedEntries( orderedDataStore: OrderedDataStore , ascending: boolean, pagesize: int, entries: int,-- Number of entries to pull minValue: number?, maxValue: number? ) → Promise&lt;OrderedDataStoreEntry&gt; ","version":null,"tagName":"h3"},{"title":"Types","type":1,"pageTitle":"DataStorePromises","url":"/NevermoreEngine/api/DataStorePromises##","content":"","version":null,"tagName":"h3"},{"title":"​","type":1,"pageTitle":"DataStorePromises","url":"/NevermoreEngine/api/DataStorePromises#OrderedDataStoreEntry","content":"interface OrderedDataStoreEntry { key: any value: any }  Returns a DataStorePages object. The sort order is determined by ascending, the length of each page by pageSize, and minValue/maxValue are optional parameters which filter the results. ","version":null,"tagName":"h3"},{"title":"DataStoreSnapshotUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DataStoreSnapshotUtils","content":"DataStoreSnapshotUtils","keywords":"","version":null},{"title":"DeathReportBindersClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DeathReportBindersClient","content":"DeathReportBindersClient","keywords":"","version":null},{"title":"DataStoreStringUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DataStoreStringUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"DataStoreStringUtils","url":"/NevermoreEngine/api/DataStoreStringUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"isValidUTF8​","type":1,"pageTitle":"DataStoreStringUtils","url":"/NevermoreEngine/api/DataStoreStringUtils#isValidUTF8","content":"&lt;/&gt; DataStoreStringUtils.isValidUTF8(str: string) → boolean Checks to see if a string can be stored in the datastore ","version":null,"tagName":"h3"},{"title":"DataStoreWriter","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DataStoreWriter","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"DataStoreWriter","url":"/NevermoreEngine/api/DataStoreWriter#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"DataStoreWriter","url":"/NevermoreEngine/api/DataStoreWriter#new","content":"&lt;/&gt; DataStoreWriter.new(debugName: string) → DataStoreWriter Constructs a new DataStoreWriter. In general, you will not use this API directly.  ","version":null,"tagName":"h3"},{"title":"SetSaveDataSnapshot​","type":1,"pageTitle":"DataStoreWriter","url":"/NevermoreEngine/api/DataStoreWriter#SetSaveDataSnapshot","content":"&lt;/&gt; DataStoreWriter.SetSaveDataSnapshot( self: DataStoreWriter, saveDataSnapshot: table | any ) → () Sets the ray data to write  ","version":null,"tagName":"h3"},{"title":"AddSubWriter​","type":1,"pageTitle":"DataStoreWriter","url":"/NevermoreEngine/api/DataStoreWriter#AddSubWriter","content":"&lt;/&gt; DataStoreWriter.AddSubWriter( self: DataStoreWriter, name: string | number, writer: DataStoreWriter ) → () Adds a recursive child writer to use at the key name  ","version":null,"tagName":"h3"},{"title":"GetWriter​","type":1,"pageTitle":"DataStoreWriter","url":"/NevermoreEngine/api/DataStoreWriter#GetWriter","content":"&lt;/&gt; DataStoreWriter.GetWriter( self: DataStoreWriter, name: string | number ) → DataStoreWriter Gets a sub writer  ","version":null,"tagName":"h3"},{"title":"ComputeDiffSnapshot​","type":1,"pageTitle":"DataStoreWriter","url":"/NevermoreEngine/api/DataStoreWriter#ComputeDiffSnapshot","content":"&lt;/&gt; DataStoreWriter.ComputeDiffSnapshot( self: DataStoreWriter, incoming: any ) → () Merges the incoming data. Won't really perform a delete operation because we can't be sure if we were suppose to have reified this stuff or not.  ","version":null,"tagName":"h3"},{"title":"SetUserIdList​","type":1,"pageTitle":"DataStoreWriter","url":"/NevermoreEngine/api/DataStoreWriter#SetUserIdList","content":"&lt;/&gt; DataStoreWriter.SetUserIdList( self: DataStoreWriter, userIdList: {number} ) → () Set of user ids to write with the data (only applies to top-level writer)  ","version":null,"tagName":"h3"},{"title":"GetUserIdList​","type":1,"pageTitle":"DataStoreWriter","url":"/NevermoreEngine/api/DataStoreWriter#GetUserIdList","content":"&lt;/&gt; DataStoreWriter.GetUserIdList(self: DataStoreWriter) → userIdList{number} User ids to associate with data  ","version":null,"tagName":"h3"},{"title":"WriteMerge​","type":1,"pageTitle":"DataStoreWriter","url":"/NevermoreEngine/api/DataStoreWriter#WriteMerge","content":"&lt;/&gt; DataStoreWriter.WriteMerge( self: DataStoreWriter, original: any ) → any-- The original value Merges the new data into the original value ","version":null,"tagName":"h3"},{"title":"DataStoreStage","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DataStoreStage","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#new","content":"&lt;/&gt; DataStoreStage.new( loadName: string, loadParent: DataStoreStage? ) → DataStoreStage Constructs a new DataStoreStage to load from. Prefer to use DataStore because this doesn't have any way to retrieve this. See DataStore, GameDataStoreService, and PlayerDataStoreService. -- Data store inherits from DataStoreStage local dataStore = serviceBag:GetService(PlayerDataStoreService):PromiseDataStore(player):Yield()   ","version":null,"tagName":"h3"},{"title":"Store​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#Store","content":"&lt;/&gt; DataStoreStage.Store( self: DataStoreStage, key: string, value: any ) → () Stores the value, firing off events and queuing the item for save. dataStore:Store(&quot;money&quot;, 25)   ","version":null,"tagName":"h3"},{"title":"Load​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#Load","content":"&lt;/&gt; DataStoreStage.Load( self: DataStoreStage, key: string | number, defaultValue: T? ) → Promise&lt;T&gt; Loads the data at the key and returns a promise with that value dataStore:Load():Then(function(data) print(data) end)   ","version":null,"tagName":"h3"},{"title":"LoadAll​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#LoadAll","content":"&lt;/&gt; DataStoreStage.LoadAll( self: DataStoreStage, defaultValue: any ) → Promise&lt;any&gt; Promises the full content for the datastore dataStore:LoadAll():Then(function(data) print(data) end)   ","version":null,"tagName":"h3"},{"title":"GetSubStore​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#GetSubStore","content":"&lt;/&gt; DataStoreStage.GetSubStore( self: DataStoreStage, key: string | number ) → DataStoreStage Gets a sub-datastore that will write at the given key. This will have the same helper methods as any other data store object. local dataStore = DataStore.new() local saveslot = dataStore:GetSubStore(&quot;saveslot0&quot;) saveslot:Store(&quot;Money&quot;, 0)   ","version":null,"tagName":"h3"},{"title":"Delete​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#Delete","content":"&lt;/&gt; DataStoreStage.Delete( self: DataStoreStage, key: string | number ) → () Explicitely deletes data at the key  ","version":null,"tagName":"h3"},{"title":"Wipe​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#Wipe","content":"&lt;/&gt; DataStoreStage.Wipe(self: DataStoreStage) → () Queues up a wipe of all values. This will completely set the data to nil.  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#Observe","content":"&lt;/&gt; DataStoreStage.Observe( self: DataStoreStage, key: string | number?, defaultValue: T? ) → Observable&lt;T&gt; Observes the current value for the stage itself If no key is passed than it will observe the whole view snapshot  ","version":null,"tagName":"h3"},{"title":"AddSavingCallback​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#AddSavingCallback","content":"&lt;/&gt; DataStoreStage.AddSavingCallback( self: DataStoreStage, callback: function-- May return a promise ) → function-- Call to remove Adds a callback to be called before save. This may return a promise.  ","version":null,"tagName":"h3"},{"title":"RemoveSavingCallback​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#RemoveSavingCallback","content":"&lt;/&gt; DataStoreStage.RemoveSavingCallback( self: DataStoreStage, callback: function ) → () Removes a saving callback from the data store stage  ","version":null,"tagName":"h3"},{"title":"GetTopLevelDataStoredSignal​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#GetTopLevelDataStoredSignal","content":"&lt;/&gt; DataStoreStage.GetTopLevelDataStoredSignal(self: DataStoreStage) → Signal Gets an event that will fire off whenever something is stored at this level  ","version":null,"tagName":"h3"},{"title":"GetFullPath​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#GetFullPath","content":"&lt;/&gt; DataStoreStage.GetFullPath(self: DataStoreStage) → string Retrieves the full path of this datastore stage for diagnostic purposes.  ","version":null,"tagName":"h3"},{"title":"PromiseKeyList​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#PromiseKeyList","content":"&lt;/&gt; DataStoreStage.PromiseKeyList(self: DataStoreStage) → Promise&lt;{string}&gt; Promises a list of keys in the data store stage  ","version":null,"tagName":"h3"},{"title":"PromiseKeySet​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#PromiseKeySet","content":"&lt;/&gt; DataStoreStage.PromiseKeySet(self: DataStoreStage) → Promise&lt;{[string]: true}&gt; Promises a set of keys in the data store stage  ","version":null,"tagName":"h3"},{"title":"MergeDiffSnapshot​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#MergeDiffSnapshot","content":"&lt;/&gt; DataStoreStage.MergeDiffSnapshot( self: DataStoreStage, diffSnapshot: any ) → () This will always prioritize our own view of the world over incoming data. TIP This is a helper method that helps load diff data into the data store.  ","version":null,"tagName":"h3"},{"title":"MarkDataAsSaved​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#MarkDataAsSaved","content":"&lt;/&gt; DataStoreStage.MarkDataAsSaved( self: DataStoreStage, parentWriter: DataStoreWriter ) → () Updates the base data to the saved / written data. This will always prioritize our own view of the world over incoming data.  ","version":null,"tagName":"h3"},{"title":"PromiseViewUpToDate​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#PromiseViewUpToDate","content":"&lt;/&gt; DataStoreStage.PromiseViewUpToDate(self: DataStoreStage) → Promise Helper method that when invokes ensures the data view. TIP This is a helper method. You probably want DataStore.LoadAll instead.  ","version":null,"tagName":"h3"},{"title":"Overwrite​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#Overwrite","content":"&lt;/&gt; DataStoreStage.Overwrite( self: DataStoreStage, data: any ) → () Ovewrites the full stage with the data specified. TIP Use this method carefully as it can lead to data loss in ways that a specific :Store() call on the right stage would do better.  ","version":null,"tagName":"h3"},{"title":"OverwriteMerge​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#OverwriteMerge","content":"&lt;/&gt; DataStoreStage.OverwriteMerge( self: DataStoreStage, data: any ) → () Ovewrites the full stage with the data specified. However, it will merge the data to help prevent data-loss. TIP Use this method carefully as it can lead to data loss in ways that a specific :Store() call on the right stage would do better.  ","version":null,"tagName":"h3"},{"title":"StoreOnValueChange​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#StoreOnValueChange","content":"&lt;/&gt; DataStoreStage.StoreOnValueChange( self: DataStoreStage, name: string | number, valueObj: Instance -- ValueBase object to store on ) → MaidTask-- Cleanup to remove this writer and free the key. Whenever the ValueObject changes, stores the resulting value in that entry.  ","version":null,"tagName":"h3"},{"title":"HasWritableData​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#HasWritableData","content":"&lt;/&gt; DataStoreStage.HasWritableData(self: DataStoreStage) → boolean If these is data not yet written then this will return true  ","version":null,"tagName":"h3"},{"title":"GetNewWriter​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#GetNewWriter","content":"&lt;/&gt; DataStoreStage.GetNewWriter(self: DataStoreStage) → DataStoreWriter Constructs a writer which provides a snapshot of the current data state to write. TIP This is automatically invoked during saving and is public so DataStore can invoke it.  ","version":null,"tagName":"h3"},{"title":"PromiseInvokeSavingCallbacks​","type":1,"pageTitle":"DataStoreStage","url":"/NevermoreEngine/api/DataStoreStage#PromiseInvokeSavingCallbacks","content":"&lt;/&gt; DataStoreStage.PromiseInvokeSavingCallbacks(self: DataStoreStage) → Promise Invokes all saving callbacks TIP This is automatically invoked before saving and is public so DataStore can invoke it. ","version":null,"tagName":"h3"},{"title":"DeathReportBindersServer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DeathReportBindersServer","content":"DeathReportBindersServer","keywords":"","version":null},{"title":"DeathReportProcessor","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DeathReportProcessor","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"DeathReportProcessor","url":"/NevermoreEngine/api/DeathReportProcessor#functions","content":" ","version":null,"tagName":"h2"},{"title":"ObservePlayerKillerReports​","type":1,"pageTitle":"DeathReportProcessor","url":"/NevermoreEngine/api/DeathReportProcessor#ObservePlayerKillerReports","content":"&lt;/&gt; DeathReportProcessor.ObservePlayerKillerReports( self: DeathReportProcessor, player: Player ) → Observable&lt;DeathReport&gt; Observes killer reports for the given player  ","version":null,"tagName":"h3"},{"title":"ObservePlayerDeathReports​","type":1,"pageTitle":"DeathReportProcessor","url":"/NevermoreEngine/api/DeathReportProcessor#ObservePlayerDeathReports","content":"&lt;/&gt; DeathReportProcessor.ObservePlayerDeathReports( self: DeathReportProcessor, player: Player ) → Observable&lt;DeathReport&gt; Observes death reports for the given player  ","version":null,"tagName":"h3"},{"title":"ObserveHumanoidDeathReports​","type":1,"pageTitle":"DeathReportProcessor","url":"/NevermoreEngine/api/DeathReportProcessor#ObserveHumanoidDeathReports","content":"&lt;/&gt; DeathReportProcessor.ObserveHumanoidDeathReports( self: DeathReportProcessor, humanoid: Humanoid ) → Observable&lt;DeathReport&gt; Observes death reports for the given humanoid  ","version":null,"tagName":"h3"},{"title":"ObserveHumanoidKillerReports​","type":1,"pageTitle":"DeathReportProcessor","url":"/NevermoreEngine/api/DeathReportProcessor#ObserveHumanoidKillerReports","content":"&lt;/&gt; DeathReportProcessor.ObserveHumanoidKillerReports( self: DeathReportProcessor, humanoid: Humanoid ) → Observable&lt;DeathReport&gt; Observes killer reports for the given humanoid  ","version":null,"tagName":"h3"},{"title":"ObserveCharacterKillerReports​","type":1,"pageTitle":"DeathReportProcessor","url":"/NevermoreEngine/api/DeathReportProcessor#ObserveCharacterKillerReports","content":"&lt;/&gt; DeathReportProcessor.ObserveCharacterKillerReports( self: DeathReportProcessor, character: Model ) → Observable&lt;DeathReport&gt; Observes killer reports for the given character  ","version":null,"tagName":"h3"},{"title":"ObserveCharacterDeathReports​","type":1,"pageTitle":"DeathReportProcessor","url":"/NevermoreEngine/api/DeathReportProcessor#ObserveCharacterDeathReports","content":"&lt;/&gt; DeathReportProcessor.ObserveCharacterDeathReports( self: DeathReportProcessor, character: Model ) → Observable&lt;DeathReport&gt; Observes killer reports for the given character  ","version":null,"tagName":"h3"},{"title":"HandleDeathReport​","type":1,"pageTitle":"DeathReportProcessor","url":"/NevermoreEngine/api/DeathReportProcessor#HandleDeathReport","content":"&lt;/&gt; DeathReportProcessor.HandleDeathReport( self: DeathReportProcessor, deathReport: DeathReport ) → () Handles the death report ","version":null,"tagName":"h3"},{"title":"DeathReportService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DeathReportService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"DeathReportService","url":"/NevermoreEngine/api/DeathReportService#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"DeathReportService","url":"/NevermoreEngine/api/DeathReportService#Init","content":"&lt;/&gt; DeathReportService.Init( self: DeathReportService, serviceBag: ServiceBag ) → () Initializes the DeathReportService. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"ObservePlayerKillerReports​","type":1,"pageTitle":"DeathReportService","url":"/NevermoreEngine/api/DeathReportService#ObservePlayerKillerReports","content":"&lt;/&gt; DeathReportService.ObservePlayerKillerReports( self: DeathReportService, player: Player ) → Observable&lt;DeathReport&gt; Observes killer reports for the given player  ","version":null,"tagName":"h3"},{"title":"ObservePlayerDeathReports​","type":1,"pageTitle":"DeathReportService","url":"/NevermoreEngine/api/DeathReportService#ObservePlayerDeathReports","content":"&lt;/&gt; DeathReportService.ObservePlayerDeathReports( self: DeathReportService, player: Player ) → Observable&lt;DeathReport&gt; Observes death reports for the given player  ","version":null,"tagName":"h3"},{"title":"ObserveHumanoidKillerReports​","type":1,"pageTitle":"DeathReportService","url":"/NevermoreEngine/api/DeathReportService#ObserveHumanoidKillerReports","content":"&lt;/&gt; DeathReportService.ObserveHumanoidKillerReports( self: DeathReportService, humanoid: Humanoid ) → Observable&lt;DeathReport&gt; Observes killer reports for the given humanoid  ","version":null,"tagName":"h3"},{"title":"ObserveHumanoidDeathReports​","type":1,"pageTitle":"DeathReportService","url":"/NevermoreEngine/api/DeathReportService#ObserveHumanoidDeathReports","content":"&lt;/&gt; DeathReportService.ObserveHumanoidDeathReports( self: DeathReportService, humanoid: Humanoid ) → Observable&lt;DeathReport&gt; Observes death reports for the given humanoid  ","version":null,"tagName":"h3"},{"title":"ObserveCharacterKillerReports​","type":1,"pageTitle":"DeathReportService","url":"/NevermoreEngine/api/DeathReportService#ObserveCharacterKillerReports","content":"&lt;/&gt; DeathReportService.ObserveCharacterKillerReports( self: DeathReportService, character: Model ) → Observable&lt;DeathReport&gt; Observes killer reports for the given character  ","version":null,"tagName":"h3"},{"title":"ObserveCharacterDeathReports​","type":1,"pageTitle":"DeathReportService","url":"/NevermoreEngine/api/DeathReportService#ObserveCharacterDeathReports","content":"&lt;/&gt; DeathReportService.ObserveCharacterDeathReports( self: DeathReportService, character: Model ) → Observable&lt;DeathReport&gt; Observes killer reports for the given character  ","version":null,"tagName":"h3"},{"title":"ReportHumanoidDeath​","type":1,"pageTitle":"DeathReportService","url":"/NevermoreEngine/api/DeathReportService#ReportHumanoidDeath","content":"&lt;/&gt; DeathReportService.ReportHumanoidDeath( self: DeathReportService, humanoid: Humanoid ,-- Humanoid that died weaponData: WeaponData?-- Weapon data to report ) → () Reports the death of a humanoid. This is called automatically by DeathTrackedHumanoid. ","version":null,"tagName":"h3"},{"title":"DeathReportServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DeathReportServiceClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"DeathReportServiceClient","url":"/NevermoreEngine/api/DeathReportServiceClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"DeathReportServiceClient","url":"/NevermoreEngine/api/DeathReportServiceClient#Init","content":"&lt;/&gt; DeathReportServiceClient:Init(serviceBag: ServiceBag) → () Initializes the death report service for the given service bag. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"ObservePlayerKillerReports​","type":1,"pageTitle":"DeathReportServiceClient","url":"/NevermoreEngine/api/DeathReportServiceClient#ObservePlayerKillerReports","content":"&lt;/&gt; DeathReportServiceClient:ObservePlayerKillerReports(player: Player ) → Observable&lt;DeathReport&gt; Observes killer reports for the given player  ","version":null,"tagName":"h3"},{"title":"ObservePlayerDeathReports​","type":1,"pageTitle":"DeathReportServiceClient","url":"/NevermoreEngine/api/DeathReportServiceClient#ObservePlayerDeathReports","content":"&lt;/&gt; DeathReportServiceClient:ObservePlayerDeathReports(player: Player ) → Observable&lt;DeathReport&gt; Observes death reports for the given player  ","version":null,"tagName":"h3"},{"title":"ObserveHumanoidKillerReports​","type":1,"pageTitle":"DeathReportServiceClient","url":"/NevermoreEngine/api/DeathReportServiceClient#ObserveHumanoidKillerReports","content":"&lt;/&gt; DeathReportServiceClient:ObserveHumanoidKillerReports(humanoid: Humanoid ) → Observable&lt;DeathReport&gt; Observes killer reports for the given humanoid  ","version":null,"tagName":"h3"},{"title":"ObserveHumanoidDeathReports​","type":1,"pageTitle":"DeathReportServiceClient","url":"/NevermoreEngine/api/DeathReportServiceClient#ObserveHumanoidDeathReports","content":"&lt;/&gt; DeathReportServiceClient:ObserveHumanoidDeathReports(humanoid: Humanoid ) → Observable&lt;DeathReport&gt; Observes death reports for the given humanoid  ","version":null,"tagName":"h3"},{"title":"ObserveCharacterKillerReports​","type":1,"pageTitle":"DeathReportServiceClient","url":"/NevermoreEngine/api/DeathReportServiceClient#ObserveCharacterKillerReports","content":"&lt;/&gt; DeathReportServiceClient:ObserveCharacterKillerReports(character: Model ) → Observable&lt;DeathReport&gt; Observes killer reports for the given character  ","version":null,"tagName":"h3"},{"title":"ObserveCharacterDeathReports​","type":1,"pageTitle":"DeathReportServiceClient","url":"/NevermoreEngine/api/DeathReportServiceClient#ObserveCharacterDeathReports","content":"&lt;/&gt; DeathReportServiceClient:ObserveCharacterDeathReports(character: Model ) → Observable&lt;DeathReport&gt; Observes killer reports for the given character  ","version":null,"tagName":"h3"},{"title":"GetLastDeathReports​","type":1,"pageTitle":"DeathReportServiceClient","url":"/NevermoreEngine/api/DeathReportServiceClient#GetLastDeathReports","content":"&lt;/&gt; DeathReportServiceClient:GetLastDeathReports() → {DeathReport} Gets the last recorded death reports ","version":null,"tagName":"h3"},{"title":"DeathReportServiceConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DeathReportServiceConstants","content":"DeathReportServiceConstants","keywords":"","version":null},{"title":"DeathReportUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DeathReportUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"DeathReportUtils","url":"/NevermoreEngine/api/DeathReportUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"fromDeceasedHumanoid​","type":1,"pageTitle":"DeathReportUtils","url":"/NevermoreEngine/api/DeathReportUtils#fromDeceasedHumanoid","content":"&lt;/&gt; DeathReportUtils.fromDeceasedHumanoid( humanoid: Humanomid, weaponData: WeaponData ) → DeathReport Constructs a new DeathReport from a humanoid  ","version":null,"tagName":"h3"},{"title":"isDeathReport​","type":1,"pageTitle":"DeathReportUtils","url":"/NevermoreEngine/api/DeathReportUtils#isDeathReport","content":"&lt;/&gt; DeathReportUtils.isDeathReport(deathReport: any) → boolean Returns true if a DeathReport  ","version":null,"tagName":"h3"},{"title":"isWeaponData​","type":1,"pageTitle":"DeathReportUtils","url":"/NevermoreEngine/api/DeathReportUtils#isWeaponData","content":"&lt;/&gt; DeathReportUtils.isWeaponData(weaponData: any) → boolean Returns true if a WeaponData  ","version":null,"tagName":"h3"},{"title":"createWeaponData​","type":1,"pageTitle":"DeathReportUtils","url":"/NevermoreEngine/api/DeathReportUtils#createWeaponData","content":"&lt;/&gt; DeathReportUtils.createWeaponData(weaponInstance: Instance? ) → WeaponData Creates weapon data information  ","version":null,"tagName":"h3"},{"title":"getDeadDisplayName​","type":1,"pageTitle":"DeathReportUtils","url":"/NevermoreEngine/api/DeathReportUtils#getDeadDisplayName","content":"&lt;/&gt; DeathReportUtils.getDeadDisplayName(deathReport: DeathReport) → string Gets the dead display name for the player who died.  ","version":null,"tagName":"h3"},{"title":"involvesPlayer​","type":1,"pageTitle":"DeathReportUtils","url":"/NevermoreEngine/api/DeathReportUtils#involvesPlayer","content":"&lt;/&gt; DeathReportUtils.involvesPlayer( deathReport: DeathReport, player: Player ) → string Returns true if the death involves another player  ","version":null,"tagName":"h3"},{"title":"getKillerDisplayName​","type":1,"pageTitle":"DeathReportUtils","url":"/NevermoreEngine/api/DeathReportUtils#getKillerDisplayName","content":"&lt;/&gt; DeathReportUtils.getKillerDisplayName(deathReport: DeathReport) → string? Gets the killer display name for the player who died.  ","version":null,"tagName":"h3"},{"title":"getDeadColor​","type":1,"pageTitle":"DeathReportUtils","url":"/NevermoreEngine/api/DeathReportUtils#getDeadColor","content":"&lt;/&gt; DeathReportUtils.getDeadColor(deathReport: DeathReport) → Color3?  Returns the dead's color  ","version":null,"tagName":"h3"},{"title":"getKillerColor​","type":1,"pageTitle":"DeathReportUtils","url":"/NevermoreEngine/api/DeathReportUtils#getKillerColor","content":"&lt;/&gt; DeathReportUtils.getKillerColor(deathReport: DeathReport) → Color3?  Returns the killer's color  ","version":null,"tagName":"h3"},{"title":"getDefaultColor​","type":1,"pageTitle":"DeathReportUtils","url":"/NevermoreEngine/api/DeathReportUtils#getDefaultColor","content":"&lt;/&gt; DeathReportUtils.getDefaultColor() → Color3  Gets the default color of a death report to use. ","version":null,"tagName":"h3"},{"title":"DeathTrackedHumanoid","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DeathTrackedHumanoid","content":"DeathTrackedHumanoid","keywords":"","version":null},{"title":"DebounceTimer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DebounceTimer","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"DebounceTimer","url":"/NevermoreEngine/api/DebounceTimer#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"DebounceTimer","url":"/NevermoreEngine/api/DebounceTimer#new","content":"&lt;/&gt; DebounceTimer.new(length: number) → DebounceTimer   ","version":null,"tagName":"h3"},{"title":"SetLength​","type":1,"pageTitle":"DebounceTimer","url":"/NevermoreEngine/api/DebounceTimer#SetLength","content":"&lt;/&gt; DebounceTimer.SetLength( self: DebounceTimer, length: number ) → () Gets the length  ","version":null,"tagName":"h3"},{"title":"Restart​","type":1,"pageTitle":"DebounceTimer","url":"/NevermoreEngine/api/DebounceTimer#Restart","content":"&lt;/&gt; DebounceTimer.Restart(self: DebounceTimer) → () Restarts the timer  ","version":null,"tagName":"h3"},{"title":"IsRunning​","type":1,"pageTitle":"DebounceTimer","url":"/NevermoreEngine/api/DebounceTimer#IsRunning","content":"&lt;/&gt; DebounceTimer.IsRunning(self: DebounceTimer) → boolean Returns whether or not the timer is running.  ","version":null,"tagName":"h3"},{"title":"GetTimeRemaining​","type":1,"pageTitle":"DebounceTimer","url":"/NevermoreEngine/api/DebounceTimer#GetTimeRemaining","content":"&lt;/&gt; DebounceTimer.GetTimeRemaining(self: DebounceTimer) → number Returns the amount of time remaining in the timer.  ","version":null,"tagName":"h3"},{"title":"IsDone​","type":1,"pageTitle":"DebounceTimer","url":"/NevermoreEngine/api/DebounceTimer#IsDone","content":"&lt;/&gt; DebounceTimer.IsDone(self: DebounceTimer) → boolean Returns if the timer is done ","version":null,"tagName":"h3"},{"title":"debounce","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/debounce","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"debounce","url":"/NevermoreEngine/api/debounce#functions","content":" ","version":null,"tagName":"h2"},{"title":"debounce​","type":1,"pageTitle":"debounce","url":"/NevermoreEngine/api/debounce#debounce","content":"&lt;/&gt; debounce.debounce( timeoutInSeconds: number, func: function ) → (...) → () Provides a debounce function call on an operation ","version":null,"tagName":"h3"},{"title":"DefaultValueUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DefaultValueUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"DefaultValueUtils","url":"/NevermoreEngine/api/DefaultValueUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getDefaultValueForType​","type":1,"pageTitle":"DefaultValueUtils","url":"/NevermoreEngine/api/DefaultValueUtils#getDefaultValueForType","content":"&lt;/&gt; DefaultValueUtils.getDefaultValueForType(typeOfName: string) → any Returns the default value for a given value type. If the type is mutable than a new value will ge cosntructed.  ","version":null,"tagName":"h3"},{"title":"toDefaultValue​","type":1,"pageTitle":"DefaultValueUtils","url":"/NevermoreEngine/api/DefaultValueUtils#toDefaultValue","content":"&lt;/&gt; DefaultValueUtils.toDefaultValue(value: T) → T Converts this value to its default value. If it's a table, it applies it recursively. ","version":null,"tagName":"h3"},{"title":"deferred","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/deferred","content":"deferred This was deprecated in 2.0.1 This item is deprecated. Do not use it for new work. An expensive way to spawn a function. However, unlike spawn(), it executes on the same frame, and unlike coroutines, does not obscure errors","keywords":"","version":null},{"title":"DependencyUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DependencyUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"DependencyUtils","url":"/NevermoreEngine/api/DependencyUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"findDependency​","type":1,"pageTitle":"DependencyUtils","url":"/NevermoreEngine/api/DependencyUtils#findDependency","content":"&lt;/&gt; DependencyUtils.findDependency( requester: Instance , moduleName: string, requestedReplicationType: ReplicationType ) → ModuleScript?  Iteratively searches for a dependency based upon packages and current modules using the node_modules dependency resolution algorithm. ","version":null,"tagName":"h3"},{"title":"DisableHatParticles","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DisableHatParticles","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"DisableHatParticles","url":"/NevermoreEngine/api/DisableHatParticles#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"DisableHatParticles","url":"/NevermoreEngine/api/DisableHatParticles#new","content":"&lt;/&gt; DisableHatParticles.new( character: Model -- The character to disable particles for ) → DisableHatParticles Disables all particles and sounds in hats for the lifetime of the object ","version":null,"tagName":"h3"},{"title":"DepthOfFieldEffect","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DepthOfFieldEffect","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"DepthOfFieldEffect","url":"/NevermoreEngine/api/DepthOfFieldEffect#functions","content":" ","version":null,"tagName":"h2"},{"title":"SetFocusDistanceTarget​","type":1,"pageTitle":"DepthOfFieldEffect","url":"/NevermoreEngine/api/DepthOfFieldEffect#SetFocusDistanceTarget","content":"&lt;/&gt; DepthOfFieldEffect.SetFocusDistanceTarget( self: DepthOfFieldEffect, focusDistanceTarget: number, doNotAnimate: boolean ) → () Sets the target depth of field distance  ","version":null,"tagName":"h3"},{"title":"SetInFocusRadiusTarget​","type":1,"pageTitle":"DepthOfFieldEffect","url":"/NevermoreEngine/api/DepthOfFieldEffect#SetInFocusRadiusTarget","content":"&lt;/&gt; DepthOfFieldEffect.SetInFocusRadiusTarget( self: DepthOfFieldEffect, inFocusRadiusTarget: number, doNotAnimate: boolean ) → () Sets the target depth of field radius  ","version":null,"tagName":"h3"},{"title":"SetNearIntensityTarget​","type":1,"pageTitle":"DepthOfFieldEffect","url":"/NevermoreEngine/api/DepthOfFieldEffect#SetNearIntensityTarget","content":"&lt;/&gt; DepthOfFieldEffect.SetNearIntensityTarget( self: DepthOfFieldEffect, nearIntensityTarget: number, doNotAnimate: boolean ) → () Sets the near intensity target  ","version":null,"tagName":"h3"},{"title":"SetFarIntensityTarget​","type":1,"pageTitle":"DepthOfFieldEffect","url":"/NevermoreEngine/api/DepthOfFieldEffect#SetFarIntensityTarget","content":"&lt;/&gt; DepthOfFieldEffect.SetFarIntensityTarget( self: DepthOfFieldEffect, farIntensityTarget: number, doNotAnimate: boolean ) → () Sets the far intensity target  ","version":null,"tagName":"h3"},{"title":"GetFocusDistanceTarget​","type":1,"pageTitle":"DepthOfFieldEffect","url":"/NevermoreEngine/api/DepthOfFieldEffect#GetFocusDistanceTarget","content":"&lt;/&gt; DepthOfFieldEffect.GetFocusDistanceTarget(self: DepthOfFieldEffect) → number Retrieves the distance target  ","version":null,"tagName":"h3"},{"title":"GetInFocusRadiusTarget​","type":1,"pageTitle":"DepthOfFieldEffect","url":"/NevermoreEngine/api/DepthOfFieldEffect#GetInFocusRadiusTarget","content":"&lt;/&gt; DepthOfFieldEffect.GetInFocusRadiusTarget(self: DepthOfFieldEffect) → number Retrieves the radius target  ","version":null,"tagName":"h3"},{"title":"GetNearIntensityTarget​","type":1,"pageTitle":"DepthOfFieldEffect","url":"/NevermoreEngine/api/DepthOfFieldEffect#GetNearIntensityTarget","content":"&lt;/&gt; DepthOfFieldEffect.GetNearIntensityTarget(self: DepthOfFieldEffect) → number Retrieve the near intensity target  ","version":null,"tagName":"h3"},{"title":"GetFarIntensityTarget​","type":1,"pageTitle":"DepthOfFieldEffect","url":"/NevermoreEngine/api/DepthOfFieldEffect#GetFarIntensityTarget","content":"&lt;/&gt; DepthOfFieldEffect.GetFarIntensityTarget(self: DepthOfFieldEffect) → number Retrieve the far intensity target ","version":null,"tagName":"h3"},{"title":"DefaultCamera","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DefaultCamera","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"DefaultCamera","url":"/NevermoreEngine/api/DefaultCamera#properties","content":" ","version":null,"tagName":"h2"},{"title":"CameraState​","type":1,"pageTitle":"DefaultCamera","url":"/NevermoreEngine/api/DefaultCamera#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; DefaultCamera.CameraState: CameraState The current state. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"DefaultCamera","url":"/NevermoreEngine/api/DefaultCamera#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"DefaultCamera","url":"/NevermoreEngine/api/DefaultCamera#new","content":"&lt;/&gt; DefaultCamera.new() → DefaultCamera Constructs a new DefaultCamera  ","version":null,"tagName":"h3"},{"title":"SetRobloxFieldOfView​","type":1,"pageTitle":"DefaultCamera","url":"/NevermoreEngine/api/DefaultCamera#SetRobloxFieldOfView","content":"&lt;/&gt; DefaultCamera.SetRobloxFieldOfView( self: DefaultCamera, fieldOfView: number ) → () Overrides the global field of view in the cached camera state  ","version":null,"tagName":"h3"},{"title":"SetRobloxCameraState​","type":1,"pageTitle":"DefaultCamera","url":"/NevermoreEngine/api/DefaultCamera#SetRobloxCameraState","content":"&lt;/&gt; DefaultCamera.SetRobloxCameraState( self: DefaultCamera, cameraState: CameraState ) → () Sets the Roblox camera state to look at things  ","version":null,"tagName":"h3"},{"title":"SetRobloxCFrame​","type":1,"pageTitle":"DefaultCamera","url":"/NevermoreEngine/api/DefaultCamera#SetRobloxCFrame","content":"&lt;/&gt; DefaultCamera.SetRobloxCFrame( self: DefaultCamera, cframe: CFrame ) → () Sets the CFrame of the Roblox Camera  ","version":null,"tagName":"h3"},{"title":"GetRobloxCameraState​","type":1,"pageTitle":"DefaultCamera","url":"/NevermoreEngine/api/DefaultCamera#GetRobloxCameraState","content":"&lt;/&gt; DefaultCamera.GetRobloxCameraState(self: DefaultCamera) → CameraState Gets the current Roblox camera state, free of any influence  ","version":null,"tagName":"h3"},{"title":"SetLastSetCameraFrame​","type":1,"pageTitle":"DefaultCamera","url":"/NevermoreEngine/api/DefaultCamera#SetLastSetCameraFrame","content":"&lt;/&gt; DefaultCamera.SetLastSetCameraFrame( self: DefaultCamera, cameraFrame: CameraState | nil ) → () Sets the camera state different  ","version":null,"tagName":"h3"},{"title":"IsFirstPerson​","type":1,"pageTitle":"DefaultCamera","url":"/NevermoreEngine/api/DefaultCamera#IsFirstPerson","content":"&lt;/&gt; DefaultCamera.IsFirstPerson(self: DefaultCamera) → boolean Gets whether the Roblox camera is in first person  ","version":null,"tagName":"h3"},{"title":"ObserveIsFirstPerson​","type":1,"pageTitle":"DefaultCamera","url":"/NevermoreEngine/api/DefaultCamera#ObserveIsFirstPerson","content":"&lt;/&gt; DefaultCamera.ObserveIsFirstPerson(self: DefaultCamera) → Observable&lt;boolean&gt; Gets whether the Roblox camera is in first person  ","version":null,"tagName":"h3"},{"title":"ObserveIsFirstPersonBrio​","type":1,"pageTitle":"DefaultCamera","url":"/NevermoreEngine/api/DefaultCamera#ObserveIsFirstPersonBrio","content":"&lt;/&gt; DefaultCamera.ObserveIsFirstPersonBrio( self: DefaultCamera, predicate: ((inFirstPerson: boolean) → boolean)? ) → Observable&lt;Brio&lt;boolean&gt;&gt; Gets whether the Roblox camera is in first person  ","version":null,"tagName":"h3"},{"title":"BindToRenderStep​","type":1,"pageTitle":"DefaultCamera","url":"/NevermoreEngine/api/DefaultCamera#BindToRenderStep","content":"&lt;/&gt; DefaultCamera.BindToRenderStep(self: DefaultCamera) → Maid.Maid Binds the camera to RunService RenderStepped event. TIP Be sure to call UnbindFromRenderStep when using this.  ","version":null,"tagName":"h3"},{"title":"UnbindFromRenderStep​","type":1,"pageTitle":"DefaultCamera","url":"/NevermoreEngine/api/DefaultCamera#UnbindFromRenderStep","content":"&lt;/&gt; DefaultCamera.UnbindFromRenderStep(self: DefaultCamera) → () Unbinds the camera from the RunService  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"DefaultCamera","url":"/NevermoreEngine/api/DefaultCamera#Destroy","content":"&lt;/&gt; DefaultCamera.Destroy(self: DefaultCamera) → () Cleans up the binding ","version":null,"tagName":"h3"},{"title":"DuckTypeUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/DuckTypeUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"DuckTypeUtils","url":"/NevermoreEngine/api/DuckTypeUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"isImplementation​","type":1,"pageTitle":"DuckTypeUtils","url":"/NevermoreEngine/api/DuckTypeUtils#isImplementation","content":"&lt;/&gt; DuckTypeUtils.isImplementation( template: table, target: any ) → boolean Returns true if a template is similar to a target ","version":null,"tagName":"h3"},{"title":"EllipticCurveCryptography","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/EllipticCurveCryptography","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"EllipticCurveCryptography","url":"/NevermoreEngine/api/EllipticCurveCryptography#functions","content":" ","version":null,"tagName":"h2"},{"title":"isByteTable​","type":1,"pageTitle":"EllipticCurveCryptography","url":"/NevermoreEngine/api/EllipticCurveCryptography#isByteTable","content":"&lt;/&gt; EllipticCurveCryptography.isByteTable(key: any) → boolean Returns true if it's an ByteTable  ","version":null,"tagName":"h3"},{"title":"createByteTable​","type":1,"pageTitle":"EllipticCurveCryptography","url":"/NevermoreEngine/api/EllipticCurveCryptography#createByteTable","content":"&lt;/&gt; EllipticCurveCryptography.createByteTable(value: any) → () Adds the byte table to the value  ","version":null,"tagName":"h3"},{"title":"encrypt​","type":1,"pageTitle":"EllipticCurveCryptography","url":"/NevermoreEngine/api/EllipticCurveCryptography#encrypt","content":"&lt;/&gt; EllipticCurveCryptography.encrypt( data: string | ByteTable, key: ByteTable ) → ByteTable Encrypts the data using the shared secret local data = &quot;Hello&quot; local sharedSecret = ECC.exchange(serverPrivate, clientPublic) local encryptedData = ECC.encrypt(data, sharedSecret) -- Ensures the output is consistent local signature = ECC.sign(clientPrivate, data) -- These 2 items are the output print(encryptedData, signature)   ","version":null,"tagName":"h3"},{"title":"decrypt​","type":1,"pageTitle":"EllipticCurveCryptography","url":"/NevermoreEngine/api/EllipticCurveCryptography#decrypt","content":"&lt;/&gt; EllipticCurveCryptography.decrypt( data: string | ByteTable, key: ByteTable ) → ByteTable Decrypts the data using the shared secret local sharedSecret = ECC.exchange(serverPrivate, clientPublic) local data = ECC.decrypt(encryptedData, sharedSecret) print(tostring(data))   ","version":null,"tagName":"h3"},{"title":"keypair​","type":1,"pageTitle":"EllipticCurveCryptography","url":"/NevermoreEngine/api/EllipticCurveCryptography#keypair","content":"&lt;/&gt; EllipticCurveCryptography.keypair(seed: number) → ( ByteTable,-- privateKey ByteTable-- publicKey ) Exchanges a private and public key to get a shared secret from two public keys. local ECC = require(&quot;EllipticCurveCryptography&quot;) local serverPrivate, serverPublic = ECC.keypair(ECC.random.random()) local sharedSecret = ECC.exchange(serverPrivate, clientPublic)   ","version":null,"tagName":"h3"},{"title":"exchange​","type":1,"pageTitle":"EllipticCurveCryptography","url":"/NevermoreEngine/api/EllipticCurveCryptography#exchange","content":"&lt;/&gt; EllipticCurveCryptography.exchange( privateKey: ByteTable, publicKey: ByteTable ) → ByteTable Exchanges a private and public key to get a shared secret from two public keys. This allows for each the client and the server to encrypt and send data to each other securely. local ECC = require(&quot;EllipticCurveCryptography&quot;) local serverPrivate, serverPublic = ECC.keypair(ECC.random.random()) local sharedSecret = ECC.exchange(serverPrivate, clientPublic),   ","version":null,"tagName":"h3"},{"title":"sign​","type":1,"pageTitle":"EllipticCurveCryptography","url":"/NevermoreEngine/api/EllipticCurveCryptography#sign","content":"&lt;/&gt; EllipticCurveCryptography.sign( privateKey: ByteTable, message: string | EncodedMessage ) → ByteTable Signs the message with a private key local signature = ECC.sign(clientPrivate, data)   ","version":null,"tagName":"h3"},{"title":"verify​","type":1,"pageTitle":"EllipticCurveCryptography","url":"/NevermoreEngine/api/EllipticCurveCryptography#verify","content":"&lt;/&gt; EllipticCurveCryptography.verify( publicKey: ByteTable, message: ByteTable | string, signature: ByteTable ) → () Verifies that the message was signed with the public key and signature and ensures that the value is safe local data = ECC.decrypt(encryptedData, sharedSecret) local verified = ECC.verify(clientPublic, data, signature)  ","version":null,"tagName":"h3"},{"title":"EloMatchResult","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/EloMatchResult","content":"EloMatchResult","keywords":"","version":null},{"title":"EloMatchResultUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/EloMatchResultUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"EloMatchResultUtils","url":"/NevermoreEngine/api/EloMatchResultUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"isEloMatchResult​","type":1,"pageTitle":"EloMatchResultUtils","url":"/NevermoreEngine/api/EloMatchResultUtils#isEloMatchResult","content":"&lt;/&gt; EloMatchResultUtils.isEloMatchResult(matchResult: any) → boolean Checks if the given match result is a valid EloMatchResult.  ","version":null,"tagName":"h3"},{"title":"isEloMatchResultList​","type":1,"pageTitle":"EloMatchResultUtils","url":"/NevermoreEngine/api/EloMatchResultUtils#isEloMatchResultList","content":"&lt;/&gt; EloMatchResultUtils.isEloMatchResultList(eloMatchResultList: any) → boolean Checks if the given match result is a valid EloMatchResult list ","version":null,"tagName":"h3"},{"title":"Draw","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Draw","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#functions","content":" ","version":null,"tagName":"h2"},{"title":"setColor​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#setColor","content":"&lt;/&gt; Draw.setColor( color: Color3 -- The color to set ) → () Sets the Draw's drawing color.  ","version":null,"tagName":"h3"},{"title":"resetColor​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#resetColor","content":"&lt;/&gt; Draw.resetColor() → () Resets the drawing color.  ","version":null,"tagName":"h3"},{"title":"setRandomColor​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#setRandomColor","content":"&lt;/&gt; Draw.setRandomColor() → () Sets the Draw library to use a random color.  ","version":null,"tagName":"h3"},{"title":"line​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#line","content":"&lt;/&gt; Draw.line( start: Vector3 , finish: Vector3 , color: Color3? ,-- Optional parent: Instance? ,-- Optional diameter: numbe?-- Optional ) → Instance  Draws a line between two points Draw.line(Vector3.new(0, 0, 0), Vector3.new(0, 10, 0))   ","version":null,"tagName":"h3"},{"title":"direction​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#direction","content":"&lt;/&gt; Draw.direction( origin: Vector3 , direction: Vector3 , color: Color3 ,-- Optional parent: Instance? ,-- Optional diameter: number?-- Optional ) → Instance  Draws a line in a direction Draw.direction(Vector3.new(0, 0, 0), Vector3.new(0, 10, 0))   ","version":null,"tagName":"h3"},{"title":"spherecast​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#spherecast","content":"&lt;/&gt; Draw.spherecast( origin: Vector3 , radius: number, direction: Vector3 , color: Color3?: , parent: Instance? ) → Folder  Draws a spherecast TIP Unlike WorldRoot:GetPartsInPart(), spherecast does not detect BaseParts that initially intersect the shape. So this draw doesn't render that initial sphere. Draw.spherecast(Vector3.new(0, 0, 0), 10, Vector3.new(0, 10, 0))   ","version":null,"tagName":"h3"},{"title":"blockcast​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#blockcast","content":"&lt;/&gt; Draw.blockcast( cframe: CFrame , size: Vector3 , direction: Vector3 , color: Color3 , parent: Parent ) → Folder  Draws a block cast  ","version":null,"tagName":"h3"},{"title":"triangle​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#triangle","content":"&lt;/&gt; Draw.triangle( pointA: Vector3 , pointB: Vector3 , pointC: Vector3 , color: Color3? ,-- Optional color3 parent: Instance? -- Optional parent ) → Folder  Draws a triangle between 3 points  ","version":null,"tagName":"h3"},{"title":"raycast​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#raycast","content":"&lt;/&gt; Draw.raycast( origin: Vector3 , direction: Vector3 , color: Color3 ,-- Optional parent: Instance? ,-- Optional diameter: number?-- Optional ) → Instance  Draws a raycast for debugging Draw.raycast(origin, direction)   ","version":null,"tagName":"h3"},{"title":"ray​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#ray","content":"&lt;/&gt; Draw.ray( ray: Ray , color: Color3? ,-- Optional color to draw in parent: Instance? ,-- Optional parent diameter: number?-- Optional diameter ) → BasePart  Draws a ray for debugging. local ray = Ray.new(Vector3.new(0, 0, 0), Vector3.new(0, 10, 0)) Draw.ray(ray)   ","version":null,"tagName":"h3"},{"title":"updateRay​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#updateRay","content":"&lt;/&gt; Draw.updateRay( rayPart: Instance ,-- Ray part ray: Ray ,-- New ray color: Color3? ,-- New color diameter: number?-- Number ) → () Updates the rendered ray to the new color and position. Used for certain scenarios when updating a ray on renderstepped would impact performance, even in debug mode. local ray = Ray.new(Vector3.new(0, 0, 0), Vector3.new(0, 10, 0)) local drawn = Draw.ray(ray) RunService.RenderStepped:Connect(function() local newRay = Ray.new(Vector3.new(0, 0, 0), Vector3.new(0, 10*math.sin(os.clock()), 0)) Draw.updateRay(drawn, newRay Color3.new(1, 0.5, 0.5)) end)   ","version":null,"tagName":"h3"},{"title":"text​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#text","content":"&lt;/&gt; Draw.text( adornee: Instance | Vector3 ,-- Adornee to rener on text: string,-- Text to render color: Color3? -- Optional color to render ) → Instance  Render text in 3D for debugging. The text container will be sized to fit the text. Draw.text(Vector3.new(0, 10, 0), &quot;Point&quot;)   ","version":null,"tagName":"h3"},{"title":"sphere​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#sphere","content":"&lt;/&gt; Draw.sphere( position: Vector3 ,-- Position of the sphere radius: number,-- Radius of the sphere color: Color3? ,-- Optional color parent: Instance? -- Optional parent ) → BasePart  Renders a sphere at the given point in 3D space. Draw.sphere(Vector3.new(0, 10, 0), 10) Great for debugging explosions and stuff.  ","version":null,"tagName":"h3"},{"title":"point​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#point","content":"&lt;/&gt; Draw.point( position: Vector3 | CFrame ,-- Point to Draw color: Color3? ,-- Optional color parent: Instance? ,-- Optional parent diameter: number?-- Optional diameter ) → BasePart  Draws a point for debugging in 3D space. Draw.point(Vector3.new(0, 25, 0), Color3.new(0.5, 1, 0.5))   ","version":null,"tagName":"h3"},{"title":"labelledPoint​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#labelledPoint","content":"&lt;/&gt; Draw.labelledPoint( position: Vector3 | CFrame ,-- Position to render label: string,-- Label to render on the point color: Color3? ,-- Optional color parent: Instance? -- Optional parent ) → BasePart  Renders a point with a label in 3D space. Draw.labelledPoint(Vector3.new(0, 10, 0), &quot;AI target&quot;)   ","version":null,"tagName":"h3"},{"title":"cframe​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#cframe","content":"&lt;/&gt; Draw.cframe(cframe: CFrame ) → Model  Renders a CFrame in 3D space. Includes each axis. Draw.cframe(CFrame.Angles(0, math.pi/8, 0))   ","version":null,"tagName":"h3"},{"title":"part​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#part","content":"&lt;/&gt; Draw.part( template: BasePart , cframe: CFrame , color: Color3? , transparency: number? ) → BasePart  Draws a part in 3D space Draw.part(part, Color3.new(1, 1, 1))   ","version":null,"tagName":"h3"},{"title":"box​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#box","content":"&lt;/&gt; Draw.box( cframe: CFrame | Vector3 ,-- CFrame of the box size: Vector3 ,-- Size of the box color: Color3? -- Optional Color3 ) → BasePart  Renders a box in 3D space. Great for debugging bounding boxes. Draw.box(Vector3.new(0, 5, 0), Vector3.new(10, 10, 10))   ","version":null,"tagName":"h3"},{"title":"region3​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#region3","content":"&lt;/&gt; Draw.region3( region3: Region3 ,-- Region3 to render color: Color3? -- Optional color3 ) → BasePart  Renders a region3 in 3D space. Draw.region3(Region3.new(Vector3.new(0, 0, 0), Vector3.new(10, 10, 10)))   ","version":null,"tagName":"h3"},{"title":"terrainCell​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#terrainCell","content":"&lt;/&gt; Draw.terrainCell( position: Vector3 ,-- World space position color: Color3? -- Optional color to render ) → BasePart  Renders a terrain cell in 3D space. Snaps the position to the nearest position. Draw.terrainCell(Vector3.new(0, 0, 0))   ","version":null,"tagName":"h3"},{"title":"screenPointLine​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#screenPointLine","content":"&lt;/&gt; Draw.screenPointLine( a: Vector2 , b: Vector2 , parent: Instance? , color: Color3Like ) → Frame  Draws a screen point line  ","version":null,"tagName":"h3"},{"title":"screenPoint​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#screenPoint","content":"&lt;/&gt; Draw.screenPoint( position: Vector2 , parent: Instance , color: Color3Like?, diameter: number? ) → Frame  Draws a screen point  ","version":null,"tagName":"h3"},{"title":"vector​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#vector","content":"&lt;/&gt; Draw.vector( position: Vector3 ,-- Position of the vector direction: Vector3 ,-- Direction of the vector. Determines length. color: Color3? ,-- Optional color parent: Instance? ,-- Optional instance meshDiameter: number?-- Optional diameter ) → BasePart  Draws a vector in 3D space. Draw.vector(Vector3.new(0, 0, 0), Vector3.new(0, 1, 0))   ","version":null,"tagName":"h3"},{"title":"ring​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#ring","content":"&lt;/&gt; Draw.ring( position: Vector3 ,-- Position of the center of the ring normal: Vector3 ,-- Direction of the ring. radius: number?,-- Optional radius for the ring color: Color3? ,-- Optional color parent: Instance? -- Optional instance ) → BasePart  Draws a ring in 3D space. Draw.ring(Vector3.new(0, 0, 0), Vector3.new(0, 1, 0), 10)   ","version":null,"tagName":"h3"},{"title":"getDefaultParent​","type":1,"pageTitle":"Draw","url":"/NevermoreEngine/api/Draw#getDefaultParent","content":"&lt;/&gt; Draw.getDefaultParent() → Instance  Retrieves the default parent for the current execution context. ","version":null,"tagName":"h3"},{"title":"EnabledMixin","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/EnabledMixin","content":"EnabledMixin Adds Enabled/Disabled state to class","keywords":"","version":null},{"title":"EncodedAttributeValue","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/EncodedAttributeValue","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"EncodedAttributeValue","url":"/NevermoreEngine/api/EncodedAttributeValue#properties","content":" ","version":null,"tagName":"h2"},{"title":"Value​","type":1,"pageTitle":"EncodedAttributeValue","url":"/NevermoreEngine/api/EncodedAttributeValue#Value","content":"&lt;/&gt; EncodedAttributeValue.Value: T The current property of the Attribute. Can be assigned to to write the attribute.  ","version":null,"tagName":"h3"},{"title":"Changed​","type":1,"pageTitle":"EncodedAttributeValue","url":"/NevermoreEngine/api/EncodedAttributeValue#Changed","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; EncodedAttributeValue.Changed: Signal&lt;()&gt; Signal that fires when the attribute changes ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"EncodedAttributeValue","url":"/NevermoreEngine/api/EncodedAttributeValue#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"EncodedAttributeValue","url":"/NevermoreEngine/api/EncodedAttributeValue#new","content":"&lt;/&gt; EncodedAttributeValue.new( object: Instance , attributeName: string, encode: (TValue) → T, decode: (T) → TValue, defaultValue: T? ) → EncodedAttributeValue&lt;T,TValue&gt; Constructs a new EncodedAttributeValue. If a defaultValue that is not nil is defined, then this value will be set on the Roblox object.  ","version":null,"tagName":"h3"},{"title":"ObserveBrio​","type":1,"pageTitle":"EncodedAttributeValue","url":"/NevermoreEngine/api/EncodedAttributeValue#ObserveBrio","content":"&lt;/&gt; EncodedAttributeValue:ObserveBrio(condition: function | nil) → Observable&lt;Brio&lt;any&gt;&gt; Handles observing the value conditionalli  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"EncodedAttributeValue","url":"/NevermoreEngine/api/EncodedAttributeValue#Observe","content":"&lt;/&gt; EncodedAttributeValue:Observe() → Observable&lt;any&gt; Observes an attribute on an instance. ","version":null,"tagName":"h3"},{"title":"EloUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/EloUtils","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"EloUtils","url":"/NevermoreEngine/api/EloUtils#types","content":" ","version":null,"tagName":"h2"},{"title":"EloConfig​","type":1,"pageTitle":"EloUtils","url":"/NevermoreEngine/api/EloUtils#EloConfig","content":"&lt;/&gt; interface EloConfig { factor: number kfactor: number | function initial: number ratingFloor: number groupMultipleResultAsOne: boolean }  ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"EloUtils","url":"/NevermoreEngine/api/EloUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"createConfig​","type":1,"pageTitle":"EloUtils","url":"/NevermoreEngine/api/EloUtils#createConfig","content":"&lt;/&gt; EloUtils.createConfig( config: table?-- Optional table with defaults ) → EloConfig Creates a new elo config.  ","version":null,"tagName":"h3"},{"title":"isEloConfig​","type":1,"pageTitle":"EloUtils","url":"/NevermoreEngine/api/EloUtils#isEloConfig","content":"&lt;/&gt; EloUtils.isEloConfig(config: any) → boolean Returns whether an object is an elo config  ","version":null,"tagName":"h3"},{"title":"getStandardDeviation​","type":1,"pageTitle":"EloUtils","url":"/NevermoreEngine/api/EloUtils#getStandardDeviation","content":"&lt;/&gt; EloUtils.getStandardDeviation(eloConfig: EloConfig) → number Gets the standard deviation of the elo curve  ","version":null,"tagName":"h3"},{"title":"getPercentile​","type":1,"pageTitle":"EloUtils","url":"/NevermoreEngine/api/EloUtils#getPercentile","content":"&lt;/&gt; EloUtils.getPercentile( eloConfig: EloConfig, elo: number ) → number Gets the standard deviation of the elo curve from 0 to 1  ","version":null,"tagName":"h3"},{"title":"percentileToElo​","type":1,"pageTitle":"EloUtils","url":"/NevermoreEngine/api/EloUtils#percentileToElo","content":"&lt;/&gt; EloUtils.percentileToElo( eloConfig: EloConfig, percentile: number ) → number Gets the standard deviation of the elo curve from 0 to 1  ","version":null,"tagName":"h3"},{"title":"getNewElo​","type":1,"pageTitle":"EloUtils","url":"/NevermoreEngine/api/EloUtils#getNewElo","content":"&lt;/&gt; EloUtils.getNewElo( config: EloConfig, playerOneRating: number, playerTwoRating: number, eloMatchResultList: {EloMatchResult} ) → ( number,-- playerOneRating number-- playerTwoRating ) Gets the new score for the player and opponent after a series of matches.  ","version":null,"tagName":"h3"},{"title":"getEloChange​","type":1,"pageTitle":"EloUtils","url":"/NevermoreEngine/api/EloUtils#getEloChange","content":"&lt;/&gt; EloUtils.getEloChange( config: EloConfig, playerOneRating: number, playerTwoRating: number, eloMatchResultList: {EloMatchResult} ) → ( number,-- playerOneRating number-- playerTwoRating ) Gets the change in elo for the given players and the results  ","version":null,"tagName":"h3"},{"title":"getNewPlayerOneScore​","type":1,"pageTitle":"EloUtils","url":"/NevermoreEngine/api/EloUtils#getNewPlayerOneScore","content":"&lt;/&gt; EloUtils.getNewPlayerOneScore( config: EloConfig, playerOneRating: number, playerTwoRating: number, eloMatchResultList: {EloMatchResult} ) → () Gets the new score for the player after a series of matches.  ","version":null,"tagName":"h3"},{"title":"getPlayerOneExpected​","type":1,"pageTitle":"EloUtils","url":"/NevermoreEngine/api/EloUtils#getPlayerOneExpected","content":"&lt;/&gt; EloUtils.getPlayerOneExpected( config: EloConfig, playerOneRating: number, playerTwoRating: number ) → number Compute expected score for a player vs. player given the rating. INFO A player's expected score is their probability of winning plus half their probability of drawing. Thus, an expected score of 0.75 could represent a 75% chance of winning, 25% chance of losing, and 0% chance of drawing  ","version":null,"tagName":"h3"},{"title":"getPlayerOneScoreAdjustment​","type":1,"pageTitle":"EloUtils","url":"/NevermoreEngine/api/EloUtils#getPlayerOneScoreAdjustment","content":"&lt;/&gt; EloUtils.getPlayerOneScoreAdjustment( config: EloConfig, playerOneRating: number, playerTwoRating: number, eloMatchResultList: {EloMatchResult} ) → number Gets the score adjustment for a given player's base.  ","version":null,"tagName":"h3"},{"title":"fromOpponentPerspective​","type":1,"pageTitle":"EloUtils","url":"/NevermoreEngine/api/EloUtils#fromOpponentPerspective","content":"&lt;/&gt; EloUtils.fromOpponentPerspective(eloMatchResultList: {EloMatchResult}) → {number} Flips the scores for the opponent  ","version":null,"tagName":"h3"},{"title":"countPlayerOneWins​","type":1,"pageTitle":"EloUtils","url":"/NevermoreEngine/api/EloUtils#countPlayerOneWins","content":"&lt;/&gt; EloUtils.countPlayerOneWins(eloMatchResultList: {EloMatchResult}) → {number} Counts the number of wins for player one  ","version":null,"tagName":"h3"},{"title":"countPlayerTwoWins​","type":1,"pageTitle":"EloUtils","url":"/NevermoreEngine/api/EloUtils#countPlayerTwoWins","content":"&lt;/&gt; EloUtils.countPlayerTwoWins(eloMatchResultList: {EloMatchResult}) → {number} Counts the number of wins for player two  ","version":null,"tagName":"h3"},{"title":"standardKFactorFormula​","type":1,"pageTitle":"EloUtils","url":"/NevermoreEngine/api/EloUtils#standardKFactorFormula","content":"&lt;/&gt; EloUtils.standardKFactorFormula(rating: number) → number Standard kfactor formula for use in the elo config.  ","version":null,"tagName":"h3"},{"title":"extractKFactor​","type":1,"pageTitle":"EloUtils","url":"/NevermoreEngine/api/EloUtils#extractKFactor","content":"&lt;/&gt; EloUtils.extractKFactor( config: EloConfig, rating: number ) → number Computes the kfactor for the given player from the rating ","version":null,"tagName":"h3"},{"title":"EnumUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/EnumUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"EnumUtils","url":"/NevermoreEngine/api/EnumUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"encodeAsString​","type":1,"pageTitle":"EnumUtils","url":"/NevermoreEngine/api/EnumUtils#encodeAsString","content":"&lt;/&gt; EnumUtils.encodeAsString(enumItem: EnumItem ) → EnumItem  Encodes the value as a string. Note the general format will be such that the string is indexed using a regular Lua value. For example: print(EnumUtils.encodeAsString(Enum.KeyCode.E)) --&gt; Enum.KeyCode.E   ","version":null,"tagName":"h3"},{"title":"isOfType​","type":1,"pageTitle":"EnumUtils","url":"/NevermoreEngine/api/EnumUtils#isOfType","content":"&lt;/&gt; EnumUtils.isOfType( expectedEnumType: EnumType, enumItem: any ) → ( boolean,-- True if is of type string-- Error message if there is an error. ) Returns whether an enum is of the expected type. Useful for asserts. assert(EnumUtils.isOfType(Enum.KeyCode, enumItem))   ","version":null,"tagName":"h3"},{"title":"toEnum​","type":1,"pageTitle":"EnumUtils","url":"/NevermoreEngine/api/EnumUtils#toEnum","content":"&lt;/&gt; EnumUtils.toEnum( enumType: EnumType, value: any ) → EnumItem  Attempts to cast an item into an enum  ","version":null,"tagName":"h3"},{"title":"isEncodedEnum​","type":1,"pageTitle":"EnumUtils","url":"/NevermoreEngine/api/EnumUtils#isEncodedEnum","content":"&lt;/&gt; EnumUtils.isEncodedEnum( value: any?-- String to decode ) → boolean Returns true if the value is an encoded enum  ","version":null,"tagName":"h3"},{"title":"decodeFromString​","type":1,"pageTitle":"EnumUtils","url":"/NevermoreEngine/api/EnumUtils#decodeFromString","content":"&lt;/&gt; EnumUtils.decodeFromString( value: string?-- String to decode ) → EnumItem  Decodes the enum from the string name encoding ","version":null,"tagName":"h3"},{"title":"EquippedTracker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/EquippedTracker","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"EquippedTracker","url":"/NevermoreEngine/api/EquippedTracker#properties","content":" ","version":null,"tagName":"h2"},{"title":"Player​","type":1,"pageTitle":"EquippedTracker","url":"/NevermoreEngine/api/EquippedTracker#Player","content":"&lt;/&gt; EquippedTracker.Player: ValueObject&lt;Player &gt; Tracks current equipped player who has an alive humanoid ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"EquippedTracker","url":"/NevermoreEngine/api/EquippedTracker#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"EquippedTracker","url":"/NevermoreEngine/api/EquippedTracker#new","content":"&lt;/&gt; EquippedTracker.new(tool: Tool ) → EquippedTracker Tracks the state of a tool being equipped  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"EquippedTracker","url":"/NevermoreEngine/api/EquippedTracker#Destroy","content":"&lt;/&gt; EquippedTracker:Destroy() → () Cleans up the EquippedTracker ","version":null,"tagName":"h3"},{"title":"EventHandlerUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/EventHandlerUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"EventHandlerUtils","url":"/NevermoreEngine/api/EventHandlerUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"fire​","type":1,"pageTitle":"EventHandlerUtils","url":"/NevermoreEngine/api/EventHandlerUtils#fire","content":"&lt;/&gt; EventHandlerUtils.fire( memoryCategory: string, callback: (T...) → (), ...: T... ) → () Safely fires an event in the given memory category we're in ","version":null,"tagName":"h3"},{"title":"FadeBetweenCamera","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/FadeBetweenCamera","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"FadeBetweenCamera","url":"/NevermoreEngine/api/FadeBetweenCamera#properties","content":" ","version":null,"tagName":"h2"},{"title":"CameraState​","type":1,"pageTitle":"FadeBetweenCamera","url":"/NevermoreEngine/api/FadeBetweenCamera#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; FadeBetweenCamera.CameraState: CameraState The current state. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"FadeBetweenCamera","url":"/NevermoreEngine/api/FadeBetweenCamera#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"FadeBetweenCamera","url":"/NevermoreEngine/api/FadeBetweenCamera#new","content":"&lt;/&gt; FadeBetweenCamera.new( cameraA: CameraLike, cameraB: CameraLike ) → FadeBetweenCamera  ","version":null,"tagName":"h3"},{"title":"ExperienceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ExperienceUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ExperienceUtils","url":"/NevermoreEngine/api/ExperienceUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"createExperienceConfig​","type":1,"pageTitle":"ExperienceUtils","url":"/NevermoreEngine/api/ExperienceUtils#createExperienceConfig","content":"&lt;/&gt; ExperienceUtils.createExperienceConfig(options: ExperienceConfig) → ExperienceConfig Creates a new experience configuration to be used  ","version":null,"tagName":"h3"},{"title":"isExperienceConfig​","type":1,"pageTitle":"ExperienceUtils","url":"/NevermoreEngine/api/ExperienceUtils#isExperienceConfig","content":"&lt;/&gt; ExperienceUtils.isExperienceConfig(value: any) → boolean Returns whether a value is an experience config  ","version":null,"tagName":"h3"},{"title":"getLevel​","type":1,"pageTitle":"ExperienceUtils","url":"/NevermoreEngine/api/ExperienceUtils#getLevel","content":"&lt;/&gt; ExperienceUtils.getLevel( config: ExperienceConfig, totalExperience: number ) → number-- Level Gets the current level from experience.  ","version":null,"tagName":"h3"},{"title":"experienceFromLevel​","type":1,"pageTitle":"ExperienceUtils","url":"/NevermoreEngine/api/ExperienceUtils#experienceFromLevel","content":"&lt;/&gt; ExperienceUtils.experienceFromLevel( config: ExperienceConfig, level: number ) → number-- Total experience required for a level Gets experience required for a current level. Once the experience is equal to this threshold, or greater, then the level is considered earned.  ","version":null,"tagName":"h3"},{"title":"levelExperienceEarned​","type":1,"pageTitle":"ExperienceUtils","url":"/NevermoreEngine/api/ExperienceUtils#levelExperienceEarned","content":"&lt;/&gt; ExperienceUtils.levelExperienceEarned( config: ExperienceConfig, totalExperience: number ) → number For this level only, how much experience is earned.  ","version":null,"tagName":"h3"},{"title":"levelExperienceLeft​","type":1,"pageTitle":"ExperienceUtils","url":"/NevermoreEngine/api/ExperienceUtils#levelExperienceLeft","content":"&lt;/&gt; ExperienceUtils.levelExperienceLeft( config: ExperienceConfig, totalExperience: number ) → number For this level only, how much experience is left to earn.  ","version":null,"tagName":"h3"},{"title":"levelExperienceRequired​","type":1,"pageTitle":"ExperienceUtils","url":"/NevermoreEngine/api/ExperienceUtils#levelExperienceRequired","content":"&lt;/&gt; ExperienceUtils.levelExperienceRequired( config: ExperienceConfig, totalExperience: number-- Current experience of player ) → number-- Total required for next level For this level only, how much experience is required  ","version":null,"tagName":"h3"},{"title":"percentLevelComplete​","type":1,"pageTitle":"ExperienceUtils","url":"/NevermoreEngine/api/ExperienceUtils#percentLevelComplete","content":"&lt;/&gt; ExperienceUtils.percentLevelComplete( config: ExperienceConfig, totalExperience: number ) → number Returns the percent of the level complete ","version":null,"tagName":"h3"},{"title":"FadeBetweenCamera3","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/FadeBetweenCamera3","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"FadeBetweenCamera3","url":"/NevermoreEngine/api/FadeBetweenCamera3#properties","content":" ","version":null,"tagName":"h2"},{"title":"CameraState​","type":1,"pageTitle":"FadeBetweenCamera3","url":"/NevermoreEngine/api/FadeBetweenCamera3#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; FadeBetweenCamera3.CameraState: CameraState The current state. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"FadeBetweenCamera3","url":"/NevermoreEngine/api/FadeBetweenCamera3#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"FadeBetweenCamera3","url":"/NevermoreEngine/api/FadeBetweenCamera3#new","content":"&lt;/&gt; FadeBetweenCamera3.new( cameraA: CameraLike, cameraB: CameraLike ) → FadeBetweenCamera3  ","version":null,"tagName":"h3"},{"title":"FadeBetweenCamera2","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/FadeBetweenCamera2","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"FadeBetweenCamera2","url":"/NevermoreEngine/api/FadeBetweenCamera2#properties","content":" ","version":null,"tagName":"h2"},{"title":"CameraState​","type":1,"pageTitle":"FadeBetweenCamera2","url":"/NevermoreEngine/api/FadeBetweenCamera2#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; FadeBetweenCamera2.CameraState: CameraState The current state. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"FadeBetweenCamera2","url":"/NevermoreEngine/api/FadeBetweenCamera2#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"FadeBetweenCamera2","url":"/NevermoreEngine/api/FadeBetweenCamera2#new","content":"&lt;/&gt; FadeBetweenCamera2.new( cameraA: CameraLike, cameraB: CameraLike ) → FadeBetweenCamera2  ","version":null,"tagName":"h3"},{"title":"FadeBetweenCamera4","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/FadeBetweenCamera4","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"FadeBetweenCamera4","url":"/NevermoreEngine/api/FadeBetweenCamera4#properties","content":" ","version":null,"tagName":"h2"},{"title":"CameraState​","type":1,"pageTitle":"FadeBetweenCamera4","url":"/NevermoreEngine/api/FadeBetweenCamera4#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; FadeBetweenCamera4.CameraState: CameraState The current state. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"FadeBetweenCamera4","url":"/NevermoreEngine/api/FadeBetweenCamera4#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"FadeBetweenCamera4","url":"/NevermoreEngine/api/FadeBetweenCamera4#new","content":"&lt;/&gt; FadeBetweenCamera4.new( cameraA: CameraLike, cameraB: CameraLike ) → FadeBetweenCamera4  ","version":null,"tagName":"h3"},{"title":"FadingCamera","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/FadingCamera","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"FadingCamera","url":"/NevermoreEngine/api/FadingCamera#properties","content":" ","version":null,"tagName":"h2"},{"title":"CameraState​","type":1,"pageTitle":"FadingCamera","url":"/NevermoreEngine/api/FadingCamera#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; FadingCamera.CameraState: CameraState The current state. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"FadingCamera","url":"/NevermoreEngine/api/FadingCamera#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"FadingCamera","url":"/NevermoreEngine/api/FadingCamera#new","content":"&lt;/&gt; FadingCamera.new(camera: CameraEffect) → FadingCamera  ","version":null,"tagName":"h3"},{"title":"FakeSkybox","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/FakeSkybox","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"FakeSkybox","url":"/NevermoreEngine/api/FakeSkybox#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"FakeSkybox","url":"/NevermoreEngine/api/FakeSkybox#new","content":"&lt;/&gt; FakeSkybox.new(skybox: Skybox) → FakeSkybox Creates a new FakeSkybox  ","version":null,"tagName":"h3"},{"title":"SetPartSize​","type":1,"pageTitle":"FakeSkybox","url":"/NevermoreEngine/api/FakeSkybox#SetPartSize","content":"&lt;/&gt; FakeSkybox:SetPartSize(partSize: number) → FakeSkybox-- self   ","version":null,"tagName":"h3"},{"title":"Show​","type":1,"pageTitle":"FakeSkybox","url":"/NevermoreEngine/api/FakeSkybox#Show","content":"&lt;/&gt; FakeSkybox:Show(doNotAnimate: boolean) → ()   ","version":null,"tagName":"h3"},{"title":"Hide​","type":1,"pageTitle":"FakeSkybox","url":"/NevermoreEngine/api/FakeSkybox#Hide","content":"&lt;/&gt; FakeSkybox:Hide(doNotAnimate: boolean) → ()   ","version":null,"tagName":"h3"},{"title":"SetSkybox​","type":1,"pageTitle":"FakeSkybox","url":"/NevermoreEngine/api/FakeSkybox#SetSkybox","content":"&lt;/&gt; FakeSkybox:SetSkybox(skybox: Skybox) → FakeSkybox-- self   ","version":null,"tagName":"h3"},{"title":"IsVisible​","type":1,"pageTitle":"FakeSkybox","url":"/NevermoreEngine/api/FakeSkybox#IsVisible","content":"&lt;/&gt; FakeSkybox:IsVisible() → boolean Returns whether the skybox is visible.  ","version":null,"tagName":"h3"},{"title":"UpdateRender​","type":1,"pageTitle":"FakeSkybox","url":"/NevermoreEngine/api/FakeSkybox#UpdateRender","content":"&lt;/&gt; FakeSkybox:UpdateRender(baseCFrame: CFrame ) → () Updates the rendering  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"FakeSkybox","url":"/NevermoreEngine/api/FakeSkybox#Destroy","content":"&lt;/&gt; FakeSkybox:Destroy() → () Cleans up the fake skybox ","version":null,"tagName":"h3"},{"title":"FakeSkyboxSide","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/FakeSkyboxSide","content":"FakeSkyboxSide","keywords":"","version":null},{"title":"FieldOfViewUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/FieldOfViewUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"FieldOfViewUtils","url":"/NevermoreEngine/api/FieldOfViewUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"fovToHeight​","type":1,"pageTitle":"FieldOfViewUtils","url":"/NevermoreEngine/api/FieldOfViewUtils#fovToHeight","content":"&lt;/&gt; FieldOfViewUtils.fovToHeight(fov: number) → number Converts field of view to height  ","version":null,"tagName":"h3"},{"title":"heightToFov​","type":1,"pageTitle":"FieldOfViewUtils","url":"/NevermoreEngine/api/FieldOfViewUtils#heightToFov","content":"&lt;/&gt; FieldOfViewUtils.heightToFov(height: number) → number Converts height to field of view  ","version":null,"tagName":"h3"},{"title":"safeLog​","type":1,"pageTitle":"FieldOfViewUtils","url":"/NevermoreEngine/api/FieldOfViewUtils#safeLog","content":"&lt;/&gt; FieldOfViewUtils.safeLog( height: number, linearAt: number ) → number Linear way to log a value so we don't get floating point errors or infinite values  ","version":null,"tagName":"h3"},{"title":"safeExp​","type":1,"pageTitle":"FieldOfViewUtils","url":"/NevermoreEngine/api/FieldOfViewUtils#safeExp","content":"&lt;/&gt; FieldOfViewUtils.safeExp( logHeight: number, linearAt: number ) → number Linear way to exponentiate field of view so we don't get floating point errors or infinite values.  ","version":null,"tagName":"h3"},{"title":"lerpInHeightSpace​","type":1,"pageTitle":"FieldOfViewUtils","url":"/NevermoreEngine/api/FieldOfViewUtils#lerpInHeightSpace","content":"&lt;/&gt; FieldOfViewUtils.lerpInHeightSpace( fov0: number, fov1: number, percent: number ) → number-- Fov in degrees Interpolates field of view in height space, instead of degrees. ","version":null,"tagName":"h3"},{"title":"FilteredObservableListView","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/FilteredObservableListView","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"FilteredObservableListView","url":"/NevermoreEngine/api/FilteredObservableListView#functions","content":" ","version":null,"tagName":"h2"},{"title":"ObserveItemsBrio​","type":1,"pageTitle":"FilteredObservableListView","url":"/NevermoreEngine/api/FilteredObservableListView#ObserveItemsBrio","content":"&lt;/&gt; FilteredObservableListView:ObserveItemsBrio() → Observable&lt;Brio&lt;T&gt;&gt; Observes all items in the list  ","version":null,"tagName":"h3"},{"title":"ObserveIndexByKey​","type":1,"pageTitle":"FilteredObservableListView","url":"/NevermoreEngine/api/FilteredObservableListView#ObserveIndexByKey","content":"&lt;/&gt; FilteredObservableListView:ObserveIndexByKey(key: Symbol) → Observable&lt;number&gt; Observes the index as it changes, until the entry at the existing key is removed.  ","version":null,"tagName":"h3"},{"title":"GetCount​","type":1,"pageTitle":"FilteredObservableListView","url":"/NevermoreEngine/api/FilteredObservableListView#GetCount","content":"&lt;/&gt; FilteredObservableListView:GetCount() → number Gets the count of items in the list  ","version":null,"tagName":"h3"},{"title":"ObserveCount​","type":1,"pageTitle":"FilteredObservableListView","url":"/NevermoreEngine/api/FilteredObservableListView#ObserveCount","content":"&lt;/&gt; FilteredObservableListView:ObserveCount() → Observable&lt;number&gt; Observes the count of the list ","version":null,"tagName":"h3"},{"title":"FlipbookLibrary","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/FlipbookLibrary","content":"FlipbookLibrary Holds flipbook data for playback","keywords":"","version":null},{"title":"Flipbook","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Flipbook","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Flipbook","url":"/NevermoreEngine/api/Flipbook#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Flipbook","url":"/NevermoreEngine/api/Flipbook#new","content":"&lt;/&gt; Flipbook.new(data: FlipbookData) → Flipbook ","version":null,"tagName":"h3"},{"title":"Types","type":1,"pageTitle":"Flipbook","url":"/NevermoreEngine/api/Flipbook##","content":"","version":null,"tagName":"h3"},{"title":"​","type":1,"pageTitle":"Flipbook","url":"/NevermoreEngine/api/Flipbook#FlipbookData","content":"interface FlipbookData { image: string frameCount: number rows: number columns: number imageRectSize: Vector2 frameRate: number restFrame: number?-- Optional reset frame }  Constructs a new Flipbook  ","version":null,"tagName":"h3"},{"title":"GetImageRectSize​","type":1,"pageTitle":"Flipbook","url":"/NevermoreEngine/api/Flipbook#GetImageRectSize","content":"&lt;/&gt; Flipbook.GetImageRectSize(self: Flipbook) → Vector2  Gets the sprite size  ","version":null,"tagName":"h3"},{"title":"GetFrameRate​","type":1,"pageTitle":"Flipbook","url":"/NevermoreEngine/api/Flipbook#GetFrameRate","content":"&lt;/&gt; Flipbook.GetFrameRate(self: Flipbook) → number Gets the frames per a second  ","version":null,"tagName":"h3"},{"title":"GetPlayTime​","type":1,"pageTitle":"Flipbook","url":"/NevermoreEngine/api/Flipbook#GetPlayTime","content":"&lt;/&gt; Flipbook.GetPlayTime(self: Flipbook) → number Gets the play time for the animated sheet  ","version":null,"tagName":"h3"},{"title":"GetFrameCount​","type":1,"pageTitle":"Flipbook","url":"/NevermoreEngine/api/Flipbook#GetFrameCount","content":"&lt;/&gt; Flipbook.GetFrameCount(self: Flipbook) → number Retrieves the frames for the sprite sheet. ","version":null,"tagName":"h3"},{"title":"FlipbookPlayer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/FlipbookPlayer","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"FlipbookPlayer","url":"/NevermoreEngine/api/FlipbookPlayer#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"FlipbookPlayer","url":"/NevermoreEngine/api/FlipbookPlayer#new","content":"&lt;/&gt; FlipbookPlayer.new(imageLabel: ImageLabel | ImageButton ) → FlipbookPlayer Constructs a new FlipbookPlayer  ","version":null,"tagName":"h3"},{"title":"SetFlipbook​","type":1,"pageTitle":"FlipbookPlayer","url":"/NevermoreEngine/api/FlipbookPlayer#SetFlipbook","content":"&lt;/&gt; FlipbookPlayer:SetFlipbook(flipbook: Flipbook) → () Sets the current sheet and starts play if needed  ","version":null,"tagName":"h3"},{"title":"GetFlipbook​","type":1,"pageTitle":"FlipbookPlayer","url":"/NevermoreEngine/api/FlipbookPlayer#GetFlipbook","content":"&lt;/&gt; FlipbookPlayer:GetFlipbook() → Flipbook? Gets the current flipbook  ","version":null,"tagName":"h3"},{"title":"PromisePlayOnce​","type":1,"pageTitle":"FlipbookPlayer","url":"/NevermoreEngine/api/FlipbookPlayer#PromisePlayOnce","content":"&lt;/&gt; FlipbookPlayer:PromisePlayOnce() → Promise Plays the flipbook once  ","version":null,"tagName":"h3"},{"title":"PromisePlayRepeat​","type":1,"pageTitle":"FlipbookPlayer","url":"/NevermoreEngine/api/FlipbookPlayer#PromisePlayRepeat","content":"&lt;/&gt; FlipbookPlayer:PromisePlayRepeat(times: number) → Promise Plays the flipbook the number of times specified and then stops.  ","version":null,"tagName":"h3"},{"title":"SetIsBoomarang​","type":1,"pageTitle":"FlipbookPlayer","url":"/NevermoreEngine/api/FlipbookPlayer#SetIsBoomarang","content":"&lt;/&gt; FlipbookPlayer:SetIsBoomarang(isBoomarang: boolean) → () Sets whether play should boomarang  ","version":null,"tagName":"h3"},{"title":"Play​","type":1,"pageTitle":"FlipbookPlayer","url":"/NevermoreEngine/api/FlipbookPlayer#Play","content":"&lt;/&gt; FlipbookPlayer:Play() → () Plays the flipbook indefinitely  ","version":null,"tagName":"h3"},{"title":"Stop​","type":1,"pageTitle":"FlipbookPlayer","url":"/NevermoreEngine/api/FlipbookPlayer#Stop","content":"&lt;/&gt; FlipbookPlayer:Stop() → () Stops the flipbook  ","version":null,"tagName":"h3"},{"title":"IsPlaying​","type":1,"pageTitle":"FlipbookPlayer","url":"/NevermoreEngine/api/FlipbookPlayer#IsPlaying","content":"&lt;/&gt; FlipbookPlayer:IsPlaying() → boolean Returns true if the flipbook is playing  ","version":null,"tagName":"h3"},{"title":"ObserveIsPlaying​","type":1,"pageTitle":"FlipbookPlayer","url":"/NevermoreEngine/api/FlipbookPlayer#ObserveIsPlaying","content":"&lt;/&gt; FlipbookPlayer:ObserveIsPlaying() → Observable&lt;boolean&gt; Observes if the flipbook is playing ","version":null,"tagName":"h3"},{"title":"FunctionUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/FunctionUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"FunctionUtils","url":"/NevermoreEngine/api/FunctionUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"bind​","type":1,"pageTitle":"FunctionUtils","url":"/NevermoreEngine/api/FunctionUtils#bind","content":"&lt;/&gt; FunctionUtils.bind( self: table, func: function ) → function Binds the &quot;self&quot; variable to the function as the first argument ","version":null,"tagName":"h3"},{"title":"FriendUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/FriendUtils","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"FriendUtils","url":"/NevermoreEngine/api/FriendUtils#types","content":" ","version":null,"tagName":"h2"},{"title":"FriendData​","type":1,"pageTitle":"FriendUtils","url":"/NevermoreEngine/api/FriendUtils#FriendData","content":"&lt;/&gt; interface FriendData { Id: number-- The friend's UserId Username: string-- The friend's username DisplayName: string-- The display name of the friend. IsOnline: bool-- If the friend is currently online }  ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"FriendUtils","url":"/NevermoreEngine/api/FriendUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseAllStudioFriends​","type":1,"pageTitle":"FriendUtils","url":"/NevermoreEngine/api/FriendUtils#promiseAllStudioFriends","content":"&lt;/&gt; FriendUtils.promiseAllStudioFriends() → Promise&lt;{FriendData}&gt; Returns the current studio users friends FriendUtils.promiseAllStudioFriends() :Then(function(studioFriends) print(studioFriends) end)   ","version":null,"tagName":"h3"},{"title":"onlineFriends​","type":1,"pageTitle":"FriendUtils","url":"/NevermoreEngine/api/FriendUtils#onlineFriends","content":"&lt;/&gt; FriendUtils.onlineFriends(friends: {FriendData}) → {FriendData} Outputs a list of only online friends  ","version":null,"tagName":"h3"},{"title":"friendsNotInGame​","type":1,"pageTitle":"FriendUtils","url":"/NevermoreEngine/api/FriendUtils#friendsNotInGame","content":"&lt;/&gt; FriendUtils.friendsNotInGame(friends: {FriendData}) → {FriendData} Outputs a list of only friends not in game  ","version":null,"tagName":"h3"},{"title":"promiseAllFriends​","type":1,"pageTitle":"FriendUtils","url":"/NevermoreEngine/api/FriendUtils#promiseAllFriends","content":"&lt;/&gt; FriendUtils.promiseAllFriends( userId: number, limitMaxFriends: number?-- Optional max friends ) → Promise&lt;{FriendData}&gt; Retrieves all friends.  ","version":null,"tagName":"h3"},{"title":"promiseFriendPages​","type":1,"pageTitle":"FriendUtils","url":"/NevermoreEngine/api/FriendUtils#promiseFriendPages","content":"&lt;/&gt; FriendUtils.promiseFriendPages(userId: number) → Promise&lt;FriendPages &gt; Wraps Players.GetFriendsAsync  ","version":null,"tagName":"h3"},{"title":"iterateFriendsYielding​","type":1,"pageTitle":"FriendUtils","url":"/NevermoreEngine/api/FriendUtils#iterateFriendsYielding","content":"&lt;/&gt; FriendUtils.iterateFriendsYielding(pages: FriendPages ) → ()=&gt;FrienData?-- Iterator Iterates over the current FriendPage and returns the next page  ","version":null,"tagName":"h3"},{"title":"promiseStudioServiceUserId​","type":1,"pageTitle":"FriendUtils","url":"/NevermoreEngine/api/FriendUtils#promiseStudioServiceUserId","content":"&lt;/&gt; FriendUtils.promiseStudioServiceUserId() → Promise&lt;number&gt; Gets the current studio user's user id. TIP Consider using FriendUtils.promiseCurrentStudioUserId if you want this code to work while the game is running or in team create. This is specific to StudioService.  ","version":null,"tagName":"h3"},{"title":"promiseCurrentStudioUserId​","type":1,"pageTitle":"FriendUtils","url":"/NevermoreEngine/api/FriendUtils#promiseCurrentStudioUserId","content":"&lt;/&gt; FriendUtils.promiseCurrentStudioUserId() → Promise&lt;number&gt; Gets the current studio user's user id. ","version":null,"tagName":"h3"},{"title":"FontPalette","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/FontPalette","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"FontPalette","url":"/NevermoreEngine/api/FontPalette#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"FontPalette","url":"/NevermoreEngine/api/FontPalette#new","content":"&lt;/&gt; FontPalette.new() → FontPallete Constructs a new font palette.  ","version":null,"tagName":"h3"},{"title":"GetFontNames​","type":1,"pageTitle":"FontPalette","url":"/NevermoreEngine/api/FontPalette#GetFontNames","content":"&lt;/&gt; FontPalette.GetFontNames(self: FontPalette) → {string} Gets all available font names  ","version":null,"tagName":"h3"},{"title":"ObserveFontNames​","type":1,"pageTitle":"FontPalette","url":"/NevermoreEngine/api/FontPalette#ObserveFontNames","content":"&lt;/&gt; FontPalette.ObserveFontNames(self: FontPalette) → Observable&lt;string&gt; Observes all available font names as they are added starting with existing fonts.  ","version":null,"tagName":"h3"},{"title":"ObserveFontNamesBrio​","type":1,"pageTitle":"FontPalette","url":"/NevermoreEngine/api/FontPalette#ObserveFontNamesBrio","content":"&lt;/&gt; FontPalette.ObserveFontNamesBrio(self: FontPalette) → Observable&lt;Brio&lt;string&gt;&gt; Observes all available font names as they are added starting with existing fonts.  ","version":null,"tagName":"h3"},{"title":"GetFont​","type":1,"pageTitle":"FontPalette","url":"/NevermoreEngine/api/FontPalette#GetFont","content":"&lt;/&gt; FontPalette.GetFont( self: FontPalette, fontName: string ) → Enum.Font Gets a font from name  ","version":null,"tagName":"h3"},{"title":"ObserveFont​","type":1,"pageTitle":"FontPalette","url":"/NevermoreEngine/api/FontPalette#ObserveFont","content":"&lt;/&gt; FontPalette.ObserveFont( self: FontPalette, fontName: string ) → Observe&lt;Enum.Font&gt; Observes a font from name  ","version":null,"tagName":"h3"},{"title":"ObserveFontFace​","type":1,"pageTitle":"FontPalette","url":"/NevermoreEngine/api/FontPalette#ObserveFontFace","content":"&lt;/&gt; FontPalette.ObserveFontFace( self: FontPalette, fontName: string, weight: (FontWeight | Observable&lt;FontWeight &gt;)?, style: (FontStyle | Observable&lt;FontStyle &gt;)? ) → Observable&lt;Font &gt; Observes the curent font face defined for the font name  ","version":null,"tagName":"h3"},{"title":"GetFontFaceValue​","type":1,"pageTitle":"FontPalette","url":"/NevermoreEngine/api/FontPalette#GetFontFaceValue","content":"&lt;/&gt; FontPalette.GetFontFaceValue( self: FontPalette, fontName: string ) → ValueObject&lt;Font &gt; Gets a font value object for a given font.  ","version":null,"tagName":"h3"},{"title":"GetFontValue​","type":1,"pageTitle":"FontPalette","url":"/NevermoreEngine/api/FontPalette#GetFontValue","content":"&lt;/&gt; FontPalette.GetFontValue( self: FontPalette, fontName: string ) → ValueObject&lt;Font &gt; Gets a font value object for a given font.  ","version":null,"tagName":"h3"},{"title":"GetDefaultFontMap​","type":1,"pageTitle":"FontPalette","url":"/NevermoreEngine/api/FontPalette#GetDefaultFontMap","content":"&lt;/&gt; FontPalette.GetDefaultFontMap(self: FontPalette) → {string: Font | Enum.Font} Gets the default font map  ","version":null,"tagName":"h3"},{"title":"DefineFont​","type":1,"pageTitle":"FontPalette","url":"/NevermoreEngine/api/FontPalette#DefineFont","content":"&lt;/&gt; FontPalette.DefineFont( self: FontPalette, fontName: string, defaultFont: Enum.Font | Font ) → ValueObject&lt;Enum.Font&gt; Defines a new font into the palette which can be changed over time. ","version":null,"tagName":"h3"},{"title":"FunnelStepLogger","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/FunnelStepLogger","content":"FunnelStepLogger Server-side funnel logger","keywords":"","version":null},{"title":"FunnelStepTracker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/FunnelStepTracker","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"FunnelStepTracker","url":"/NevermoreEngine/api/FunnelStepTracker#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"FunnelStepTracker","url":"/NevermoreEngine/api/FunnelStepTracker#new","content":"&lt;/&gt; FunnelStepTracker.new() → FunnelStepTracker Constructs a new FunnelStepTracker  ","version":null,"tagName":"h3"},{"title":"LogStep​","type":1,"pageTitle":"FunnelStepTracker","url":"/NevermoreEngine/api/FunnelStepTracker#LogStep","content":"&lt;/&gt; FunnelStepTracker.LogStep( self: FunnelStepTracker, stepNumber: number, stepName: string ) → () Logs a step  ","version":null,"tagName":"h3"},{"title":"IsStepComplete​","type":1,"pageTitle":"FunnelStepTracker","url":"/NevermoreEngine/api/FunnelStepTracker#IsStepComplete","content":"&lt;/&gt; FunnelStepTracker.IsStepComplete( self: FunnelStepTracker, stepNumber: number ) → string? Returns true if the step is complete  ","version":null,"tagName":"h3"},{"title":"GetLoggedSteps​","type":1,"pageTitle":"FunnelStepTracker","url":"/NevermoreEngine/api/FunnelStepTracker#GetLoggedSteps","content":"&lt;/&gt; FunnelStepTracker.GetLoggedSteps(self: FunnelStepTracker) → {[number]: string} Gets the logged steps  ","version":null,"tagName":"h3"},{"title":"ClearLoggedSteps​","type":1,"pageTitle":"FunnelStepTracker","url":"/NevermoreEngine/api/FunnelStepTracker#ClearLoggedSteps","content":"&lt;/&gt; FunnelStepTracker.ClearLoggedSteps(self: FunnelStepTracker) → () Clears all logged steps ","version":null,"tagName":"h3"},{"title":"GameConfigAsset","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigAsset","content":"GameConfigAsset","keywords":"","version":null},{"title":"Fzy","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Fzy","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"Fzy","url":"/NevermoreEngine/api/Fzy#types","content":" ","version":null,"tagName":"h2"},{"title":"FzyConfig​","type":1,"pageTitle":"Fzy","url":"/NevermoreEngine/api/Fzy#FzyConfig","content":"&lt;/&gt; interface FzyConfig { caseSensitive: boolean gapLeadingScore: number gapTrailingScore: number gapInnerScore: number consecutiveMatchScore: number slashMatchScore: number wordMatchScore: number capitalMatchScore: number dotMatchScore: number maxMatchLength: number } Configuration for Fzy. See Fzy.createConfig for details. This affects scoring and how the matching is done. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Fzy","url":"/NevermoreEngine/api/Fzy#functions","content":" ","version":null,"tagName":"h2"},{"title":"createConfig​","type":1,"pageTitle":"Fzy","url":"/NevermoreEngine/api/Fzy#createConfig","content":"&lt;/&gt; Fzy.createConfig(config: table) → FzyConfig Creates a new configuration for Fzy.  ","version":null,"tagName":"h3"},{"title":"isFzyConfig​","type":1,"pageTitle":"Fzy","url":"/NevermoreEngine/api/Fzy#isFzyConfig","content":"&lt;/&gt; Fzy.isFzyConfig(config: any) → boolean Returns true if it is a config  ","version":null,"tagName":"h3"},{"title":"hasMatch​","type":1,"pageTitle":"Fzy","url":"/NevermoreEngine/api/Fzy#hasMatch","content":"&lt;/&gt; Fzy.hasMatch( config: FzyConfig, needle: string, haystack: string ) → boolean Check if needle is a subsequence of the haystack. Usually called before Fzy.score or Fzy.positions.  ","version":null,"tagName":"h3"},{"title":"isPerfectMatch​","type":1,"pageTitle":"Fzy","url":"/NevermoreEngine/api/Fzy#isPerfectMatch","content":"&lt;/&gt; Fzy.isPerfectMatch( config: FzyConfig, needle: string,-- must be a subequence of haystack, or the result is undefined. haystack: string ) → boolean Computes whether a needle or haystack are a perfect match or not  ","version":null,"tagName":"h3"},{"title":"score​","type":1,"pageTitle":"Fzy","url":"/NevermoreEngine/api/Fzy#score","content":"&lt;/&gt; Fzy.score( config: FzyConfig, needle: string,-- must be a subequence of haystack, or the result is undefined. haystack: string ) → number-- higher scores indicate better matches. See also Fzy.getMinScore and Fzy.getMaxScore. Compute a matching score.  ","version":null,"tagName":"h3"},{"title":"positions​","type":1,"pageTitle":"Fzy","url":"/NevermoreEngine/api/Fzy#positions","content":"&lt;/&gt; Fzy.positions( config: FzyConfig, needle: string,-- must be a subequence of haystack, or the result is undefined. haystack: string ) → ( {int},-- indices, where indices[n] is the location of the nth character of needle in haystack. number-- the same matching score returned by score ) Compute the locations where fzy matches a string. Determine where each character of the needle is matched to the haystack in the optimal match.  ","version":null,"tagName":"h3"},{"title":"filter​","type":1,"pageTitle":"Fzy","url":"/NevermoreEngine/api/Fzy#filter","content":"&lt;/&gt; Fzy.filter( config: FzyConfig, needle: string, haystacks: {string} ) → { { idx, positions, score }, ... } Apply Fzy.hasMatch and Fzy.positions to an array of haystacks. Returns an array with one entry per matching line in haystacks, each entry giving the index of the line in haystacks as well as the equivalent to the return value of positions for that line.  ","version":null,"tagName":"h3"},{"title":"getMinScore​","type":1,"pageTitle":"Fzy","url":"/NevermoreEngine/api/Fzy#getMinScore","content":"&lt;/&gt; Fzy.getMinScore() → number The lowest value returned by score. In two special cases: an empty needle, or a needle or haystack larger than than Fzy.getMaxLength, the Fzy.score function will return this exact value, which can be used as a sentinel. This is the lowest possible score.  ","version":null,"tagName":"h3"},{"title":"getMaxScore​","type":1,"pageTitle":"Fzy","url":"/NevermoreEngine/api/Fzy#getMaxScore","content":"&lt;/&gt; Fzy.getMaxScore() → number The score returned for exact matches. This is the highest possible score.  ","version":null,"tagName":"h3"},{"title":"getMaxLength​","type":1,"pageTitle":"Fzy","url":"/NevermoreEngine/api/Fzy#getMaxLength","content":"&lt;/&gt; Fzy.getMaxLength(config: FzyConfig) → number The maximum size for which fzy will evaluate scores.  ","version":null,"tagName":"h3"},{"title":"getScoreFloor​","type":1,"pageTitle":"Fzy","url":"/NevermoreEngine/api/Fzy#getScoreFloor","content":"&lt;/&gt; Fzy.getScoreFloor(config: FzyConfig) → number The minimum score returned for normal matches. For matches that don't return Fzy.getMinScore, their score will be greater than than this value.  ","version":null,"tagName":"h3"},{"title":"getScoreCeiling​","type":1,"pageTitle":"Fzy","url":"/NevermoreEngine/api/Fzy#getScoreCeiling","content":"&lt;/&gt; Fzy.getScoreCeiling(config: FzyConfig) → number The maximum score for non-exact matches. For matches that don't return Fzy.getMaxScore, their score will be less than this value. ","version":null,"tagName":"h3"},{"title":"GameConfig","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfig","content":"GameConfig This item only works when running on the server. Server See GameConfigBase for API and GameConfigService for usage.","keywords":"","version":null},{"title":"GameConfigAssetClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigAssetClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GameConfigAssetClient","url":"/NevermoreEngine/api/GameConfigAssetClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"GameConfigAssetClient","url":"/NevermoreEngine/api/GameConfigAssetClient#new","content":"&lt;/&gt; GameConfigAssetClient.new( folder: Folder , serviceBag: ServiceBag ) → GameConfigAssetClient Constructs a new GameConfigAssetClient. ","version":null,"tagName":"h3"},{"title":"GameConfigAssetTypes","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigAssetTypes","content":"GameConfigAssetTypes","keywords":"","version":null},{"title":"GameConfigAssetConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigAssetConstants","content":"GameConfigAssetConstants","keywords":"","version":null},{"title":"GameConfigAssetBase","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigAssetBase","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#new","content":"&lt;/&gt; GameConfigAssetBase.new( obj: Folder , serviceBag: ServiceBag ) → GameConfigAssetBase Constructs a new GameConfigAssetBase. Should be done via binder. This is a base class.  ","version":null,"tagName":"h3"},{"title":"ObserveTranslatedName​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#ObserveTranslatedName","content":"&lt;/&gt; GameConfigAssetBase:ObserveTranslatedName() → Observable&lt;string&gt; Observes the translated name  ","version":null,"tagName":"h3"},{"title":"ObserveTranslatedDescription​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#ObserveTranslatedDescription","content":"&lt;/&gt; GameConfigAssetBase:ObserveTranslatedDescription() → Observable&lt;string&gt; Observes the translated description  ","version":null,"tagName":"h3"},{"title":"SetNameTranslationKey​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#SetNameTranslationKey","content":"&lt;/&gt; GameConfigAssetBase:SetNameTranslationKey(nameTranslationKey: string?) → () Sets the name translation key  ","version":null,"tagName":"h3"},{"title":"SetDescriptionTranslationKey​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#SetDescriptionTranslationKey","content":"&lt;/&gt; GameConfigAssetBase:SetDescriptionTranslationKey(descriptionTranslationKey: string?) → () Sets the description translation key  ","version":null,"tagName":"h3"},{"title":"GetAssetId​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#GetAssetId","content":"&lt;/&gt; GameConfigAssetBase:GetAssetId() → number Gets the asset id  ","version":null,"tagName":"h3"},{"title":"ObserveAssetId​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#ObserveAssetId","content":"&lt;/&gt; GameConfigAssetBase:ObserveAssetId() → Observable&lt;number&gt; Observes the assetId  ","version":null,"tagName":"h3"},{"title":"GetAssetType​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#GetAssetType","content":"&lt;/&gt; GameConfigAssetBase:GetAssetType() → string? Gets the asset type  ","version":null,"tagName":"h3"},{"title":"ObserveAssetType​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#ObserveAssetType","content":"&lt;/&gt; GameConfigAssetBase:ObserveAssetType() → Observable&lt;string?&gt; Observes the asset type  ","version":null,"tagName":"h3"},{"title":"ObserveAssetKey​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#ObserveAssetKey","content":"&lt;/&gt; GameConfigAssetBase:ObserveAssetKey() → Observable&lt;string&gt; Observes the asset key  ","version":null,"tagName":"h3"},{"title":"GetAssetKey​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#GetAssetKey","content":"&lt;/&gt; GameConfigAssetBase:GetAssetKey() → string Gets the asset key  ","version":null,"tagName":"h3"},{"title":"ObserveState​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#ObserveState","content":"&lt;/&gt; GameConfigAssetBase:ObserveState() → any Observes the asset state  ","version":null,"tagName":"h3"},{"title":"PromiseCloudPriceInRobux​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#PromiseCloudPriceInRobux","content":"&lt;/&gt; GameConfigAssetBase:PromiseCloudPriceInRobux(cancelToken: CancelToken) → Promise&lt;number?&gt; Promises the cloud price in Robux  ","version":null,"tagName":"h3"},{"title":"PromiseCloudName​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#PromiseCloudName","content":"&lt;/&gt; GameConfigAssetBase:PromiseCloudName(cancelToken: CancelToken) → Promise&lt;string?&gt; Promises the cloud price in Robux  ","version":null,"tagName":"h3"},{"title":"PromiseColor​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#PromiseColor","content":"&lt;/&gt; GameConfigAssetBase:PromiseColor(_cancelToken: CancelToken) → Promise&lt;Color3 &gt; Promises the color of the game asset (for dialog and other systems)  ","version":null,"tagName":"h3"},{"title":"PromiseNameTranslationKey​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#PromiseNameTranslationKey","content":"&lt;/&gt; GameConfigAssetBase:PromiseNameTranslationKey(cancelToken: CancelToken) → Promise&lt;string?&gt; Promises the name translation key  ","version":null,"tagName":"h3"},{"title":"ObserveNameTranslationKey​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#ObserveNameTranslationKey","content":"&lt;/&gt; GameConfigAssetBase:ObserveNameTranslationKey() → Observable&lt;string?&gt; Observes the name translation key.  ","version":null,"tagName":"h3"},{"title":"ObserveDescriptionTranslationKey​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#ObserveDescriptionTranslationKey","content":"&lt;/&gt; GameConfigAssetBase:ObserveDescriptionTranslationKey() → Observable&lt;string?&gt; Observes the description translation key.  ","version":null,"tagName":"h3"},{"title":"ObserveCloudName​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#ObserveCloudName","content":"&lt;/&gt; GameConfigAssetBase:ObserveCloudName() → Observable&lt;string?&gt; Observes the cloud name. See GameConfigAssetBase.ObserveNameTranslationKey for translation keys.  ","version":null,"tagName":"h3"},{"title":"ObserveCloudDescription​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#ObserveCloudDescription","content":"&lt;/&gt; GameConfigAssetBase:ObserveCloudDescription() → Observable&lt;string?&gt; Observes the cloud name. See GameConfigAssetBase.ObserveDescriptionTranslationKey for translation keys.  ","version":null,"tagName":"h3"},{"title":"ObserveCloudPriceInRobux​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#ObserveCloudPriceInRobux","content":"&lt;/&gt; GameConfigAssetBase:ObserveCloudPriceInRobux() → Observable&lt;number?&gt; Observes the cost in Robux.  ","version":null,"tagName":"h3"},{"title":"ObserveCloudIconImageAssetId​","type":1,"pageTitle":"GameConfigAssetBase","url":"/NevermoreEngine/api/GameConfigAssetBase#ObserveCloudIconImageAssetId","content":"&lt;/&gt; GameConfigAssetBase:ObserveCloudIconImageAssetId() → Observable&lt;number?&gt;  ","version":null,"tagName":"h3"},{"title":"GameConfigAssetTypeUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigAssetTypeUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GameConfigAssetTypeUtils","url":"/NevermoreEngine/api/GameConfigAssetTypeUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"isAssetType​","type":1,"pageTitle":"GameConfigAssetTypeUtils","url":"/NevermoreEngine/api/GameConfigAssetTypeUtils#isAssetType","content":"&lt;/&gt; GameConfigAssetTypeUtils.isAssetType(assetType: any) → boolean Returns true if the asset type is valid  ","version":null,"tagName":"h3"},{"title":"getPlural​","type":1,"pageTitle":"GameConfigAssetTypeUtils","url":"/NevermoreEngine/api/GameConfigAssetTypeUtils#getPlural","content":"&lt;/&gt; GameConfigAssetTypeUtils.getPlural(assetType: GameConfigAssetType) → string Gets the plural version of the asset type for instance naming ","version":null,"tagName":"h3"},{"title":"GameConfigBindersClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigBindersClient","content":"GameConfigBindersClient","keywords":"","version":null},{"title":"GameConfigAssetUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigAssetUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GameConfigAssetUtils","url":"/NevermoreEngine/api/GameConfigAssetUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"create​","type":1,"pageTitle":"GameConfigAssetUtils","url":"/NevermoreEngine/api/GameConfigAssetUtils#create","content":"&lt;/&gt; GameConfigAssetUtils.create( binder: Binder&lt;GameConfigAssetBase&gt;, assetType: GameConfigAssetType, assetKey: string, assetId: number ) → Instance  Creates a new game configuration  ","version":null,"tagName":"h3"},{"title":"promiseCloudDataForAssetType​","type":1,"pageTitle":"GameConfigAssetUtils","url":"/NevermoreEngine/api/GameConfigAssetUtils#promiseCloudDataForAssetType","content":"&lt;/&gt; GameConfigAssetUtils.promiseCloudDataForAssetType( serviceBag: ServiceBag, assetType: GameConfigAssetType, assetId: number ) → Promise&lt;any&gt; Promises cloud data for a given asset type ","version":null,"tagName":"h3"},{"title":"GameConfigBase","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigBase","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GameConfigBase","url":"/NevermoreEngine/api/GameConfigBase#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"GameConfigBase","url":"/NevermoreEngine/api/GameConfigBase#new","content":"&lt;/&gt; GameConfigBase.new(folder: Folder ) → GameConfigBase Constructs a new game config.  ","version":null,"tagName":"h3"},{"title":"GetFolder​","type":1,"pageTitle":"GameConfigBase","url":"/NevermoreEngine/api/GameConfigBase#GetFolder","content":"&lt;/&gt; GameConfigBase.GetFolder(self: GameConfigBase) → Instance  Gets the current folder  ","version":null,"tagName":"h3"},{"title":"GetAssetsOfType​","type":1,"pageTitle":"GameConfigBase","url":"/NevermoreEngine/api/GameConfigBase#GetAssetsOfType","content":"&lt;/&gt; GameConfigBase.GetAssetsOfType( self: GameConfigBase, assetType: GameConfigAssetType ) → {GameConfigAssetBase} Returns an array of all the assets of that type underneath this config  ","version":null,"tagName":"h3"},{"title":"GetAssetsOfTypeAndKey​","type":1,"pageTitle":"GameConfigBase","url":"/NevermoreEngine/api/GameConfigBase#GetAssetsOfTypeAndKey","content":"&lt;/&gt; GameConfigBase.GetAssetsOfTypeAndKey( self: GameConfigBase, assetType: GameConfigAssetType, assetKey: string ) → {GameConfigAssetBase} Returns an array of all the assets of that type underneath this config  ","version":null,"tagName":"h3"},{"title":"GetAssetsOfTypeAndId​","type":1,"pageTitle":"GameConfigBase","url":"/NevermoreEngine/api/GameConfigBase#GetAssetsOfTypeAndId","content":"&lt;/&gt; GameConfigBase.GetAssetsOfTypeAndId( self: GameConfigBase, assetType: GameConfigAssetType, assetId: number ) → {GameConfigAssetBase} Returns an array of all the assets of that type underneath this config  ","version":null,"tagName":"h3"},{"title":"ObserveAssetByTypeAndKeyBrio​","type":1,"pageTitle":"GameConfigBase","url":"/NevermoreEngine/api/GameConfigBase#ObserveAssetByTypeAndKeyBrio","content":"&lt;/&gt; GameConfigBase.ObserveAssetByTypeAndKeyBrio( self: GameConfigBase, assetType: GameConfigAssetType, assetKey: string ) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Returns an observable matching these types and the key  ","version":null,"tagName":"h3"},{"title":"ObserveAssetByTypeAndIdBrio​","type":1,"pageTitle":"GameConfigBase","url":"/NevermoreEngine/api/GameConfigBase#ObserveAssetByTypeAndIdBrio","content":"&lt;/&gt; GameConfigBase.ObserveAssetByTypeAndIdBrio( self: GameConfigBase, assetType: GameConfigAssetType, assetId: number ) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Returns an observable matching these types and the id  ","version":null,"tagName":"h3"},{"title":"ObserveAssetByIdBrio​","type":1,"pageTitle":"GameConfigBase","url":"/NevermoreEngine/api/GameConfigBase#ObserveAssetByIdBrio","content":"&lt;/&gt; GameConfigBase.ObserveAssetByIdBrio( self: GameConfigBase, assetId: number ) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Observes all matching assets of this id  ","version":null,"tagName":"h3"},{"title":"ObserveAssetByKeyBrio​","type":1,"pageTitle":"GameConfigBase","url":"/NevermoreEngine/api/GameConfigBase#ObserveAssetByKeyBrio","content":"&lt;/&gt; GameConfigBase.ObserveAssetByKeyBrio( self: GameConfigBase, assetKey: string ) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Observes all matching assets of this key  ","version":null,"tagName":"h3"},{"title":"ObserveAssetByTypeBrio​","type":1,"pageTitle":"GameConfigBase","url":"/NevermoreEngine/api/GameConfigBase#ObserveAssetByTypeBrio","content":"&lt;/&gt; GameConfigBase.ObserveAssetByTypeBrio( self: GameConfigBase, assetType: GameConfigAssetType ) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Observes all matching assets of this type  ","version":null,"tagName":"h3"},{"title":"InitObservation​","type":1,"pageTitle":"GameConfigBase","url":"/NevermoreEngine/api/GameConfigBase#InitObservation","content":"&lt;/&gt; GameConfigBase.InitObservation(self: GameConfigBase) → () Initializes the observation. Should be called by the class inheriting this object.  ","version":null,"tagName":"h3"},{"title":"ObserveGameId​","type":1,"pageTitle":"GameConfigBase","url":"/NevermoreEngine/api/GameConfigBase#ObserveGameId","content":"&lt;/&gt; GameConfigBase.ObserveGameId(self: GameConfigBase) → Observable&lt;number&gt; Returns the game id for this profile.  ","version":null,"tagName":"h3"},{"title":"GetGameId​","type":1,"pageTitle":"GameConfigBase","url":"/NevermoreEngine/api/GameConfigBase#GetGameId","content":"&lt;/&gt; GameConfigBase.GetGameId(self: GameConfigBase) → number Returns the game id  ","version":null,"tagName":"h3"},{"title":"GetConfigName​","type":1,"pageTitle":"GameConfigBase","url":"/NevermoreEngine/api/GameConfigBase#GetConfigName","content":"&lt;/&gt; GameConfigBase.GetConfigName(self: GameConfigBase) → string Returns this configuration's name  ","version":null,"tagName":"h3"},{"title":"ObserveConfigName​","type":1,"pageTitle":"GameConfigBase","url":"/NevermoreEngine/api/GameConfigBase#ObserveConfigName","content":"&lt;/&gt; GameConfigBase.ObserveConfigName(self: GameConfigBase) → Observable&lt;string&gt; Observes this configs name ","version":null,"tagName":"h3"},{"title":"GameConfigBindersServer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigBindersServer","content":"GameConfigBindersServer","keywords":"","version":null},{"title":"GameConfigClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigClient","content":"GameConfigClient This item only works when running on the client. Client See GameConfigBase for API and GameConfigService for usage.","keywords":"","version":null},{"title":"GameConfigCmdrUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigCmdrUtils","content":"GameConfigCmdrUtils","keywords":"","version":null},{"title":"GameConfigCommandService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigCommandService","content":"GameConfigCommandService Handles cmdr integration","keywords":"","version":null},{"title":"GameConfigCommandServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigCommandServiceClient","content":"GameConfigCommandServiceClient","keywords":"","version":null},{"title":"GameConfigConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigConstants","content":"GameConfigConstants","keywords":"","version":null},{"title":"GameConfigDataService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigDataService","content":"GameConfigDataService","keywords":"","version":null},{"title":"GameConfigServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigServiceClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GameConfigServiceClient","url":"/NevermoreEngine/api/GameConfigServiceClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"GetConfigPicker​","type":1,"pageTitle":"GameConfigServiceClient","url":"/NevermoreEngine/api/GameConfigServiceClient#GetConfigPicker","content":"&lt;/&gt; GameConfigServiceClient:GetConfigPicker() → GameConfigPicker Retrieves the game configuration picker for the config service. ","version":null,"tagName":"h3"},{"title":"GameConfigService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GameConfigService","url":"/NevermoreEngine/api/GameConfigService#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"GameConfigService","url":"/NevermoreEngine/api/GameConfigService#Init","content":"&lt;/&gt; GameConfigService:Init(serviceBag: ServiceBag) → () Initializes the configuration service. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"GameConfigService","url":"/NevermoreEngine/api/GameConfigService#Start","content":"&lt;/&gt; GameConfigService:Start() → () Starts the configuration service. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"AddBadge​","type":1,"pageTitle":"GameConfigService","url":"/NevermoreEngine/api/GameConfigService#AddBadge","content":"&lt;/&gt; GameConfigService:AddBadge( assetKey: string,-- Key name to use for the badge badgeId: number-- Cloud id ) → () Adds a new badge with the key configured to the assetKey  ","version":null,"tagName":"h3"},{"title":"AddProduct​","type":1,"pageTitle":"GameConfigService","url":"/NevermoreEngine/api/GameConfigService#AddProduct","content":"&lt;/&gt; GameConfigService:AddProduct( assetKey: string,-- Key name to use for the product productId: number-- Cloud id ) → () Adds a new product with the key configured to the assetKey  ","version":null,"tagName":"h3"},{"title":"AddPass​","type":1,"pageTitle":"GameConfigService","url":"/NevermoreEngine/api/GameConfigService#AddPass","content":"&lt;/&gt; GameConfigService:AddPass( assetKey: string,-- Key name to use for the pass passId: number-- Cloud id ) → () Adds a new pass with the key configured to the assetKey  ","version":null,"tagName":"h3"},{"title":"AddPlace​","type":1,"pageTitle":"GameConfigService","url":"/NevermoreEngine/api/GameConfigService#AddPlace","content":"&lt;/&gt; GameConfigService:AddPlace( assetKey: string,-- Key name to use for the place placeId: number-- Cloud id ) → () Adds a new place with the key configured to the assetKey  ","version":null,"tagName":"h3"},{"title":"AddAsset​","type":1,"pageTitle":"GameConfigService","url":"/NevermoreEngine/api/GameConfigService#AddAsset","content":"&lt;/&gt; GameConfigService:AddAsset( assetKey: string,-- Key name to use for the asset assetId: number-- Cloud id ) → () Adds a new asset with the key configured to the assetKey  ","version":null,"tagName":"h3"},{"title":"AddSubscription​","type":1,"pageTitle":"GameConfigService","url":"/NevermoreEngine/api/GameConfigService#AddSubscription","content":"&lt;/&gt; GameConfigService:AddSubscription( assetKey: string,-- Key name to use for the asset subscriptionId: string-- Cloud id ) → () Adds a new asset with the key configured to the assetKey  ","version":null,"tagName":"h3"},{"title":"AddBundle​","type":1,"pageTitle":"GameConfigService","url":"/NevermoreEngine/api/GameConfigService#AddBundle","content":"&lt;/&gt; GameConfigService:AddBundle( assetKey: string,-- Key name to use for the bundle bundleId: number-- Cloud id ) → () Adds a new bundle with the key configured to the assetKey  ","version":null,"tagName":"h3"},{"title":"AddTypedAsset​","type":1,"pageTitle":"GameConfigService","url":"/NevermoreEngine/api/GameConfigService#AddTypedAsset","content":"&lt;/&gt; GameConfigService:AddTypedAsset( assetType: GameConfigAssetType, assetKey: string,-- Key name to use for the bundle assetId: number-- Cloud id ) → () Adds a new asset with the specified type  ","version":null,"tagName":"h3"},{"title":"GetConfigPicker​","type":1,"pageTitle":"GameConfigService","url":"/NevermoreEngine/api/GameConfigService#GetConfigPicker","content":"&lt;/&gt; GameConfigService:GetConfigPicker() → GameConfigPicker Gets the current config picker  ","version":null,"tagName":"h3"},{"title":"GetPreferredParent​","type":1,"pageTitle":"GameConfigService","url":"/NevermoreEngine/api/GameConfigService#GetPreferredParent","content":"&lt;/&gt; GameConfigService:GetPreferredParent() → Instance  Returns the preferred parent for the configuration service  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"GameConfigService","url":"/NevermoreEngine/api/GameConfigService#Destroy","content":"&lt;/&gt; GameConfigService:Destroy() → () Cleans up the configuration service. Should be done via ServiceBag. ","version":null,"tagName":"h3"},{"title":"GameConfigServiceConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigServiceConstants","content":"GameConfigServiceConstants","keywords":"","version":null},{"title":"GameDataStoreService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameDataStoreService","content":"GameDataStoreService This item only works when running on the server. Server Service which manages central access to datastore. This datastore will refresh pretty frequently and can be used for configuration and other components, such as Twitter codes or global settings.","keywords":"","version":null},{"title":"GameConfigPicker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigPicker","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GameConfigPicker","url":"/NevermoreEngine/api/GameConfigPicker#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"GameConfigPicker","url":"/NevermoreEngine/api/GameConfigPicker#new","content":"&lt;/&gt; GameConfigPicker.new( serviceBag: ServiceBag, gameConfigBinder: Binder&lt;GameConfig&gt;, gameConfigAssetBinder: Binder&lt;GameConfigAsset&gt; ) → GameConfigPicker Constructs a new game config picker. Should be gotten by GameConfigService.  ","version":null,"tagName":"h3"},{"title":"ObserveActiveAssetOfTypeBrio​","type":1,"pageTitle":"GameConfigPicker","url":"/NevermoreEngine/api/GameConfigPicker#ObserveActiveAssetOfTypeBrio","content":"&lt;/&gt; GameConfigPicker.ObserveActiveAssetOfTypeBrio( self: GameConfigPicker, assetType: string ) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Observes active assets of a given type. Great for badge views or other things.  ","version":null,"tagName":"h3"},{"title":"ObserveActiveAssetOfAssetTypeAndKeyBrio​","type":1,"pageTitle":"GameConfigPicker","url":"/NevermoreEngine/api/GameConfigPicker#ObserveActiveAssetOfAssetTypeAndKeyBrio","content":"&lt;/&gt; GameConfigPicker.ObserveActiveAssetOfAssetTypeAndKeyBrio( self: GameConfigPicker, assetType: string, assetKey: string ) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Observes all active assets of a type and key. maid:GiveTask(picker:ObserveActiveAssetOfAssetTypeAndKeyBrio(GameConfigAssetType.BADGE, &quot;myBadge&quot;) :Pipe({ RxStateStackUtils.topOfStack(); }):Subscribe(function(activeBadge) print(activeBadge:GetId()) end)   ","version":null,"tagName":"h3"},{"title":"ObserveActiveAssetOfAssetTypeAndIdBrio​","type":1,"pageTitle":"GameConfigPicker","url":"/NevermoreEngine/api/GameConfigPicker#ObserveActiveAssetOfAssetTypeAndIdBrio","content":"&lt;/&gt; GameConfigPicker.ObserveActiveAssetOfAssetTypeAndIdBrio( self: GameConfigPicker, assetType: string, assetId: number ) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Observes all active assets of a type and an id.  ","version":null,"tagName":"h3"},{"title":"ObserveActiveAssetOfAssetIdBrio​","type":1,"pageTitle":"GameConfigPicker","url":"/NevermoreEngine/api/GameConfigPicker#ObserveActiveAssetOfAssetIdBrio","content":"&lt;/&gt; GameConfigPicker.ObserveActiveAssetOfAssetIdBrio( self: GameConfigPicker, assetId: number ) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Observes all active assets of an id  ","version":null,"tagName":"h3"},{"title":"ObserveActiveAssetOfKeyBrio​","type":1,"pageTitle":"GameConfigPicker","url":"/NevermoreEngine/api/GameConfigPicker#ObserveActiveAssetOfKeyBrio","content":"&lt;/&gt; GameConfigPicker.ObserveActiveAssetOfKeyBrio( self: GameConfigPicker, assetKey: string ) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Observes all active assets of a key  ","version":null,"tagName":"h3"},{"title":"ObserveActiveConfigsBrio​","type":1,"pageTitle":"GameConfigPicker","url":"/NevermoreEngine/api/GameConfigPicker#ObserveActiveConfigsBrio","content":"&lt;/&gt; GameConfigPicker.ObserveActiveConfigsBrio(self: GameConfigPicker) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Observes all active active assets  ","version":null,"tagName":"h3"},{"title":"GetActiveConfigs​","type":1,"pageTitle":"GameConfigPicker","url":"/NevermoreEngine/api/GameConfigPicker#GetActiveConfigs","content":"&lt;/&gt; GameConfigPicker.GetActiveConfigs(self: GameConfigPicker) → {GameConfigAssetBase} Gets all active configs that exist  ","version":null,"tagName":"h3"},{"title":"FindFirstActiveAssetOfId​","type":1,"pageTitle":"GameConfigPicker","url":"/NevermoreEngine/api/GameConfigPicker#FindFirstActiveAssetOfId","content":"&lt;/&gt; GameConfigPicker.FindFirstActiveAssetOfId( self: GameConfigPicker, assetType: string, assetId: number ) → GameConfigAssetBase? Find the first asset of a given id  ","version":null,"tagName":"h3"},{"title":"PromisePriceInRobux​","type":1,"pageTitle":"GameConfigPicker","url":"/NevermoreEngine/api/GameConfigPicker#PromisePriceInRobux","content":"&lt;/&gt; GameConfigPicker.PromisePriceInRobux( self: GameConfigPicker, assetType: string, assetIdOrKey: string | number ) → Promise&lt;number&gt; Find the first asset of a given key  ","version":null,"tagName":"h3"},{"title":"FindFirstActiveAssetOfKey​","type":1,"pageTitle":"GameConfigPicker","url":"/NevermoreEngine/api/GameConfigPicker#FindFirstActiveAssetOfKey","content":"&lt;/&gt; GameConfigPicker.FindFirstActiveAssetOfKey( self: GameConfigPicker, assetType: GameConfigAssetTypes.GameConfigAssetType, assetKey: string ) → GameConfigAssetBase? Find the first asset of a given key  ","version":null,"tagName":"h3"},{"title":"GetAllActiveAssetsOfType​","type":1,"pageTitle":"GameConfigPicker","url":"/NevermoreEngine/api/GameConfigPicker#GetAllActiveAssetsOfType","content":"&lt;/&gt; GameConfigPicker.GetAllActiveAssetsOfType( self: GameConfigPicker, assetType: GameConfigAssetTypes.GameConfigAssetType ) → {GameConfigAssetBase} Gets all assets of a given type  ","version":null,"tagName":"h3"},{"title":"ToAssetId​","type":1,"pageTitle":"GameConfigPicker","url":"/NevermoreEngine/api/GameConfigPicker#ToAssetId","content":"&lt;/&gt; GameConfigPicker.ToAssetId( self: GameConfigPicker, assetType: GameConfigAssetType, assetIdOrKey: number | string ) → number? Converts an asset type and key to an id  ","version":null,"tagName":"h3"},{"title":"ObserveToAssetIdBrio​","type":1,"pageTitle":"GameConfigPicker","url":"/NevermoreEngine/api/GameConfigPicker#ObserveToAssetIdBrio","content":"&lt;/&gt; GameConfigPicker.ObserveToAssetIdBrio( self: GameConfigPicker, assetType: GameConfigAssetType, assetIdOrKey: number | string ) → Observable&lt;Brio&lt;number&gt;&gt; Observes a converted asset type and key to an id ","version":null,"tagName":"h3"},{"title":"GameConfigUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameConfigUtils","content":"GameConfigUtils","keywords":"","version":null},{"title":"GamepadRotateModel","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GamepadRotateModel","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GamepadRotateModel","url":"/NevermoreEngine/api/GamepadRotateModel#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"GamepadRotateModel","url":"/NevermoreEngine/api/GamepadRotateModel#new","content":"&lt;/&gt; GamepadRotateModel.new() → GamepadRotateModel Constructs a new GamepadRotateModel.  ","version":null,"tagName":"h3"},{"title":"SetAcceleration​","type":1,"pageTitle":"GamepadRotateModel","url":"/NevermoreEngine/api/GamepadRotateModel#SetAcceleration","content":"&lt;/&gt; GamepadRotateModel.SetAcceleration( self: GamepadRotateModel, acceleration: number ) → () Sets the acceleration for the game rotate model. The higher the acceleration the more linear the gamepad rotate model feels. TIP Set this to something high, like 2500, for an FPS. This makes control feel a lot better.  ","version":null,"tagName":"h3"},{"title":"GetThumbstickDeltaAngle​","type":1,"pageTitle":"GamepadRotateModel","url":"/NevermoreEngine/api/GamepadRotateModel#GetThumbstickDeltaAngle","content":"&lt;/&gt; GamepadRotateModel.GetThumbstickDeltaAngle(self: GamepadRotateModel) → Vector2  Gets the delta for the thumbstick  ","version":null,"tagName":"h3"},{"title":"StopRotate​","type":1,"pageTitle":"GamepadRotateModel","url":"/NevermoreEngine/api/GamepadRotateModel#StopRotate","content":"&lt;/&gt; GamepadRotateModel.StopRotate(self: GamepadRotateModel) → () Stops rotation  ","version":null,"tagName":"h3"},{"title":"HandleThumbstickInput​","type":1,"pageTitle":"GamepadRotateModel","url":"/NevermoreEngine/api/GamepadRotateModel#HandleThumbstickInput","content":"&lt;/&gt; GamepadRotateModel.HandleThumbstickInput( self: GamepadRotateModel, inputObject: InputObject ) → () Converts the thumbstick input into a smoothed delta based upon deadzone and other components. ","version":null,"tagName":"h3"},{"title":"GameProductCmdrService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameProductCmdrService","content":"GameProductCmdrService","keywords":"","version":null},{"title":"GameProductService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameProductService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GameProductService","url":"/NevermoreEngine/api/GameProductService#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"GameProductService","url":"/NevermoreEngine/api/GameProductService#Init","content":"&lt;/&gt; GameProductService.Init( self: GameProductService, serviceBag: ServiceBag ) → () Initializes the service. Should be done via ServiceBag  ","version":null,"tagName":"h3"},{"title":"ObservePlayerAssetPurchased​","type":1,"pageTitle":"GameProductService","url":"/NevermoreEngine/api/GameProductService#ObservePlayerAssetPurchased","content":"&lt;/&gt; GameProductService.ObservePlayerAssetPurchased( self: GameProductService, player: Player , assetType: GameConfigAssetType, idOrKey: string | number ) → Observable&lt;&gt; Fires when the specified player purchases an asset  ","version":null,"tagName":"h3"},{"title":"ObserveAssetPurchased​","type":1,"pageTitle":"GameProductService","url":"/NevermoreEngine/api/GameProductService#ObserveAssetPurchased","content":"&lt;/&gt; GameProductService.ObserveAssetPurchased( self: GameProductService, assetType: GameConfigAssetType, idOrKey: string | number ) → Observable&lt;Player &gt; Fires when any player purchases an asset  ","version":null,"tagName":"h3"},{"title":"HasPlayerPurchasedThisSession​","type":1,"pageTitle":"GameProductService","url":"/NevermoreEngine/api/GameProductService#HasPlayerPurchasedThisSession","content":"&lt;/&gt; GameProductService.HasPlayerPurchasedThisSession( self: GameProductService, player: Player , assetType: GameConfigAssetType, idOrKey: string | number ) → boolean Returns true if item has been purchased this session  ","version":null,"tagName":"h3"},{"title":"PromisePlayerIsPromptOpen​","type":1,"pageTitle":"GameProductService","url":"/NevermoreEngine/api/GameProductService#PromisePlayerIsPromptOpen","content":"&lt;/&gt; GameProductService.PromisePlayerIsPromptOpen( self: GameProductService, player: Player ) → Promise&lt;boolean&gt; Returns true if the prompt is open  ","version":null,"tagName":"h3"},{"title":"PromisePlayerPromptClosed​","type":1,"pageTitle":"GameProductService","url":"/NevermoreEngine/api/GameProductService#PromisePlayerPromptClosed","content":"&lt;/&gt; GameProductService.PromisePlayerPromptClosed( self: GameProductService, player: Player ) → Promise Returns a promise that will resolve when all prompts are closed  ","version":null,"tagName":"h3"},{"title":"PromisePlayerPromptPurchase​","type":1,"pageTitle":"GameProductService","url":"/NevermoreEngine/api/GameProductService#PromisePlayerPromptPurchase","content":"&lt;/&gt; GameProductService.PromisePlayerPromptPurchase( self: GameProductService, player: Player , assetType: GameConfigAssetType, idOrKey: string | number ) → boolean Prompts the user to purchase the asset, and returns true if purchased  ","version":null,"tagName":"h3"},{"title":"PromisePlayerOwnership​","type":1,"pageTitle":"GameProductService","url":"/NevermoreEngine/api/GameProductService#PromisePlayerOwnership","content":"&lt;/&gt; GameProductService.PromisePlayerOwnership( self: GameProductService, player: Player , assetType: GameConfigAssetType, idOrKey: string | number ) → Promise&lt;boolean&gt; Returns true if item has been purchased this session  ","version":null,"tagName":"h3"},{"title":"PromisePlayerOwnershipOrPrompt​","type":1,"pageTitle":"GameProductService","url":"/NevermoreEngine/api/GameProductService#PromisePlayerOwnershipOrPrompt","content":"&lt;/&gt; GameProductService.PromisePlayerOwnershipOrPrompt( self: GameProductService, player: Player , assetType: GameConfigAssetType, idOrKey: string | number ) → Promise&lt;boolean&gt; Checks if the asset is ownable and if it is, checks player ownership. Otherwise, it checks if the asset has been purchased this session. If the asset has not been purchased this session it prompts the user to purchase the item.  ","version":null,"tagName":"h3"},{"title":"ObservePlayerOwnership​","type":1,"pageTitle":"GameProductService","url":"/NevermoreEngine/api/GameProductService#ObservePlayerOwnership","content":"&lt;/&gt; GameProductService.ObservePlayerOwnership( self: GameProductService, player: Player , assetType: GameConfigAssetType, idOrKey: string | number ) → Observable&lt;boolean&gt; Observes if the player owns this cloud asset or not  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"GameProductService","url":"/NevermoreEngine/api/GameProductService#Destroy","content":"&lt;/&gt; GameProductService.Destroy(self: GameProductService) → () Cleans up the game product service ","version":null,"tagName":"h3"},{"title":"GameProductDataService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameProductDataService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GameProductDataService","url":"/NevermoreEngine/api/GameProductDataService#functions","content":" ","version":null,"tagName":"h2"},{"title":"Start​","type":1,"pageTitle":"GameProductDataService","url":"/NevermoreEngine/api/GameProductDataService#Start","content":"&lt;/&gt; GameProductDataService.Start(self: GameProductDataService) → () Starts the service. Should be done via ServiceBag  ","version":null,"tagName":"h3"},{"title":"HasPlayerPurchasedThisSession​","type":1,"pageTitle":"GameProductDataService","url":"/NevermoreEngine/api/GameProductDataService#HasPlayerPurchasedThisSession","content":"&lt;/&gt; GameProductDataService.HasPlayerPurchasedThisSession( self: GameProductDataService, player: Player , assetType: GameConfigAssetType, idOrKey: string | number ) → boolean Returns true if item has been purchased this session  ","version":null,"tagName":"h3"},{"title":"PromisePromptPurchase​","type":1,"pageTitle":"GameProductDataService","url":"/NevermoreEngine/api/GameProductDataService#PromisePromptPurchase","content":"&lt;/&gt; GameProductDataService.PromisePromptPurchase( self: GameProductDataService, player: Player , assetType: GameConfigAssetType, idOrKey: string | number ) → Promise&lt;boolean&gt; Prompts the user to purchase the asset, and returns true if purchased  ","version":null,"tagName":"h3"},{"title":"PromisePlayerOwnership​","type":1,"pageTitle":"GameProductDataService","url":"/NevermoreEngine/api/GameProductDataService#PromisePlayerOwnership","content":"&lt;/&gt; GameProductDataService.PromisePlayerOwnership( self: GameProductDataService, player: Player , assetType: GameConfigAssetType, idOrKey: string | number ) → Promise&lt;boolean&gt; Returns true if item has been purchased this session  ","version":null,"tagName":"h3"},{"title":"PromiseIsOwnable​","type":1,"pageTitle":"GameProductDataService","url":"/NevermoreEngine/api/GameProductDataService#PromiseIsOwnable","content":"&lt;/&gt; GameProductDataService.PromiseIsOwnable( self: GameProductDataService, player: Player , assetType: GameConfigAssetType ) → Promise&lt;boolean&gt; Returns true if item has been purchased this session  ","version":null,"tagName":"h3"},{"title":"PromisePlayerIsPromptOpen​","type":1,"pageTitle":"GameProductDataService","url":"/NevermoreEngine/api/GameProductDataService#PromisePlayerIsPromptOpen","content":"&lt;/&gt; GameProductDataService.PromisePlayerIsPromptOpen( self: GameProductDataService, player: Player ) → Promise&lt;boolean&gt; Promises the player prompt as opened  ","version":null,"tagName":"h3"},{"title":"PromisePlayerPromptClosed​","type":1,"pageTitle":"GameProductDataService","url":"/NevermoreEngine/api/GameProductDataService#PromisePlayerPromptClosed","content":"&lt;/&gt; GameProductDataService.PromisePlayerPromptClosed( self: GameProductDataService, player: Player ) → Promise&lt;boolean&gt; Promises the player prompt as opened  ","version":null,"tagName":"h3"},{"title":"ObservePlayerOwnership​","type":1,"pageTitle":"GameProductDataService","url":"/NevermoreEngine/api/GameProductDataService#ObservePlayerOwnership","content":"&lt;/&gt; GameProductDataService.ObservePlayerOwnership( self: GameProductDataService, player: Player , assetType: GameConfigAssetType, idOrKey: string | number ) → Observable&lt;boolean&gt; Observes player ownership  ","version":null,"tagName":"h3"},{"title":"ObservePlayerAssetPurchased​","type":1,"pageTitle":"GameProductDataService","url":"/NevermoreEngine/api/GameProductDataService#ObservePlayerAssetPurchased","content":"&lt;/&gt; GameProductDataService.ObservePlayerAssetPurchased( self: GameProductDataService, player: Player , assetType: GameConfigAssetType, idOrKey: string | number ) → Observable&lt;&gt; Fires when the specified player purchases an asset  ","version":null,"tagName":"h3"},{"title":"ObserveAssetPurchased​","type":1,"pageTitle":"GameProductDataService","url":"/NevermoreEngine/api/GameProductDataService#ObserveAssetPurchased","content":"&lt;/&gt; GameProductDataService.ObserveAssetPurchased( self: GameProductDataService, assetType: GameConfigAssetType, idOrKey: string | number ) → Observable&lt;Player &gt; Fires when any player purchases an asset  ","version":null,"tagName":"h3"},{"title":"PromisePlayerOwnershipOrPrompt​","type":1,"pageTitle":"GameProductDataService","url":"/NevermoreEngine/api/GameProductDataService#PromisePlayerOwnershipOrPrompt","content":"&lt;/&gt; GameProductDataService.PromisePlayerOwnershipOrPrompt( self: GameProductDataService, player: Player , assetType: GameConfigAssetType, idOrKey: string | number ) → Promise&lt;boolean&gt; Checks if the asset is ownable and if it is, checks player ownership. Otherwise, it checks if the asset has been purchased this session. If the asset has not been purchased this session it prompts the user to purchase the item. ","version":null,"tagName":"h3"},{"title":"GameScalingHelper","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameScalingHelper","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GameScalingHelper","url":"/NevermoreEngine/api/GameScalingHelper#functions","content":" ","version":null,"tagName":"h2"},{"title":"SetAbsoluteSize​","type":1,"pageTitle":"GameScalingHelper","url":"/NevermoreEngine/api/GameScalingHelper#SetAbsoluteSize","content":"&lt;/&gt; GameScalingHelper.SetAbsoluteSize( self: GameScalingHelper, absoluteSize: Vector2 | Observable.Observable&lt;Vector2 &gt; ) → () → () Sets the absolute size of the screen  ","version":null,"tagName":"h3"},{"title":"SetScreenGui​","type":1,"pageTitle":"GameScalingHelper","url":"/NevermoreEngine/api/GameScalingHelper#SetScreenGui","content":"&lt;/&gt; GameScalingHelper.SetScreenGui( self: GameScalingHelper, screenGui: ScreenGui ) → () → () Sets the screenGui to observe the absolute size from ","version":null,"tagName":"h3"},{"title":"GameProductServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameProductServiceClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GameProductServiceClient","url":"/NevermoreEngine/api/GameProductServiceClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"GameProductServiceClient","url":"/NevermoreEngine/api/GameProductServiceClient#Init","content":"&lt;/&gt; GameProductServiceClient:Init(serviceBag: ServiceBag) → () Initializes the service. Should be done via ServiceBag  ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"GameProductServiceClient","url":"/NevermoreEngine/api/GameProductServiceClient#Start","content":"&lt;/&gt; GameProductServiceClient:Start() → () Starts the service. Should be done via ServiceBag  ","version":null,"tagName":"h3"},{"title":"ObservePlayerAssetPurchased​","type":1,"pageTitle":"GameProductServiceClient","url":"/NevermoreEngine/api/GameProductServiceClient#ObservePlayerAssetPurchased","content":"&lt;/&gt; GameProductServiceClient:ObservePlayerAssetPurchased( assetType: GameConfigAssetType, idOrKey: string | number ) → Observable&lt;&gt; Fires when the specified player purchases an asset  ","version":null,"tagName":"h3"},{"title":"ObserveAssetPurchased​","type":1,"pageTitle":"GameProductServiceClient","url":"/NevermoreEngine/api/GameProductServiceClient#ObserveAssetPurchased","content":"&lt;/&gt; GameProductServiceClient:ObserveAssetPurchased( assetType: GameConfigAssetType, idOrKey: string | number ) → Observable&lt;boolean&gt; Fires when any player purchases an asset  ","version":null,"tagName":"h3"},{"title":"HasPlayerPurchasedThisSession​","type":1,"pageTitle":"GameProductServiceClient","url":"/NevermoreEngine/api/GameProductServiceClient#HasPlayerPurchasedThisSession","content":"&lt;/&gt; GameProductServiceClient:HasPlayerPurchasedThisSession( player: Player , assetType: GameConfigAssetType, idOrKey: string | number ) → boolean Returns true if item has been purchased this session  ","version":null,"tagName":"h3"},{"title":"PromisePromptPurchase​","type":1,"pageTitle":"GameProductServiceClient","url":"/NevermoreEngine/api/GameProductServiceClient#PromisePromptPurchase","content":"&lt;/&gt; GameProductServiceClient:PromisePromptPurchase( player: Player , assetType: GameConfigAssetType, idOrKey: string | number ) → Promise&lt;boolean&gt; Prompts the user to purchase the asset, and returns true if purchased  ","version":null,"tagName":"h3"},{"title":"PromisePlayerOwnership​","type":1,"pageTitle":"GameProductServiceClient","url":"/NevermoreEngine/api/GameProductServiceClient#PromisePlayerOwnership","content":"&lt;/&gt; GameProductServiceClient:PromisePlayerOwnership( player: Player , assetType: GameConfigAssetType, idOrKey: string | number ) → Promise&lt;boolean&gt; Returns true if item has been purchased this session  ","version":null,"tagName":"h3"},{"title":"ObservePlayerOwnership​","type":1,"pageTitle":"GameProductServiceClient","url":"/NevermoreEngine/api/GameProductServiceClient#ObservePlayerOwnership","content":"&lt;/&gt; GameProductServiceClient:ObservePlayerOwnership( player: Player , assetType: GameConfigAssetType, idOrKey: string | number ) → Observable&lt;boolean&gt; Observes if the player owns this cloud asset or not  ","version":null,"tagName":"h3"},{"title":"PromisePlayerIsPromptOpen​","type":1,"pageTitle":"GameProductServiceClient","url":"/NevermoreEngine/api/GameProductServiceClient#PromisePlayerIsPromptOpen","content":"&lt;/&gt; GameProductServiceClient:PromisePlayerIsPromptOpen(player: Player ) → Promise&lt;boolean&gt; Returns true if the prompt is open  ","version":null,"tagName":"h3"},{"title":"PromisePlayerPromptClosed​","type":1,"pageTitle":"GameProductServiceClient","url":"/NevermoreEngine/api/GameProductServiceClient#PromisePlayerPromptClosed","content":"&lt;/&gt; GameProductServiceClient:PromisePlayerPromptClosed(player: Player ) → Promise Returns a promise that will resolve when all prompts are closed  ","version":null,"tagName":"h3"},{"title":"PromisePlayerOwnershipOrPrompt​","type":1,"pageTitle":"GameProductServiceClient","url":"/NevermoreEngine/api/GameProductServiceClient#PromisePlayerOwnershipOrPrompt","content":"&lt;/&gt; GameProductServiceClient:PromisePlayerOwnershipOrPrompt( player: Player , assetType: GameConfigAssetType, idOrKey: string | number ) → Promise&lt;boolean&gt; Checks if the asset is ownable and if it is, checks player ownership. Otherwise, it checks if the asset has been purchased this session. If the asset has not been purchased this session it prompts the user to purchase the item.  ","version":null,"tagName":"h3"},{"title":"PromiseGamePassOrProductUnlockOrPrompt​","type":1,"pageTitle":"GameProductServiceClient","url":"/NevermoreEngine/api/GameProductServiceClient#PromiseGamePassOrProductUnlockOrPrompt","content":"&lt;/&gt; GameProductServiceClient:PromiseGamePassOrProductUnlockOrPrompt( gamePassIdOrKey: string | number, productIdOrKey: string | number ) → Promise&lt;boolean&gt; Promises to either check a gamepass or a product to see if it's purchased. ","version":null,"tagName":"h3"},{"title":"GenerateWithMixin","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GenerateWithMixin","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GenerateWithMixin","url":"/NevermoreEngine/api/GenerateWithMixin#functions","content":" ","version":null,"tagName":"h2"},{"title":"Add​","type":1,"pageTitle":"GenerateWithMixin","url":"/NevermoreEngine/api/GenerateWithMixin#Add","content":"&lt;/&gt; GenerateWithMixin:Add( class: table, staticResources: table-- These resources are added to the class automatically ) → () Adds the GenerateWith API to the class ","version":null,"tagName":"h3"},{"title":"GameScalingUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameScalingUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GameScalingUtils","url":"/NevermoreEngine/api/GameScalingUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getUIScale​","type":1,"pageTitle":"GameScalingUtils","url":"/NevermoreEngine/api/GameScalingUtils#getUIScale","content":"&lt;/&gt; GameScalingUtils.getUIScale(screenAbsoluteSize: Vector2 ) → number Given an screenAbsoluteSize, get a good UI scale to use for fixed offset assuming general UI scales built for 720p monitors.  ","version":null,"tagName":"h3"},{"title":"observeUIScale​","type":1,"pageTitle":"GameScalingUtils","url":"/NevermoreEngine/api/GameScalingUtils#observeUIScale","content":"&lt;/&gt; GameScalingUtils.observeUIScale(screenGui: ScreenGui ) → Observable&lt;number&gt; Observes a smoothed out UI scale for a given screenGui  ","version":null,"tagName":"h3"},{"title":"observeUIScaleForChild​","type":1,"pageTitle":"GameScalingUtils","url":"/NevermoreEngine/api/GameScalingUtils#observeUIScaleForChild","content":"&lt;/&gt; GameScalingUtils.observeUIScaleForChild(child: Instance ) → Observable&lt;number&gt; Observes a smoothed out UI scale for a given screenGui  ","version":null,"tagName":"h3"},{"title":"renderUIScale​","type":1,"pageTitle":"GameScalingUtils","url":"/NevermoreEngine/api/GameScalingUtils#renderUIScale","content":"&lt;/&gt; GameScalingUtils.renderUIScale(props: { Parent: Instance? , ScreenGui: ScreenGui }) → Observable&lt;UIScale &gt; Blend equivalent of rendering a UI Scale  ","version":null,"tagName":"h3"},{"title":"renderDialogPadding​","type":1,"pageTitle":"GameScalingUtils","url":"/NevermoreEngine/api/GameScalingUtils#renderDialogPadding","content":"&lt;/&gt; GameScalingUtils.renderDialogPadding(props: { Parent: Instance? , ScreenGui: ScreenGui }) → Observable&lt;UIPadding &gt; Blend equivalent of rendering the dialog padding  ","version":null,"tagName":"h3"},{"title":"observeDialogPadding​","type":1,"pageTitle":"GameScalingUtils","url":"/NevermoreEngine/api/GameScalingUtils#observeDialogPadding","content":"&lt;/&gt; GameScalingUtils.observeDialogPadding(screenGui: ScreenGui ) → Observable&lt;UDim &gt; Observes a smoothed out UI scale for a given screenGui  ","version":null,"tagName":"h3"},{"title":"getDialogPadding​","type":1,"pageTitle":"GameScalingUtils","url":"/NevermoreEngine/api/GameScalingUtils#getDialogPadding","content":"&lt;/&gt; GameScalingUtils.getDialogPadding(screenAbsoluteSize: Vector2 ) → number Computes a reasonable dialog padding for a given absolute screen size ","version":null,"tagName":"h3"},{"title":"GameVersionUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GameVersionUtils","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"GameVersionUtils","url":"/NevermoreEngine/api/GameVersionUtils#types","content":" ","version":null,"tagName":"h2"},{"title":"ServerType​","type":1,"pageTitle":"GameVersionUtils","url":"/NevermoreEngine/api/GameVersionUtils#ServerType","content":"&lt;/&gt; type ServerType = &quot;standard&quot; | &quot;vip&quot; | &quot;reserved&quot; The server type to return ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"GameVersionUtils","url":"/NevermoreEngine/api/GameVersionUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getBuild​","type":1,"pageTitle":"GameVersionUtils","url":"/NevermoreEngine/api/GameVersionUtils#getBuild","content":"&lt;/&gt; GameVersionUtils.getBuild() → string Gets the game build  ","version":null,"tagName":"h3"},{"title":"getBuildWithServerType​","type":1,"pageTitle":"GameVersionUtils","url":"/NevermoreEngine/api/GameVersionUtils#getBuildWithServerType","content":"&lt;/&gt; GameVersionUtils.getBuildWithServerType() → string Gets the game build with a server type specified for debugging  ","version":null,"tagName":"h3"},{"title":"getServerType​","type":1,"pageTitle":"GameVersionUtils","url":"/NevermoreEngine/api/GameVersionUtils#getServerType","content":"&lt;/&gt; GameVersionUtils.getServerType() → ServerType Gets a string label for the current server type  ","version":null,"tagName":"h3"},{"title":"isVIPServer​","type":1,"pageTitle":"GameVersionUtils","url":"/NevermoreEngine/api/GameVersionUtils#isVIPServer","content":"&lt;/&gt; GameVersionUtils.isVIPServer() → boolean Returns true if we're a VIP server ","version":null,"tagName":"h3"},{"title":"GenericScreenGuiProvider","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GenericScreenGuiProvider","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GenericScreenGuiProvider","url":"/NevermoreEngine/api/GenericScreenGuiProvider#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"GenericScreenGuiProvider","url":"/NevermoreEngine/api/GenericScreenGuiProvider#new","content":"&lt;/&gt; GenericScreenGuiProvider.new(orders: {[string]: number}) → GenericScreenGuiProvider Constructs a new screen gui provider.  ","version":null,"tagName":"h3"},{"title":"ObserveScreenGui​","type":1,"pageTitle":"GenericScreenGuiProvider","url":"/NevermoreEngine/api/GenericScreenGuiProvider#ObserveScreenGui","content":"&lt;/&gt; GenericScreenGuiProvider:ObserveScreenGui(orderName: string) → Observable&lt;Instance &gt; Returns a blend ScreenGui.  ","version":null,"tagName":"h3"},{"title":"Get​","type":1,"pageTitle":"GenericScreenGuiProvider","url":"/NevermoreEngine/api/GenericScreenGuiProvider#Get","content":"&lt;/&gt; GenericScreenGuiProvider:Get( orderName: string-- Order name of display order ) → ScreenGui  Returns a new ScreenGui at DisplayOrder specified  ","version":null,"tagName":"h3"},{"title":"GetDisplayOrder​","type":1,"pageTitle":"GenericScreenGuiProvider","url":"/NevermoreEngine/api/GenericScreenGuiProvider#GetDisplayOrder","content":"&lt;/&gt; GenericScreenGuiProvider:GetDisplayOrder( orderName: string-- Order name of display order ) → number Retrieve the display order for a given order.  ","version":null,"tagName":"h3"},{"title":"ObserveDisplayOrder​","type":1,"pageTitle":"GenericScreenGuiProvider","url":"/NevermoreEngine/api/GenericScreenGuiProvider#ObserveDisplayOrder","content":"&lt;/&gt; GenericScreenGuiProvider:ObserveDisplayOrder( orderName: string-- Order name of display order ) → Observable&lt;number&gt; Retrieve the display order for a given order. ","version":null,"tagName":"h3"},{"title":"getGroundPlane","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/getGroundPlane","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"getGroundPlane","url":"/NevermoreEngine/api/getGroundPlane#functions","content":" ","version":null,"tagName":"h2"},{"title":"getGroundPlane​","type":1,"pageTitle":"getGroundPlane","url":"/NevermoreEngine/api/getGroundPlane#getGroundPlane","content":"&lt;/&gt; getGroundPlane.getGroundPlane( basis: Vector3 , radius: number, length: number, sampleCount: number, ignoreFunc: (Instance ) → boolean ) → ( Vector3 ,-- position Vector3 -- normal ) Uses -y as the direction Searchs for a groundPlane given a basis. Useful for planting a object in 3D space on terrain. WARNING ignoreFunc REALLY SHOULD NOT YIELD ","version":null,"tagName":"h3"},{"title":"GetRemoteEvent","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GetRemoteEvent","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GetRemoteEvent","url":"/NevermoreEngine/api/GetRemoteEvent#functions","content":" ","version":null,"tagName":"h2"},{"title":"GetRemoteEvent​","type":1,"pageTitle":"GetRemoteEvent","url":"/NevermoreEngine/api/GetRemoteEvent#GetRemoteEvent","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; GetRemoteEvent.GetRemoteEvent(name: string) → RemoteEvent  Retrieves a global remote event from the store. On the server, it constructs a new one, and on the client, it waits for it to exist. TIP Consider using PromiseGetRemoteEvent for a non-yielding version -- server.lua local GetRemoteEvent = require(&quot;GetRemoteEvent&quot;) local remoteEvent = GetRemoteEvent(&quot;testing&quot;) remoteEvent.OnServerEvent:Connect(print) -- client.lua local GetRemoteEvent = require(&quot;GetRemoteEvent&quot;) local remoteEvent = GetRemoteEvent(&quot;testing&quot;) remoteEvent:FireServer(&quot;Hello&quot;) --&gt; Hello (on the server) INFO If the game is not running, then a mock remote event will be created for use in testing. ","version":null,"tagName":"h3"},{"title":"getMechanismParts","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/getMechanismParts","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"getMechanismParts","url":"/NevermoreEngine/api/getMechanismParts#functions","content":" ","version":null,"tagName":"h2"},{"title":"getMechanismParts​","type":1,"pageTitle":"getMechanismParts","url":"/NevermoreEngine/api/getMechanismParts#getMechanismParts","content":"&lt;/&gt; getMechanismParts.getMechanismParts(originParts: Instance | {BasePart }) → {BasePart } Gets all parts in a mechanisms. A mechanism in Roblox is anything connected by joints, constraints, and are all owned by network ownership. INFO Calling this class can be quite expensive. print(getMechanismParts({ workspace.Part })) --&gt; &quot;Part&quot;, &quot;Blah&quot; See: https://devforum.roblox.com/t/getting-all-parts-in-a-mechanism-one-part-in-each-assembly/101344/4 ","version":null,"tagName":"h3"},{"title":"GetPercentExposedUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GetPercentExposedUtils","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"GetPercentExposedUtils","url":"/NevermoreEngine/api/GetPercentExposedUtils#properties","content":" ","version":null,"tagName":"h2"},{"title":"RAY_COUNT​","type":1,"pageTitle":"GetPercentExposedUtils","url":"/NevermoreEngine/api/GetPercentExposedUtils#RAY_COUNT","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; GetPercentExposedUtils.RAY_COUNT: number Number of rays to use when searching ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"GetPercentExposedUtils","url":"/NevermoreEngine/api/GetPercentExposedUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"search​","type":1,"pageTitle":"GetPercentExposedUtils","url":"/NevermoreEngine/api/GetPercentExposedUtils#search","content":"&lt;/&gt; GetPercentExposedUtils.search( point: Vector3 ,-- Point to search radius: number, raycaster: Raycaster? ) → {[BasePart ]: number}-- A table mapping parts to to percent exposure Searches for percent exposure of all parts given. ","version":null,"tagName":"h3"},{"title":"GoodSignal","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GoodSignal","content":"GoodSignal Batched Yield-Safe Signal Implementation Lua-side duplication of the API of events on Roblox objects. Signals are needed for to ensure that for local events objects are passed by reference rather than by value where possible, as the BindableEvent objects always pass signal arguments by value, meaning tables will be deep copied. Roblox's deep copy method parses to a non-lua table compatable format. This class is designed to work both in deferred mode and in regular mode. It follows whatever mode is set. local signal = Signal.new() local arg = {} signal:Connect(function(value) assert(arg == value, &quot;Tables are preserved when firing a Signal&quot;) end) signal:Fire(arg) INFO Why this over a direct BindableEvent? Well, in this case, the signal prevents Roblox from trying to serialize and desialize each table reference fired through the BindableEvent. This is a Signal class which has effectively identical behavior to a normal RBXScriptSignal, with the only difference being a couple extra stack frames at the bottom of the stack trace when an error is thrown This implementation caches runner coroutines, so the ability to yield in the signal handlers comes at minimal extra cost over a naive signal implementation that either always or never spawns a thread. Author notes: stravant - July 31st, 2021 - Created the file. Quenty - Auguest 21st, 2023 - Modified to fit Nevermore contract, with Moonwave docs","keywords":"","version":null},{"title":"getRotationInXZPlane","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/getRotationInXZPlane","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"getRotationInXZPlane","url":"/NevermoreEngine/api/getRotationInXZPlane#functions","content":" ","version":null,"tagName":"h2"},{"title":"getRotationInXZPlane​","type":1,"pageTitle":"getRotationInXZPlane","url":"/NevermoreEngine/api/getRotationInXZPlane#getRotationInXZPlane","content":"&lt;/&gt; getRotationInXZPlane.getRotationInXZPlane(cframe: CFrame ) → CFrame -- The CFrame in the XZ plane Computes the rotation in the XZ plane relative to the origin. TIP This function can be used to &quot;flatten&quot; a rotation so we just get the XZ rotation, which is the rotation you would see if we are looking directly top-down on the object. ","version":null,"tagName":"h3"},{"title":"GripPointer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GripPointer","content":"GripPointer This item only works when running on the client. Client Simple rig component to point at attachments given","keywords":"","version":null},{"title":"GetRemoteFunction","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GetRemoteFunction","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GetRemoteFunction","url":"/NevermoreEngine/api/GetRemoteFunction#functions","content":" ","version":null,"tagName":"h2"},{"title":"GetRemoteFunction​","type":1,"pageTitle":"GetRemoteFunction","url":"/NevermoreEngine/api/GetRemoteFunction#GetRemoteFunction","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; GetRemoteFunction.GetRemoteFunction(name: string) → RemoteFunction  Retrieves a global remote function from the store. On the server, it constructs a new one, and on the client, it waits for it to exist. TIP Consider using PromiseGetRemoteFunction for a non-yielding version -- server.lua local GetRemoteFunction = require(&quot;GetRemoteFunction&quot;) local remoteFunction = GetRemoteFunction(&quot;testing&quot;) remoteFunction.OnServerInvoke = function(_player, text) return &quot;HI &quot; .. tostring(text) end -- client.lua local GetRemoteFunction = require(&quot;GetRemoteFunction&quot;) local remoteFunction = GetRemoteFunction(&quot;testing&quot;) print(remoteFunction:InvokeServer(&quot;Bob&quot;)) --&gt; HI Bob INFO If the game is not running, then a mock remote function will be created for use in testing. ","version":null,"tagName":"h3"},{"title":"GroupPermissionProvider","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GroupPermissionProvider","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GroupPermissionProvider","url":"/NevermoreEngine/api/GroupPermissionProvider#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"GroupPermissionProvider","url":"/NevermoreEngine/api/GroupPermissionProvider#new","content":"&lt;/&gt; GroupPermissionProvider.new(config: table) → GroupPermissionProvider   ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"GroupPermissionProvider","url":"/NevermoreEngine/api/GroupPermissionProvider#Start","content":"&lt;/&gt; GroupPermissionProvider.Start(self: GroupPermissionProvider) → () Starts the permission provider. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"PromiseIsPermissionLevel​","type":1,"pageTitle":"GroupPermissionProvider","url":"/NevermoreEngine/api/GroupPermissionProvider#PromiseIsPermissionLevel","content":"&lt;/&gt; GroupPermissionProvider.PromiseIsPermissionLevel( self: GroupPermissionProvider, player: Player , permissionLevel: PermissionLevel ) → Promise&lt;boolean&gt; Returns whether the player is at a specific permission level ","version":null,"tagName":"h3"},{"title":"GroupUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GroupUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GroupUtils","url":"/NevermoreEngine/api/GroupUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseRankInGroup​","type":1,"pageTitle":"GroupUtils","url":"/NevermoreEngine/api/GroupUtils#promiseRankInGroup","content":"&lt;/&gt; GroupUtils.promiseRankInGroup( player: Player , groupId: number ) → Promise&lt;number&gt;-- Generally from 0 to 255 Retrieves the rank of the player in the group.  ","version":null,"tagName":"h3"},{"title":"promiseRoleInGroup​","type":1,"pageTitle":"GroupUtils","url":"/NevermoreEngine/api/GroupUtils#promiseRoleInGroup","content":"&lt;/&gt; GroupUtils.promiseRoleInGroup( player: Player , groupId: number ) → Promise&lt;string&gt; Retrieves the role of the player in the group.  ","version":null,"tagName":"h3"},{"title":"promiseGroupInfo​","type":1,"pageTitle":"GroupUtils","url":"/NevermoreEngine/api/GroupUtils#promiseGroupInfo","content":"&lt;/&gt; GroupUtils.promiseGroupInfo(groupId: number) → Promise&lt;table&gt; Retrieves groupInfo about a group.  ","version":null,"tagName":"h3"},{"title":"promiseGroupRoleInfo​","type":1,"pageTitle":"GroupUtils","url":"/NevermoreEngine/api/GroupUtils#promiseGroupRoleInfo","content":"&lt;/&gt; GroupUtils.promiseGroupRoleInfo( groupId: number, rankId: number ) → Promise&lt;table&gt; Retrieves group role info for a given rankId ","version":null,"tagName":"h3"},{"title":"GuiInteractionUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GuiInteractionUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GuiInteractionUtils","url":"/NevermoreEngine/api/GuiInteractionUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeInteractionEnabled​","type":1,"pageTitle":"GuiInteractionUtils","url":"/NevermoreEngine/api/GuiInteractionUtils#observeInteractionEnabled","content":"&lt;/&gt; GuiInteractionUtils.observeInteractionEnabled(gui: GuiObject ) → Observable&lt;boolean&gt; Observes whether a Gui is interactable  ","version":null,"tagName":"h3"},{"title":"observeInteractionEnabledBrio​","type":1,"pageTitle":"GuiInteractionUtils","url":"/NevermoreEngine/api/GuiInteractionUtils#observeInteractionEnabledBrio","content":"&lt;/&gt; GuiInteractionUtils.observeInteractionEnabledBrio(gui: GuiObject ) → Observable&lt;Brio&lt;true&gt;&gt; Observes whether a Gui is interactable, and returns a Brio only during interaction. ","version":null,"tagName":"h3"},{"title":"GuiTriangle","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GuiTriangle","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GuiTriangle","url":"/NevermoreEngine/api/GuiTriangle#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"GuiTriangle","url":"/NevermoreEngine/api/GuiTriangle#new","content":"&lt;/&gt; GuiTriangle.new(parent: Instance? ) → GuiTriangle Constructs a new GuiTriangle  ","version":null,"tagName":"h3"},{"title":"SetParent​","type":1,"pageTitle":"GuiTriangle","url":"/NevermoreEngine/api/GuiTriangle#SetParent","content":"&lt;/&gt; GuiTriangle.SetParent( self: GuiTriangle, parent: Instance? ) → ()   ","version":null,"tagName":"h3"},{"title":"Show​","type":1,"pageTitle":"GuiTriangle","url":"/NevermoreEngine/api/GuiTriangle#Show","content":"&lt;/&gt; GuiTriangle.Show(self: GuiTriangle) → () Shows the triangle  ","version":null,"tagName":"h3"},{"title":"Set​","type":1,"pageTitle":"GuiTriangle","url":"/NevermoreEngine/api/GuiTriangle#Set","content":"&lt;/&gt; GuiTriangle.Set( self: GuiTriangle, a: Vector2 , b: Vector2 , c: Vector2 ) → GuiTriangle-- self Sets the points to render  ","version":null,"tagName":"h3"},{"title":"Hide​","type":1,"pageTitle":"GuiTriangle","url":"/NevermoreEngine/api/GuiTriangle#Hide","content":"&lt;/&gt; GuiTriangle.Hide(self: GuiTriangle) → () Hides the triangle  ","version":null,"tagName":"h3"},{"title":"SetA​","type":1,"pageTitle":"GuiTriangle","url":"/NevermoreEngine/api/GuiTriangle#SetA","content":"&lt;/&gt; GuiTriangle.SetA( self: GuiTriangle, a: Vector2 ) → GuiTriangle-- self Sets the point  ","version":null,"tagName":"h3"},{"title":"SetB​","type":1,"pageTitle":"GuiTriangle","url":"/NevermoreEngine/api/GuiTriangle#SetB","content":"&lt;/&gt; GuiTriangle.SetB( self: GuiTriangle, b: Vector2 ) → GuiTriangle-- self Sets the point  ","version":null,"tagName":"h3"},{"title":"SetC​","type":1,"pageTitle":"GuiTriangle","url":"/NevermoreEngine/api/GuiTriangle#SetC","content":"&lt;/&gt; GuiTriangle.SetC( self: GuiTriangle, c: Vector2 ) → GuiTriangle-- self Sets the point  ","version":null,"tagName":"h3"},{"title":"UpdateRender​","type":1,"pageTitle":"GuiTriangle","url":"/NevermoreEngine/api/GuiTriangle#UpdateRender","content":"&lt;/&gt; GuiTriangle.UpdateRender(self: GuiTriangle) → () Updates the render of the triangle.  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"GuiTriangle","url":"/NevermoreEngine/api/GuiTriangle#Destroy","content":"&lt;/&gt; GuiTriangle.Destroy(self: GuiTriangle) → () Cleans up the triangle. ","version":null,"tagName":"h3"},{"title":"GuiVisibleManager","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/GuiVisibleManager","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"GuiVisibleManager","url":"/NevermoreEngine/api/GuiVisibleManager#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"GuiVisibleManager","url":"/NevermoreEngine/api/GuiVisibleManager#new","content":"&lt;/&gt; GuiVisibleManager.new( promiseNewPane: (maid: Maid) → Promise&lt;TPane&gt;,-- Returns a promise for a new pane. maxHideTime: number?-- Optional hide time ) → GuiVisibleManager Constructs a new GuiVisibleManager.  ","version":null,"tagName":"h3"},{"title":"IsVisible​","type":1,"pageTitle":"GuiVisibleManager","url":"/NevermoreEngine/api/GuiVisibleManager#IsVisible","content":"&lt;/&gt; GuiVisibleManager.IsVisible(self: GuiVisibleManager) → boolean Returns whether the Gui is visible.  ","version":null,"tagName":"h3"},{"title":"BindToBoolValue​","type":1,"pageTitle":"GuiVisibleManager","url":"/NevermoreEngine/api/GuiVisibleManager#BindToBoolValue","content":"&lt;/&gt; GuiVisibleManager.BindToBoolValue( self: GuiVisibleManager, boolValue: BoolValue ) → () Binds visiblity to the bool value being true. There could be other ways that the Gui is shown if this is not set.  ","version":null,"tagName":"h3"},{"title":"CreateShowHandle​","type":1,"pageTitle":"GuiVisibleManager","url":"/NevermoreEngine/api/GuiVisibleManager#CreateShowHandle","content":"&lt;/&gt; GuiVisibleManager.CreateShowHandle( self: GuiVisibleManager, doNotAnimate: boolean? ) → MaidTask Creates a handle that will force the gui to be rendered. Clean up the task to stop the showing. ","version":null,"tagName":"h3"},{"title":"HapticFeedbackUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HapticFeedbackUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HapticFeedbackUtils","url":"/NevermoreEngine/api/HapticFeedbackUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"smallVibrate​","type":1,"pageTitle":"HapticFeedbackUtils","url":"/NevermoreEngine/api/HapticFeedbackUtils#smallVibrate","content":"&lt;/&gt; HapticFeedbackUtils.smallVibrate( userInputType: UserInputType , length: number, amplitude: number ) → () Provides a small vibration.  ","version":null,"tagName":"h3"},{"title":"setSmallVibration​","type":1,"pageTitle":"HapticFeedbackUtils","url":"/NevermoreEngine/api/HapticFeedbackUtils#setSmallVibration","content":"&lt;/&gt; HapticFeedbackUtils.setSmallVibration( userInputType: UserInputType , amplitude: number ) → boolean Sets the small vibrators on the gamepad  ","version":null,"tagName":"h3"},{"title":"setLargeVibration​","type":1,"pageTitle":"HapticFeedbackUtils","url":"/NevermoreEngine/api/HapticFeedbackUtils#setLargeVibration","content":"&lt;/&gt; HapticFeedbackUtils.setLargeVibration( userInputType: UserInputType , amplitude: number ) → boolean Sets the large vibrators on the gamepad  ","version":null,"tagName":"h3"},{"title":"setVibrationMotor​","type":1,"pageTitle":"HapticFeedbackUtils","url":"/NevermoreEngine/api/HapticFeedbackUtils#setVibrationMotor","content":"&lt;/&gt; HapticFeedbackUtils.setVibrationMotor( userInputType: UserInputType , vibrationMotor: VibrationMotor , amplitude: number, ...: number-- vibrationValues ) → boolean Sets the small vibrators on the gamepad ","version":null,"tagName":"h3"},{"title":"HasChatTags","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HasChatTags","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HasChatTags","url":"/NevermoreEngine/api/HasChatTags#functions","content":" ","version":null,"tagName":"h2"},{"title":"AddChatTag​","type":1,"pageTitle":"HasChatTags","url":"/NevermoreEngine/api/HasChatTags#AddChatTag","content":"&lt;/&gt; HasChatTags:AddChatTag(chatTagData: ChatTagData) → () Adds chat tags to the player  ","version":null,"tagName":"h3"},{"title":"ClearTags​","type":1,"pageTitle":"HasChatTags","url":"/NevermoreEngine/api/HasChatTags#ClearTags","content":"&lt;/&gt; HasChatTags:ClearTags() → () Removes all chat tags from the player ","version":null,"tagName":"h3"},{"title":"HandleHighlightModel","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HandleHighlightModel","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HandleHighlightModel","url":"/NevermoreEngine/api/HandleHighlightModel#functions","content":" ","version":null,"tagName":"h2"},{"title":"SetHandle​","type":1,"pageTitle":"HandleHighlightModel","url":"/NevermoreEngine/api/HandleHighlightModel#SetHandle","content":"&lt;/&gt; HandleHighlightModel.SetHandle( self: HandleHighlightModel, handle: HandleAdornment ) → () Sets the handle for the highlight model.  ","version":null,"tagName":"h3"},{"title":"ObservePercentPressed​","type":1,"pageTitle":"HandleHighlightModel","url":"/NevermoreEngine/api/HandleHighlightModel#ObservePercentPressed","content":"&lt;/&gt; HandleHighlightModel.ObservePercentPressed(self: HandleHighlightModel) → Observable&lt;number&gt; Observes how pressed down the button is  ","version":null,"tagName":"h3"},{"title":"ObservePercentHighlighted​","type":1,"pageTitle":"HandleHighlightModel","url":"/NevermoreEngine/api/HandleHighlightModel#ObservePercentHighlighted","content":"&lt;/&gt; HandleHighlightModel.ObservePercentHighlighted(self: HandleHighlightModel) → Observable&lt;number&gt; Observes how highlighted the button is  ","version":null,"tagName":"h3"},{"title":"ObservePercentHighlightedTarget​","type":1,"pageTitle":"HandleHighlightModel","url":"/NevermoreEngine/api/HandleHighlightModel#ObservePercentHighlightedTarget","content":"&lt;/&gt; HandleHighlightModel.ObservePercentHighlightedTarget(self: HandleHighlightModel) → Observable&lt;number&gt; Observes target for how highlighted the button is ","version":null,"tagName":"h3"},{"title":"HasChatTagsBase","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HasChatTagsBase","content":"HasChatTagsBase","keywords":"","version":null},{"title":"HasChatTagsConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HasChatTagsConstants","content":"HasChatTagsConstants","keywords":"","version":null},{"title":"HasChatTagsClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HasChatTagsClient","content":"HasChatTagsClient","keywords":"","version":null},{"title":"HeartbeatCamera","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HeartbeatCamera","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"HeartbeatCamera","url":"/NevermoreEngine/api/HeartbeatCamera#properties","content":" ","version":null,"tagName":"h2"},{"title":"CameraState​","type":1,"pageTitle":"HeartbeatCamera","url":"/NevermoreEngine/api/HeartbeatCamera#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; HeartbeatCamera.CameraState: CameraState The current state. ","version":null,"tagName":"h3"},{"title":"Hide","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Hide","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Hide","url":"/NevermoreEngine/api/Hide#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Hide","url":"/NevermoreEngine/api/Hide#new","content":"&lt;/&gt; Hide.new(adornee: Instance ) → Hide Hides the given instances  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"Hide","url":"/NevermoreEngine/api/Hide#Destroy","content":"&lt;/&gt; Hide:Destroy() → () Cleans up the instance ","version":null,"tagName":"h3"},{"title":"HideClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HideClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HideClient","url":"/NevermoreEngine/api/HideClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"HideClient","url":"/NevermoreEngine/api/HideClient#new","content":"&lt;/&gt; HideClient.new(_adornee: Instance ) → HideClient Cleans up the instance  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"HideClient","url":"/NevermoreEngine/api/HideClient#Destroy","content":"&lt;/&gt; HideClient:Destroy() → () Cleans up the instance ","version":null,"tagName":"h3"},{"title":"HideService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HideService","content":"HideService","keywords":"","version":null},{"title":"HideHead","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HideHead","content":"HideHead","keywords":"","version":null},{"title":"HideUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HideUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HideUtils","url":"/NevermoreEngine/api/HideUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"isHidden​","type":1,"pageTitle":"HideUtils","url":"/NevermoreEngine/api/HideUtils#isHidden","content":"&lt;/&gt; HideUtils.isHidden(inst: Instance ) → boolean Returns whether the object in question is hidden. Prevents a requirement of binders being used, thus requiring a service bag. ","version":null,"tagName":"h3"},{"title":"HideServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HideServiceClient","content":"HideServiceClient","keywords":"","version":null},{"title":"HighlightServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HighlightServiceClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HighlightServiceClient","url":"/NevermoreEngine/api/HighlightServiceClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"HighlightServiceClient","url":"/NevermoreEngine/api/HighlightServiceClient#Init","content":"&lt;/&gt; HighlightServiceClient:Init(serviceBag: ServiceBag) → () Initializes the service. Should be done via the ServiceBag.  ","version":null,"tagName":"h3"},{"title":"GetAnimatedHighlightGroup​","type":1,"pageTitle":"HighlightServiceClient","url":"/NevermoreEngine/api/HighlightServiceClient#GetAnimatedHighlightGroup","content":"&lt;/&gt; HighlightServiceClient:GetAnimatedHighlightGroup() → AnimatedHighlightGroup Retrieves a global AnimatedHighlightGroup to share and coordinate highlights with.  ","version":null,"tagName":"h3"},{"title":"Highlight​","type":1,"pageTitle":"HighlightServiceClient","url":"/NevermoreEngine/api/HighlightServiceClient#Highlight","content":"&lt;/&gt; HighlightServiceClient:Highlight( adornee: Instance , observeScore: Observable&lt;number&gt; | number? ) → AnimatedHighlightModel Highlights an instance at the given priority  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"HighlightServiceClient","url":"/NevermoreEngine/api/HighlightServiceClient#Destroy","content":"&lt;/&gt; HighlightServiceClient:Destroy() → () Cleans up the service. ","version":null,"tagName":"h3"},{"title":"HintScoringUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HintScoringUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HintScoringUtils","url":"/NevermoreEngine/api/HintScoringUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getHumanoidPositionDirection​","type":1,"pageTitle":"HintScoringUtils","url":"/NevermoreEngine/api/HintScoringUtils#getHumanoidPositionDirection","content":"&lt;/&gt; HintScoringUtils.getHumanoidPositionDirection(humanoid: Humanoid ) → ( Vector3? ,-- Position Vector3? -- LookVector ) Gets humanoid position and direction.  ","version":null,"tagName":"h3"},{"title":"getAdorneeInRegionSet​","type":1,"pageTitle":"HintScoringUtils","url":"/NevermoreEngine/api/HintScoringUtils#getAdorneeInRegionSet","content":"&lt;/&gt; HintScoringUtils.getAdorneeInRegionSet( position: Vector3 , radius: number, ignoreList: {Instance }, getAdorneeFunction: (Instance ) → Instance? ) → {[Instance ]: true} Finds adornees in a region  ","version":null,"tagName":"h3"},{"title":"debugScore​","type":1,"pageTitle":"HintScoringUtils","url":"/NevermoreEngine/api/HintScoringUtils#debugScore","content":"&lt;/&gt; HintScoringUtils.debugScore( adornee: Instance , score: number ) → () Draws the score in debug mode  ","version":null,"tagName":"h3"},{"title":"raycastToAdornee​","type":1,"pageTitle":"HintScoringUtils","url":"/NevermoreEngine/api/HintScoringUtils#raycastToAdornee","content":"&lt;/&gt; HintScoringUtils.raycastToAdornee( raycaster: Raycaster, humanoidCenter: Vector3 , adornee: Instance , closestBoundingBoxPoint: Vector3 , extraDistance: number ) → Vector3 -- Hit position Raycasts to adornee  ","version":null,"tagName":"h3"},{"title":"clampToBoundingBox​","type":1,"pageTitle":"HintScoringUtils","url":"/NevermoreEngine/api/HintScoringUtils#clampToBoundingBox","content":"&lt;/&gt; HintScoringUtils.clampToBoundingBox( adornee: Instance , humanoidCenter: Vector3 ) → ( Vector3? ,-- clamped point Vector3? -- center of bounding box ) Clamps the humanoid center to the adornee bounding box, finding the nearest point. INFO We do this because we want to raycast to the closest point on the adornee, which will ensure we hit it, especially for larger adornees.  ","version":null,"tagName":"h3"},{"title":"scoreAdornee​","type":1,"pageTitle":"HintScoringUtils","url":"/NevermoreEngine/api/HintScoringUtils#scoreAdornee","content":"&lt;/&gt; HintScoringUtils.scoreAdornee( adornee: Instance , raycaster: Raycaster, humanoidCenter: Vector3 , humanoidLookVector: Vector3 , maxViewRadius: number, maxTriggerRadius: number, maxViewAngle: number, maxTriggerAngle: number, isLineOfSightRequired: boolean ) → boolean | number-- [0, 1] Scores the adornee as a target for showing as a target in terms of priority.  ","version":null,"tagName":"h3"},{"title":"scoreDist​","type":1,"pageTitle":"HintScoringUtils","url":"/NevermoreEngine/api/HintScoringUtils#scoreDist","content":"&lt;/&gt; HintScoringUtils.scoreDist( distance: number, maxViewDistance: number, maxTriggerRadius: number ) → number-- [0, 1] Scores the distance based upon a variety of mechanics  ","version":null,"tagName":"h3"},{"title":"scoreAngle​","type":1,"pageTitle":"HintScoringUtils","url":"/NevermoreEngine/api/HintScoringUtils#scoreAngle","content":"&lt;/&gt; HintScoringUtils.scoreAngle( angle: number, maxViewAngle: number, maxTriggerAngle: number ) → number-- [0, 1] Scores the angle based upon parameters ","version":null,"tagName":"h3"},{"title":"HSColorPicker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HSColorPicker","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HSColorPicker","url":"/NevermoreEngine/api/HSColorPicker#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"HSColorPicker","url":"/NevermoreEngine/api/HSColorPicker#new","content":"&lt;/&gt; HSColorPicker.new() → HSColorPicker   ","version":null,"tagName":"h3"},{"title":"ObserveIsPressed​","type":1,"pageTitle":"HSColorPicker","url":"/NevermoreEngine/api/HSColorPicker#ObserveIsPressed","content":"&lt;/&gt; HSColorPicker:ObserveIsPressed() → BoolValue  Gets whether the color picker is pressed or not.  ","version":null,"tagName":"h3"},{"title":"SetHSVColor​","type":1,"pageTitle":"HSColorPicker","url":"/NevermoreEngine/api/HSColorPicker#SetHSVColor","content":"&lt;/&gt; HSColorPicker:SetHSVColor(hsvColor: Vector3 ) → () Sets the HSVColor as a Vector3  ","version":null,"tagName":"h3"},{"title":"GetHSVColor​","type":1,"pageTitle":"HSColorPicker","url":"/NevermoreEngine/api/HSColorPicker#GetHSVColor","content":"&lt;/&gt; HSColorPicker:GetHSVColor() → Vector3  Gets the color as an HSV Vector3  ","version":null,"tagName":"h3"},{"title":"SetColor​","type":1,"pageTitle":"HSColorPicker","url":"/NevermoreEngine/api/HSColorPicker#SetColor","content":"&lt;/&gt; HSColorPicker:SetColor(color: Color3 ) → () Sets the color  ","version":null,"tagName":"h3"},{"title":"GetColor​","type":1,"pageTitle":"HSColorPicker","url":"/NevermoreEngine/api/HSColorPicker#GetColor","content":"&lt;/&gt; HSColorPicker:GetColor() → Color3  Gets the color  ","version":null,"tagName":"h3"},{"title":"GetSizeValue​","type":1,"pageTitle":"HSColorPicker","url":"/NevermoreEngine/api/HSColorPicker#GetSizeValue","content":"&lt;/&gt; HSColorPicker:GetSizeValue() → Vector3  Gets the size value for the HSColorPicker.  ","version":null,"tagName":"h3"},{"title":"SetTransparency​","type":1,"pageTitle":"HSColorPicker","url":"/NevermoreEngine/api/HSColorPicker#SetTransparency","content":"&lt;/&gt; HSColorPicker:SetTransparency(transparency: number) → () Sets the transparency of the HSColorPicker  ","version":null,"tagName":"h3"},{"title":"SetSize​","type":1,"pageTitle":"HSColorPicker","url":"/NevermoreEngine/api/HSColorPicker#SetSize","content":"&lt;/&gt; HSColorPicker:SetSize(height: number) → () Sets the size of the color picker. This is in &quot;line height&quot; units. ","version":null,"tagName":"h3"},{"title":"HSColorPickerCursor","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HSColorPickerCursor","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HSColorPickerCursor","url":"/NevermoreEngine/api/HSColorPickerCursor#functions","content":" ","version":null,"tagName":"h2"},{"title":"HintBackgroundColor​","type":1,"pageTitle":"HSColorPickerCursor","url":"/NevermoreEngine/api/HSColorPickerCursor#HintBackgroundColor","content":"&lt;/&gt; HSColorPickerCursor.HintBackgroundColor( self: HSColorPickerCursor, color: Color3 ) → () Hints the background color so contrast can be set appropriately.  ","version":null,"tagName":"h3"},{"title":"SetHeight​","type":1,"pageTitle":"HSColorPickerCursor","url":"/NevermoreEngine/api/HSColorPickerCursor#SetHeight","content":"&lt;/&gt; HSColorPickerCursor.SetHeight( self: HSColorPickerCursor, height: number ) → () Sets the size of the cursor.  ","version":null,"tagName":"h3"},{"title":"SetPosition​","type":1,"pageTitle":"HSColorPickerCursor","url":"/NevermoreEngine/api/HSColorPickerCursor#SetPosition","content":"&lt;/&gt; HSColorPickerCursor.SetPosition( self: HSColorPickerCursor, position: Vector2 ) → () Sets the Vector2 position in scale (from 0 to 1).  ","version":null,"tagName":"h3"},{"title":"GetPosition​","type":1,"pageTitle":"HSColorPickerCursor","url":"/NevermoreEngine/api/HSColorPickerCursor#GetPosition","content":"&lt;/&gt; HSColorPickerCursor.GetPosition(self: HSColorPickerCursor) → Vector2  Gets the position of the cursor in scale  ","version":null,"tagName":"h3"},{"title":"SetTransparency​","type":1,"pageTitle":"HSColorPickerCursor","url":"/NevermoreEngine/api/HSColorPickerCursor#SetTransparency","content":"&lt;/&gt; HSColorPickerCursor.SetTransparency( self: HSColorPickerCursor, transparency: number ) → () Sets the transparency of the cusor ","version":null,"tagName":"h3"},{"title":"HSVColorPicker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HSVColorPicker","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HSVColorPicker","url":"/NevermoreEngine/api/HSVColorPicker#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"HSVColorPicker","url":"/NevermoreEngine/api/HSVColorPicker#new","content":"&lt;/&gt; HSVColorPicker.new() → HSVColorPicker Creates a new color picker! local picker = HSVColorPicker.new() picker:SetColor(Color3.new(0.5, 0.5, 0.5)) picker.Gui.Parent = screenGui   ","version":null,"tagName":"h3"},{"title":"SetSize​","type":1,"pageTitle":"HSVColorPicker","url":"/NevermoreEngine/api/HSVColorPicker#SetSize","content":"&lt;/&gt; HSVColorPicker:SetSize(height: number) → () Sets the height of the HSVColorPicker. This impacts the [GetSizeValue] return size. This is a general interface to size things.  ","version":null,"tagName":"h3"},{"title":"SyncValue​","type":1,"pageTitle":"HSVColorPicker","url":"/NevermoreEngine/api/HSVColorPicker#SyncValue","content":"&lt;/&gt; HSVColorPicker:SyncValue(color3Value: Color3Value ) → maid Syncs the color picker with the Color3Value.  ","version":null,"tagName":"h3"},{"title":"HintBackgroundColor​","type":1,"pageTitle":"HSVColorPicker","url":"/NevermoreEngine/api/HSVColorPicker#HintBackgroundColor","content":"&lt;/&gt; HSVColorPicker:HintBackgroundColor(color: Color3 ) → () Hints what the background color of the HSVColorPicker. This impacts some UI elements to ensure proper contrast.  ","version":null,"tagName":"h3"},{"title":"SetHSVColor​","type":1,"pageTitle":"HSVColorPicker","url":"/NevermoreEngine/api/HSVColorPicker#SetHSVColor","content":"&lt;/&gt; HSVColorPicker:SetHSVColor(hsvColor: Vector3 ) → () Set the current color in HSV formet.  ","version":null,"tagName":"h3"},{"title":"GetHSVColor​","type":1,"pageTitle":"HSVColorPicker","url":"/NevermoreEngine/api/HSVColorPicker#GetHSVColor","content":"&lt;/&gt; HSVColorPicker:GetHSVColor() → Vector3  Get the current color in HSV formet as a Vector3.  ","version":null,"tagName":"h3"},{"title":"SetColor​","type":1,"pageTitle":"HSVColorPicker","url":"/NevermoreEngine/api/HSVColorPicker#SetColor","content":"&lt;/&gt; HSVColorPicker:SetColor(color: Color3 ) → () Set the current color.  ","version":null,"tagName":"h3"},{"title":"GetColor​","type":1,"pageTitle":"HSVColorPicker","url":"/NevermoreEngine/api/HSVColorPicker#GetColor","content":"&lt;/&gt; HSVColorPicker:GetColor() → Color3  Get the current color.  ","version":null,"tagName":"h3"},{"title":"GetSizeValue​","type":1,"pageTitle":"HSVColorPicker","url":"/NevermoreEngine/api/HSVColorPicker#GetSizeValue","content":"&lt;/&gt; HSVColorPicker:GetSizeValue() → ValueObject&lt;Vector2 &gt; A size value that defines the aspect ratio and size of this picker. See [SetSize]  ","version":null,"tagName":"h3"},{"title":"SetTransparency​","type":1,"pageTitle":"HSVColorPicker","url":"/NevermoreEngine/api/HSVColorPicker#SetTransparency","content":"&lt;/&gt; HSVColorPicker:SetTransparency(transparency: number) → () Sets the transparency of the color ","version":null,"tagName":"h3"},{"title":"HttpPromise","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HttpPromise","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HttpPromise","url":"/NevermoreEngine/api/HttpPromise#functions","content":" ","version":null,"tagName":"h2"},{"title":"request​","type":1,"pageTitle":"HttpPromise","url":"/NevermoreEngine/api/HttpPromise#request","content":"&lt;/&gt; HttpPromise.request(request: HTTPRequest) → Promise&lt;table&gt; Decodes JSON from the response local requestPromise = HttpPromise.request({ Headers = { [&quot;Content-Type&quot;] = &quot;application/json&quot;; }; Url = DISCORD_LOG_URL; Body = HttpService:JSONEncode(data); Method = &quot;POST&quot;; })   ","version":null,"tagName":"h3"},{"title":"isHttpResponse​","type":1,"pageTitle":"HttpPromise","url":"/NevermoreEngine/api/HttpPromise#isHttpResponse","content":"&lt;/&gt; HttpPromise.isHttpResponse(value: any) → boolean Returns true if the value is an HttpResponse  ","version":null,"tagName":"h3"},{"title":"convertHttpResponseToString​","type":1,"pageTitle":"HttpPromise","url":"/NevermoreEngine/api/HttpPromise#convertHttpResponseToString","content":"&lt;/&gt; HttpPromise.convertHttpResponseToString(value: HttpResponse) → string Converts an http response to a string for debugging  ","version":null,"tagName":"h3"},{"title":"json​","type":1,"pageTitle":"HttpPromise","url":"/NevermoreEngine/api/HttpPromise#json","content":"&lt;/&gt; HttpPromise.json(request: table | string) → Promise&lt;table&gt; Makes a GET JSON request and then expects JSON as a result from said request HttpPromise.json(&quot;https://quenty.org/banned/4397833/status&quot;) :Then(print)   ","version":null,"tagName":"h3"},{"title":"logFailedRequests​","type":1,"pageTitle":"HttpPromise","url":"/NevermoreEngine/api/HttpPromise#logFailedRequests","content":"&lt;/&gt; HttpPromise.logFailedRequests( ...: any-- A list of requests to retrieve. Meant to be used ) → () Logs failed requests and any errors retrieved HttpPromise.json(&quot;https://quenty.org/banned/4397833/status&quot;) :Catch(HttpPromise.logFailedRequests)   ","version":null,"tagName":"h3"},{"title":"decodeJson​","type":1,"pageTitle":"HttpPromise","url":"/NevermoreEngine/api/HttpPromise#decodeJson","content":"&lt;/&gt; HttpPromise.decodeJson(response: {Body: string}) → table Decodes JSON from the response ","version":null,"tagName":"h3"},{"title":"HumanoidAnimatorUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HumanoidAnimatorUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HumanoidAnimatorUtils","url":"/NevermoreEngine/api/HumanoidAnimatorUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getOrCreateAnimator​","type":1,"pageTitle":"HumanoidAnimatorUtils","url":"/NevermoreEngine/api/HumanoidAnimatorUtils#getOrCreateAnimator","content":"&lt;/&gt; HumanoidAnimatorUtils.getOrCreateAnimator(humanoid: Humanoid | AnimationController ) → Animator  Gets a humanoid animator for a given humanoid WARNING There is undefined behavior when using this on the client when the server does not already have an animator. Doing so may break replication. I'm not sure.  ","version":null,"tagName":"h3"},{"title":"findAnimator​","type":1,"pageTitle":"HumanoidAnimatorUtils","url":"/NevermoreEngine/api/HumanoidAnimatorUtils#findAnimator","content":"&lt;/&gt; HumanoidAnimatorUtils.findAnimator(target: Instance ) → Animator?  Finds an animator in an instance  ","version":null,"tagName":"h3"},{"title":"stopAnimations​","type":1,"pageTitle":"HumanoidAnimatorUtils","url":"/NevermoreEngine/api/HumanoidAnimatorUtils#stopAnimations","content":"&lt;/&gt; HumanoidAnimatorUtils.stopAnimations( humanoid: Humanoid , fadeTime: number?-- Optional fade time to stop animations. Defaults to 0.1. ) → () Stops all animations from playing.  ","version":null,"tagName":"h3"},{"title":"isPlayingAnimationTrack​","type":1,"pageTitle":"HumanoidAnimatorUtils","url":"/NevermoreEngine/api/HumanoidAnimatorUtils#isPlayingAnimationTrack","content":"&lt;/&gt; HumanoidAnimatorUtils.isPlayingAnimationTrack( humanoid: Humanoid , track: AnimationTrack ) → boolean Returns whether a track is being played. ","version":null,"tagName":"h3"},{"title":"HumanoidDescriptionUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HumanoidDescriptionUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HumanoidDescriptionUtils","url":"/NevermoreEngine/api/HumanoidDescriptionUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseApplyDescription​","type":1,"pageTitle":"HumanoidDescriptionUtils","url":"/NevermoreEngine/api/HumanoidDescriptionUtils#promiseApplyDescription","content":"&lt;/&gt; HumanoidDescriptionUtils.promiseApplyDescription( humanoid: Humanoid , description: HumanoidDescription ) → Promise Promises to apply a humaoid description  ","version":null,"tagName":"h3"},{"title":"promiseApplyDescriptionReset​","type":1,"pageTitle":"HumanoidDescriptionUtils","url":"/NevermoreEngine/api/HumanoidDescriptionUtils#promiseApplyDescriptionReset","content":"&lt;/&gt; HumanoidDescriptionUtils.promiseApplyDescriptionReset( humanoid: Humanoid , description: HumanoidDescription , assetTypeVerification: AssetTypeVerification ) → Promise Promises to apply a humaoid description reset call  ","version":null,"tagName":"h3"},{"title":"promiseApplyFromUserName​","type":1,"pageTitle":"HumanoidDescriptionUtils","url":"/NevermoreEngine/api/HumanoidDescriptionUtils#promiseApplyFromUserName","content":"&lt;/&gt; HumanoidDescriptionUtils.promiseApplyFromUserName( humanoid: Humanoid , userName: string ) → Promise Applies humanoid description from userName.  ","version":null,"tagName":"h3"},{"title":"promiseFromUserName​","type":1,"pageTitle":"HumanoidDescriptionUtils","url":"/NevermoreEngine/api/HumanoidDescriptionUtils#promiseFromUserName","content":"&lt;/&gt; HumanoidDescriptionUtils.promiseFromUserName(userName: string) → Promise&lt;HumanoidDescription &gt; Retrieves a humanoid description from username  ","version":null,"tagName":"h3"},{"title":"promiseFromUserId​","type":1,"pageTitle":"HumanoidDescriptionUtils","url":"/NevermoreEngine/api/HumanoidDescriptionUtils#promiseFromUserId","content":"&lt;/&gt; HumanoidDescriptionUtils.promiseFromUserId(userId: number) → Promise&lt;HumanoidDescription &gt; Retrieves a humanoid description from userId  ","version":null,"tagName":"h3"},{"title":"getAssetIdsFromString​","type":1,"pageTitle":"HumanoidDescriptionUtils","url":"/NevermoreEngine/api/HumanoidDescriptionUtils#getAssetIdsFromString","content":"&lt;/&gt; HumanoidDescriptionUtils.getAssetIdsFromString( assetString: string-- A comma seperated value of asset ids which should be numbers ) → {number} Retrieves the assetIds from an assetId, in the format that is known to us.  ","version":null,"tagName":"h3"},{"title":"getAssetPromisesFromString​","type":1,"pageTitle":"HumanoidDescriptionUtils","url":"/NevermoreEngine/api/HumanoidDescriptionUtils#getAssetPromisesFromString","content":"&lt;/&gt; HumanoidDescriptionUtils.getAssetPromisesFromString( assetString: string-- A comma seperated value of asset ids which should be numbers ) → {Promise&lt;Instance &gt;} From stuff like HumanoidDescription.HatAccessory. ","version":null,"tagName":"h3"},{"title":"HumanoidKillerUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HumanoidKillerUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HumanoidKillerUtils","url":"/NevermoreEngine/api/HumanoidKillerUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"untagKiller​","type":1,"pageTitle":"HumanoidKillerUtils","url":"/NevermoreEngine/api/HumanoidKillerUtils#untagKiller","content":"&lt;/&gt; HumanoidKillerUtils.untagKiller(humanoid: Humanoid ) → () Removes all killer tags  ","version":null,"tagName":"h3"},{"title":"tagKiller​","type":1,"pageTitle":"HumanoidKillerUtils","url":"/NevermoreEngine/api/HumanoidKillerUtils#tagKiller","content":"&lt;/&gt; HumanoidKillerUtils.tagKiller( humanoid: Humanoid , attacker: Player ) → () Tags the killer with a source. TIP Be sure to tag the killer before applying damage.  ","version":null,"tagName":"h3"},{"title":"getKillerHumanoidOfHumanoid​","type":1,"pageTitle":"HumanoidKillerUtils","url":"/NevermoreEngine/api/HumanoidKillerUtils#getKillerHumanoidOfHumanoid","content":"&lt;/&gt; HumanoidKillerUtils.getKillerHumanoidOfHumanoid(humanoid: Humanoid ) → Humanoid?  Killer can either be a humanoid or a player (which we'll grab the humanoid)  ","version":null,"tagName":"h3"},{"title":"getPlayerKillerOfHumanoid​","type":1,"pageTitle":"HumanoidKillerUtils","url":"/NevermoreEngine/api/HumanoidKillerUtils#getPlayerKillerOfHumanoid","content":"&lt;/&gt; HumanoidKillerUtils.getPlayerKillerOfHumanoid(humanoid: Humanoid ) → Player?  Killer must be a player ","version":null,"tagName":"h3"},{"title":"HumanoidSpeed","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HumanoidSpeed","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HumanoidSpeed","url":"/NevermoreEngine/api/HumanoidSpeed#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"HumanoidSpeed","url":"/NevermoreEngine/api/HumanoidSpeed#new","content":"&lt;/&gt; HumanoidSpeed.new( humanoid: Humanoid , serviceBag: ServiceBag ) → HumanoidSpeed Constructs a new HumanoidSpeed  ","version":null,"tagName":"h3"},{"title":"SetDefaultSpeed​","type":1,"pageTitle":"HumanoidSpeed","url":"/NevermoreEngine/api/HumanoidSpeed#SetDefaultSpeed","content":"&lt;/&gt; HumanoidSpeed:SetDefaultSpeed(defaultSpeed: number) → () Sets the default speed for the humanoid  ","version":null,"tagName":"h3"},{"title":"ApplySpeedMultiplier​","type":1,"pageTitle":"HumanoidSpeed","url":"/NevermoreEngine/api/HumanoidSpeed#ApplySpeedMultiplier","content":"&lt;/&gt; HumanoidSpeed:ApplySpeedMultiplier(multiplier: number) → function-- Cleanup function Applies a speed multipler to the player's speed  ","version":null,"tagName":"h3"},{"title":"ApplySpeedAdditive​","type":1,"pageTitle":"HumanoidSpeed","url":"/NevermoreEngine/api/HumanoidSpeed#ApplySpeedAdditive","content":"&lt;/&gt; HumanoidSpeed:ApplySpeedAdditive(amount: number) → function-- Cleanup function Applies a speed additive to the player's speed ","version":null,"tagName":"h3"},{"title":"HumanoidMoveDirectionUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HumanoidMoveDirectionUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HumanoidMoveDirectionUtils","url":"/NevermoreEngine/api/HumanoidMoveDirectionUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getRelativeMoveDirection​","type":1,"pageTitle":"HumanoidMoveDirectionUtils","url":"/NevermoreEngine/api/HumanoidMoveDirectionUtils#getRelativeMoveDirection","content":"&lt;/&gt; HumanoidMoveDirectionUtils.getRelativeMoveDirection( cameraCFrame: CFrame , humanoid: Humanoid ) → Vector3  Gets the relative move direction from the camera and the humanoid. This is absolutely a hack. ","version":null,"tagName":"h3"},{"title":"HumanoidSpeedBindersClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HumanoidSpeedBindersClient","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"HumanoidSpeedBindersClient","url":"/NevermoreEngine/api/HumanoidSpeedBindersClient#properties","content":" ","version":null,"tagName":"h2"},{"title":"HumanoidSpeed​","type":1,"pageTitle":"HumanoidSpeedBindersClient","url":"/NevermoreEngine/api/HumanoidSpeedBindersClient#HumanoidSpeed","content":"&lt;/&gt; HumanoidSpeedBindersClient.HumanoidSpeed: Binder&lt;HumanoidSpeedClient&gt;  ","version":null,"tagName":"h3"},{"title":"HumanoidSpeedBindersServer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HumanoidSpeedBindersServer","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"HumanoidSpeedBindersServer","url":"/NevermoreEngine/api/HumanoidSpeedBindersServer#properties","content":" ","version":null,"tagName":"h2"},{"title":"HumanoidSpeed​","type":1,"pageTitle":"HumanoidSpeedBindersServer","url":"/NevermoreEngine/api/HumanoidSpeedBindersServer#HumanoidSpeed","content":"&lt;/&gt; HumanoidSpeedBindersServer.HumanoidSpeed: Binder&lt;HumanoidSpeed&gt;  ","version":null,"tagName":"h3"},{"title":"HumanoidSpeedClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HumanoidSpeedClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HumanoidSpeedClient","url":"/NevermoreEngine/api/HumanoidSpeedClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"GetPlayer​","type":1,"pageTitle":"HumanoidSpeedClient","url":"/NevermoreEngine/api/HumanoidSpeedClient#GetPlayer","content":"&lt;/&gt; HumanoidSpeedClient:GetPlayer() → Player?  Gets the player for this humanoid ","version":null,"tagName":"h3"},{"title":"HumanoidTracker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HumanoidTracker","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HumanoidTracker","url":"/NevermoreEngine/api/HumanoidTracker#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"HumanoidTracker","url":"/NevermoreEngine/api/HumanoidTracker#new","content":"&lt;/&gt; HumanoidTracker.new(player: Player ) → HumanoidTracker Tracks the player's current humanoid TIP Be sure to clean up the tracker once you're done!  ","version":null,"tagName":"h3"},{"title":"PromiseNextHumanoid​","type":1,"pageTitle":"HumanoidTracker","url":"/NevermoreEngine/api/HumanoidTracker#PromiseNextHumanoid","content":"&lt;/&gt; HumanoidTracker.PromiseNextHumanoid(self: HumanoidTracker) → Promise&lt;Humanoid &gt; Returns a promise that resolves when the next humanoid is found. If a humanoid is already there, then returns a resolved promise with that humanoid. ","version":null,"tagName":"h3"},{"title":"HumanoidTeleportUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HumanoidTeleportUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HumanoidTeleportUtils","url":"/NevermoreEngine/api/HumanoidTeleportUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"identifySafePosition​","type":1,"pageTitle":"HumanoidTeleportUtils","url":"/NevermoreEngine/api/HumanoidTeleportUtils#identifySafePosition","content":"&lt;/&gt; HumanoidTeleportUtils.identifySafePosition( position: Position, raycaster: Raycaster?-- Optional raycaster ) → ( boolean,-- True if safe Vector3? -- Position if we can hit it ) Finds a safe position to teleport a humanoid. This searches some amount around the position to try to ensure a free space for the humanoid.  ","version":null,"tagName":"h3"},{"title":"teleportRootPart​","type":1,"pageTitle":"HumanoidTeleportUtils","url":"/NevermoreEngine/api/HumanoidTeleportUtils#teleportRootPart","content":"&lt;/&gt; HumanoidTeleportUtils.teleportRootPart( humanoid: Humanoid , rootPart: BasePart , position: Vector3 ) → () Teleports a humanoid to a given location. INFO You should call this on the machine that has network ownership. For characters owned by a player, this is generally the player who's character it is. For NPCs, this should generally be the server.  ","version":null,"tagName":"h3"},{"title":"teleportParts​","type":1,"pageTitle":"HumanoidTeleportUtils","url":"/NevermoreEngine/api/HumanoidTeleportUtils#teleportParts","content":"&lt;/&gt; HumanoidTeleportUtils.teleportParts( humanoid: Humanoid , rootPart: BasePart , parts: {BasePart }, position: Vector3 ) → () Teleports a humanoid to a given location including all attached parts  ","version":null,"tagName":"h3"},{"title":"tryTeleportCharacter​","type":1,"pageTitle":"HumanoidTeleportUtils","url":"/NevermoreEngine/api/HumanoidTeleportUtils#tryTeleportCharacter","content":"&lt;/&gt; HumanoidTeleportUtils.tryTeleportCharacter( character: Model , position: Vector3 ) → () Tries to teleport the character to a given position ","version":null,"tagName":"h3"},{"title":"HumanoidUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HumanoidUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HumanoidUtils","url":"/NevermoreEngine/api/HumanoidUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getHumanoid​","type":1,"pageTitle":"HumanoidUtils","url":"/NevermoreEngine/api/HumanoidUtils#getHumanoid","content":"&lt;/&gt; HumanoidUtils.getHumanoid( descendant: Instance -- Child of a humanoid model, like a limb ) → Humanoid?  Retrieves a humanoid from a descendant.  ","version":null,"tagName":"h3"},{"title":"forceUnseatHumanoid​","type":1,"pageTitle":"HumanoidUtils","url":"/NevermoreEngine/api/HumanoidUtils#forceUnseatHumanoid","content":"&lt;/&gt; HumanoidUtils.forceUnseatHumanoid(humanoid: Humanoid ) → () Forcefully unseats the humanoid. Useful when teleporting humanoid. Definitely a non-intuitive operation to do safely. ","version":null,"tagName":"h3"},{"title":"HumanoidTrackerService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/HumanoidTrackerService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"HumanoidTrackerService","url":"/NevermoreEngine/api/HumanoidTrackerService#functions","content":" ","version":null,"tagName":"h2"},{"title":"GetHumanoidTracker​","type":1,"pageTitle":"HumanoidTrackerService","url":"/NevermoreEngine/api/HumanoidTrackerService#GetHumanoidTracker","content":"&lt;/&gt; HumanoidTrackerService:GetHumanoidTracker( player: Player? -- If not set, uses local player ) → HumanoidTracker Gets a humanoid tracker for a given player  ","version":null,"tagName":"h3"},{"title":"GetHumanoid​","type":1,"pageTitle":"HumanoidTrackerService","url":"/NevermoreEngine/api/HumanoidTrackerService#GetHumanoid","content":"&lt;/&gt; HumanoidTrackerService:GetHumanoid( player: Player? -- If not set, uses local player ) → Humanoid?  Gets a player's humanoid  ","version":null,"tagName":"h3"},{"title":"ObserveHumanoid​","type":1,"pageTitle":"HumanoidTrackerService","url":"/NevermoreEngine/api/HumanoidTrackerService#ObserveHumanoid","content":"&lt;/&gt; HumanoidTrackerService:ObserveHumanoid( player: Player? -- If not set, uses local player ) → Observable&lt;Humanoid? &gt; Observe a player's humanoid  ","version":null,"tagName":"h3"},{"title":"ObserveHumanoidBrio​","type":1,"pageTitle":"HumanoidTrackerService","url":"/NevermoreEngine/api/HumanoidTrackerService#ObserveHumanoidBrio","content":"&lt;/&gt; HumanoidTrackerService:ObserveHumanoidBrio( player: Player? -- If not set, uses local player ) → Observable&lt;Brio&lt;Humanoid &gt;&gt; Observe a player's humanoid  ","version":null,"tagName":"h3"},{"title":"GetAliveHumanoid​","type":1,"pageTitle":"HumanoidTrackerService","url":"/NevermoreEngine/api/HumanoidTrackerService#GetAliveHumanoid","content":"&lt;/&gt; HumanoidTrackerService:GetAliveHumanoid( player: Player? -- If not set, uses local player ) → Humanoid?  Gets a player's alive humanoid  ","version":null,"tagName":"h3"},{"title":"ObserveAliveHumanoid​","type":1,"pageTitle":"HumanoidTrackerService","url":"/NevermoreEngine/api/HumanoidTrackerService#ObserveAliveHumanoid","content":"&lt;/&gt; HumanoidTrackerService:ObserveAliveHumanoid( player: Player? -- If not set, uses local player ) → Observable&lt;Humanoid? &gt; Observe a player's alive humanoid  ","version":null,"tagName":"h3"},{"title":"ObserveAliveHumanoidBrio​","type":1,"pageTitle":"HumanoidTrackerService","url":"/NevermoreEngine/api/HumanoidTrackerService#ObserveAliveHumanoidBrio","content":"&lt;/&gt; HumanoidTrackerService:ObserveAliveHumanoidBrio( player: Player? -- If not set, uses local player ) → Observable&lt;Brio&lt;Humanoid &gt;&gt; Observe a player's alive humanoid  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"HumanoidTrackerService","url":"/NevermoreEngine/api/HumanoidTrackerService#Destroy","content":"&lt;/&gt; HumanoidTrackerService:Destroy() → () Cleans up the humanoid tracking service ","version":null,"tagName":"h3"},{"title":"IdleService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IdleService","content":"IdleService","keywords":"","version":null},{"title":"IdleTargetCalculator","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IdleTargetCalculator","content":"IdleTargetCalculator Assets in calculating whether the player is idle while moving the camera around or aiming a gun.","keywords":"","version":null},{"title":"IdleServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IdleServiceClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"IdleServiceClient","url":"/NevermoreEngine/api/IdleServiceClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"IdleServiceClient","url":"/NevermoreEngine/api/IdleServiceClient#Init","content":"&lt;/&gt; IdleServiceClient:Init(serviceBag: ServiceBag) → () Initializes the idle service on the client. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"IdleServiceClient","url":"/NevermoreEngine/api/IdleServiceClient#Start","content":"&lt;/&gt; IdleServiceClient:Start() → () Starts idle service on the client. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"ObserveHumanoidMoveFromCurrentPosition​","type":1,"pageTitle":"IdleServiceClient","url":"/NevermoreEngine/api/IdleServiceClient#ObserveHumanoidMoveFromCurrentPosition","content":"&lt;/&gt; IdleServiceClient:ObserveHumanoidMoveFromCurrentPosition(minimumTimeVisible: number) → Observable Observes a humanoid moving from the current position after a set amount of time. Can be used to close a UI when the humanoid wanders too far.  ","version":null,"tagName":"h3"},{"title":"IsHumanoidIdle​","type":1,"pageTitle":"IdleServiceClient","url":"/NevermoreEngine/api/IdleServiceClient#IsHumanoidIdle","content":"&lt;/&gt; IdleServiceClient:IsHumanoidIdle() → boolean Returns whether the humanoid is idle.  ","version":null,"tagName":"h3"},{"title":"IsMoving​","type":1,"pageTitle":"IdleServiceClient","url":"/NevermoreEngine/api/IdleServiceClient#IsMoving","content":"&lt;/&gt; IdleServiceClient:IsMoving() → boolean Returns whether the humanoid is idle.  ","version":null,"tagName":"h3"},{"title":"ObserveHumanoidIdle​","type":1,"pageTitle":"IdleServiceClient","url":"/NevermoreEngine/api/IdleServiceClient#ObserveHumanoidIdle","content":"&lt;/&gt; IdleServiceClient:ObserveHumanoidIdle() → Observable&lt;boolean&gt; observes if the humanoid is idle.  ","version":null,"tagName":"h3"},{"title":"DoShowIdleUI​","type":1,"pageTitle":"IdleServiceClient","url":"/NevermoreEngine/api/IdleServiceClient#DoShowIdleUI","content":"&lt;/&gt; IdleServiceClient:DoShowIdleUI() → boolean Returns whether UI should be shown (if the humanoid is idle)  ","version":null,"tagName":"h3"},{"title":"ObserveShowIdleUI​","type":1,"pageTitle":"IdleServiceClient","url":"/NevermoreEngine/api/IdleServiceClient#ObserveShowIdleUI","content":"&lt;/&gt; IdleServiceClient:ObserveShowIdleUI() → Observable&lt;boolean&gt; Observes whether to show the the idle UI  ","version":null,"tagName":"h3"},{"title":"GetShowIdleUIBoolValue​","type":1,"pageTitle":"IdleServiceClient","url":"/NevermoreEngine/api/IdleServiceClient#GetShowIdleUIBoolValue","content":"&lt;/&gt; IdleServiceClient:GetShowIdleUIBoolValue() → BoolValue  Returns a show idle bool value.  ","version":null,"tagName":"h3"},{"title":"PushDisable​","type":1,"pageTitle":"IdleServiceClient","url":"/NevermoreEngine/api/IdleServiceClient#PushDisable","content":"&lt;/&gt; IdleServiceClient:PushDisable() → boolean Pushes a disabling function that disables idle UI ","version":null,"tagName":"h3"},{"title":"IKAimPositionPriorites","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IKAimPositionPriorites","content":"IKAimPositionPriorites","keywords":"","version":null},{"title":"IKDataService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IKDataService","content":"IKDataService","keywords":"","version":null},{"title":"IKGripBase","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IKGripBase","content":"IKGripBase Meant to be used with a binder","keywords":"","version":null},{"title":"IKLeftGrip","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IKLeftGrip","content":"IKLeftGrip Left grip","keywords":"","version":null},{"title":"IKResource","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IKResource","content":"IKResource","keywords":"","version":null},{"title":"IKResourceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IKResourceUtils","content":"IKResourceUtils","keywords":"","version":null},{"title":"IKGripUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IKGripUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"IKGripUtils","url":"/NevermoreEngine/api/IKGripUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"create​","type":1,"pageTitle":"IKGripUtils","url":"/NevermoreEngine/api/IKGripUtils#create","content":"&lt;/&gt; IKGripUtils.create( binder: Binder, humanoid: Humanoid ) → ObjectValue  Parent to the attachment we want the humanoid to grip. -- Get the binder local leftGripAttachmentBinder = serviceBag:GetService(require(&quot;IKLeftGrip&quot;)) -- Setup sample grip local attachment = Instance.new(&quot;Attachment&quot;) attachment.Parent = workspace.Terrain attachment.Name = &quot;GripTarget&quot; -- This will make the NPC try to grip this attachment local objectValue = IKGripUtils.create(leftGripAttachmentBinder, workspace.NPC.Humanoid) objectValue.Parent = attachment  ","version":null,"tagName":"h3"},{"title":"IKRig","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IKRig","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"IKRig","url":"/NevermoreEngine/api/IKRig#functions","content":" ","version":null,"tagName":"h2"},{"title":"GetAimPosition​","type":1,"pageTitle":"IKRig","url":"/NevermoreEngine/api/IKRig#GetAimPosition","content":"&lt;/&gt; IKRig:GetAimPosition() → Vector3?  Returns where the rig is looking at  ","version":null,"tagName":"h3"},{"title":"SetAimPosition​","type":1,"pageTitle":"IKRig","url":"/NevermoreEngine/api/IKRig#SetAimPosition","content":"&lt;/&gt; IKRig:SetAimPosition(target: Vector3? ) → () Sets the IK Rig target and replicates it to the client ","version":null,"tagName":"h3"},{"title":"IKRigAimerLocalPlayer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IKRigAimerLocalPlayer","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"IKRigAimerLocalPlayer","url":"/NevermoreEngine/api/IKRigAimerLocalPlayer#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"IKRigAimerLocalPlayer","url":"/NevermoreEngine/api/IKRigAimerLocalPlayer#new","content":"&lt;/&gt; IKRigAimerLocalPlayer.new( serviceBag: ServiceBag, ikRig: IKRigClient ) → IKRigAimerLocalPlayer Constructs a new IKRigAimerLocalPlayer. Should not be used directly. See IKServiceClient for the correct usage.  ","version":null,"tagName":"h3"},{"title":"SetLookAround​","type":1,"pageTitle":"IKRigAimerLocalPlayer","url":"/NevermoreEngine/api/IKRigAimerLocalPlayer#SetLookAround","content":"&lt;/&gt; IKRigAimerLocalPlayer:SetLookAround(lookAround: boolean) → () Sets whether the local player should look around automatically.  ","version":null,"tagName":"h3"},{"title":"SetAimPosition​","type":1,"pageTitle":"IKRigAimerLocalPlayer","url":"/NevermoreEngine/api/IKRigAimerLocalPlayer#SetAimPosition","content":"&lt;/&gt; IKRigAimerLocalPlayer:SetAimPosition( position: Vector3? ,-- May be nil to say to aim at nothing optionalPriority: number ) → () Sets the aim position for the local player for this frame. See IKAimPositionPriorites.  ","version":null,"tagName":"h3"},{"title":"GetAimPosition​","type":1,"pageTitle":"IKRigAimerLocalPlayer","url":"/NevermoreEngine/api/IKRigAimerLocalPlayer#GetAimPosition","content":"&lt;/&gt; IKRigAimerLocalPlayer:GetAimPosition() → Vector3?  Gets the current aim position. ","version":null,"tagName":"h3"},{"title":"IKRigBase","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IKRigBase","content":"IKRigBase","keywords":"","version":null},{"title":"IKRigClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IKRigClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"IKRigClient","url":"/NevermoreEngine/api/IKRigClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"GetPositionOrNil​","type":1,"pageTitle":"IKRigClient","url":"/NevermoreEngine/api/IKRigClient#GetPositionOrNil","content":"&lt;/&gt; IKRigClient:GetPositionOrNil() → Vector3?  Retrieves where the IK rig's position is, if it exists  ","version":null,"tagName":"h3"},{"title":"GetLocalPlayerAimer​","type":1,"pageTitle":"IKRigClient","url":"/NevermoreEngine/api/IKRigClient#GetLocalPlayerAimer","content":"&lt;/&gt; IKRigClient:GetLocalPlayerAimer() → IKRigAimerLocalPlayer? Retrieves the local player aimer if it exists  ","version":null,"tagName":"h3"},{"title":"GetAimPosition​","type":1,"pageTitle":"IKRigClient","url":"/NevermoreEngine/api/IKRigClient#GetAimPosition","content":"&lt;/&gt; IKRigClient:GetAimPosition() → Vector3?  Returns where the rig is looking at ","version":null,"tagName":"h3"},{"title":"IKRightGrip","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IKRightGrip","content":"IKRightGrip Right grip","keywords":"","version":null},{"title":"IKRigInterface","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IKRigInterface","content":"IKRigInterface","keywords":"","version":null},{"title":"IKRigUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IKRigUtils","content":"IKRigUtils","keywords":"","version":null},{"title":"IKService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IKService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"IKService","url":"/NevermoreEngine/api/IKService#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"IKService","url":"/NevermoreEngine/api/IKService#Init","content":"&lt;/&gt; IKService:Init(serviceBag: ServiceBag) → () Initializes the IKService. Should be done via the ServiceBag. local serviceBag = require(&quot;ServiceBag&quot;).new() serviceBag:GetService(require(&quot;IKService&quot;)) serviceBag:Init() serviceBag:Start()   ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"IKService","url":"/NevermoreEngine/api/IKService#Start","content":"&lt;/&gt; IKService:Start() → () Starts the IKService. Should be done via the ServiceBag.  ","version":null,"tagName":"h3"},{"title":"GetRig​","type":1,"pageTitle":"IKService","url":"/NevermoreEngine/api/IKService#GetRig","content":"&lt;/&gt; IKService:GetRig(humanoid: Humanoid ) → IKRig? Retrieves an IKRig. Binds the rig if it isn't already bound.  ","version":null,"tagName":"h3"},{"title":"PromiseRig​","type":1,"pageTitle":"IKService","url":"/NevermoreEngine/api/IKService#PromiseRig","content":"&lt;/&gt; IKService:PromiseRig(humanoid: Humanoid ) → Promise&lt;IKRig&gt; Retrieves an IKRig. Binds the rig if it isn't already bound.  ","version":null,"tagName":"h3"},{"title":"RemoveRig​","type":1,"pageTitle":"IKService","url":"/NevermoreEngine/api/IKService#RemoveRig","content":"&lt;/&gt; IKService:RemoveRig(humanoid: Humanoid ) → () Unbinds the rig from the humanoid.  ","version":null,"tagName":"h3"},{"title":"UpdateServerRigTarget​","type":1,"pageTitle":"IKService","url":"/NevermoreEngine/api/IKService#UpdateServerRigTarget","content":"&lt;/&gt; IKService:UpdateServerRigTarget( humanoid: Humanoid , target: Vector3? ) → () Updates the ServerIKRig target for an NPC local IKService = require(&quot;IKService&quot;) -- Make the NPC look at a target serviceBag:GetService(IKService):UpdateServerRigTarget(workspace.NPC.Humanoid, Vector3.zero)  ","version":null,"tagName":"h3"},{"title":"IKServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IKServiceClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"IKServiceClient","url":"/NevermoreEngine/api/IKServiceClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"IKServiceClient","url":"/NevermoreEngine/api/IKServiceClient#Init","content":"&lt;/&gt; IKServiceClient:Init(serviceBag: ServiceBag) → () Initializes the service. Should be called via the ServiceBag. local serviceBag = require(&quot;ServiceBag&quot;).new() serviceBag:GetService(require(&quot;IKServiceClient&quot;)) serviceBag:Init() serviceBag:Start() -- Configure serviceBag:GetService(require(&quot;IKServiceClient&quot;)):SetLookAround(true)   ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"IKServiceClient","url":"/NevermoreEngine/api/IKServiceClient#Start","content":"&lt;/&gt; IKServiceClient:Start() → () Starts the service. Should be called via the ServiceBag.  ","version":null,"tagName":"h3"},{"title":"GetRig​","type":1,"pageTitle":"IKServiceClient","url":"/NevermoreEngine/api/IKServiceClient#GetRig","content":"&lt;/&gt; IKServiceClient:GetRig(humanoid: Humanoid ) → IKRigClient? Retrieves an IKRig. Binds the rig if it isn't already bound.  ","version":null,"tagName":"h3"},{"title":"PromiseRig​","type":1,"pageTitle":"IKServiceClient","url":"/NevermoreEngine/api/IKServiceClient#PromiseRig","content":"&lt;/&gt; IKServiceClient:PromiseRig(humanoid: Humanoid ) → Promise&lt;IKRigClient&gt; Retrieves an IKRig. Binds the rig if it isn't already bound.  ","version":null,"tagName":"h3"},{"title":"SetAimPosition​","type":1,"pageTitle":"IKServiceClient","url":"/NevermoreEngine/api/IKServiceClient#SetAimPosition","content":"&lt;/&gt; IKServiceClient:SetAimPosition( position: Vector3? ,-- May be nil to set no position priority: number? ) → () Exposed API for guns and other things to start setting aim position which will override for a limited time. -- Make the local character always look towards the origin local IKServiceClient = require(&quot;IKServiceClient&quot;) local IKAimPositionPriorites = require(&quot;IKAimPositionPriorites&quot;) RunService.Stepped:Connect(function() serviceBag:GetService(IKServiceClient):SetAimPosition(Vector3.zero, IKAimPositionPriorites.HIGH) end)   ","version":null,"tagName":"h3"},{"title":"SetLookAround​","type":1,"pageTitle":"IKServiceClient","url":"/NevermoreEngine/api/IKServiceClient#SetLookAround","content":"&lt;/&gt; IKServiceClient:SetLookAround(lookAround: boolean) → () If true, tells the local player to look around at whatever the camera is pointed at. serviceBag:GetService(require(&quot;IKServiceClient&quot;)):SetLookAround(false)   ","version":null,"tagName":"h3"},{"title":"GetLocalAimer​","type":1,"pageTitle":"IKServiceClient","url":"/NevermoreEngine/api/IKServiceClient#GetLocalAimer","content":"&lt;/&gt; IKServiceClient:GetLocalAimer() → IKRigAimerLocalPlayer Retrieves the local aimer for the local player.  ","version":null,"tagName":"h3"},{"title":"GetLocalPlayerRig​","type":1,"pageTitle":"IKServiceClient","url":"/NevermoreEngine/api/IKServiceClient#GetLocalPlayerRig","content":"&lt;/&gt; IKServiceClient:GetLocalPlayerRig() → IKRigClient? Attempts to retrieve the local player's ik rig, if it exists. ","version":null,"tagName":"h3"},{"title":"ImageLabelLoaded","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ImageLabelLoaded","content":"ImageLabelLoaded","keywords":"","version":null},{"title":"IKUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IKUtils","content":"IKUtils Utilties for IK system","keywords":"","version":null},{"title":"InfluxDBClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InfluxDBClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InfluxDBClient","url":"/NevermoreEngine/api/InfluxDBClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"InfluxDBClient","url":"/NevermoreEngine/api/InfluxDBClient#new","content":"&lt;/&gt; InfluxDBClient.new(clientConfig: InfluxDBClientConfig?) → InfluxDBClient Creates a new InfluxDB client  ","version":null,"tagName":"h3"},{"title":"SetClientConfig​","type":1,"pageTitle":"InfluxDBClient","url":"/NevermoreEngine/api/InfluxDBClient#SetClientConfig","content":"&lt;/&gt; InfluxDBClient.SetClientConfig( self: InfluxDBClient, clientConfig: InfluxDBClientConfig ) → () Sets the client config for this client  ","version":null,"tagName":"h3"},{"title":"PromiseFlushAll​","type":1,"pageTitle":"InfluxDBClient","url":"/NevermoreEngine/api/InfluxDBClient#PromiseFlushAll","content":"&lt;/&gt; InfluxDBClient.PromiseFlushAll(self: InfluxDBClient) → Promise&lt;()&gt; Flushes all write APIs. Returns a promise that resolves when all write APIs are flushed for all buckets. ","version":null,"tagName":"h3"},{"title":"InfluxDBClientConfigUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InfluxDBClientConfigUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InfluxDBClientConfigUtils","url":"/NevermoreEngine/api/InfluxDBClientConfigUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"isClientConfig​","type":1,"pageTitle":"InfluxDBClientConfigUtils","url":"/NevermoreEngine/api/InfluxDBClientConfigUtils#isClientConfig","content":"&lt;/&gt; InfluxDBClientConfigUtils.isClientConfig(config: any) → boolean Checks if the given config is a valid InfluxDB client config  ","version":null,"tagName":"h3"},{"title":"createClientConfig​","type":1,"pageTitle":"InfluxDBClientConfigUtils","url":"/NevermoreEngine/api/InfluxDBClientConfigUtils#createClientConfig","content":"&lt;/&gt; InfluxDBClientConfigUtils.createClientConfig(config: InfluxDBClientConfig) → InfluxDBClientConfig Creates a new InfluxDB client config ","version":null,"tagName":"h3"},{"title":"InfluxDBErrorUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InfluxDBErrorUtils","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"InfluxDBErrorUtils","url":"/NevermoreEngine/api/InfluxDBErrorUtils#types","content":" ","version":null,"tagName":"h2"},{"title":"InfluxDBError​","type":1,"pageTitle":"InfluxDBErrorUtils","url":"/NevermoreEngine/api/InfluxDBErrorUtils#InfluxDBError","content":"&lt;/&gt; interface InfluxDBError { code: string message: string } InfluxDB error type. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"InfluxDBErrorUtils","url":"/NevermoreEngine/api/InfluxDBErrorUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"tryParseErrorBody​","type":1,"pageTitle":"InfluxDBErrorUtils","url":"/NevermoreEngine/api/InfluxDBErrorUtils#tryParseErrorBody","content":"&lt;/&gt; InfluxDBErrorUtils.tryParseErrorBody(body: string) → InfluxDBError? Tries to parse the error body from InfluxDB. Returns nil if it fails to parse.  ","version":null,"tagName":"h3"},{"title":"isInfluxDBError​","type":1,"pageTitle":"InfluxDBErrorUtils","url":"/NevermoreEngine/api/InfluxDBErrorUtils#isInfluxDBError","content":"&lt;/&gt; InfluxDBErrorUtils.isInfluxDBError(data: any) → boolean Checks if the given data is an InfluxDB error. ","version":null,"tagName":"h3"},{"title":"ImpulseCamera","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ImpulseCamera","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"ImpulseCamera","url":"/NevermoreEngine/api/ImpulseCamera#properties","content":" ","version":null,"tagName":"h2"},{"title":"CameraState​","type":1,"pageTitle":"ImpulseCamera","url":"/NevermoreEngine/api/ImpulseCamera#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ImpulseCamera.CameraState: CameraState The current state. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"ImpulseCamera","url":"/NevermoreEngine/api/ImpulseCamera#functions","content":" ","version":null,"tagName":"h2"},{"title":"Impulse​","type":1,"pageTitle":"ImpulseCamera","url":"/NevermoreEngine/api/ImpulseCamera#Impulse","content":"&lt;/&gt; ImpulseCamera.Impulse( self: ImpulseCamera, velocity: Vector3 , speed: number?,-- Optional damper: number?-- Optional ) → () Applies an impulse to the camera, shaking it!  ","version":null,"tagName":"h3"},{"title":"ImpulseRandom​","type":1,"pageTitle":"ImpulseCamera","url":"/NevermoreEngine/api/ImpulseCamera#ImpulseRandom","content":"&lt;/&gt; ImpulseCamera.ImpulseRandom( self: ImpulseCamera, velocity: Vector3 , speed: number?,-- Optional damper: number?-- Optional ) → () Applies a random impulse ","version":null,"tagName":"h3"},{"title":"InfluxDBEscapeUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InfluxDBEscapeUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InfluxDBEscapeUtils","url":"/NevermoreEngine/api/InfluxDBEscapeUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"createEscaper​","type":1,"pageTitle":"InfluxDBEscapeUtils","url":"/NevermoreEngine/api/InfluxDBEscapeUtils#createEscaper","content":"&lt;/&gt; InfluxDBEscapeUtils.createEscaper(subTable: EscapeTable) → (string) → string Creates a new escaper function for the given table.  ","version":null,"tagName":"h3"},{"title":"createQuotedEscaper​","type":1,"pageTitle":"InfluxDBEscapeUtils","url":"/NevermoreEngine/api/InfluxDBEscapeUtils#createQuotedEscaper","content":"&lt;/&gt; InfluxDBEscapeUtils.createQuotedEscaper(subTable: EscapeTable) → (string) → string Creates a new escaper function for the given table, with quotes. ","version":null,"tagName":"h3"},{"title":"InfluxDBWriteAPI","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InfluxDBWriteAPI","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InfluxDBWriteAPI","url":"/NevermoreEngine/api/InfluxDBWriteAPI#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"InfluxDBWriteAPI","url":"/NevermoreEngine/api/InfluxDBWriteAPI#new","content":"&lt;/&gt; InfluxDBWriteAPI.new( org: string, bucket: string, precision: string? ) → InfluxDBWriteAPI Creates a new InfluxDB write API. Retrieve this from the InfluxDBClient.  ","version":null,"tagName":"h3"},{"title":"SetDefaultTags​","type":1,"pageTitle":"InfluxDBWriteAPI","url":"/NevermoreEngine/api/InfluxDBWriteAPI#SetDefaultTags","content":"&lt;/&gt; InfluxDBWriteAPI.SetDefaultTags( self: InfluxDBWriteAPI, tags: InfluxDBTags ) → () Sets the default tags to write with each point.  ","version":null,"tagName":"h3"},{"title":"SetConvertTime​","type":1,"pageTitle":"InfluxDBWriteAPI","url":"/NevermoreEngine/api/InfluxDBWriteAPI#SetConvertTime","content":"&lt;/&gt; InfluxDBWriteAPI.SetConvertTime( self: InfluxDBWriteAPI, convertTime: (number) → number ) → () Sets the conversion time  ","version":null,"tagName":"h3"},{"title":"QueuePoint​","type":1,"pageTitle":"InfluxDBWriteAPI","url":"/NevermoreEngine/api/InfluxDBWriteAPI#QueuePoint","content":"&lt;/&gt; InfluxDBWriteAPI.QueuePoint( self: InfluxDBWriteAPI, point: InfluxDBPoint ) → () Queues a new influx DB point to send to the server.  ","version":null,"tagName":"h3"},{"title":"QueuePoints​","type":1,"pageTitle":"InfluxDBWriteAPI","url":"/NevermoreEngine/api/InfluxDBWriteAPI#QueuePoints","content":"&lt;/&gt; InfluxDBWriteAPI.QueuePoints( self: InfluxDBWriteAPI, points: {InfluxDBPoint} ) → () Queues a new list of influx DB points to send to the server. ","version":null,"tagName":"h3"},{"title":"InfluxDBPointSettings","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InfluxDBPointSettings","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InfluxDBPointSettings","url":"/NevermoreEngine/api/InfluxDBPointSettings#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"InfluxDBPointSettings","url":"/NevermoreEngine/api/InfluxDBPointSettings#new","content":"&lt;/&gt; InfluxDBPointSettings.new() → InfluxDBPointSettings Creates a new InfluxDB point settings  ","version":null,"tagName":"h3"},{"title":"SetDefaultTags​","type":1,"pageTitle":"InfluxDBPointSettings","url":"/NevermoreEngine/api/InfluxDBPointSettings#SetDefaultTags","content":"&lt;/&gt; InfluxDBPointSettings.SetDefaultTags( self: InfluxDBPointSettings, tags: InfluxDBTags ) → () Sets the default tags for the InfluxDB point settings  ","version":null,"tagName":"h3"},{"title":"GetDefaultTags​","type":1,"pageTitle":"InfluxDBPointSettings","url":"/NevermoreEngine/api/InfluxDBPointSettings#GetDefaultTags","content":"&lt;/&gt; InfluxDBPointSettings.GetDefaultTags(self: InfluxDBPointSettings) → InfluxDBTags Gets the default tags for the InfluxDB point settings  ","version":null,"tagName":"h3"},{"title":"SetConvertTime​","type":1,"pageTitle":"InfluxDBPointSettings","url":"/NevermoreEngine/api/InfluxDBPointSettings#SetConvertTime","content":"&lt;/&gt; InfluxDBPointSettings.SetConvertTime( self: InfluxDBPointSettings, convertTime: (number) → number ) → () Sets the conversion time function for the InfluxDB point settings  ","version":null,"tagName":"h3"},{"title":"GetConvertTime​","type":1,"pageTitle":"InfluxDBPointSettings","url":"/NevermoreEngine/api/InfluxDBPointSettings#GetConvertTime","content":"&lt;/&gt; InfluxDBPointSettings.GetConvertTime(self: InfluxDBPointSettings) → (number) → number Gets the conversion time function for the InfluxDB point settings ","version":null,"tagName":"h3"},{"title":"InfluxDBPoint","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InfluxDBPoint","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InfluxDBPoint","url":"/NevermoreEngine/api/InfluxDBPoint#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"InfluxDBPoint","url":"/NevermoreEngine/api/InfluxDBPoint#new","content":"&lt;/&gt; InfluxDBPoint.new(measurementName: string?) → InfluxDBPoint Creates a new InfluxDB point  ","version":null,"tagName":"h3"},{"title":"fromTableData​","type":1,"pageTitle":"InfluxDBPoint","url":"/NevermoreEngine/api/InfluxDBPoint#fromTableData","content":"&lt;/&gt; InfluxDBPoint.fromTableData(data: InfluxDBPointTableData) → InfluxDBPoint Creates a new InfluxDB point from table data  ","version":null,"tagName":"h3"},{"title":"isInfluxDBPoint​","type":1,"pageTitle":"InfluxDBPoint","url":"/NevermoreEngine/api/InfluxDBPoint#isInfluxDBPoint","content":"&lt;/&gt; InfluxDBPoint.isInfluxDBPoint(point: any) → boolean Checks if the point is an InfluxDBPoint  ","version":null,"tagName":"h3"},{"title":"SetMeasurementName​","type":1,"pageTitle":"InfluxDBPoint","url":"/NevermoreEngine/api/InfluxDBPoint#SetMeasurementName","content":"&lt;/&gt; InfluxDBPoint.SetMeasurementName( self: InfluxDBPoint, name: string? ) → boolean Sets the measurement name  ","version":null,"tagName":"h3"},{"title":"GetMeasurementName​","type":1,"pageTitle":"InfluxDBPoint","url":"/NevermoreEngine/api/InfluxDBPoint#GetMeasurementName","content":"&lt;/&gt; InfluxDBPoint.GetMeasurementName(self: InfluxDBPoint) → string? Gets the measurement name  ","version":null,"tagName":"h3"},{"title":"ToTableData​","type":1,"pageTitle":"InfluxDBPoint","url":"/NevermoreEngine/api/InfluxDBPoint#ToTableData","content":"&lt;/&gt; InfluxDBPoint.ToTableData(self: InfluxDBPoint) → InfluxDBPointTableData Converts the point into a table data format safe for serialization  ","version":null,"tagName":"h3"},{"title":"SetTimestamp​","type":1,"pageTitle":"InfluxDBPoint","url":"/NevermoreEngine/api/InfluxDBPoint#SetTimestamp","content":"&lt;/&gt; InfluxDBPoint.SetTimestamp( self: InfluxDBPoint, timestamp: DateTime | nil ) → () If it's nil, the timestamp defaults to send time  ","version":null,"tagName":"h3"},{"title":"AddTag​","type":1,"pageTitle":"InfluxDBPoint","url":"/NevermoreEngine/api/InfluxDBPoint#AddTag","content":"&lt;/&gt; InfluxDBPoint.AddTag( self: InfluxDBPoint, tagKey: string, tagValue: string ) → () Tags are indexed, whereas fields are not.  ","version":null,"tagName":"h3"},{"title":"AddIntField​","type":1,"pageTitle":"InfluxDBPoint","url":"/NevermoreEngine/api/InfluxDBPoint#AddIntField","content":"&lt;/&gt; InfluxDBPoint.AddIntField( self: InfluxDBPoint, fieldName: string, value: number ) → () Adds an int field  ","version":null,"tagName":"h3"},{"title":"AddUintField​","type":1,"pageTitle":"InfluxDBPoint","url":"/NevermoreEngine/api/InfluxDBPoint#AddUintField","content":"&lt;/&gt; InfluxDBPoint.AddUintField( self: InfluxDBPoint, fieldName: string, value: number ) → () Adds a uint field  ","version":null,"tagName":"h3"},{"title":"AddFloatField​","type":1,"pageTitle":"InfluxDBPoint","url":"/NevermoreEngine/api/InfluxDBPoint#AddFloatField","content":"&lt;/&gt; InfluxDBPoint.AddFloatField( self: InfluxDBPoint, fieldName: string, value: number ) → () Adds a float field  ","version":null,"tagName":"h3"},{"title":"AddBooleanField​","type":1,"pageTitle":"InfluxDBPoint","url":"/NevermoreEngine/api/InfluxDBPoint#AddBooleanField","content":"&lt;/&gt; InfluxDBPoint.AddBooleanField( self: InfluxDBPoint, fieldName: string, value: boolean ) → () Adds a boolean field  ","version":null,"tagName":"h3"},{"title":"AddStringField​","type":1,"pageTitle":"InfluxDBPoint","url":"/NevermoreEngine/api/InfluxDBPoint#AddStringField","content":"&lt;/&gt; InfluxDBPoint.AddStringField( self: InfluxDBPoint, fieldName: string, value: string ) → () Adds a string field  ","version":null,"tagName":"h3"},{"title":"ToLineProtocol​","type":1,"pageTitle":"InfluxDBPoint","url":"/NevermoreEngine/api/InfluxDBPoint#ToLineProtocol","content":"&lt;/&gt; InfluxDBPoint.ToLineProtocol( self: InfluxDBPoint, pointSettings: InfluxDBPointSettings ) → string? Converts the point to line protocol format to send to InfluxDB for consumption ","version":null,"tagName":"h3"},{"title":"InfluxDBWriteBuffer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InfluxDBWriteBuffer","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InfluxDBWriteBuffer","url":"/NevermoreEngine/api/InfluxDBWriteBuffer#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"InfluxDBWriteBuffer","url":"/NevermoreEngine/api/InfluxDBWriteBuffer#new","content":"&lt;/&gt; InfluxDBWriteBuffer.new( writeOptions: InfluxDBWriteOptions, promiseHandleFlush: (entries: {string}) → Promise.Promise&lt;()&gt; ) → InfluxDBWriteBuffer Creates a new InfluxDB write buffer.  ","version":null,"tagName":"h3"},{"title":"Add​","type":1,"pageTitle":"InfluxDBWriteBuffer","url":"/NevermoreEngine/api/InfluxDBWriteBuffer#Add","content":"&lt;/&gt; InfluxDBWriteBuffer.Add( self: InfluxDBWriteBuffer, entry: string ) → () Adds an entry to the buffer. If the buffer is full, it will flush  ","version":null,"tagName":"h3"},{"title":"PromiseFlush​","type":1,"pageTitle":"InfluxDBWriteBuffer","url":"/NevermoreEngine/api/InfluxDBWriteBuffer#PromiseFlush","content":"&lt;/&gt; InfluxDBWriteBuffer.PromiseFlush(self: InfluxDBWriteBuffer) → Promise&lt;()&gt; Flushes all entries in the buffer. Returns a promise that resolves when the flush is complete. ","version":null,"tagName":"h3"},{"title":"InfluxDBWriteOptionUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InfluxDBWriteOptionUtils","content":"InfluxDBWriteOptionUtils","keywords":"","version":null},{"title":"InputChordUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputChordUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InputChordUtils","url":"/NevermoreEngine/api/InputChordUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"isModifierInputChord​","type":1,"pageTitle":"InputChordUtils","url":"/NevermoreEngine/api/InputChordUtils#isModifierInputChord","content":"&lt;/&gt; InputChordUtils.isModifierInputChord(data: any) → boolean Checks  ","version":null,"tagName":"h3"},{"title":"createModifierInputChord​","type":1,"pageTitle":"InputChordUtils","url":"/NevermoreEngine/api/InputChordUtils#createModifierInputChord","content":"&lt;/&gt; InputChordUtils.createModifierInputChord( modifiers: {KeyCode }, keyCode: KeyCode ) → ModifierInputChord Creates a modifier input chord. This chord specifically separates the order such that the event only triggers when the keyCode is pressed, but also requires the modifier key to be down at the trigger point. This mirrors the existing modifier standards for Windows. ","version":null,"tagName":"h3"},{"title":"InputImageLibrary","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputImageLibrary","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InputImageLibrary","url":"/NevermoreEngine/api/InputImageLibrary#functions","content":" ","version":null,"tagName":"h2"},{"title":"GetPreloadAssetIds​","type":1,"pageTitle":"InputImageLibrary","url":"/NevermoreEngine/api/InputImageLibrary#GetPreloadAssetIds","content":"&lt;/&gt; InputImageLibrary:GetPreloadAssetIds() → {string} Retrieves all the asset ids to preload  ","version":null,"tagName":"h3"},{"title":"GetSprite​","type":1,"pageTitle":"InputImageLibrary","url":"/NevermoreEngine/api/InputImageLibrary#GetSprite","content":"&lt;/&gt; InputImageLibrary:GetSprite( keyCode: any,-- The sprite keyCode to get preferredStyle: string?,-- The preferred style type to retrieve this in preferredPlatform: string?-- The preferred platform to get the sprite for ) → Sprite Retrieves a sprite from the library  ","version":null,"tagName":"h3"},{"title":"StyleImage​","type":1,"pageTitle":"InputImageLibrary","url":"/NevermoreEngine/api/InputImageLibrary#StyleImage","content":"&lt;/&gt; InputImageLibrary:StyleImage( gui: ImageLabel | ImageButton , keyCode: any,-- The sprite keyCode to get preferredStyle: string?,-- The preferred style type to retrieve this in preferredPlatform: string?-- The preferred platform to get the sprite for ) → Sprite Styles a GUI for a specific keycode local InputImageLibrary = require(&quot;InputImageLibrary&quot;) InputImageLibrary:StyleImage(script.Parent, Enum.KeyCode.ButtonA)  ","version":null,"tagName":"h3"},{"title":"InputKeyMap","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputKeyMap","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InputKeyMap","url":"/NevermoreEngine/api/InputKeyMap#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"InputKeyMap","url":"/NevermoreEngine/api/InputKeyMap#new","content":"&lt;/&gt; InputKeyMap.new( inputModeType: InputModeType, inputTypes: {InputType} ) → InputKeyMap Constructs a new InputKeyMap. Generally this would be sent immediately to anInputKeyMapList. This holds a list of key bindings for a specific type.  ","version":null,"tagName":"h3"},{"title":"GetInputModeType​","type":1,"pageTitle":"InputKeyMap","url":"/NevermoreEngine/api/InputKeyMap#GetInputModeType","content":"&lt;/&gt; InputKeyMap.GetInputModeType(self: InputKeyMap) → InputModeType.InputModeType Gets the input mode for this keymap. This will not change.  ","version":null,"tagName":"h3"},{"title":"SetInputTypesList​","type":1,"pageTitle":"InputKeyMap","url":"/NevermoreEngine/api/InputKeyMap#SetInputTypesList","content":"&lt;/&gt; InputKeyMap.SetInputTypesList( self: InputKeyMap, inputTypes: {InputType} ) → () Sets the input types list for this input key map.  ","version":null,"tagName":"h3"},{"title":"SetDefaultInputTypesList​","type":1,"pageTitle":"InputKeyMap","url":"/NevermoreEngine/api/InputKeyMap#SetDefaultInputTypesList","content":"&lt;/&gt; InputKeyMap.SetDefaultInputTypesList( self: InputKeyMap, inputTypes: {InputType} ) → () Sets the default input types list. This is whatever the game has, which is different than whatever the user has set. This will also set the current input type to be the same as the default if they are equivalent.  ","version":null,"tagName":"h3"},{"title":"GetDefaultInputTypesList​","type":1,"pageTitle":"InputKeyMap","url":"/NevermoreEngine/api/InputKeyMap#GetDefaultInputTypesList","content":"&lt;/&gt; InputKeyMap.GetDefaultInputTypesList(self: InputKeyMap) → {InputType} Gets the default input types list  ","version":null,"tagName":"h3"},{"title":"RestoreDefault​","type":1,"pageTitle":"InputKeyMap","url":"/NevermoreEngine/api/InputKeyMap#RestoreDefault","content":"&lt;/&gt; InputKeyMap.RestoreDefault(self: InputKeyMap) → () Resets the input type to the default input types.  ","version":null,"tagName":"h3"},{"title":"ObserveInputTypesList​","type":1,"pageTitle":"InputKeyMap","url":"/NevermoreEngine/api/InputKeyMap#ObserveInputTypesList","content":"&lt;/&gt; InputKeyMap.ObserveInputTypesList(self: InputKeyMap) → Observable&lt;{InputType}&gt; Observes the current list for the input key map list.  ","version":null,"tagName":"h3"},{"title":"GetInputTypesList​","type":1,"pageTitle":"InputKeyMap","url":"/NevermoreEngine/api/InputKeyMap#GetInputTypesList","content":"&lt;/&gt; InputKeyMap.GetInputTypesList(self: InputKeyMap) → {InputType} Gets the input types list ","version":null,"tagName":"h3"},{"title":"InputKeyMapListProvider","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputKeyMapListProvider","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InputKeyMapListProvider","url":"/NevermoreEngine/api/InputKeyMapListProvider#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"InputKeyMapListProvider","url":"/NevermoreEngine/api/InputKeyMapListProvider#new","content":"&lt;/&gt; InputKeyMapListProvider.new( providerName: string,-- Name to use for global specification. createDefaults: callback-- Callback to construct the default items on init ) → InputKeyMapList Constructs a new InputKeyMapListProvider. The name will be used for retrieval, for example, if the dialog system needs to get a general input hint to show to the user.  ","version":null,"tagName":"h3"},{"title":"GetProviderName​","type":1,"pageTitle":"InputKeyMapListProvider","url":"/NevermoreEngine/api/InputKeyMapListProvider#GetProviderName","content":"&lt;/&gt; InputKeyMapListProvider.GetProviderName(self: InputKeyMapListProvider) → string Gets this providers name  ","version":null,"tagName":"h3"},{"title":"GetInputKeyMapList​","type":1,"pageTitle":"InputKeyMapListProvider","url":"/NevermoreEngine/api/InputKeyMapListProvider#GetInputKeyMapList","content":"&lt;/&gt; InputKeyMapListProvider.GetInputKeyMapList( self: InputKeyMapListProvider, keyMapListName: string ) → InputKeyMapList Gets an input key map list for the given name. Errors if it is not defined.  ","version":null,"tagName":"h3"},{"title":"FindInputKeyMapList​","type":1,"pageTitle":"InputKeyMapListProvider","url":"/NevermoreEngine/api/InputKeyMapListProvider#FindInputKeyMapList","content":"&lt;/&gt; InputKeyMapListProvider.FindInputKeyMapList( self: InputKeyMapListProvider, keyMapListName: string ) → InputKeyMapList Finds an input key map list for the given name ","version":null,"tagName":"h3"},{"title":"InputKeyMapListUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputKeyMapListUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InputKeyMapListUtils","url":"/NevermoreEngine/api/InputKeyMapListUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getNewInputModeTypeSelector​","type":1,"pageTitle":"InputKeyMapListUtils","url":"/NevermoreEngine/api/InputKeyMapListUtils#getNewInputModeTypeSelector","content":"&lt;/&gt; InputKeyMapListUtils.getNewInputModeTypeSelector( inputKeyMapList: InputKeyMapList, serviceBag: ServiceBag ) → InputModeTypeSelector Observes the input enums list  ","version":null,"tagName":"h3"},{"title":"observeActiveInputKeyMap​","type":1,"pageTitle":"InputKeyMapListUtils","url":"/NevermoreEngine/api/InputKeyMapListUtils#observeActiveInputKeyMap","content":"&lt;/&gt; InputKeyMapListUtils.observeActiveInputKeyMap( inputKeyMapList: InputKeyMapList, serviceBag: ServiceBag ) → Observable&lt;InputKeyMap&gt; Observes the input types for the active input map  ","version":null,"tagName":"h3"},{"title":"observeActiveInputTypesList​","type":1,"pageTitle":"InputKeyMapListUtils","url":"/NevermoreEngine/api/InputKeyMapListUtils#observeActiveInputTypesList","content":"&lt;/&gt; InputKeyMapListUtils.observeActiveInputTypesList( inputKeyMapList: InputKeyMapList, serviceBag: ServiceBag ) → Observable&lt;{InputType}?&gt; Observes the input types for the active input map. WARNING This should be used for hinting inputs, but it's preferred to bind inputs for all modes. See InputKeyMapList.ObserveInputEnumsList  ","version":null,"tagName":"h3"},{"title":"observeActiveInputModeType​","type":1,"pageTitle":"InputKeyMapListUtils","url":"/NevermoreEngine/api/InputKeyMapListUtils#observeActiveInputModeType","content":"&lt;/&gt; InputKeyMapListUtils.observeActiveInputModeType( inputKeyMapList: InputKeyMapList, serviceBag: ServiceBag ) → Observable&lt;InputModeType?&gt; Observes the active input mode currently selected. ","version":null,"tagName":"h3"},{"title":"InputKeyMapList","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputKeyMapList","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#new","content":"&lt;/&gt; InputKeyMapList.new( inputMapName: string, inputKeyMapList: {InputKeyMap}, options: { bindingName: string, rebindable: boolean }-- configuration options ) → InputKeyMapList Constructs a new InputKeyMapList  ","version":null,"tagName":"h3"},{"title":"fromInputKeys​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#fromInputKeys","content":"&lt;/&gt; InputKeyMapList.fromInputKeys( inputKeys: {any}, options: { bindingName: string, rebindable: boolean }?-- Optional configuration options ) → InputKeyMapList Constructs a new InputKeyMapList from specific keys local inputKeyMapList = InputKeyMapList.fromInputKeys({ Enum.KeyCode.E })   ","version":null,"tagName":"h3"},{"title":"isInputKeyMapList​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#isInputKeyMapList","content":"&lt;/&gt; InputKeyMapList.isInputKeyMapList(value: any) → boolean Returns whether this value is an InputKeyMapList  ","version":null,"tagName":"h3"},{"title":"IsUserRebindable​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#IsUserRebindable","content":"&lt;/&gt; InputKeyMapList.IsUserRebindable(self: InputKeyMapList) → boolean Returns user bindable time  ","version":null,"tagName":"h3"},{"title":"GetBindingName​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#GetBindingName","content":"&lt;/&gt; InputKeyMapList.GetBindingName(self: InputKeyMapList) → string Gets the english name  ","version":null,"tagName":"h3"},{"title":"Add​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#Add","content":"&lt;/&gt; InputKeyMapList.Add( self: InputKeyMapList, inputKeyMap: InputKeyMap ) → () Adds an input key map into the actual list  ","version":null,"tagName":"h3"},{"title":"GetListName​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#GetListName","content":"&lt;/&gt; InputKeyMapList.GetListName(self: InputKeyMapList) → string Gets the list name and returns it. Used by an input key map provider  ","version":null,"tagName":"h3"},{"title":"GetInputTypesList​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#GetInputTypesList","content":"&lt;/&gt; InputKeyMapList.GetInputTypesList( self: InputKeyMapList, inputModeType: InputModeType ) → {InputType} Gets the input types list for this input key map  ","version":null,"tagName":"h3"},{"title":"GetDefaultInputTypesList​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#GetDefaultInputTypesList","content":"&lt;/&gt; InputKeyMapList.GetDefaultInputTypesList( self: InputKeyMapList, inputModeType: InputModeType ) → {InputType} Gets the default input types list for this input key map  ","version":null,"tagName":"h3"},{"title":"ObservePairsBrio​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#ObservePairsBrio","content":"&lt;/&gt; InputKeyMapList.ObservePairsBrio(self: InputKeyMapList) → Observable&lt;Brio&lt;InputModeType,InputKeyMap&gt;&gt; Observes a brio with the first value as the InputModeType and the second value as the KeyMapList  ","version":null,"tagName":"h3"},{"title":"RestoreDefault​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#RestoreDefault","content":"&lt;/&gt; InputKeyMapList.RestoreDefault(self: InputKeyMapList) → () Restores the default value for all lists  ","version":null,"tagName":"h3"},{"title":"RemoveInputModeType​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#RemoveInputModeType","content":"&lt;/&gt; InputKeyMapList.RemoveInputModeType( self: InputKeyMapList, inputModeType: InputModeType ) → () Removes the entry for the inputmodeType  ","version":null,"tagName":"h3"},{"title":"ObserveInputKeyMapsBrio​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#ObserveInputKeyMapsBrio","content":"&lt;/&gt; InputKeyMapList.ObserveInputKeyMapsBrio(self: InputKeyMapList) → Observable&lt;Brio&lt;InputKeyMap&gt;&gt;   ","version":null,"tagName":"h3"},{"title":"ObserveInputModesTypesBrio​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#ObserveInputModesTypesBrio","content":"&lt;/&gt; InputKeyMapList.ObserveInputModesTypesBrio(self: InputKeyMapList) → Observable&lt;Brio&lt;InputModeType&gt;&gt;   ","version":null,"tagName":"h3"},{"title":"ObserveInputKeyMapForInputMode​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#ObserveInputKeyMapForInputMode","content":"&lt;/&gt; InputKeyMapList.ObserveInputKeyMapForInputMode( self: InputKeyMapList, inputModeType: InputModeType ) → Observable&lt;InputKeyMap?&gt; Observes the input types for the active input map  ","version":null,"tagName":"h3"},{"title":"ObserveIsTapInWorld​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#ObserveIsTapInWorld","content":"&lt;/&gt; InputKeyMapList.ObserveIsTapInWorld(self: InputKeyMapList) → Observable&lt;boolean&gt; Observes whether the input list includes tapping in the world somewhere.  ","version":null,"tagName":"h3"},{"title":"ObserveIsRobloxTouchButton​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#ObserveIsRobloxTouchButton","content":"&lt;/&gt; InputKeyMapList.ObserveIsRobloxTouchButton(self: InputKeyMapList) → Observable&lt;boolean&gt; Observes whether the input list includes a Roblox button.  ","version":null,"tagName":"h3"},{"title":"IsRobloxTouchButton​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#IsRobloxTouchButton","content":"&lt;/&gt; InputKeyMapList.IsRobloxTouchButton(self: InputKeyMapList) → boolean Gets whether the input list includes a Roblox button.  ","version":null,"tagName":"h3"},{"title":"IsTouchTapInWorld​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#IsTouchTapInWorld","content":"&lt;/&gt; InputKeyMapList.IsTouchTapInWorld(self: InputKeyMapList) → boolean Gets whether the input list includes a Roblox button.  ","version":null,"tagName":"h3"},{"title":"ObserveInputEnumsList​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#ObserveInputEnumsList","content":"&lt;/&gt; InputKeyMapList.ObserveInputEnumsList(self: InputKeyMapList) → Observable&lt;{UserInputType | KeyCode }&gt; Observes the input enums list, which can be used for bindings.  ","version":null,"tagName":"h3"},{"title":"GetInputEnumsList​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#GetInputEnumsList","content":"&lt;/&gt; InputKeyMapList.GetInputEnumsList(self: InputKeyMapList) → {UserInputType | KeyCode } Gets the input enums list, which can be used for bindings.  ","version":null,"tagName":"h3"},{"title":"ObserveInputEnumsSet​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#ObserveInputEnumsSet","content":"&lt;/&gt; InputKeyMapList.ObserveInputEnumsSet(self: InputKeyMapList) → Observable&lt;{[UserInputType | KeyCode ]: true}&gt; Observes the input enums set  ","version":null,"tagName":"h3"},{"title":"ObserveSlottedTouchButtonDataBrio​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#ObserveSlottedTouchButtonDataBrio","content":"&lt;/&gt; InputKeyMapList.ObserveSlottedTouchButtonDataBrio(self: InputKeyMapList) → Observable&lt;SlottedTouchButton&gt; Observes slotted touch button data in the input modes.  ","version":null,"tagName":"h3"},{"title":"GetInputKeyMaps​","type":1,"pageTitle":"InputKeyMapList","url":"/NevermoreEngine/api/InputKeyMapList#GetInputKeyMaps","content":"&lt;/&gt; InputKeyMapList:GetInputKeyMaps() → {InputKeyMap} Gets the input key maps list ","version":null,"tagName":"h3"},{"title":"InputKeyMapRegistryServiceShared","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputKeyMapRegistryServiceShared","content":"InputKeyMapRegistryServiceShared Provides retrieval of input key maps across the game. Available on both the client and the server. Input key maps are needed on the server to bind datastore settings.","keywords":"","version":null},{"title":"InputKeyMapService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputKeyMapService","content":"InputKeyMapService","keywords":"","version":null},{"title":"InputKeyMapServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputKeyMapServiceClient","content":"InputKeyMapServiceClient","keywords":"","version":null},{"title":"InputKeyMapSetting","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputKeyMapSetting","content":"InputKeyMapSetting Registers the settings automatically so we can validate on the server.","keywords":"","version":null},{"title":"InputKeyMapSettingClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputKeyMapSettingClient","content":"InputKeyMapSettingClient","keywords":"","version":null},{"title":"InputKeyMapSettingConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputKeyMapSettingConstants","content":"InputKeyMapSettingConstants","keywords":"","version":null},{"title":"InputKeyMapSettingUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputKeyMapSettingUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InputKeyMapSettingUtils","url":"/NevermoreEngine/api/InputKeyMapSettingUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getSettingName​","type":1,"pageTitle":"InputKeyMapSettingUtils","url":"/NevermoreEngine/api/InputKeyMapSettingUtils#getSettingName","content":"&lt;/&gt; InputKeyMapSettingUtils.getSettingName( inputKeyMapList: InputKeyMapList, inputModeType: InputModeType ) → string Returns the canonical setting name for this input key map list.  ","version":null,"tagName":"h3"},{"title":"encodeInputTypeList​","type":1,"pageTitle":"InputKeyMapSettingUtils","url":"/NevermoreEngine/api/InputKeyMapSettingUtils#encodeInputTypeList","content":"&lt;/&gt; InputKeyMapSettingUtils.encodeInputTypeList(list: {InputType}) → string Encodes the list into a string which can be decoded later.  ","version":null,"tagName":"h3"},{"title":"decodeInputTypeList​","type":1,"pageTitle":"InputKeyMapSettingUtils","url":"/NevermoreEngine/api/InputKeyMapSettingUtils#decodeInputTypeList","content":"&lt;/&gt; InputKeyMapSettingUtils.decodeInputTypeList(encoded: string?) → string Decodes the list from a string into a safe value. ","version":null,"tagName":"h3"},{"title":"InputListScoreHelper","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputListScoreHelper","content":"InputListScoreHelper Distributes the scored action to the correct providers based upon input mode","keywords":"","version":null},{"title":"InputModeServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputModeServiceClient","content":"InputModeServiceClient Centralized","keywords":"","version":null},{"title":"InputModeProcessor","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputModeProcessor","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InputModeProcessor","url":"/NevermoreEngine/api/InputModeProcessor#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"InputModeProcessor","url":"/NevermoreEngine/api/InputModeProcessor#new","content":"&lt;/&gt; InputModeProcessor.new(inputModes: {InputMode}?) → InputModeProcessor Construtcs a new inputModeProcessor  ","version":null,"tagName":"h3"},{"title":"AddInputMode​","type":1,"pageTitle":"InputModeProcessor","url":"/NevermoreEngine/api/InputModeProcessor#AddInputMode","content":"&lt;/&gt; InputModeProcessor.AddInputMode( self: InputModeProcessor, inputMode: InputMode ) → () Adds an input mode to the inputModeProcessor  ","version":null,"tagName":"h3"},{"title":"GetStates​","type":1,"pageTitle":"InputModeProcessor","url":"/NevermoreEngine/api/InputModeProcessor#GetStates","content":"&lt;/&gt; InputModeProcessor.GetStates(self: InputModeProcessor) → {InputMode} Gets all input mode inputModes being used  ","version":null,"tagName":"h3"},{"title":"Evaluate​","type":1,"pageTitle":"InputModeProcessor","url":"/NevermoreEngine/api/InputModeProcessor#Evaluate","content":"&lt;/&gt; InputModeProcessor.Evaluate( self: InputModeProcessor, inputObject: InputObject ) → () Applies the inputObject as an evaluation for the inputm odes ","version":null,"tagName":"h3"},{"title":"InputMode","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputMode","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"InputMode","url":"/NevermoreEngine/api/InputMode#properties","content":" ","version":null,"tagName":"h2"},{"title":"Enabled​","type":1,"pageTitle":"InputMode","url":"/NevermoreEngine/api/InputMode#Enabled","content":"&lt;/&gt; InputMode.Enabled: Signal&lt;()&gt; Fires off when the mode is enabled  ","version":null,"tagName":"h3"},{"title":"Name​","type":1,"pageTitle":"InputMode","url":"/NevermoreEngine/api/InputMode#Name","content":"&lt;/&gt; InputMode.Name: Signal&lt;()&gt; Name of the InputMode ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"InputMode","url":"/NevermoreEngine/api/InputMode#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"InputMode","url":"/NevermoreEngine/api/InputMode#new","content":"&lt;/&gt; InputMode.new(inputModeType: InputModeType) → InputMode Constructs a new InputMode. This inherits data from the name.  ","version":null,"tagName":"h3"},{"title":"isInputMode​","type":1,"pageTitle":"InputMode","url":"/NevermoreEngine/api/InputMode#isInputMode","content":"&lt;/&gt; InputMode.isInputMode(value: any) → boolean Returns true if a given value is an InputMode  ","version":null,"tagName":"h3"},{"title":"GetLastEnabledTime​","type":1,"pageTitle":"InputMode","url":"/NevermoreEngine/api/InputMode#GetLastEnabledTime","content":"&lt;/&gt; InputMode.GetLastEnabledTime(self: InputMode) → number Checks the last point this input mode was used.  ","version":null,"tagName":"h3"},{"title":"GetKeys​","type":1,"pageTitle":"InputMode","url":"/NevermoreEngine/api/InputMode#GetKeys","content":"&lt;/&gt; InputMode.GetKeys(self: InputMode) → {UserInputType | KeyCode | string} Returns all keys defining the input mode.  ","version":null,"tagName":"h3"},{"title":"IsValid​","type":1,"pageTitle":"InputMode","url":"/NevermoreEngine/api/InputMode#IsValid","content":"&lt;/&gt; InputMode.IsValid( self: InputMode, inputType: {UserInputType | KeyCode | string} ) → boolean Checks the validity of the inputType  ","version":null,"tagName":"h3"},{"title":"Enable​","type":1,"pageTitle":"InputMode","url":"/NevermoreEngine/api/InputMode#Enable","content":"&lt;/&gt; InputMode.Enable(self: InputMode) → () Enables the mode  ","version":null,"tagName":"h3"},{"title":"Evaluate​","type":1,"pageTitle":"InputMode","url":"/NevermoreEngine/api/InputMode#Evaluate","content":"&lt;/&gt; InputMode.Evaluate( self: InputMode, inputObject: InputObject ) → () Evaluates the input object, and if it's valid, enables the mode  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"InputMode","url":"/NevermoreEngine/api/InputMode#Destroy","content":"&lt;/&gt; InputMode.Destroy(self: InputMode) → () Cleans up the input mode ","version":null,"tagName":"h3"},{"title":"InputModeTypes","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputModeTypes","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"InputModeTypes","url":"/NevermoreEngine/api/InputModeTypes#properties","content":" ","version":null,"tagName":"h2"},{"title":"Keypad​","type":1,"pageTitle":"InputModeTypes","url":"/NevermoreEngine/api/InputModeTypes#Keypad","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; InputModeTypes.Keypad: InputModeType Input from a keypad  ","version":null,"tagName":"h3"},{"title":"Keyboard​","type":1,"pageTitle":"InputModeTypes","url":"/NevermoreEngine/api/InputModeTypes#Keyboard","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; InputModeTypes.Keyboard: InputModeType Input from a keyboard  ","version":null,"tagName":"h3"},{"title":"ArrowKeys​","type":1,"pageTitle":"InputModeTypes","url":"/NevermoreEngine/api/InputModeTypes#ArrowKeys","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; InputModeTypes.ArrowKeys: InputModeType Input involving arrow keys!  ","version":null,"tagName":"h3"},{"title":"WASD​","type":1,"pageTitle":"InputModeTypes","url":"/NevermoreEngine/api/InputModeTypes#WASD","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; InputModeTypes.WASD: InputModeType Input involving WASD  ","version":null,"tagName":"h3"},{"title":"Mouse​","type":1,"pageTitle":"InputModeTypes","url":"/NevermoreEngine/api/InputModeTypes#Mouse","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; InputModeTypes.Mouse: InputModeType Input involving the mouse  ","version":null,"tagName":"h3"},{"title":"KeyboardAndMoues​","type":1,"pageTitle":"InputModeTypes","url":"/NevermoreEngine/api/InputModeTypes#KeyboardAndMoues","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; InputModeTypes.KeyboardAndMoues: InputModeType Input involving the keyboard OR mouse.  ","version":null,"tagName":"h3"},{"title":"Touch​","type":1,"pageTitle":"InputModeTypes","url":"/NevermoreEngine/api/InputModeTypes#Touch","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; InputModeTypes.Touch: InputModeType Input involving touch input.  ","version":null,"tagName":"h3"},{"title":"DPad​","type":1,"pageTitle":"InputModeTypes","url":"/NevermoreEngine/api/InputModeTypes#DPad","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; InputModeTypes.DPad: InputModeType   ","version":null,"tagName":"h3"},{"title":"Thumbsticks​","type":1,"pageTitle":"InputModeTypes","url":"/NevermoreEngine/api/InputModeTypes#Thumbsticks","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; InputModeTypes.Thumbsticks: InputModeType Input involved thumbsticks.  ","version":null,"tagName":"h3"},{"title":"Gamepads​","type":1,"pageTitle":"InputModeTypes","url":"/NevermoreEngine/api/InputModeTypes#Gamepads","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; InputModeTypes.Gamepads: InputModeType Input involving gamepads ","version":null,"tagName":"h3"},{"title":"InputModeType","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputModeType","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InputModeType","url":"/NevermoreEngine/api/InputModeType#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"InputModeType","url":"/NevermoreEngine/api/InputModeType#new","content":"&lt;/&gt; InputModeType.new( name: string, typesAndInputModeTypes: {Enum.UserInputType | Enum.KeyCode | string | InputModeType} ) → InputMode Constructs a new InputModeType  ","version":null,"tagName":"h3"},{"title":"isInputModeType​","type":1,"pageTitle":"InputModeType","url":"/NevermoreEngine/api/InputModeType#isInputModeType","content":"&lt;/&gt; InputModeType.isInputModeType(value: any) → boolean Returns true if a given value is an InputModeType  ","version":null,"tagName":"h3"},{"title":"IsValid​","type":1,"pageTitle":"InputModeType","url":"/NevermoreEngine/api/InputModeType#IsValid","content":"&lt;/&gt; InputModeType.IsValid( self: InputModeType, inputType: {UserInputType | KeyCode | string} ) → boolean Checks the validity of the inputType  ","version":null,"tagName":"h3"},{"title":"GetKeys​","type":1,"pageTitle":"InputModeType","url":"/NevermoreEngine/api/InputModeType#GetKeys","content":"&lt;/&gt; InputModeType.GetKeys(self: InputModeType) → {UserInputType | KeyCode | string} Returns all keys defining the input mode. ","version":null,"tagName":"h3"},{"title":"InputModeTypeSelector","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputModeTypeSelector","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"InputModeTypeSelector","url":"/NevermoreEngine/api/InputModeTypeSelector#properties","content":" ","version":null,"tagName":"h2"},{"title":"Changed​","type":1,"pageTitle":"InputModeTypeSelector","url":"/NevermoreEngine/api/InputModeTypeSelector#Changed","content":"&lt;/&gt; InputModeTypeSelector.Changed: Signal&lt;InputModeType,InputModeType&gt;--newMode,oldMode Event that fires whenever the active mode changes.  ","version":null,"tagName":"h3"},{"title":"Value​","type":1,"pageTitle":"InputModeTypeSelector","url":"/NevermoreEngine/api/InputModeTypeSelector#Value","content":"&lt;/&gt; InputModeTypeSelector.Value: InputModeType? The current active input mode ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"InputModeTypeSelector","url":"/NevermoreEngine/api/InputModeTypeSelector#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"InputModeTypeSelector","url":"/NevermoreEngine/api/InputModeTypeSelector#new","content":"&lt;/&gt; InputModeTypeSelector.new( serviceBag: ServiceBag, inputModesTypes: {InputModeType} ) → InputModeTypeSelector Constructs a new InputModeTypeSelector  ","version":null,"tagName":"h3"},{"title":"fromObservableBrio​","type":1,"pageTitle":"InputModeTypeSelector","url":"/NevermoreEngine/api/InputModeTypeSelector#fromObservableBrio","content":"&lt;/&gt; InputModeTypeSelector.fromObservableBrio( serviceBag: ServiceBag, observeInputModesBrio: Observable&lt;Brio&lt;InputModeType&gt;&gt; ) → InputModeTypeSelector Constructs a new InputModeTypeSelector  ","version":null,"tagName":"h3"},{"title":"GetActiveInputType​","type":1,"pageTitle":"InputModeTypeSelector","url":"/NevermoreEngine/api/InputModeTypeSelector#GetActiveInputType","content":"&lt;/&gt; InputModeTypeSelector.GetActiveInputType(self: InputModeTypeSelector) → InputModeType Returns the current active mode  ","version":null,"tagName":"h3"},{"title":"ObserveActiveInputType​","type":1,"pageTitle":"InputModeTypeSelector","url":"/NevermoreEngine/api/InputModeTypeSelector#ObserveActiveInputType","content":"&lt;/&gt; InputModeTypeSelector.ObserveActiveInputType(self: InputModeTypeSelector) → Observable&lt;InputModeType&gt; Observes the current active mode  ","version":null,"tagName":"h3"},{"title":"IsActive​","type":1,"pageTitle":"InputModeTypeSelector","url":"/NevermoreEngine/api/InputModeTypeSelector#IsActive","content":"&lt;/&gt; InputModeTypeSelector.IsActive( self: InputModeTypeSelector, inputModeType: InputModeType ) → boolean Returns true if the input mode is the most recently activated one  ","version":null,"tagName":"h3"},{"title":"ObserveIsActive​","type":1,"pageTitle":"InputModeTypeSelector","url":"/NevermoreEngine/api/InputModeTypeSelector#ObserveIsActive","content":"&lt;/&gt; InputModeTypeSelector.ObserveIsActive( self: InputModeTypeSelector, inputModeType: InputModeType ) → Observable&lt;boolean&gt; Observes if the input mode is the most recently activated one  ","version":null,"tagName":"h3"},{"title":"Bind​","type":1,"pageTitle":"InputModeTypeSelector","url":"/NevermoreEngine/api/InputModeTypeSelector#Bind","content":"&lt;/&gt; InputModeTypeSelector.Bind( self: InputModeTypeSelector, updateBindFunction: ( newMode: InputModeType, modeMaid: Maid ) → () ) → InputModeTypeSelector Binds the updateBindFunction to the mode selector local inputModeTypeSelector = InputModeTypeSelector.new({ InputModeTypes.Mouse; InputModeTypes.Touch; }) inputModeTypeSelector:Bind(function(inputModeType) if inputModeType == InputModeTypes.Mouse then print(&quot;Show mouse input hints&quot;) elseif inputModeType == InputModeTypes.Touch then print(&quot;Show touch input hints&quot;) else -- Unknown input mode warn(&quot;Unknown input mode&quot;) -- should not occur end end)   ","version":null,"tagName":"h3"},{"title":"RemoveInputModeType​","type":1,"pageTitle":"InputModeTypeSelector","url":"/NevermoreEngine/api/InputModeTypeSelector#RemoveInputModeType","content":"&lt;/&gt; InputModeTypeSelector.RemoveInputModeType( self: InputModeTypeSelector, inputModeType: InputModeType ) → () Removes the input mode  ","version":null,"tagName":"h3"},{"title":"AddInputModeType​","type":1,"pageTitle":"InputModeTypeSelector","url":"/NevermoreEngine/api/InputModeTypeSelector#AddInputModeType","content":"&lt;/&gt; InputModeTypeSelector.AddInputModeType( self: InputModeTypeSelector, inputModeType: InputModeType ) → () Adds a new input mode  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"InputModeTypeSelector","url":"/NevermoreEngine/api/InputModeTypeSelector#Destroy","content":"&lt;/&gt; InputModeTypeSelector.Destroy(self: InputModeTypeSelector) → () Cleans up the input mode selector. INFO This should be called whenever the mode selector is done being used. ","version":null,"tagName":"h3"},{"title":"InputObjectRayUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputObjectRayUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InputObjectRayUtils","url":"/NevermoreEngine/api/InputObjectRayUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"cameraRayFromInputObject​","type":1,"pageTitle":"InputObjectRayUtils","url":"/NevermoreEngine/api/InputObjectRayUtils#cameraRayFromInputObject","content":"&lt;/&gt; InputObjectRayUtils.cameraRayFromInputObject( inputObject: InputObject , distance: number, offset: Vector3 | Vector2 | nil,-- Optional camera: Camera? -- Optional ) → Ray  Computes a camera ray from an inputObject  ","version":null,"tagName":"h3"},{"title":"cameraRayFromMouse​","type":1,"pageTitle":"InputObjectRayUtils","url":"/NevermoreEngine/api/InputObjectRayUtils#cameraRayFromMouse","content":"&lt;/&gt; InputObjectRayUtils.cameraRayFromMouse( mouse: Mouse , distance: number, offset: Vector3 | Vector2 | nil,-- Optional camera: Camera? -- Optional ) → Ray  Computes a camera ray from the mouse  ","version":null,"tagName":"h3"},{"title":"cameraRayFromInputObjectWithOffset​","type":1,"pageTitle":"InputObjectRayUtils","url":"/NevermoreEngine/api/InputObjectRayUtils#cameraRayFromInputObjectWithOffset","content":"&lt;/&gt; InputObjectRayUtils.cameraRayFromInputObjectWithOffset( inputObject: InputObject , distance: number?,-- Optional offset: Vector3 | Vector2 , camera: Camera? -- Optional ) → Ray    ","version":null,"tagName":"h3"},{"title":"cameraRayFromScreenPosition​","type":1,"pageTitle":"InputObjectRayUtils","url":"/NevermoreEngine/api/InputObjectRayUtils#cameraRayFromScreenPosition","content":"&lt;/&gt; InputObjectRayUtils.cameraRayFromScreenPosition( position: Vector3 | Vector2 , distance: number?,-- Optional camera: Camera? -- Optional ) → Ray    ","version":null,"tagName":"h3"},{"title":"cameraRayFromViewportPosition​","type":1,"pageTitle":"InputObjectRayUtils","url":"/NevermoreEngine/api/InputObjectRayUtils#cameraRayFromViewportPosition","content":"&lt;/&gt; InputObjectRayUtils.cameraRayFromViewportPosition( position: Vector3 | Vector2 , distance: number?,-- Optional camera: Camera? -- Optional ) → Ray    ","version":null,"tagName":"h3"},{"title":"generateCircleRays​","type":1,"pageTitle":"InputObjectRayUtils","url":"/NevermoreEngine/api/InputObjectRayUtils#generateCircleRays","content":"&lt;/&gt; InputObjectRayUtils.generateCircleRays( ray: Ray , count: number, radius: number ) → {Ray } Generates a circle of rays including the center ray ","version":null,"tagName":"h3"},{"title":"InputObjectTracker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputObjectTracker","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InputObjectTracker","url":"/NevermoreEngine/api/InputObjectTracker#functions","content":" ","version":null,"tagName":"h2"},{"title":"ObserveInputEnded​","type":1,"pageTitle":"InputObjectTracker","url":"/NevermoreEngine/api/InputObjectTracker#ObserveInputEnded","content":"&lt;/&gt; InputObjectTracker.ObserveInputEnded(self: InputObjectTracker) → Observable Observes when the input is ended  ","version":null,"tagName":"h3"},{"title":"GetInitialPosition​","type":1,"pageTitle":"InputObjectTracker","url":"/NevermoreEngine/api/InputObjectTracker#GetInitialPosition","content":"&lt;/&gt; InputObjectTracker.GetInitialPosition(self: InputObjectTracker) → Vector2  Gets the initial position for the input object  ","version":null,"tagName":"h3"},{"title":"GetPosition​","type":1,"pageTitle":"InputObjectTracker","url":"/NevermoreEngine/api/InputObjectTracker#GetPosition","content":"&lt;/&gt; InputObjectTracker.GetPosition(self: InputObjectTracker) → Observable&lt;Vector2 &gt; Observes input object position  ","version":null,"tagName":"h3"},{"title":"GetRay​","type":1,"pageTitle":"InputObjectTracker","url":"/NevermoreEngine/api/InputObjectTracker#GetRay","content":"&lt;/&gt; InputObjectTracker.GetRay( self: InputObjectTracker, rayDistance: number?-- Optional number, defaults to 1000 ) → Ray  Observes the input object ray  ","version":null,"tagName":"h3"},{"title":"SetCamera​","type":1,"pageTitle":"InputObjectTracker","url":"/NevermoreEngine/api/InputObjectTracker#SetCamera","content":"&lt;/&gt; InputObjectTracker.SetCamera( self: InputObjectTracker, camera: Camera ) → () Sets the camera for the input object tracker to retrieve rays from ","version":null,"tagName":"h3"},{"title":"InputObjectUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputObjectUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InputObjectUtils","url":"/NevermoreEngine/api/InputObjectUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"isMouseUserInputType​","type":1,"pageTitle":"InputObjectUtils","url":"/NevermoreEngine/api/InputObjectUtils#isMouseUserInputType","content":"&lt;/&gt; InputObjectUtils.isMouseUserInputType(userInputType: UserInputType ) → boolean Returns whether a user input type involves the mouse.  ","version":null,"tagName":"h3"},{"title":"isMouseButtonInputType​","type":1,"pageTitle":"InputObjectUtils","url":"/NevermoreEngine/api/InputObjectUtils#isMouseButtonInputType","content":"&lt;/&gt; InputObjectUtils.isMouseButtonInputType(userInputType: UserInputType ) → boolean Returns whether a user input type is a mouse button specifically.  ","version":null,"tagName":"h3"},{"title":"isSameInputObject​","type":1,"pageTitle":"InputObjectUtils","url":"/NevermoreEngine/api/InputObjectUtils#isSameInputObject","content":"&lt;/&gt; InputObjectUtils.isSameInputObject( inputObject: InputObject , otherInputObject: InputObject ) → boolean Compares the two input objects and determines if they are the same thing. For example, a finger being dragged across a screen, or a mouse input being used as a cursor. ","version":null,"tagName":"h3"},{"title":"InputTypeUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InputTypeUtils","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"InputTypeUtils","url":"/NevermoreEngine/api/InputTypeUtils#types","content":" ","version":null,"tagName":"h2"},{"title":"InputType​","type":1,"pageTitle":"InputTypeUtils","url":"/NevermoreEngine/api/InputTypeUtils#InputType","content":"&lt;/&gt; type InputType = KeyCode | UserInputType | SlottedTouchButton | &quot;TouchButton&quot; | &quot;Tap&quot; | &quot;Drag&quot; | any A valid input type that can be represented here.  ","version":null,"tagName":"h3"},{"title":"SlottedTouchButton​","type":1,"pageTitle":"InputTypeUtils","url":"/NevermoreEngine/api/InputTypeUtils#SlottedTouchButton","content":"&lt;/&gt; interface SlottedTouchButton { type: &quot;SlottedTouchButton&quot; slotId: string } A touch button that goes into a specific slot. This ensures consistent slot positions. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"InputTypeUtils","url":"/NevermoreEngine/api/InputTypeUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"isKnownInputType​","type":1,"pageTitle":"InputTypeUtils","url":"/NevermoreEngine/api/InputTypeUtils#isKnownInputType","content":"&lt;/&gt; InputTypeUtils.isKnownInputType(inputType: any) → boolean Returns true if the input type is a known input type  ","version":null,"tagName":"h3"},{"title":"isTapInWorld​","type":1,"pageTitle":"InputTypeUtils","url":"/NevermoreEngine/api/InputTypeUtils#isTapInWorld","content":"&lt;/&gt; InputTypeUtils.isTapInWorld(inputKey: any) → boolean Returns true if the input type is specifying a tap in the world  ","version":null,"tagName":"h3"},{"title":"isDrag​","type":1,"pageTitle":"InputTypeUtils","url":"/NevermoreEngine/api/InputTypeUtils#isDrag","content":"&lt;/&gt; InputTypeUtils.isDrag(inputKey: any) → boolean Returns true if the input type is specifying a drag  ","version":null,"tagName":"h3"},{"title":"isRobloxTouchButton​","type":1,"pageTitle":"InputTypeUtils","url":"/NevermoreEngine/api/InputTypeUtils#isRobloxTouchButton","content":"&lt;/&gt; InputTypeUtils.isRobloxTouchButton(inputKey: any) → boolean Returns true if the input type is specifying a Roblox touch button  ","version":null,"tagName":"h3"},{"title":"createTapInWorld​","type":1,"pageTitle":"InputTypeUtils","url":"/NevermoreEngine/api/InputTypeUtils#createTapInWorld","content":"&lt;/&gt; InputTypeUtils.createTapInWorld() → &quot;Tap&quot; Specifies a tap in the world  ","version":null,"tagName":"h3"},{"title":"createRobloxTouchButton​","type":1,"pageTitle":"InputTypeUtils","url":"/NevermoreEngine/api/InputTypeUtils#createRobloxTouchButton","content":"&lt;/&gt; InputTypeUtils.createRobloxTouchButton() → &quot;Tap&quot; Specifies a roblox touch button  ","version":null,"tagName":"h3"},{"title":"getUniqueKeyForInputType​","type":1,"pageTitle":"InputTypeUtils","url":"/NevermoreEngine/api/InputTypeUtils#getUniqueKeyForInputType","content":"&lt;/&gt; InputTypeUtils.getUniqueKeyForInputType(inputType: InputType) → any Computes a unique id for an inputType which can be used in a set to deduplicate/compare the objects. Used to know when to exclude different types from each other.  ","version":null,"tagName":"h3"},{"title":"areInputTypesListsEquivalent​","type":1,"pageTitle":"InputTypeUtils","url":"/NevermoreEngine/api/InputTypeUtils#areInputTypesListsEquivalent","content":"&lt;/&gt; InputTypeUtils.areInputTypesListsEquivalent( a: {InputType}, b: {InputType} ) → boolean Expensive comparison check to see if InputTypes are the same or not. ","version":null,"tagName":"h3"},{"title":"InsertServiceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InsertServiceUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InsertServiceUtils","url":"/NevermoreEngine/api/InsertServiceUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseAsset​","type":1,"pageTitle":"InsertServiceUtils","url":"/NevermoreEngine/api/InsertServiceUtils#promiseAsset","content":"&lt;/&gt; InsertServiceUtils.promiseAsset(assetId: number) → Promise&lt;Instance &gt; Promises the resulting asset is inserted from insert service, or a rejection ","version":null,"tagName":"h3"},{"title":"InverseFader","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/InverseFader","content":"InverseFader Be the inverse of a fading camera (makes scaling in cameras easy).","keywords":"","version":null},{"title":"IsAMixin","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/IsAMixin","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"IsAMixin","url":"/NevermoreEngine/api/IsAMixin#functions","content":" ","version":null,"tagName":"h2"},{"title":"Add​","type":1,"pageTitle":"IsAMixin","url":"/NevermoreEngine/api/IsAMixin#Add","content":"&lt;/&gt; IsAMixin:Add(class: table) → () Adds the IsA function to a class and all descendants  ","version":null,"tagName":"h3"},{"title":"IsA​","type":1,"pageTitle":"IsAMixin","url":"/NevermoreEngine/api/IsAMixin#IsA","content":"&lt;/&gt; IsAMixin:IsA(className: string) → boolean Using the .ClassName property, returns whether or not a component is a class. ","version":null,"tagName":"h3"},{"title":"JSONAttributeValue","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/JSONAttributeValue","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"JSONAttributeValue","url":"/NevermoreEngine/api/JSONAttributeValue#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"JSONAttributeValue","url":"/NevermoreEngine/api/JSONAttributeValue#new","content":"&lt;/&gt; JSONAttributeValue.new( object: Instance , attributeName: string, defaultValue: any ) → JSONAttributeValue Constructs a new JSONAttributeValue ","version":null,"tagName":"h3"},{"title":"JSONUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/JSONUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"JSONUtils","url":"/NevermoreEngine/api/JSONUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"jsonDecode​","type":1,"pageTitle":"JSONUtils","url":"/NevermoreEngine/api/JSONUtils#jsonDecode","content":"&lt;/&gt; JSONUtils.jsonDecode(str: string) → ( boolean, table?,-- Result string?-- Error ) Decodes JSON, or reports error.  ","version":null,"tagName":"h3"},{"title":"jsonEncode​","type":1,"pageTitle":"JSONUtils","url":"/NevermoreEngine/api/JSONUtils#jsonEncode","content":"&lt;/&gt; JSONUtils.jsonEncode(value: any) → ( boolean, table?,-- Result string?-- Error ) Encodes JSON, or reports error.  ","version":null,"tagName":"h3"},{"title":"promiseJSONDecode​","type":1,"pageTitle":"JSONUtils","url":"/NevermoreEngine/api/JSONUtils#promiseJSONDecode","content":"&lt;/&gt; JSONUtils.promiseJSONDecode(str: string) → Promise&lt;table&gt; Decodes JSON, or reports error. ","version":null,"tagName":"h3"},{"title":"JSONTranslator","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/JSONTranslator","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"JSONTranslator","url":"/NevermoreEngine/api/JSONTranslator#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"JSONTranslator","url":"/NevermoreEngine/api/JSONTranslator#new","content":"&lt;/&gt; JSONTranslator.new( translatorName: string,-- Name of the translator. Used for source. localeId: string, dataTable: table ) → JSONTranslator Constructs a new JSONTranslator from the given args. local translator = JSONTranslator.new(&quot;MyTranslator&quot;, en&quot;, { actions = { respawn = &quot;Respawn {playerName}&quot;; }; }) print(translator:FormatByKey(&quot;actions.respawn&quot;), { playerName = &quot;Quenty&quot;}) --&gt; Respawn Quenty -- Observing is preferred maid:GiveTask(translator:ObserveFormatByKey(&quot;actions.respawn&quot;, { playerName = RxInstanceUtils.observeProperty(player, &quot;DisplayName&quot;); }):Subscribe(function(text) print(text) --&gt; &quot;Respawn Quenty&quot; end) local translator = JSONTranslator.new(script) -- assume there is an `en.json` underneath the script with valid JSON.   ","version":null,"tagName":"h3"},{"title":"ObserveFormatByKey​","type":1,"pageTitle":"JSONTranslator","url":"/NevermoreEngine/api/JSONTranslator#ObserveFormatByKey","content":"&lt;/&gt; JSONTranslator.ObserveFormatByKey( self: JSONTranslator, translationKey: string, translationArgs: table?-- May have observables (or convertable to observables) in it. ) → Observable&lt;string&gt; Observes the translated value  ","version":null,"tagName":"h3"},{"title":"PromiseFormatByKey​","type":1,"pageTitle":"JSONTranslator","url":"/NevermoreEngine/api/JSONTranslator#PromiseFormatByKey","content":"&lt;/&gt; JSONTranslator.PromiseFormatByKey( self: JSONTranslator, translationKey: string, args: table? ) → Promise&lt;string&gt; Formats the resulting entry by args. TIP You should use JSONTranslator.ObserveFormatByKey instead of this to respond to locale changing.  ","version":null,"tagName":"h3"},{"title":"PromiseTranslator​","type":1,"pageTitle":"JSONTranslator","url":"/NevermoreEngine/api/JSONTranslator#PromiseTranslator","content":"&lt;/&gt; JSONTranslator.PromiseTranslator(self: JSONTranslator) → Promise&lt;Translator &gt; Returns a promise that will resolve once the Roblox translator is loaded from the cloud.  ","version":null,"tagName":"h3"},{"title":"ObserveTranslator​","type":1,"pageTitle":"JSONTranslator","url":"/NevermoreEngine/api/JSONTranslator#ObserveTranslator","content":"&lt;/&gt; JSONTranslator.ObserveTranslator(self: JSONTranslator) → Observable&lt;Translator &gt; Observes the current Roblox translator for this translator.  ","version":null,"tagName":"h3"},{"title":"ObserveLocaleId​","type":1,"pageTitle":"JSONTranslator","url":"/NevermoreEngine/api/JSONTranslator#ObserveLocaleId","content":"&lt;/&gt; JSONTranslator.ObserveLocaleId(self: JSONTranslator) → Observable&lt;string&gt; Observes the current locale id for this translator.  ","version":null,"tagName":"h3"},{"title":"SetEntryValue​","type":1,"pageTitle":"JSONTranslator","url":"/NevermoreEngine/api/JSONTranslator#SetEntryValue","content":"&lt;/&gt; JSONTranslator.SetEntryValue( self: JSONTranslator, translationKey: string, source: string, context: string, localeId: string, text: string ) → () Adds an entry value to the localization table itself. This can be useful for ensuring pseudo localization and/or generating localization values from the game data itself.  ","version":null,"tagName":"h3"},{"title":"ObserveTranslation​","type":1,"pageTitle":"JSONTranslator","url":"/NevermoreEngine/api/JSONTranslator#ObserveTranslation","content":"&lt;/&gt; JSONTranslator.ObserveTranslation( self: JSONTranslator, prefix: string, text: string, translationArgs: table? ) → Observable&lt;string&gt; Observes a translation key and formats it with the given args.  ","version":null,"tagName":"h3"},{"title":"ToTranslationKey​","type":1,"pageTitle":"JSONTranslator","url":"/NevermoreEngine/api/JSONTranslator#ToTranslationKey","content":"&lt;/&gt; JSONTranslator.ToTranslationKey( self: JSONTranslator, prefix: string, text: string ) → string Converts the given prefix and text into a translation key.  ","version":null,"tagName":"h3"},{"title":"GetLocaleId​","type":1,"pageTitle":"JSONTranslator","url":"/NevermoreEngine/api/JSONTranslator#GetLocaleId","content":"&lt;/&gt; JSONTranslator.GetLocaleId(self: JSONTranslator) → string Gets the current localeId of the translator if it's initialized, or a default if it is not.  ","version":null,"tagName":"h3"},{"title":"GetLocalizationTable​","type":1,"pageTitle":"JSONTranslator","url":"/NevermoreEngine/api/JSONTranslator#GetLocalizationTable","content":"&lt;/&gt; JSONTranslator.GetLocalizationTable(self: JSONTranslator) → LocalizationTable  Gets the localization table the translation is using.  ","version":null,"tagName":"h3"},{"title":"PromiseLoaded​","type":1,"pageTitle":"JSONTranslator","url":"/NevermoreEngine/api/JSONTranslator#PromiseLoaded","content":"&lt;/&gt; JSONTranslator.PromiseLoaded(self: JSONTranslator) → Promise Returns a promise that will resolve once the translator is loaded from the cloud.  ","version":null,"tagName":"h3"},{"title":"FormatByKey​","type":1,"pageTitle":"JSONTranslator","url":"/NevermoreEngine/api/JSONTranslator#FormatByKey","content":"&lt;/&gt; JSONTranslator.FormatByKey( self: JSONTranslator, translationKey: string, args: table? ) → string Formats or errors if the cloud translations are not loaded. TIP You should use JSONTranslator.ObserveFormatByKey instead of this to respond to locale changing.  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"JSONTranslator","url":"/NevermoreEngine/api/JSONTranslator#Destroy","content":"&lt;/&gt; JSONTranslator.Destroy(self: JSONTranslator) → () Cleans up the translator and deletes the localization table if it exists. Should be called by ServiceBag ","version":null,"tagName":"h3"},{"title":"JumpButtonUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/JumpButtonUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"JumpButtonUtils","url":"/NevermoreEngine/api/JumpButtonUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getJumpButtonPositionAndSize​","type":1,"pageTitle":"JumpButtonUtils","url":"/NevermoreEngine/api/JumpButtonUtils#getJumpButtonPositionAndSize","content":"&lt;/&gt; JumpButtonUtils.getJumpButtonPositionAndSize(screenGuiAbsSize: Vector2 ) → ( Vector2 ,-- Position number-- Width ) Computes the jump button's position and size based upon Roblox's logic. ","version":null,"tagName":"h3"},{"title":"Kinematics","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Kinematics","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"Kinematics","url":"/NevermoreEngine/api/Kinematics#properties","content":" ","version":null,"tagName":"h2"},{"title":"Position​","type":1,"pageTitle":"Kinematics","url":"/NevermoreEngine/api/Kinematics#Position","content":"&lt;/&gt; Kinematics.Position: T Gets and sets the current position of the Kinematics  ","version":null,"tagName":"h3"},{"title":"Velocity​","type":1,"pageTitle":"Kinematics","url":"/NevermoreEngine/api/Kinematics#Velocity","content":"&lt;/&gt; Kinematics.Velocity: T Gets and sets the current velocity of the Kinematics  ","version":null,"tagName":"h3"},{"title":"Acceleration​","type":1,"pageTitle":"Kinematics","url":"/NevermoreEngine/api/Kinematics#Acceleration","content":"&lt;/&gt; Kinematics.Acceleration: T Gets and sets the acceleration.  ","version":null,"tagName":"h3"},{"title":"StartTime​","type":1,"pageTitle":"Kinematics","url":"/NevermoreEngine/api/Kinematics#StartTime","content":"&lt;/&gt; Kinematics.StartTime: T Gets and sets the start time.  ","version":null,"tagName":"h3"},{"title":"StartPosition​","type":1,"pageTitle":"Kinematics","url":"/NevermoreEngine/api/Kinematics#StartPosition","content":"&lt;/&gt; Kinematics.StartPosition: T Gets and set the start position  ","version":null,"tagName":"h3"},{"title":"StartVelocity​","type":1,"pageTitle":"Kinematics","url":"/NevermoreEngine/api/Kinematics#StartVelocity","content":"&lt;/&gt; Kinematics.StartVelocity: T Sets the start velocity  ","version":null,"tagName":"h3"},{"title":"Speed​","type":1,"pageTitle":"Kinematics","url":"/NevermoreEngine/api/Kinematics#Speed","content":"&lt;/&gt; Kinematics.Speed: number Sets the playback speed  ","version":null,"tagName":"h3"},{"title":"Age​","type":1,"pageTitle":"Kinematics","url":"/NevermoreEngine/api/Kinematics#Age","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Kinematics.Age: number Returns how old the kinematics is  ","version":null,"tagName":"h3"},{"title":"Clock​","type":1,"pageTitle":"Kinematics","url":"/NevermoreEngine/api/Kinematics#Clock","content":"&lt;/&gt; Kinematics.Clock: () → number The current clock object to syncronize the kienmatics against. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Kinematics","url":"/NevermoreEngine/api/Kinematics#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Kinematics","url":"/NevermoreEngine/api/Kinematics#new","content":"&lt;/&gt; Kinematics.new( initial: T,-- The initial parameter is a number or Vector3 (anything with * number and addition/subtraction). clock?: () → number-- The clock function is optional, and is used to update the kinematics class ) → Kinematics&lt;T&gt; Constructs a new kinematics class. local kinematics = Kinematics.new(0) kinematics.Acceleration = -32 kinematics.Velocity = 10 print(kinematics.Position) --&gt; 0 task.wait(1) print(kinematics.Position) --&gt; -10   ","version":null,"tagName":"h3"},{"title":"Impulse​","type":1,"pageTitle":"Kinematics","url":"/NevermoreEngine/api/Kinematics#Impulse","content":"&lt;/&gt; Kinematics:Impulse(velocity: T) → () Impulses the current kinematics object, applying velocity to it.  ","version":null,"tagName":"h3"},{"title":"TimeSkip​","type":1,"pageTitle":"Kinematics","url":"/NevermoreEngine/api/Kinematics#TimeSkip","content":"&lt;/&gt; Kinematics:TimeSkip(delta: number) → () Skips forward in the set amount of time dictated by delta  ","version":null,"tagName":"h3"},{"title":"SetData​","type":1,"pageTitle":"Kinematics","url":"/NevermoreEngine/api/Kinematics#SetData","content":"&lt;/&gt; Kinematics:SetData( startTime: number, position0: T, velocity0: T, acceleration: T ) → () Sets data from some external source all at once. This is useful for synchronizing the network. ","version":null,"tagName":"h3"},{"title":"KinematicUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/KinematicUtils","content":"KinematicUtils","keywords":"","version":null},{"title":"LagPointCamera","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/LagPointCamera","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"LagPointCamera","url":"/NevermoreEngine/api/LagPointCamera#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"LagPointCamera","url":"/NevermoreEngine/api/LagPointCamera#new","content":"&lt;/&gt; LagPointCamera.new( originCamera: CameraEffect,-- A camera to use focusCamera: CameraEffect-- The Camera to look at. ) → LagPointCamera Camera that lags behind the actual camera. ","version":null,"tagName":"h3"},{"title":"LayeredLoopedSoundPlayer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/LayeredLoopedSoundPlayer","content":"LayeredLoopedSoundPlayer","keywords":"","version":null},{"title":"LinearSystemsSolverUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/LinearSystemsSolverUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"LinearSystemsSolverUtils","url":"/NevermoreEngine/api/LinearSystemsSolverUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"solve​","type":1,"pageTitle":"LinearSystemsSolverUtils","url":"/NevermoreEngine/api/LinearSystemsSolverUtils#solve","content":"&lt;/&gt; LinearSystemsSolverUtils.solve( mutSystem: {{number}}, mutOutput: {number} ) → {number} like this [a b | y] [c d | z] mutSystem = { {a, b}, {c, d}, } mutOutput = {y, z} returns solution {x0, x1} WARNING System and output get destroyed in the process  ","version":null,"tagName":"h3"},{"title":"solveTridiagonal​","type":1,"pageTitle":"LinearSystemsSolverUtils","url":"/NevermoreEngine/api/LinearSystemsSolverUtils#solveTridiagonal","content":"&lt;/&gt; LinearSystemsSolverUtils.solveTridiagonal( mutMainDiag: table, mutUpperDiag: table, mutLowerDiag: table, mutOutput: table ) → table  ","version":null,"tagName":"h3"},{"title":"Line","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Line","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Line","url":"/NevermoreEngine/api/Line#functions","content":" ","version":null,"tagName":"h2"},{"title":"intersection​","type":1,"pageTitle":"Line","url":"/NevermoreEngine/api/Line#intersection","content":"&lt;/&gt; Line.intersection( a: Vector3 , r: Vector3 ,-- Offset from a b: Vector3 , s: Vector3 ) → ( Vector3 , Vector3 ) http://wiki.roblox.com/index.php?title=User:EgoMoose/Articles/3D_line_intersection ","version":null,"tagName":"h3"},{"title":"LinearValue","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/LinearValue","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"LinearValue","url":"/NevermoreEngine/api/LinearValue#properties","content":" ","version":null,"tagName":"h2"},{"title":"magnitude​","type":1,"pageTitle":"LinearValue","url":"/NevermoreEngine/api/LinearValue#magnitude","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; LinearValue.magnitude: number Returns the magnitude of the linear value. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"LinearValue","url":"/NevermoreEngine/api/LinearValue#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"LinearValue","url":"/NevermoreEngine/api/LinearValue#new","content":"&lt;/&gt; LinearValue.new( constructor: (number...) → T, values: ({number}) ) → LinearValue&lt;T&gt; Constructs a new LinearValue object.  ","version":null,"tagName":"h3"},{"title":"isLinear​","type":1,"pageTitle":"LinearValue","url":"/NevermoreEngine/api/LinearValue#isLinear","content":"&lt;/&gt; LinearValue.isLinear( value: any-- A value to check ) → boolean-- True if a linear value, false otherwise Returns whether or not a value is a LinearValue object.  ","version":null,"tagName":"h3"},{"title":"toLinearIfNeeded​","type":1,"pageTitle":"LinearValue","url":"/NevermoreEngine/api/LinearValue#toLinearIfNeeded","content":"&lt;/&gt; LinearValue.toLinearIfNeeded(value: T) → LinearValue&lt;T&gt; | T Converts an arbitrary value to a LinearValue if Roblox has not defined this value for multiplication and addition.  ","version":null,"tagName":"h3"},{"title":"fromLinearIfNeeded​","type":1,"pageTitle":"LinearValue","url":"/NevermoreEngine/api/LinearValue#fromLinearIfNeeded","content":"&lt;/&gt; LinearValue.fromLinearIfNeeded(value: LinearValue&lt;T&gt; | any) → T | any Extracts the base value out of a packed linear value if needed.  ","version":null,"tagName":"h3"},{"title":"ToBaseValue​","type":1,"pageTitle":"LinearValue","url":"/NevermoreEngine/api/LinearValue#ToBaseValue","content":"&lt;/&gt; LinearValue.ToBaseValue(self: LinearValue&lt;T&gt;) → T Converts the value back to the base value  ","version":null,"tagName":"h3"},{"title":"GetMagnitude​","type":1,"pageTitle":"LinearValue","url":"/NevermoreEngine/api/LinearValue#GetMagnitude","content":"&lt;/&gt; LinearValue.GetMagnitude(self: LinearValue&lt;T&gt;) → number-- The magnitude of the linear value. Returns the magnitude of the linear value. ","version":null,"tagName":"h3"},{"title":"LinkUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/LinkUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"LinkUtils","url":"/NevermoreEngine/api/LinkUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"createLink​","type":1,"pageTitle":"LinkUtils","url":"/NevermoreEngine/api/LinkUtils#createLink","content":"&lt;/&gt; LinkUtils.createLink( linkName: string, from: Instance , to: Instance ) → ObjectValue  Creates a new link with the given name.  ","version":null,"tagName":"h3"},{"title":"getAllLinkValues​","type":1,"pageTitle":"LinkUtils","url":"/NevermoreEngine/api/LinkUtils#getAllLinkValues","content":"&lt;/&gt; LinkUtils.getAllLinkValues( linkName: string, from: Instance ) → {Instance } Gets all link values, as long as the values are not nil.  ","version":null,"tagName":"h3"},{"title":"setSingleLinkValue​","type":1,"pageTitle":"LinkUtils","url":"/NevermoreEngine/api/LinkUtils#setSingleLinkValue","content":"&lt;/&gt; LinkUtils.setSingleLinkValue( linkName: string, from: Instance , to: Instance ) → Instance?  Ensures after operation a single link is pointed to the value, unless the value is &quot;nil&quot; in which case no link will be set  ","version":null,"tagName":"h3"},{"title":"getAllLinks​","type":1,"pageTitle":"LinkUtils","url":"/NevermoreEngine/api/LinkUtils#getAllLinks","content":"&lt;/&gt; LinkUtils.getAllLinks( linkName: string, from: Instance ) → {ObjectValue } Gets all links underneath an instance.  ","version":null,"tagName":"h3"},{"title":"getLinkValue​","type":1,"pageTitle":"LinkUtils","url":"/NevermoreEngine/api/LinkUtils#getLinkValue","content":"&lt;/&gt; LinkUtils.getLinkValue( linkName: string, from: Instance ) → Instance  Gets the first links value  ","version":null,"tagName":"h3"},{"title":"promiseLinkValue​","type":1,"pageTitle":"LinkUtils","url":"/NevermoreEngine/api/LinkUtils#promiseLinkValue","content":"&lt;/&gt; LinkUtils.promiseLinkValue( maid: Maid, linkName: string, from: Instance ) → Promise&lt;Instance &gt; Promises the first link value that is truthy ","version":null,"tagName":"h3"},{"title":"LipsumIconUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/LipsumIconUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"LipsumIconUtils","url":"/NevermoreEngine/api/LipsumIconUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"icon​","type":1,"pageTitle":"LipsumIconUtils","url":"/NevermoreEngine/api/LipsumIconUtils#icon","content":"&lt;/&gt; LipsumIconUtils.icon(random: Random ) → string Gets a random icon that is white in color  ","version":null,"tagName":"h3"},{"title":"outlineIcon​","type":1,"pageTitle":"LipsumIconUtils","url":"/NevermoreEngine/api/LipsumIconUtils#outlineIcon","content":"&lt;/&gt; LipsumIconUtils.outlineIcon(random: Random ) → string Gets a random outline icon that is white in color  ","version":null,"tagName":"h3"},{"title":"coloredOutlineIcon​","type":1,"pageTitle":"LipsumIconUtils","url":"/NevermoreEngine/api/LipsumIconUtils#coloredOutlineIcon","content":"&lt;/&gt; LipsumIconUtils.coloredOutlineIcon(random: Random ) → string Gets a random colorful icon WARNING These icons must be be licensed to use in production. https://rhosgfx.itch.io/vector-icon-pack ","version":null,"tagName":"h3"},{"title":"LipsumUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/LipsumUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"LipsumUtils","url":"/NevermoreEngine/api/LipsumUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"username​","type":1,"pageTitle":"LipsumUtils","url":"/NevermoreEngine/api/LipsumUtils#username","content":"&lt;/&gt; LipsumUtils.username( optionalRandom: Random? -- Optional random ) → string Generates a random username. print(LipsumUtils.username()) --&gt; LoremIpsum23   ","version":null,"tagName":"h3"},{"title":"word​","type":1,"pageTitle":"LipsumUtils","url":"/NevermoreEngine/api/LipsumUtils#word","content":"&lt;/&gt; LipsumUtils.word( random: Random? -- Optional random ) → string Generates a random word. print(LipsumUtils.word()) --&gt; Lipsum   ","version":null,"tagName":"h3"},{"title":"words​","type":1,"pageTitle":"LipsumUtils","url":"/NevermoreEngine/api/LipsumUtils#words","content":"&lt;/&gt; LipsumUtils.words( numWords: number, random: Random? -- Optional random ) → string Generates a random set of words space-separated. print(LipsumUtils.words(5)) --&gt; 5 words   ","version":null,"tagName":"h3"},{"title":"sentence​","type":1,"pageTitle":"LipsumUtils","url":"/NevermoreEngine/api/LipsumUtils#sentence","content":"&lt;/&gt; LipsumUtils.sentence( numWords: number?,-- Defaults to a random number 6 to 12. optionalRandom: Random? -- Optional random ) → string Generates a random sentence. print(LipsumUtils.sentence(7)) --&gt; Sentence with 7 words.   ","version":null,"tagName":"h3"},{"title":"paragraph​","type":1,"pageTitle":"LipsumUtils","url":"/NevermoreEngine/api/LipsumUtils#paragraph","content":"&lt;/&gt; LipsumUtils.paragraph( numSentences: number?, createSentence: (() → string)?,-- Optional createSentence optionalRandom: Random? -- Optional random ) → string Generates a random paragraph. print(LipsumUtils.paragraph(4)) --&gt; Paragraph with 4 sentences.   ","version":null,"tagName":"h3"},{"title":"document​","type":1,"pageTitle":"LipsumUtils","url":"/NevermoreEngine/api/LipsumUtils#document","content":"&lt;/&gt; LipsumUtils.document( numParagraphs: number?, createParagraph: (() → string)?,-- Optional createParagraph random: Random? -- Optional random ) → string print(LipsumUtils.document(3)) --&gt; Document with 3 paragraphs  ","version":null,"tagName":"h3"},{"title":"LoaderLink","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/LoaderLink","content":"LoaderLink This item is only intended to be used by the module's authors. Private This class is linking to the Nevermore loader. Usage You can refer to script.Parent.loader and it will exist if the code has been setup properly with the Nevermore loader. local require = require(script.Parent.loader).load(script) ","keywords":"","version":null},{"title":"ListIndexUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ListIndexUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ListIndexUtils","url":"/NevermoreEngine/api/ListIndexUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"toPositiveIndex​","type":1,"pageTitle":"ListIndexUtils","url":"/NevermoreEngine/api/ListIndexUtils#toPositiveIndex","content":"&lt;/&gt; ListIndexUtils.toPositiveIndex( listLength: number, index: number ) → number Converts a negative index to a positive one for the list indexing  ","version":null,"tagName":"h3"},{"title":"toNegativeIndex​","type":1,"pageTitle":"ListIndexUtils","url":"/NevermoreEngine/api/ListIndexUtils#toNegativeIndex","content":"&lt;/&gt; ListIndexUtils.toNegativeIndex( listLength: number, index: number ) → number Converts a positive index to a negative one for list indexing ","version":null,"tagName":"h3"},{"title":"loader","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/loader","content":"loader Primary loader which handles bootstrapping different scenarios quickly","keywords":"","version":null},{"title":"LoaderLinkCreator","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/LoaderLinkCreator","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"LoaderLinkCreator","url":"/NevermoreEngine/api/LoaderLinkCreator#functions","content":" ","version":null,"tagName":"h2"},{"title":"Destroy​","type":1,"pageTitle":"LoaderLinkCreator","url":"/NevermoreEngine/api/LoaderLinkCreator#Destroy","content":"&lt;/&gt; LoaderLinkCreator.Destroy(self: LoaderLinkCreator) → () Cleans up the replicator disconnecting all events and cleaning up created instances. ","version":null,"tagName":"h3"},{"title":"LoaderLinkUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/LoaderLinkUtils","content":"LoaderLinkUtils This item is only intended to be used by the module's authors. Private","keywords":"","version":null},{"title":"LocalizationEntryParserUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/LocalizationEntryParserUtils","content":"LocalizationEntryParserUtils Utility to build a localization table from json, intended to be used with rojo. Can also handle Rojo json objects turned into tables!","keywords":"","version":null},{"title":"LocalizationServiceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/LocalizationServiceUtils","content":"LocalizationServiceUtils","keywords":"","version":null},{"title":"LoopedSoundPlayer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/LoopedSoundPlayer","content":"LoopedSoundPlayer","keywords":"","version":null},{"title":"LuvColor3Utils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/LuvColor3Utils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"LuvColor3Utils","url":"/NevermoreEngine/api/LuvColor3Utils#functions","content":" ","version":null,"tagName":"h2"},{"title":"lerp​","type":1,"pageTitle":"LuvColor3Utils","url":"/NevermoreEngine/api/LuvColor3Utils#lerp","content":"&lt;/&gt; LuvColor3Utils.lerp( color0: Color3 , color1: Color3 , t: number ) → Color3  Interpolates in LUV space.  ","version":null,"tagName":"h3"},{"title":"fromColor3​","type":1,"pageTitle":"LuvColor3Utils","url":"/NevermoreEngine/api/LuvColor3Utils#fromColor3","content":"&lt;/&gt; LuvColor3Utils.fromColor3(color3: Color3 ) → { number, number, number } Converts from Color3 to LUV  ","version":null,"tagName":"h3"},{"title":"toColor3​","type":1,"pageTitle":"LuvColor3Utils","url":"/NevermoreEngine/api/LuvColor3Utils#toColor3","content":"&lt;/&gt; LuvColor3Utils.toColor3(luv: { number, number, number }) → Color3  Converts from LUV to Color3 ","version":null,"tagName":"h3"},{"title":"LuvVectorColor3Utils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/LuvVectorColor3Utils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"LuvVectorColor3Utils","url":"/NevermoreEngine/api/LuvVectorColor3Utils#functions","content":" ","version":null,"tagName":"h2"},{"title":"fromColor3​","type":1,"pageTitle":"LuvVectorColor3Utils","url":"/NevermoreEngine/api/LuvVectorColor3Utils#fromColor3","content":"&lt;/&gt; LuvVectorColor3Utils.fromColor3(color3: Color3 ) → Vector3  Converts the Color3 to a Vector3 which can be interpolated by something like a spring.  ","version":null,"tagName":"h3"},{"title":"toColor3​","type":1,"pageTitle":"LuvVectorColor3Utils","url":"/NevermoreEngine/api/LuvVectorColor3Utils#toColor3","content":"&lt;/&gt; LuvVectorColor3Utils.toColor3(luvV3: Vector3 ) → Color3  Converts the Vector3 to a Color3 assuming it is the interpolated version. ","version":null,"tagName":"h3"},{"title":"LocalizedTextUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/LocalizedTextUtils","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"LocalizedTextUtils","url":"/NevermoreEngine/api/LocalizedTextUtils#types","content":" ","version":null,"tagName":"h2"},{"title":"TranslationArgs​","type":1,"pageTitle":"LocalizedTextUtils","url":"/NevermoreEngine/api/LocalizedTextUtils#TranslationArgs","content":"&lt;/&gt; type TranslationArgs = {[string]: LocalizedTextData | number | string} Valid translation args  ","version":null,"tagName":"h3"},{"title":"LocalizedTextData​","type":1,"pageTitle":"LocalizedTextUtils","url":"/NevermoreEngine/api/LocalizedTextUtils#LocalizedTextData","content":"&lt;/&gt; interface LocalizedTextData { translationKey: string translationArgs: TranslationArgs } Valid localized text data ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"LocalizedTextUtils","url":"/NevermoreEngine/api/LocalizedTextUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"create​","type":1,"pageTitle":"LocalizedTextUtils","url":"/NevermoreEngine/api/LocalizedTextUtils#create","content":"&lt;/&gt; LocalizedTextUtils.create( translationKey: string, translationArgs: TranslationArgs ) → LocalizedTextData Creates a new localizedtextdata  ","version":null,"tagName":"h3"},{"title":"isLocalizedText​","type":1,"pageTitle":"LocalizedTextUtils","url":"/NevermoreEngine/api/LocalizedTextUtils#isLocalizedText","content":"&lt;/&gt; LocalizedTextUtils.isLocalizedText(data: any) → boolean Returns whether the given argument is localized text  ","version":null,"tagName":"h3"},{"title":"formatByKeyRecursive​","type":1,"pageTitle":"LocalizedTextUtils","url":"/NevermoreEngine/api/LocalizedTextUtils#formatByKeyRecursive","content":"&lt;/&gt; LocalizedTextUtils.formatByKeyRecursive( translator: Translator | JSONTranslator, translationKey: string, translationArgs: TranslationArgs?, extraArgs: table? ) → string Recursively formats the translated text.  ","version":null,"tagName":"h3"},{"title":"observeFormatByKeyRecursive​","type":1,"pageTitle":"LocalizedTextUtils","url":"/NevermoreEngine/api/LocalizedTextUtils#observeFormatByKeyRecursive","content":"&lt;/&gt; LocalizedTextUtils.observeFormatByKeyRecursive( translator: Translator | JSONTranslator, translationKey: string, translationArgs: TranslationArgs?, extraArgs: table? ) → Observable&lt;string&gt; Observes the recursively formatted translated text.  ","version":null,"tagName":"h3"},{"title":"observeLocalizedTextToString​","type":1,"pageTitle":"LocalizedTextUtils","url":"/NevermoreEngine/api/LocalizedTextUtils#observeLocalizedTextToString","content":"&lt;/&gt; LocalizedTextUtils.observeLocalizedTextToString( translator: Translator | JSONTranslator, localizedText: LocalizedTextData, extraArgs: table? ) → Observable&lt;string&gt; Observes the translations by string recursively  ","version":null,"tagName":"h3"},{"title":"localizedTextToString​","type":1,"pageTitle":"LocalizedTextUtils","url":"/NevermoreEngine/api/LocalizedTextUtils#localizedTextToString","content":"&lt;/&gt; LocalizedTextUtils.localizedTextToString( translator: Translator | JSONTranslator, localizedText: LocalizedTextData, extraArgs: table? ) → string Recursively formats the translated text TIP Use LocalizedTextUtils.observeLocalizedTextToString(translator, localizedText, extraArgs)  ","version":null,"tagName":"h3"},{"title":"fromJSON​","type":1,"pageTitle":"LocalizedTextUtils","url":"/NevermoreEngine/api/LocalizedTextUtils#fromJSON","content":"&lt;/&gt; LocalizedTextUtils.fromJSON(text: string) → LocalizedTextData? Converts from JSON  ","version":null,"tagName":"h3"},{"title":"toJSON​","type":1,"pageTitle":"LocalizedTextUtils","url":"/NevermoreEngine/api/LocalizedTextUtils#toJSON","content":"&lt;/&gt; LocalizedTextUtils.toJSON(localizedText: LocalizedTextData) → string? Converts to JSON  ","version":null,"tagName":"h3"},{"title":"setFromAttribute​","type":1,"pageTitle":"LocalizedTextUtils","url":"/NevermoreEngine/api/LocalizedTextUtils#setFromAttribute","content":"&lt;/&gt; LocalizedTextUtils.setFromAttribute( obj: Instance , attributeName: string, translationKey: string, translationArgs: TranslationArgs ) → () Sets the translation data as an attribute on an instance.  ","version":null,"tagName":"h3"},{"title":"getFromAttribute​","type":1,"pageTitle":"LocalizedTextUtils","url":"/NevermoreEngine/api/LocalizedTextUtils#getFromAttribute","content":"&lt;/&gt; LocalizedTextUtils.getFromAttribute( obj: Instance , attributeName: string ) → LocalizedTextData Reads the data from the attribute  ","version":null,"tagName":"h3"},{"title":"getTranslationFromAttribute​","type":1,"pageTitle":"LocalizedTextUtils","url":"/NevermoreEngine/api/LocalizedTextUtils#getTranslationFromAttribute","content":"&lt;/&gt; LocalizedTextUtils.getTranslationFromAttribute( translator: Translator | JSONTranslator, obj: Instance , attributeName: string, extraArgs: table? ) → string? Gets the translation from a given object's attribute  ","version":null,"tagName":"h3"},{"title":"initializeAttribute​","type":1,"pageTitle":"LocalizedTextUtils","url":"/NevermoreEngine/api/LocalizedTextUtils#initializeAttribute","content":"&lt;/&gt; LocalizedTextUtils.initializeAttribute( obj: Instance , attributeName: string, defaultTranslationKey: string, defaultTranslationArgs: table? ) → () Ensures an attribute is defined if nothing is there  ","version":null,"tagName":"h3"},{"title":"observeTranslation​","type":1,"pageTitle":"LocalizedTextUtils","url":"/NevermoreEngine/api/LocalizedTextUtils#observeTranslation","content":"&lt;/&gt; LocalizedTextUtils.observeTranslation( translator: Translator | JSONTranslator, obj: Instance , attributeName: string, extraArgs: table? ) → Observable&lt;string?&gt; Returns the translated string from the given object ","version":null,"tagName":"h3"},{"title":"MaidTaskUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/MaidTaskUtils","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"MaidTaskUtils","url":"/NevermoreEngine/api/MaidTaskUtils#types","content":" ","version":null,"tagName":"h2"},{"title":"Destructable​","type":1,"pageTitle":"MaidTaskUtils","url":"/NevermoreEngine/api/MaidTaskUtils#Destructable","content":"&lt;/&gt; type Destructable = Instance | {Destroy: function} An object that can have the method :Destroy() called on it  ","version":null,"tagName":"h3"},{"title":"MaidTask​","type":1,"pageTitle":"MaidTaskUtils","url":"/NevermoreEngine/api/MaidTaskUtils#MaidTask","content":"&lt;/&gt; type MaidTask = function | thread | Destructable | RBXScriptConnection  An object that can be cleaned up ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"MaidTaskUtils","url":"/NevermoreEngine/api/MaidTaskUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"isValidTask​","type":1,"pageTitle":"MaidTaskUtils","url":"/NevermoreEngine/api/MaidTaskUtils#isValidTask","content":"&lt;/&gt; MaidTaskUtils.isValidTask(job: any) → boolean Returns whether a task is a valid job.  ","version":null,"tagName":"h3"},{"title":"doTask​","type":1,"pageTitle":"MaidTaskUtils","url":"/NevermoreEngine/api/MaidTaskUtils#doTask","content":"&lt;/&gt; MaidTaskUtils.doTask( job: MaidTask-- Task to execute ) → () Executes the task as requested.  ","version":null,"tagName":"h3"},{"title":"delayed​","type":1,"pageTitle":"MaidTaskUtils","url":"/NevermoreEngine/api/MaidTaskUtils#delayed","content":"&lt;/&gt; MaidTaskUtils.delayed( time: number,-- Time in seconds job: MaidTask-- Job to delay execution ) → () → ()-- function that will execute the job delayed Executes the task delayed after some time. -- delays cleanup by 5 seconds maid:GiveTask(MaidTaskUtils.delayed(5, gui))  ","version":null,"tagName":"h3"},{"title":"MantleConfigProvider","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/MantleConfigProvider","content":"MantleConfigProvider","keywords":"","version":null},{"title":"MarkdownParser","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/MarkdownParser","content":"MarkdownParser Parses text into markdown","keywords":"","version":null},{"title":"MarketplaceServiceCache","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/MarketplaceServiceCache","content":"MarketplaceServiceCache","keywords":"","version":null},{"title":"MarkdownRender","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/MarkdownRender","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"MarkdownRender","url":"/NevermoreEngine/api/MarkdownRender#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"MarkdownRender","url":"/NevermoreEngine/api/MarkdownRender#new","content":"&lt;/&gt; MarkdownRender.new( gui: GuiObject , width: number-- Width to render at ) → MarkdownRender Creates a new markdown render  ","version":null,"tagName":"h3"},{"title":"Render​","type":1,"pageTitle":"MarkdownRender","url":"/NevermoreEngine/api/MarkdownRender#Render","content":"&lt;/&gt; MarkdownRender:Render( data: table-- Data from MarkdownParser. ) → () Renders the data in the given gui ","version":null,"tagName":"h3"},{"title":"MarketplaceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/MarketplaceUtils","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"MarketplaceUtils","url":"/NevermoreEngine/api/MarketplaceUtils#types","content":" ","version":null,"tagName":"h2"},{"title":"CreatorProductInfo​","type":1,"pageTitle":"MarketplaceUtils","url":"/NevermoreEngine/api/MarketplaceUtils#CreatorProductInfo","content":"&lt;/&gt; interface CreatorProductInfo { CreatorType: string-- Either User or Group CreatorTargetId: number-- The ID of the creator user or group Name: string-- The name/username of the creator Id: number-- (Use CreatorTargetId instead) } Product info about the creator. See MarketplaceService.GetProductInfo.  ","version":null,"tagName":"h3"},{"title":"AssetProductInfo​","type":1,"pageTitle":"MarketplaceUtils","url":"/NevermoreEngine/api/MarketplaceUtils#AssetProductInfo","content":"&lt;/&gt; interface AssetProductInfo { Creator: CreatorProductInfo-- A table of information describing the creator of the asset AssetId: number-- If InfoType was Asset, this is the ID of the given asset. AssetTypeId: number-- The type of asset (e.g. place, model, shirt)* IsForSale: boolean-- Describes whether the asset is purchasable IsLimited: boolean-- Describes whether the asset is a &quot;limited item&quot; that is no longer (if ever) sold IsLimitedUnique: boolean-- Describes whether the asset is a &quot;limited unique&quot; (&quot;Limited U&quot;) item IsNew: boolean-- Describes whether the asset is marked as &quot;new&quot; in the catalog Remaining: number-- The remaining number of items a limited unique item may be sold Sales: number-- The number of items the asset has been sold Name: string-- The name shown on the asset's page Description: string-- The description as shown on the asset's page; can be nil if blank PriceInRobux: number-- The cost of purchasing the asset using Robux Created: string-- Timestamp of when the asset was created, e.g. 2018-08-01T17:55:11.98Z Updated: string-- Timestamp of when the asset was last updated by its creator, e.g. 2018-08-01T17:55:11.98Z ContentRatingTypeId: number-- Indicates whether the item is marked as 13+ in catalog MinimumMembershipLevel: number-- The minimum subscription level necessary to purchase the item IsPublicDomain: boolean-- Describes whether the asset can be taken for free } Product info result for assets.  ","version":null,"tagName":"h3"},{"title":"GamePassOrDeveloperProductInfo​","type":1,"pageTitle":"MarketplaceUtils","url":"/NevermoreEngine/api/MarketplaceUtils#GamePassOrDeveloperProductInfo","content":"&lt;/&gt; interface GamePassOrDeveloperProductInfo { Creator: CreatorProductInfo-- A table of information describing the creator of the asset ProductId: number-- If the InfoType was Product, this is the product ID IconImageAssetId: number-- This is the asset ID of the product/pass icon, or 0 if there isn't one Name: string-- The name shown on the asset's page Description: string-- The description as shown on the asset's page; can be nil if blank PriceInRobux: number-- The cost of purchasing the asset using Robux Created: string-- Timestamp of when the asset was created, e.g. 2018-08-01T17:55:11.98Z Updated: string-- Timestamp of when the asset was last updated by its creator, e.g. 2018-08-01T17:55:11.98Z ContentRatingTypeId: number-- Indicates whether the item is marked as 13+ in catalog MinimumMembershipLevel: number-- The minimum subscription level necessary to purchase the item IsPublicDomain: boolean-- Describes whether the asset can be taken for free } Product info result for gamepasses.  ","version":null,"tagName":"h3"},{"title":"UserSubscriptonStatus​","type":1,"pageTitle":"MarketplaceUtils","url":"/NevermoreEngine/api/MarketplaceUtils#UserSubscriptonStatus","content":"&lt;/&gt; interface UserSubscriptonStatus { IsSubscribed: boolean-- True if the user's subscription is active. IsRenewing: boolean-- True if the user is set to renew this subscription after the current subscription period ends. } Subscription Status ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"MarketplaceUtils","url":"/NevermoreEngine/api/MarketplaceUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseProductInfo​","type":1,"pageTitle":"MarketplaceUtils","url":"/NevermoreEngine/api/MarketplaceUtils#promiseProductInfo","content":"&lt;/&gt; MarketplaceUtils.promiseProductInfo( assetId: number, infoType: InfoType | nil ) → Promise&lt;AssetProductInfo | GamePassOrDeveloperProductInfo&gt; Wraps MarketplaceService.GetProductInfo and retrieves information about  ","version":null,"tagName":"h3"},{"title":"promiseUserSubscriptionStatus​","type":1,"pageTitle":"MarketplaceUtils","url":"/NevermoreEngine/api/MarketplaceUtils#promiseUserSubscriptionStatus","content":"&lt;/&gt; MarketplaceUtils.promiseUserSubscriptionStatus( player: Player , subscriptionId: string ) → UserSubscriptonStatus Returns the subscription status  ","version":null,"tagName":"h3"},{"title":"promiseUserOwnsGamePass​","type":1,"pageTitle":"MarketplaceUtils","url":"/NevermoreEngine/api/MarketplaceUtils#promiseUserOwnsGamePass","content":"&lt;/&gt; MarketplaceUtils.promiseUserOwnsGamePass( userId: number, gamePassId: number ) → Promise&lt;boolean&gt; Retrieves whether a player owns a gamepass.  ","version":null,"tagName":"h3"},{"title":"promisePlayerOwnsAsset​","type":1,"pageTitle":"MarketplaceUtils","url":"/NevermoreEngine/api/MarketplaceUtils#promisePlayerOwnsAsset","content":"&lt;/&gt; MarketplaceUtils.promisePlayerOwnsAsset( player: Player , assetId: number ) → Promise&lt;boolean&gt; Retrieves whether a player owns an asset, such as a hat or some other item.  ","version":null,"tagName":"h3"},{"title":"promisePlayerOwnsBundle​","type":1,"pageTitle":"MarketplaceUtils","url":"/NevermoreEngine/api/MarketplaceUtils#promisePlayerOwnsBundle","content":"&lt;/&gt; MarketplaceUtils.promisePlayerOwnsBundle( player: Player , bundleId: number ) → Promise&lt;boolean&gt; Retrieves whether a player owns a bundle ","version":null,"tagName":"h3"},{"title":"MasterClock","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/MasterClock","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"MasterClock","url":"/NevermoreEngine/api/MasterClock#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"MasterClock","url":"/NevermoreEngine/api/MasterClock#new","content":"&lt;/&gt; MasterClock.new( remoteEvent: RemoteEvent , remoteFunction: RemoteFunction ) → MasterClock Constructs a new MasterClock  ","version":null,"tagName":"h3"},{"title":"GetClockFunction​","type":1,"pageTitle":"MasterClock","url":"/NevermoreEngine/api/MasterClock#GetClockFunction","content":"&lt;/&gt; MasterClock.GetClockFunction(self: MasterClock) → function Gets a function that can be used as a clock, like time and tick are.  ","version":null,"tagName":"h3"},{"title":"ObservePing​","type":1,"pageTitle":"MasterClock","url":"/NevermoreEngine/api/MasterClock#ObservePing","content":"&lt;/&gt; MasterClock.ObservePing(_self: MasterClock) → Observable&lt;number&gt; Observes how much ping the clock has  ","version":null,"tagName":"h3"},{"title":"IsSynced​","type":1,"pageTitle":"MasterClock","url":"/NevermoreEngine/api/MasterClock#IsSynced","content":"&lt;/&gt; MasterClock.IsSynced(_self: MasterClock) → boolean Returns true if the manager has synced with the server  ","version":null,"tagName":"h3"},{"title":"GetPing​","type":1,"pageTitle":"MasterClock","url":"/NevermoreEngine/api/MasterClock#GetPing","content":"&lt;/&gt; MasterClock.GetPing(_self: MasterClock) → number Returns estimated ping in seconds  ","version":null,"tagName":"h3"},{"title":"GetTime​","type":1,"pageTitle":"MasterClock","url":"/NevermoreEngine/api/MasterClock#GetTime","content":"&lt;/&gt; MasterClock.GetTime(_self: MasterClock) → number Returns the sycncronized time ","version":null,"tagName":"h3"},{"title":"Math","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Math","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Math","url":"/NevermoreEngine/api/Math#functions","content":" ","version":null,"tagName":"h2"},{"title":"map​","type":1,"pageTitle":"Math","url":"/NevermoreEngine/api/Math#map","content":"&lt;/&gt; Math.map( num: number, min0: number, max0: number, min1: number, max1: number ) → number Maps a number from one range to another. NOTE Note the mapped value can be outside of the initial range, which is very useful for linear interpolation. print(Math.map(0.1, 0, 1, 1, 0)) --&gt; 0.9   ","version":null,"tagName":"h3"},{"title":"jitter​","type":1,"pageTitle":"Math","url":"/NevermoreEngine/api/Math#jitter","content":"&lt;/&gt; Math.jitter( average: number, spread: number?,-- Defaults to 50% of the average number which is pretty standard for industry randomValue: number? ) → number Returns jittered value at the average value, with the spread being random.  ","version":null,"tagName":"h3"},{"title":"isNaN​","type":1,"pageTitle":"Math","url":"/NevermoreEngine/api/Math#isNaN","content":"&lt;/&gt; Math.isNaN(num: number) → boolean Returns true if a number is NaN  ","version":null,"tagName":"h3"},{"title":"isFinite​","type":1,"pageTitle":"Math","url":"/NevermoreEngine/api/Math#isFinite","content":"&lt;/&gt; Math.isFinite(num: number) → boolean Returns true if a number is finite  ","version":null,"tagName":"h3"},{"title":"lerp​","type":1,"pageTitle":"Math","url":"/NevermoreEngine/api/Math#lerp","content":"&lt;/&gt; Math.lerp( num0: number,-- Number num1: number,-- Second number percent: number-- The percent ) → number-- The interpolated Interpolates betweeen two numbers, given an percent. The percent is a number in the range that will be used to define how interpolated it is between num0 and num1. print(Math.lerp(-1000, 1000, 0.75)) --&gt; 500   ","version":null,"tagName":"h3"},{"title":"lawOfCosines​","type":1,"pageTitle":"Math","url":"/NevermoreEngine/api/Math#lawOfCosines","content":"&lt;/&gt; Math.lawOfCosines( a: number, b: number, c: number ) → number?-- Returns nil if this cannot be solved for Solving for angle across from c  ","version":null,"tagName":"h3"},{"title":"round​","type":1,"pageTitle":"Math","url":"/NevermoreEngine/api/Math#round","content":"&lt;/&gt; Math.round( number: number, precision: number?-- Defaults to 1 ) → number Round the given number to given precision print(Math.round(72.1, 5)) --&gt; 75   ","version":null,"tagName":"h3"},{"title":"roundUp​","type":1,"pageTitle":"Math","url":"/NevermoreEngine/api/Math#roundUp","content":"&lt;/&gt; Math.roundUp( number: number, precision: number ) → number Rounds up to the given precision  ","version":null,"tagName":"h3"},{"title":"roundDown​","type":1,"pageTitle":"Math","url":"/NevermoreEngine/api/Math#roundDown","content":"&lt;/&gt; Math.roundDown( number: number, precision: number ) → number Rounds down to the given precision ","version":null,"tagName":"h3"},{"title":"MemorizeUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/MemorizeUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"MemorizeUtils","url":"/NevermoreEngine/api/MemorizeUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"memoize​","type":1,"pageTitle":"MemorizeUtils","url":"/NevermoreEngine/api/MemorizeUtils#memoize","content":"&lt;/&gt; MemorizeUtils.memoize( func: function, cacheConfig: CacheConfig ) → (T...) → U... Memoizes a function with a max size  ","version":null,"tagName":"h3"},{"title":"isCacheConfig​","type":1,"pageTitle":"MemorizeUtils","url":"/NevermoreEngine/api/MemorizeUtils#isCacheConfig","content":"&lt;/&gt; MemorizeUtils.isCacheConfig(value: any) → boolean Returns true if a valid cache config  ","version":null,"tagName":"h3"},{"title":"createCacheConfig​","type":1,"pageTitle":"MemorizeUtils","url":"/NevermoreEngine/api/MemorizeUtils#createCacheConfig","content":"&lt;/&gt; MemorizeUtils.createCacheConfig(cacheConfig: table | nil) → CacheConfig Creates a new cache config ","version":null,"tagName":"h3"},{"title":"MemoryStoreUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/MemoryStoreUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"MemoryStoreUtils","url":"/NevermoreEngine/api/MemoryStoreUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseAdd​","type":1,"pageTitle":"MemoryStoreUtils","url":"/NevermoreEngine/api/MemoryStoreUtils#promiseAdd","content":"&lt;/&gt; MemoryStoreUtils.promiseAdd( queue: MemoryStoreQueue , value: any, expirationSeconds: number, priority: number? ) → Promise Promises to add from the queue  ","version":null,"tagName":"h3"},{"title":"promiseRead​","type":1,"pageTitle":"MemoryStoreUtils","url":"/NevermoreEngine/api/MemoryStoreUtils#promiseRead","content":"&lt;/&gt; MemoryStoreUtils.promiseRead( queue: MemoryStoreQueue , count: number, allOrNothing: boolean, waitTimeout: number ) → Promise&lt;( any?, string? )&gt; Promises to read from the queue  ","version":null,"tagName":"h3"},{"title":"promiseRemove​","type":1,"pageTitle":"MemoryStoreUtils","url":"/NevermoreEngine/api/MemoryStoreUtils#promiseRemove","content":"&lt;/&gt; MemoryStoreUtils.promiseRemove( queue: MemoryStoreQueue , id: string ) → Promise Promises to remove from the queue ","version":null,"tagName":"h3"},{"title":"MeshUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/MeshUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"MeshUtils","url":"/NevermoreEngine/api/MeshUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getOrCreateMesh​","type":1,"pageTitle":"MeshUtils","url":"/NevermoreEngine/api/MeshUtils#getOrCreateMesh","content":"&lt;/&gt; MeshUtils.getOrCreateMesh(part: BasePart ) → DataModelMesh?  Get or create a mesh object for a part ","version":null,"tagName":"h3"},{"title":"MessagingServiceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/MessagingServiceUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"MessagingServiceUtils","url":"/NevermoreEngine/api/MessagingServiceUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promisePublish​","type":1,"pageTitle":"MessagingServiceUtils","url":"/NevermoreEngine/api/MessagingServiceUtils#promisePublish","content":"&lt;/&gt; MessagingServiceUtils.promisePublish( topic: string, message: any ) → Promise Wraps MessagingService:PublishAsync(topic, message)  ","version":null,"tagName":"h3"},{"title":"promiseSubscribe​","type":1,"pageTitle":"MessagingServiceUtils","url":"/NevermoreEngine/api/MessagingServiceUtils#promiseSubscribe","content":"&lt;/&gt; MessagingServiceUtils.promiseSubscribe( topic: string, callback: callback ) → Promise&lt;RBXScriptConnection &gt; Wraps MessagingService:SubscribeAsync(topic, callback) ","version":null,"tagName":"h3"},{"title":"MetricUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/MetricUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"MetricUtils","url":"/NevermoreEngine/api/MetricUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getSoundDelaySeconds​","type":1,"pageTitle":"MetricUtils","url":"/NevermoreEngine/api/MetricUtils#getSoundDelaySeconds","content":"&lt;/&gt; MetricUtils.getSoundDelaySeconds(studs: number) → number-- seconds Computes sound delay for the given studs  ","version":null,"tagName":"h3"},{"title":"studsToKilometers​","type":1,"pageTitle":"MetricUtils","url":"/NevermoreEngine/api/MetricUtils#studsToKilometers","content":"&lt;/&gt; MetricUtils.studsToKilometers(studs: number) → number-- kilometers Converts studs to kilometers  ","version":null,"tagName":"h3"},{"title":"studsToMeters​","type":1,"pageTitle":"MetricUtils","url":"/NevermoreEngine/api/MetricUtils#studsToMeters","content":"&lt;/&gt; MetricUtils.studsToMeters(studs: number) → number-- meters Converts studs to meters  ","version":null,"tagName":"h3"},{"title":"studsPerSecondToKph​","type":1,"pageTitle":"MetricUtils","url":"/NevermoreEngine/api/MetricUtils#studsPerSecondToKph","content":"&lt;/&gt; MetricUtils.studsPerSecondToKph(studsPerSecond: number) → number-- kph Convert from studs per a second (Roblox in-game units) to kph  ","version":null,"tagName":"h3"},{"title":"studsPerSecondToMetersPerSecond​","type":1,"pageTitle":"MetricUtils","url":"/NevermoreEngine/api/MetricUtils#studsPerSecondToMetersPerSecond","content":"&lt;/&gt; MetricUtils.studsPerSecondToMetersPerSecond(studsPerSecond: number) → number-- kph Convert from studs per a second to meters per a second  ","version":null,"tagName":"h3"},{"title":"studsPerSecondToMph​","type":1,"pageTitle":"MetricUtils","url":"/NevermoreEngine/api/MetricUtils#studsPerSecondToMph","content":"&lt;/&gt; MetricUtils.studsPerSecondToMph(studsPerSecond: number) → number-- mph Convert from studs per a second (Roblox in-game units) to mph  ","version":null,"tagName":"h3"},{"title":"kphToStudsPerSecond​","type":1,"pageTitle":"MetricUtils","url":"/NevermoreEngine/api/MetricUtils#kphToStudsPerSecond","content":"&lt;/&gt; MetricUtils.kphToStudsPerSecond(kph: number) → number-- studs per a second Convert mph to studs per a second  ","version":null,"tagName":"h3"},{"title":"mphToStudsPerSecond​","type":1,"pageTitle":"MetricUtils","url":"/NevermoreEngine/api/MetricUtils#mphToStudsPerSecond","content":"&lt;/&gt; MetricUtils.mphToStudsPerSecond(mph: number) → number-- studs per a second Convert mph to studs per a second ","version":null,"tagName":"h3"},{"title":"ModelAppearance","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ModelAppearance","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ModelAppearance","url":"/NevermoreEngine/api/ModelAppearance#functions","content":" ","version":null,"tagName":"h2"},{"title":"DisableInteractions​","type":1,"pageTitle":"ModelAppearance","url":"/NevermoreEngine/api/ModelAppearance#DisableInteractions","content":"&lt;/&gt; ModelAppearance.DisableInteractions(self: ModelAppearance) → () Disables all interactions with the model. This includes click detectors and seats TIP Destructive, cannot be reverted  ","version":null,"tagName":"h3"},{"title":"SetCanCollide​","type":1,"pageTitle":"ModelAppearance","url":"/NevermoreEngine/api/ModelAppearance#SetCanCollide","content":"&lt;/&gt; ModelAppearance.SetCanCollide( self: ModelAppearance, canCollide: boolean ) → () Sets the models collision state  ","version":null,"tagName":"h3"},{"title":"ResetCanCollide​","type":1,"pageTitle":"ModelAppearance","url":"/NevermoreEngine/api/ModelAppearance#ResetCanCollide","content":"&lt;/&gt; ModelAppearance.ResetCanCollide(self: ModelAppearance) → () Resets the can collide state to the original state  ","version":null,"tagName":"h3"},{"title":"SetTransparency​","type":1,"pageTitle":"ModelAppearance","url":"/NevermoreEngine/api/ModelAppearance#SetTransparency","content":"&lt;/&gt; ModelAppearance.SetTransparency( self: ModelAppearance, transparency: number ) → () Sets the transparency of the model  ","version":null,"tagName":"h3"},{"title":"ResetTransparency​","type":1,"pageTitle":"ModelAppearance","url":"/NevermoreEngine/api/ModelAppearance#ResetTransparency","content":"&lt;/&gt; ModelAppearance.ResetTransparency(self: ModelAppearance) → () Resets the transparency to the original state  ","version":null,"tagName":"h3"},{"title":"SetColor​","type":1,"pageTitle":"ModelAppearance","url":"/NevermoreEngine/api/ModelAppearance#SetColor","content":"&lt;/&gt; ModelAppearance.SetColor( self: ModelAppearance, color: Color3 ) → () Sets the color of the model  ","version":null,"tagName":"h3"},{"title":"ResetColor​","type":1,"pageTitle":"ModelAppearance","url":"/NevermoreEngine/api/ModelAppearance#ResetColor","content":"&lt;/&gt; ModelAppearance.ResetColor(self: ModelAppearance) → () Resets the color to the original state  ","version":null,"tagName":"h3"},{"title":"ResetMaterial​","type":1,"pageTitle":"ModelAppearance","url":"/NevermoreEngine/api/ModelAppearance#ResetMaterial","content":"&lt;/&gt; ModelAppearance.ResetMaterial(self: ModelAppearance) → () Resets the material to the original state  ","version":null,"tagName":"h3"},{"title":"SetMaterial​","type":1,"pageTitle":"ModelAppearance","url":"/NevermoreEngine/api/ModelAppearance#SetMaterial","content":"&lt;/&gt; ModelAppearance.SetMaterial( self: ModelAppearance, material: Enum.Material ) → () Sets the material of the model ","version":null,"tagName":"h3"},{"title":"MinEntranceVelocityUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/MinEntranceVelocityUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"MinEntranceVelocityUtils","url":"/NevermoreEngine/api/MinEntranceVelocityUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"minimizeEntranceVelocity​","type":1,"pageTitle":"MinEntranceVelocityUtils","url":"/NevermoreEngine/api/MinEntranceVelocityUtils#minimizeEntranceVelocity","content":"&lt;/&gt; MinEntranceVelocityUtils.minimizeEntranceVelocity( origin: Vector3 , target: Vector3 , accel: Vector3 ) → Vector3  Determines the starting velocity to minimize the velocity at the target for a parabula  ","version":null,"tagName":"h3"},{"title":"computeEntranceVelocity​","type":1,"pageTitle":"MinEntranceVelocityUtils","url":"/NevermoreEngine/api/MinEntranceVelocityUtils#computeEntranceVelocity","content":"&lt;/&gt; MinEntranceVelocityUtils.computeEntranceVelocity( velocity: Vector3 , origin: Vector3 , target: Vector3 , accel: Vector3 ) → Vector3  Computes the velocity the target will enter the target NOTE This may only works for a minimizeEntranceVelocity  ","version":null,"tagName":"h3"},{"title":"computeEntranceTime​","type":1,"pageTitle":"MinEntranceVelocityUtils","url":"/NevermoreEngine/api/MinEntranceVelocityUtils#computeEntranceTime","content":"&lt;/&gt; MinEntranceVelocityUtils.computeEntranceTime( velocity: Vector3 , origin: Vector3 , target: Vector3 , accel: Vector3 ) → number Computes the time stamp the project enters the target NOTE This may only works for a minimizeEntranceVelocity ","version":null,"tagName":"h3"},{"title":"ModelTransparencyEffect","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ModelTransparencyEffect","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ModelTransparencyEffect","url":"/NevermoreEngine/api/ModelTransparencyEffect#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"ModelTransparencyEffect","url":"/NevermoreEngine/api/ModelTransparencyEffect#new","content":"&lt;/&gt; ModelTransparencyEffect.new( serviceBag: ServiceBag, adornee: Instance , transparencyServiceMethodName: &quot;SetTransparency&quot; | &quot;SetLocalTransparencyModifier&quot; | nil ) → ModelTransparencyEffect   ","version":null,"tagName":"h3"},{"title":"SetAcceleration​","type":1,"pageTitle":"ModelTransparencyEffect","url":"/NevermoreEngine/api/ModelTransparencyEffect#SetAcceleration","content":"&lt;/&gt; ModelTransparencyEffect.SetAcceleration( self: ModelTransparencyEffect, acceleration: number ) → () Sets the acceleration  ","version":null,"tagName":"h3"},{"title":"SetTransparency​","type":1,"pageTitle":"ModelTransparencyEffect","url":"/NevermoreEngine/api/ModelTransparencyEffect#SetTransparency","content":"&lt;/&gt; ModelTransparencyEffect.SetTransparency( self: ModelTransparencyEffect, transparency: number, doNotAnimate: boolean? ) → () Sets the transparency  ","version":null,"tagName":"h3"},{"title":"IsDoneAnimating​","type":1,"pageTitle":"ModelTransparencyEffect","url":"/NevermoreEngine/api/ModelTransparencyEffect#IsDoneAnimating","content":"&lt;/&gt; ModelTransparencyEffect.IsDoneAnimating(self: ModelTransparencyEffect) → boolean Returns true if animation is done  ","version":null,"tagName":"h3"},{"title":"FinishTransparencyAnimation​","type":1,"pageTitle":"ModelTransparencyEffect","url":"/NevermoreEngine/api/ModelTransparencyEffect#FinishTransparencyAnimation","content":"&lt;/&gt; ModelTransparencyEffect.FinishTransparencyAnimation( self: ModelTransparencyEffect, callback: function ) → () Finishes the transparency animation, and then calls the callback to finish the animation. ","version":null,"tagName":"h3"},{"title":"ModuleProvider","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ModuleProvider","content":"ModuleProvider Creates a service that provides modules from a parent module, either by name, or by list!","keywords":"","version":null},{"title":"Motor6DAnimator","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Motor6DAnimator","content":"Motor6DAnimator","keywords":"","version":null},{"title":"ModuleProviderFakeLoader","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ModuleProviderFakeLoader","content":"ModuleProviderFakeLoader Creates a service that provides modules from a parent module, either by name, or by list!","keywords":"","version":null},{"title":"Motor6DPhysicsTransformer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Motor6DPhysicsTransformer","content":"Motor6DPhysicsTransformer","keywords":"","version":null},{"title":"Motor6DService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Motor6DService","content":"Motor6DService","keywords":"","version":null},{"title":"Motor6DSmoothTransformer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Motor6DSmoothTransformer","content":"Motor6DSmoothTransformer","keywords":"","version":null},{"title":"Motor6DServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Motor6DServiceClient","content":"Motor6DServiceClient","keywords":"","version":null},{"title":"Motor6DStack","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Motor6DStack","content":"Motor6DStack","keywords":"","version":null},{"title":"Motor6DStackBase","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Motor6DStackBase","content":"Motor6DStackBase","keywords":"","version":null},{"title":"Motor6DStackHumanoid","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Motor6DStackHumanoid","content":"Motor6DStackHumanoid","keywords":"","version":null},{"title":"Motor6DStackClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Motor6DStackClient","content":"Motor6DStackClient","keywords":"","version":null},{"title":"Motor6DStackInterface","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Motor6DStackInterface","content":"Motor6DStackInterface","keywords":"","version":null},{"title":"Motor6DTransformer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Motor6DTransformer","content":"Motor6DTransformer","keywords":"","version":null},{"title":"MouseOverMixin","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/MouseOverMixin","content":"MouseOverMixin Mouse over mixin for general utility button mouse over effects","keywords":"","version":null},{"title":"MultipleClickUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/MultipleClickUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"MultipleClickUtils","url":"/NevermoreEngine/api/MultipleClickUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeDoubleClick​","type":1,"pageTitle":"MultipleClickUtils","url":"/NevermoreEngine/api/MultipleClickUtils#observeDoubleClick","content":"&lt;/&gt; MultipleClickUtils.observeDoubleClick(gui: GuiObject ) → Observable&lt;InputObject &gt; Observes a double click on the Gui  ","version":null,"tagName":"h3"},{"title":"getDoubleClickSignal​","type":1,"pageTitle":"MultipleClickUtils","url":"/NevermoreEngine/api/MultipleClickUtils#getDoubleClickSignal","content":"&lt;/&gt; MultipleClickUtils.getDoubleClickSignal( maid: Maid, gui: GuiObject ) → Signal&lt;InputObject &gt; Returns a signal that fires when the player clicks or taps on a Gui twice.  ","version":null,"tagName":"h3"},{"title":"observeMultipleClicks​","type":1,"pageTitle":"MultipleClickUtils","url":"/NevermoreEngine/api/MultipleClickUtils#observeMultipleClicks","content":"&lt;/&gt; MultipleClickUtils.observeMultipleClicks( gui: GuiObject , requiredCount: number ) → Observable&lt;InputObject &gt; Observes multiple clicks click on the Gui  ","version":null,"tagName":"h3"},{"title":"onMultipleClicks​","type":1,"pageTitle":"MultipleClickUtils","url":"/NevermoreEngine/api/MultipleClickUtils#onMultipleClicks","content":"&lt;/&gt; MultipleClickUtils.onMultipleClicks(requiredCount: number) → (gui: GuiObject ) → Observable&lt;InputObject &gt; For use in Blend. Observes multiple clicks. Blend.New &quot;TextButton&quot; { [MultipleClickUtils.onMultipleClicks(3)] = function() print(&quot;Clicked&quot;) end; };   ","version":null,"tagName":"h3"},{"title":"getMultipleClickSignal​","type":1,"pageTitle":"MultipleClickUtils","url":"/NevermoreEngine/api/MultipleClickUtils#getMultipleClickSignal","content":"&lt;/&gt; MultipleClickUtils.getMultipleClickSignal( maid: Maid, gui: GuiObject , requiredCount: number ) → Signal&lt;InputObject &gt; Returns a signal that fires when the player clicks or taps on a Gui a certain amount of times. ","version":null,"tagName":"h3"},{"title":"NetworkOwnerService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/NetworkOwnerService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"NetworkOwnerService","url":"/NevermoreEngine/api/NetworkOwnerService#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"NetworkOwnerService","url":"/NevermoreEngine/api/NetworkOwnerService#Init","content":"&lt;/&gt; NetworkOwnerService:Init() → () Initializes the NetworkOwnerService. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"AddSetNetworkOwnerHandle​","type":1,"pageTitle":"NetworkOwnerService","url":"/NevermoreEngine/api/NetworkOwnerService#AddSetNetworkOwnerHandle","content":"&lt;/&gt; NetworkOwnerService:AddSetNetworkOwnerHandle( part: BasePart , player: Player? ) → () Tries to set the network owner handle to the given player. ","version":null,"tagName":"h3"},{"title":"MouseShiftLockService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/MouseShiftLockService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"MouseShiftLockService","url":"/NevermoreEngine/api/MouseShiftLockService#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"MouseShiftLockService","url":"/NevermoreEngine/api/MouseShiftLockService#Init","content":"&lt;/&gt; MouseShiftLockService:Init() → () Initializes the mouse shift lock service. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"EnableShiftLock​","type":1,"pageTitle":"MouseShiftLockService","url":"/NevermoreEngine/api/MouseShiftLockService#EnableShiftLock","content":"&lt;/&gt; MouseShiftLockService:EnableShiftLock() → () Enables mouse shift lock  ","version":null,"tagName":"h3"},{"title":"DisableShiftLock​","type":1,"pageTitle":"MouseShiftLockService","url":"/NevermoreEngine/api/MouseShiftLockService#DisableShiftLock","content":"&lt;/&gt; MouseShiftLockService:DisableShiftLock() → () Disables mouse shift lock ","version":null,"tagName":"h3"},{"title":"NetworkOwnerUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/NetworkOwnerUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"NetworkOwnerUtils","url":"/NevermoreEngine/api/NetworkOwnerUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"trySetNetworkOwner​","type":1,"pageTitle":"NetworkOwnerUtils","url":"/NevermoreEngine/api/NetworkOwnerUtils#trySetNetworkOwner","content":"&lt;/&gt; NetworkOwnerUtils.trySetNetworkOwner( part: BasePart , player: Player? ) → boolean Tries to set the network owner. Otherwise warns about failure.  ","version":null,"tagName":"h3"},{"title":"getNetworkOwnerPlayer​","type":1,"pageTitle":"NetworkOwnerUtils","url":"/NevermoreEngine/api/NetworkOwnerUtils#getNetworkOwnerPlayer","content":"&lt;/&gt; NetworkOwnerUtils.getNetworkOwnerPlayer(part: BasePart ) → Player?  Tries to get the network owner a part. If this can't be retrieved it defaults to nil, which is sort of like pretending to be a server.  ","version":null,"tagName":"h3"},{"title":"isNetworkOwner​","type":1,"pageTitle":"NetworkOwnerUtils","url":"/NevermoreEngine/api/NetworkOwnerUtils#isNetworkOwner","content":"&lt;/&gt; NetworkOwnerUtils.isNetworkOwner( part: BasePart , player: Player? -- nil for server ) → boolean Returns whether or not a player is a network owner. If it cannot be retrieved then it will return false.  ","version":null,"tagName":"h3"},{"title":"isServerNetworkOwner​","type":1,"pageTitle":"NetworkOwnerUtils","url":"/NevermoreEngine/api/NetworkOwnerUtils#isServerNetworkOwner","content":"&lt;/&gt; NetworkOwnerUtils.isServerNetworkOwner(part: BasePart ) → boolean Returns whether or not the server is the network owner. Returns false if it can't be retrieved.  ","version":null,"tagName":"h3"},{"title":"tryToGetNetworkOwner​","type":1,"pageTitle":"NetworkOwnerUtils","url":"/NevermoreEngine/api/NetworkOwnerUtils#tryToGetNetworkOwner","content":"&lt;/&gt; NetworkOwnerUtils.tryToGetNetworkOwner(part: BasePart ) → ( boolean,-- true if retrieved fine, false otherwise Player? -- player that is owner. )  ","version":null,"tagName":"h3"},{"title":"NetworkRopeUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/NetworkRopeUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"NetworkRopeUtils","url":"/NevermoreEngine/api/NetworkRopeUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"hintSharedMechanism​","type":1,"pageTitle":"NetworkRopeUtils","url":"/NevermoreEngine/api/NetworkRopeUtils#hintSharedMechanism","content":"&lt;/&gt; NetworkRopeUtils.hintSharedMechanism( part0: BasePart , part1: BasePart ) → Maid Hints that the two parts share a mechanism. This is sort of a physics hack since Roblox will keep mechanisms on the same network owner.  ","version":null,"tagName":"h3"},{"title":"clearNetworkOwnerHints​","type":1,"pageTitle":"NetworkRopeUtils","url":"/NevermoreEngine/api/NetworkRopeUtils#clearNetworkOwnerHints","content":"&lt;/&gt; NetworkRopeUtils.clearNetworkOwnerHints(part: Part ) → () Removes all network owner hints from a given part ","version":null,"tagName":"h3"},{"title":"NoCollisionConstraintUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/NoCollisionConstraintUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"NoCollisionConstraintUtils","url":"/NevermoreEngine/api/NoCollisionConstraintUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"create​","type":1,"pageTitle":"NoCollisionConstraintUtils","url":"/NevermoreEngine/api/NoCollisionConstraintUtils#create","content":"&lt;/&gt; NoCollisionConstraintUtils.create( part0: BasePart , part1: BasePart , parent: Instance? ) → NoCollisionConstraint  Creates a new NoCollisionConstraint between the two parts.  ","version":null,"tagName":"h3"},{"title":"tempNoCollision​","type":1,"pageTitle":"NoCollisionConstraintUtils","url":"/NevermoreEngine/api/NoCollisionConstraintUtils#tempNoCollision","content":"&lt;/&gt; NoCollisionConstraintUtils.tempNoCollision( parts0: {BasePart }, parts1: {BasePart }, parent: Instance | boolean | nil ) → Maid Creates NoCollisionConstraint objects between the two part lists, and adds them all to a [Maid] for cleanup.  ","version":null,"tagName":"h3"},{"title":"createBetweenPartsLists​","type":1,"pageTitle":"NoCollisionConstraintUtils","url":"/NevermoreEngine/api/NoCollisionConstraintUtils#createBetweenPartsLists","content":"&lt;/&gt; NoCollisionConstraintUtils.createBetweenPartsLists( parts0: {BasePart }, parts1: {BasePart }, parent: Instance | boolean | nil ) → {NoCollisionConstraint } Creates NoCollisionConstraint objects between the two part lists.  ","version":null,"tagName":"h3"},{"title":"createBetweenMechanisms​","type":1,"pageTitle":"NoCollisionConstraintUtils","url":"/NevermoreEngine/api/NoCollisionConstraintUtils#createBetweenMechanisms","content":"&lt;/&gt; NoCollisionConstraintUtils.createBetweenMechanisms( adornee0: BasePart , adornee1: BasePart , parent: Instance | boolean | nil ) → {NoCollisionConstraint } Creates NoCollisionConstraint objects between the two mechanisms. ","version":null,"tagName":"h3"},{"title":"NumberLocalizationUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/NumberLocalizationUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"NumberLocalizationUtils","url":"/NevermoreEngine/api/NumberLocalizationUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"abbreviate​","type":1,"pageTitle":"NumberLocalizationUtils","url":"/NevermoreEngine/api/NumberLocalizationUtils#abbreviate","content":"&lt;/&gt; NumberLocalizationUtils.abbreviate( number: number, locale: string, roundingBehaviourType: RoundingBehaviourType?, numSignificantDigits: number? ) → string Abbreviates the number to a truncated amount in a localized way. print(NumberLocalizationUtils.abbreviate(2500, &quot;en-us&quot;, RoundingBehaviourTypes.ROUND_TO_CLOSEST, 3)) --&gt; 2.5k  ","version":null,"tagName":"h3"},{"title":"NumberRangeUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/NumberRangeUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"NumberRangeUtils","url":"/NevermoreEngine/api/NumberRangeUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"scale​","type":1,"pageTitle":"NumberRangeUtils","url":"/NevermoreEngine/api/NumberRangeUtils#scale","content":"&lt;/&gt; NumberRangeUtils.scale( numberRange: NumberRange , scale: number ) → NumberRange  Scales a NumberRange by the given amount.  ","version":null,"tagName":"h3"},{"title":"getValue​","type":1,"pageTitle":"NumberRangeUtils","url":"/NevermoreEngine/api/NumberRangeUtils#getValue","content":"&lt;/&gt; NumberRangeUtils.getValue( numberRange: NumberRange , t: number ) → number Gets a NumberRange's value ","version":null,"tagName":"h3"},{"title":"NumberSequenceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/NumberSequenceUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"NumberSequenceUtils","url":"/NevermoreEngine/api/NumberSequenceUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getValueGenerator​","type":1,"pageTitle":"NumberSequenceUtils","url":"/NevermoreEngine/api/NumberSequenceUtils#getValueGenerator","content":"&lt;/&gt; NumberSequenceUtils.getValueGenerator(numberSequence: NumberSequence ) → (number) → number Gets the current NumberSequence value for a given t  ","version":null,"tagName":"h3"},{"title":"forEachValue​","type":1,"pageTitle":"NumberSequenceUtils","url":"/NevermoreEngine/api/NumberSequenceUtils#forEachValue","content":"&lt;/&gt; NumberSequenceUtils.forEachValue( sequence: NumberSequence , callback: function ) → NumberSequence  Scales a number sequence value by the set amount  ","version":null,"tagName":"h3"},{"title":"scale​","type":1,"pageTitle":"NumberSequenceUtils","url":"/NevermoreEngine/api/NumberSequenceUtils#scale","content":"&lt;/&gt; NumberSequenceUtils.scale( sequence: NumberSequence , scale: number ) → NumberSequence  Scales a number sequence value by the set amount  ","version":null,"tagName":"h3"},{"title":"scaleTransparency​","type":1,"pageTitle":"NumberSequenceUtils","url":"/NevermoreEngine/api/NumberSequenceUtils#scaleTransparency","content":"&lt;/&gt; NumberSequenceUtils.scaleTransparency( sequence: NumberSequence , scale: number ) → NumberSequence  Scale the transparency  ","version":null,"tagName":"h3"},{"title":"stripe​","type":1,"pageTitle":"NumberSequenceUtils","url":"/NevermoreEngine/api/NumberSequenceUtils#stripe","content":"&lt;/&gt; NumberSequenceUtils.stripe( stripes: number, backgroundTransparency: number,-- [0, 1] stripeTransparency: number,-- [0, 1] percentStripeThickness: number,-- [0, 1] percentOffset: number ) → NumberSequence  Generates a number sequence with stripes, which can be used in a variety of ways. ","version":null,"tagName":"h3"},{"title":"NumberToInputKeyUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/NumberToInputKeyUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"NumberToInputKeyUtils","url":"/NevermoreEngine/api/NumberToInputKeyUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getInputsForNumber​","type":1,"pageTitle":"NumberToInputKeyUtils","url":"/NevermoreEngine/api/NumberToInputKeyUtils#getInputsForNumber","content":"&lt;/&gt; NumberToInputKeyUtils.getInputsForNumber(number: number) → {Enum.KeyCode} Retrieves inputs for a given number.  ","version":null,"tagName":"h3"},{"title":"getNumberFromKeyCode​","type":1,"pageTitle":"NumberToInputKeyUtils","url":"/NevermoreEngine/api/NumberToInputKeyUtils#getNumberFromKeyCode","content":"&lt;/&gt; NumberToInputKeyUtils.getNumberFromKeyCode(keyCode: KeyCode ) → number Retrieves number from keyCode  ","version":null,"tagName":"h3"},{"title":"getAllNumberKeyCodes​","type":1,"pageTitle":"NumberToInputKeyUtils","url":"/NevermoreEngine/api/NumberToInputKeyUtils#getAllNumberKeyCodes","content":"&lt;/&gt; NumberToInputKeyUtils.getAllNumberKeyCodes() → {Enum.KeyCode} Returns all number keycodes ","version":null,"tagName":"h3"},{"title":"Observable","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Observable","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Observable","url":"/NevermoreEngine/api/Observable#functions","content":" ","version":null,"tagName":"h2"},{"title":"isObservable​","type":1,"pageTitle":"Observable","url":"/NevermoreEngine/api/Observable#isObservable","content":"&lt;/&gt; Observable.isObservable(item: any) → boolean Returns whether or not a value is an observable.  ","version":null,"tagName":"h3"},{"title":"new​","type":1,"pageTitle":"Observable","url":"/NevermoreEngine/api/Observable#new","content":"&lt;/&gt; Observable.new(onSubscribe: (subscription: Subscription&lt;T&gt;) → MaidTask) → Observable&lt;T&gt; Constructs a new Observable local function observeAllChildren(parent) return Observable.new(function(sub) local maid = Maid.new() for _, item in parent:GetChildren() do sub:Fire(item) end maid:GiveTask(parent.ChildAdded:Connect(function(child) sub:Fire(child) end)) return maid end) end -- Prints out all current children, and whenever a new -- child is added to workspace local maid = Maid.new() maid:GiveTask(observeAllChildren(workspace):Subscribe(print))   ","version":null,"tagName":"h3"},{"title":"Pipe​","type":1,"pageTitle":"Observable","url":"/NevermoreEngine/api/Observable#Pipe","content":"&lt;/&gt; Observable.Pipe( self: Observable&lt;T...&gt;, transformers: {(observable: Observable&lt;T&gt;) → Observable&lt;T&gt;} ) → Observable&lt;T&gt; Transforms the observable with the following transformers Rx.of(1, 2, 3):Pipe({ Rx.map(function(result) return result + 1 end); Rx.map(function(value) return string.format(&quot;%0.2f&quot;, value) end); }):Subscribe(print) --&gt; 2.00 --&gt; 3.00 --&gt; 4.00   ","version":null,"tagName":"h3"},{"title":"Subscribe​","type":1,"pageTitle":"Observable","url":"/NevermoreEngine/api/Observable#Subscribe","content":"&lt;/&gt; Observable.Subscribe( self: Observable&lt;T...&gt;, fireCallback: function?, failCallback: function?, completeCallback: function? ) → MaidTask Subscribes immediately, fireCallback may return a maid (or a task a maid can handle) to clean up ","version":null,"tagName":"h3"},{"title":"ObservableList","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ObservableList","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#new","content":"&lt;/&gt; ObservableList.new() → ObservableList&lt;T&gt; Constructs a new ObservableList  ","version":null,"tagName":"h3"},{"title":"isObservableList​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#isObservableList","content":"&lt;/&gt; ObservableList.isObservableList(value: any) → boolean Returns whether the value is an observable list  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#Observe","content":"&lt;/&gt; ObservableList.Observe(self: ObservableList&lt;T&gt;) → Observable&lt;{T}&gt; Observes the list, allocating a new list in the process.  ","version":null,"tagName":"h3"},{"title":"iterating over ObservableList​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#__iter","content":"&lt;/&gt; for (T) → ( ( T, nextIndex: any ) → ...any, T? ) in ObservableList do Allows iteration over the observable map  ","version":null,"tagName":"h3"},{"title":"ObserveItemsBrio​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#ObserveItemsBrio","content":"&lt;/&gt; ObservableList.ObserveItemsBrio(self: ObservableList&lt;T&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Observes all items in the list  ","version":null,"tagName":"h3"},{"title":"ObserveIndex​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#ObserveIndex","content":"&lt;/&gt; ObservableList.ObserveIndex( self: ObservableList&lt;T&gt;, indexToObserve: number ) → Observable&lt;number?&gt; Observes the index as it changes, until the entry at the existing index is removed.  ","version":null,"tagName":"h3"},{"title":"ObserveAtIndex​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#ObserveAtIndex","content":"&lt;/&gt; ObservableList.ObserveAtIndex( self: ObservableList&lt;T&gt;, indexToObserve: number ) → Observable&lt;T?&gt; Observes the current value at a given index. This can be useful for observing the first entry, or matching stuff up to a given slot. list:ObserveAtIndex(1):Subscribe(print) --&gt; prints first item list:ObserveAtIndex(-1):Subscribe(print) --&gt; prints last item   ","version":null,"tagName":"h3"},{"title":"ObserveAtIndexBrio​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#ObserveAtIndexBrio","content":"&lt;/&gt; ObservableList.ObserveAtIndexBrio( self: ObservableList&lt;T&gt;, indexToObserve: number ) → Observable&lt;Brio&lt;T&gt;&gt; Observes the current value at a given index. This can be useful for observing the first entry, or matching stuff up to a given slot.  ","version":null,"tagName":"h3"},{"title":"RemoveFirst​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#RemoveFirst","content":"&lt;/&gt; ObservableList.RemoveFirst( self: ObservableList&lt;T&gt;, value: T ) → boolean Removes the first instance found in contents  ","version":null,"tagName":"h3"},{"title":"GetCountValue​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#GetCountValue","content":"&lt;/&gt; ObservableList.GetCountValue(self: ObservableList&lt;T&gt;) → ValueObject&lt;number&gt; Returns an ValueObject that represents the CountValue  ","version":null,"tagName":"h3"},{"title":"ObserveIndexByKey​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#ObserveIndexByKey","content":"&lt;/&gt; ObservableList.ObserveIndexByKey( self: ObservableList&lt;T&gt;, key: Symbol ) → Observable&lt;number?&gt; Observes the index as it changes, until the entry at the existing key is removed.  ","version":null,"tagName":"h3"},{"title":"GetIndexByKey​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#GetIndexByKey","content":"&lt;/&gt; ObservableList.GetIndexByKey( self: ObservableList&lt;T&gt;, key: Symbol ) → number? Gets the current index from the key  ","version":null,"tagName":"h3"},{"title":"GetCount​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#GetCount","content":"&lt;/&gt; ObservableList.GetCount(self: ObservableList&lt;T&gt;) → number Gets the count of items in the list  ","version":null,"tagName":"h3"},{"title":"ObserveCount​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#ObserveCount","content":"&lt;/&gt; ObservableList.ObserveCount(self: ObservableList&lt;T&gt;) → Observable&lt;number&gt; Observes the count of the list  ","version":null,"tagName":"h3"},{"title":"Add​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#Add","content":"&lt;/&gt; ObservableList.Add( self: ObservableList&lt;T&gt;, item: T ) → callback-- Call to remove Adds the item to the list at the specified index  ","version":null,"tagName":"h3"},{"title":"Get​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#Get","content":"&lt;/&gt; ObservableList.Get( self: ObservableList&lt;T&gt;, index: number ) → T? Gets the current item at the index, or nil if it is not defined.  ","version":null,"tagName":"h3"},{"title":"InsertAt​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#InsertAt","content":"&lt;/&gt; ObservableList.InsertAt( self: ObservableList&lt;T&gt;, item: T, index: number? ) → callback-- Call to remove Adds the item to the list at the specified index  ","version":null,"tagName":"h3"},{"title":"RemoveAt​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#RemoveAt","content":"&lt;/&gt; ObservableList.RemoveAt( self: ObservableList&lt;T&gt;, index: number ) → T Removes the item at the index  ","version":null,"tagName":"h3"},{"title":"RemoveByKey​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#RemoveByKey","content":"&lt;/&gt; ObservableList.RemoveByKey( self: ObservableList&lt;T&gt;, key: Symbol ) → T Removes the item from the list if it exists.  ","version":null,"tagName":"h3"},{"title":"GetList​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#GetList","content":"&lt;/&gt; ObservableList.GetList(self: ObservableList&lt;T&gt;) → {T} Gets a list of all entries.  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"ObservableList","url":"/NevermoreEngine/api/ObservableList#Destroy","content":"&lt;/&gt; ObservableList.Destroy(self: ObservableList&lt;T&gt;) → () Cleans up the ObservableList and sets the metatable to nil. ","version":null,"tagName":"h3"},{"title":"ObservableCountingMap","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ObservableCountingMap","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ObservableCountingMap","url":"/NevermoreEngine/api/ObservableCountingMap#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"ObservableCountingMap","url":"/NevermoreEngine/api/ObservableCountingMap#new","content":"&lt;/&gt; ObservableCountingMap.new() → ObservableCountingMap&lt;T&gt; Constructs a new ObservableCountingMap  ","version":null,"tagName":"h3"},{"title":"isObservableMap​","type":1,"pageTitle":"ObservableCountingMap","url":"/NevermoreEngine/api/ObservableCountingMap#isObservableMap","content":"&lt;/&gt; ObservableCountingMap.isObservableMap(value: any) → boolean Returns whether the value is an observable counting map  ","version":null,"tagName":"h3"},{"title":"iterating over ObservableCountingMap​","type":1,"pageTitle":"ObservableCountingMap","url":"/NevermoreEngine/api/ObservableCountingMap#__iter","content":"&lt;/&gt; for (T) → ( ( T, nextIndex: any ) → ...any, T? ) in ObservableCountingMap do Allows iteration over the observable counting map  ","version":null,"tagName":"h3"},{"title":"ObserveKeysList​","type":1,"pageTitle":"ObservableCountingMap","url":"/NevermoreEngine/api/ObservableCountingMap#ObserveKeysList","content":"&lt;/&gt; ObservableCountingMap.ObserveKeysList(self: ObservableCountingMap&lt;T&gt;) → Observable&lt;{T}&gt; Observes the current set of active keys  ","version":null,"tagName":"h3"},{"title":"ObserveKeysSet​","type":1,"pageTitle":"ObservableCountingMap","url":"/NevermoreEngine/api/ObservableCountingMap#ObserveKeysSet","content":"&lt;/&gt; ObservableCountingMap.ObserveKeysSet(self: ObservableCountingMap&lt;T&gt;) → Observable&lt;{[T]: true}&gt; Observes the current set of active keys  ","version":null,"tagName":"h3"},{"title":"ObservePairsBrio​","type":1,"pageTitle":"ObservableCountingMap","url":"/NevermoreEngine/api/ObservableCountingMap#ObservePairsBrio","content":"&lt;/&gt; ObservableCountingMap.ObservePairsBrio(self: ObservableCountingMap&lt;T&gt;) → Observable&lt;Brio&lt;( T, number )&gt;&gt; Observes all keys in the map  ","version":null,"tagName":"h3"},{"title":"ObserveAtKey​","type":1,"pageTitle":"ObservableCountingMap","url":"/NevermoreEngine/api/ObservableCountingMap#ObserveAtKey","content":"&lt;/&gt; ObservableCountingMap.ObserveAtKey( self: ObservableCountingMap&lt;T&gt;, key: TKey ) → Observable&lt;number&gt; Observes the value for the given key.  ","version":null,"tagName":"h3"},{"title":"ObserveKeysBrio​","type":1,"pageTitle":"ObservableCountingMap","url":"/NevermoreEngine/api/ObservableCountingMap#ObserveKeysBrio","content":"&lt;/&gt; ObservableCountingMap.ObserveKeysBrio(self: ObservableCountingMap&lt;T&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Observes all keys in the map  ","version":null,"tagName":"h3"},{"title":"Contains​","type":1,"pageTitle":"ObservableCountingMap","url":"/NevermoreEngine/api/ObservableCountingMap#Contains","content":"&lt;/&gt; ObservableCountingMap.Contains( self: ObservableCountingMap&lt;T&gt;, key: T ) → boolean Returns whether the map contains the key  ","version":null,"tagName":"h3"},{"title":"Get​","type":1,"pageTitle":"ObservableCountingMap","url":"/NevermoreEngine/api/ObservableCountingMap#Get","content":"&lt;/&gt; ObservableCountingMap.Get( self: ObservableCountingMap&lt;T&gt;, key: T ) → number Returns the count for the key or 0 if there is no key  ","version":null,"tagName":"h3"},{"title":"GetTotalKeyCount​","type":1,"pageTitle":"ObservableCountingMap","url":"/NevermoreEngine/api/ObservableCountingMap#GetTotalKeyCount","content":"&lt;/&gt; ObservableCountingMap.GetTotalKeyCount(self: ObservableCountingMap&lt;T&gt;) → number Gets the count of keys in the map  ","version":null,"tagName":"h3"},{"title":"ObserveTotalKeyCount​","type":1,"pageTitle":"ObservableCountingMap","url":"/NevermoreEngine/api/ObservableCountingMap#ObserveTotalKeyCount","content":"&lt;/&gt; ObservableCountingMap.ObserveTotalKeyCount(self: ObservableCountingMap&lt;T&gt;) → Observable&lt;number&gt; Observes the count of the keys in the map  ","version":null,"tagName":"h3"},{"title":"Set​","type":1,"pageTitle":"ObservableCountingMap","url":"/NevermoreEngine/api/ObservableCountingMap#Set","content":"&lt;/&gt; ObservableCountingMap.Set( self: ObservableCountingMap&lt;T&gt;, key: T, amount: number? ) → callback Sets the current value  ","version":null,"tagName":"h3"},{"title":"Add​","type":1,"pageTitle":"ObservableCountingMap","url":"/NevermoreEngine/api/ObservableCountingMap#Add","content":"&lt;/&gt; ObservableCountingMap.Add( self: ObservableCountingMap&lt;T&gt;, key: T, amount: number? ) → callback Adds the key to the map if it does not exists.  ","version":null,"tagName":"h3"},{"title":"Remove​","type":1,"pageTitle":"ObservableCountingMap","url":"/NevermoreEngine/api/ObservableCountingMap#Remove","content":"&lt;/&gt; ObservableCountingMap.Remove( self: ObservableCountingMap&lt;T&gt;, key: T, amount: number? ) → callback Removes the key from the set if it exists.  ","version":null,"tagName":"h3"},{"title":"GetFirstKey​","type":1,"pageTitle":"ObservableCountingMap","url":"/NevermoreEngine/api/ObservableCountingMap#GetFirstKey","content":"&lt;/&gt; ObservableCountingMap.GetFirstKey(self: ObservableCountingMap&lt;T&gt;) → T Gets the first key  ","version":null,"tagName":"h3"},{"title":"GetKeyList​","type":1,"pageTitle":"ObservableCountingMap","url":"/NevermoreEngine/api/ObservableCountingMap#GetKeyList","content":"&lt;/&gt; ObservableCountingMap.GetKeyList(self: ObservableCountingMap&lt;T&gt;) → {T} Gets a list of all keys.  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"ObservableCountingMap","url":"/NevermoreEngine/api/ObservableCountingMap#Destroy","content":"&lt;/&gt; ObservableCountingMap.Destroy(self: ObservableCountingMap&lt;T&gt;) → () Cleans up the ObservableCountingMap and sets the metatable to nil. ","version":null,"tagName":"h3"},{"title":"ObservableMap","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ObservableMap","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#properties","content":" ","version":null,"tagName":"h2"},{"title":"CountChanged​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#CountChanged","content":"&lt;/&gt; ObservableMap.CountChanged: RBXScriptSignal  Fires when the count changes. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#new","content":"&lt;/&gt; ObservableMap.new() → ObservableMap&lt;TKey,TValue&gt; Constructs a new ObservableMap  ","version":null,"tagName":"h3"},{"title":"isObservableMap​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#isObservableMap","content":"&lt;/&gt; ObservableMap.isObservableMap(value: any) → boolean Returns whether the set is an observable map  ","version":null,"tagName":"h3"},{"title":"iterating over ObservableMap​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#__iter","content":"&lt;/&gt; for (T) → ( ( T, nextIndex: any ) → ...any, T? ) in ObservableMap do Allows iteration over the observable map  ","version":null,"tagName":"h3"},{"title":"ObserveKeysBrio​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#ObserveKeysBrio","content":"&lt;/&gt; ObservableMap.ObserveKeysBrio(self: ObservableMap&lt;TKey,TValue&gt;) → Observable&lt;Brio&lt;TKey&gt;&gt; Observes all keys in the map  ","version":null,"tagName":"h3"},{"title":"ObserveValuesBrio​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#ObserveValuesBrio","content":"&lt;/&gt; ObservableMap.ObserveValuesBrio(self: ObservableMap&lt;TKey,TValue&gt;) → Observable&lt;Brio&lt;TKey&gt;&gt; Observes all keys in the map  ","version":null,"tagName":"h3"},{"title":"ObservePairsBrio​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#ObservePairsBrio","content":"&lt;/&gt; ObservableMap.ObservePairsBrio(self: ObservableMap&lt;TKey,TValue&gt;) → Observable&lt;Brio&lt;( TKey, TValue )&gt;&gt; Observes all keys in the map  ","version":null,"tagName":"h3"},{"title":"Get​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#Get","content":"&lt;/&gt; ObservableMap.Get( self: ObservableMap&lt;TKey,TValue&gt;, key: TKey ) → TValue Returns the value for the given key  ","version":null,"tagName":"h3"},{"title":"ContainsKey​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#ContainsKey","content":"&lt;/&gt; ObservableMap.ContainsKey( self: ObservableMap&lt;TKey,TValue&gt;, key: TKey ) → boolean Returns whether the map contains the key  ","version":null,"tagName":"h3"},{"title":"GetCount​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#GetCount","content":"&lt;/&gt; ObservableMap.GetCount(self: ObservableMap&lt;TKey,TValue&gt;) → number Gets the count of items in the set  ","version":null,"tagName":"h3"},{"title":"ObserveCount​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#ObserveCount","content":"&lt;/&gt; ObservableMap.ObserveCount(self: ObservableMap&lt;TKey,TValue&gt;) → Observable&lt;number&gt; Observes the count of the set  ","version":null,"tagName":"h3"},{"title":"ObserveAtKeyBrio​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#ObserveAtKeyBrio","content":"&lt;/&gt; ObservableMap.ObserveAtKeyBrio( self: ObservableMap&lt;TKey,TValue&gt;, key: TKey ) → Observable&lt;Brio&lt;TValue&gt;&gt; Observes the value for the given key.  ","version":null,"tagName":"h3"},{"title":"ObserveAtKey​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#ObserveAtKey","content":"&lt;/&gt; ObservableMap.ObserveAtKey( self: ObservableMap&lt;TKey,TValue&gt;, key: TKey ) → Observable&lt;TValue?&gt; Observes the value for the given key.  ","version":null,"tagName":"h3"},{"title":"ObserveValueForKey​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#ObserveValueForKey","content":"&lt;/&gt; ObservableMap.ObserveValueForKey(key: TKey) → Observable&lt;TValue?&gt; Observes the value for the given key. Alias for ObservableMap.ObserveAtKey.  ","version":null,"tagName":"h3"},{"title":"Set​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#Set","content":"&lt;/&gt; ObservableMap.Set( self: ObservableMap&lt;TKey,TValue&gt;, key: TKey, value: TValue? ) → callback-- Call to remove the value if it was added Adds the item to the set if it does not exists.  ","version":null,"tagName":"h3"},{"title":"Remove​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#Remove","content":"&lt;/&gt; ObservableMap.Remove( self: ObservableMap&lt;TKey,TValue&gt;, key: TKey ) → () Removes the item from the map if it exists.  ","version":null,"tagName":"h3"},{"title":"GetValueList​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#GetValueList","content":"&lt;/&gt; ObservableMap.GetValueList(self: ObservableMap&lt;TKey,TValue&gt;) → {TValue} Gets a list of all values.  ","version":null,"tagName":"h3"},{"title":"GetKeyList​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#GetKeyList","content":"&lt;/&gt; ObservableMap.GetKeyList(self: ObservableMap&lt;TKey,TValue&gt;) → {TKey} Gets a list of all keys.  ","version":null,"tagName":"h3"},{"title":"ObserveKeyList​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#ObserveKeyList","content":"&lt;/&gt; ObservableMap.ObserveKeyList(self: ObservableMap&lt;TKey,TValue&gt;) → Observable&lt;{TKey}&gt; Observes the list of all keys.  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"ObservableMap","url":"/NevermoreEngine/api/ObservableMap#Destroy","content":"&lt;/&gt; ObservableMap.Destroy(self: ObservableMap&lt;TKey,TValue&gt;) → () Cleans up the ObservableMap and sets the metatable to nil. ","version":null,"tagName":"h3"},{"title":"ObservableMapList","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ObservableMapList","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#new","content":"&lt;/&gt; ObservableMapList.new() → ObservableMapList&lt;TKey,TValue&gt; Constructs a new ObservableMapList  ","version":null,"tagName":"h3"},{"title":"Push​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#Push","content":"&lt;/&gt; ObservableMapList.Push( self: ObservableMapList&lt;TKey,TValue&gt;, observeKey: Observable&lt;TKey&gt;, entry: TValue ) → MaidTask-- Cleanup object that will remove the entry Adds an entry with a dynamic key. This is great for caching things that need to be looked up by key. TIP If observeKey emits nil then the value will be excluded from the list.  ","version":null,"tagName":"h3"},{"title":"GetFirstItemForKey​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#GetFirstItemForKey","content":"&lt;/&gt; ObservableMapList.GetFirstItemForKey( self: ObservableMapList&lt;TKey,TValue&gt;, key: TKey ) → TValue | nil Gets the first item for the given key  ","version":null,"tagName":"h3"},{"title":"GetItemForKeyAtIndex​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#GetItemForKeyAtIndex","content":"&lt;/&gt; ObservableMapList.GetItemForKeyAtIndex( self: ObservableMapList&lt;TKey,TValue&gt;, key: TKey, index: number ) → TValue? Gets the item for the given key at the index mapList:Push(&quot;fruits&quot;, &quot;apple&quot;) mapList:Push(&quot;fruits&quot;, &quot;orange&quot;) mapList:Push(&quot;fruits&quot;, &quot;banana&quot;) -- Print the last item print(mapList:GetItemForKeyAtIndex(&quot;fruits&quot;, -1)) ==&gt; banana   ","version":null,"tagName":"h3"},{"title":"GetListCount​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#GetListCount","content":"&lt;/&gt; ObservableMapList.GetListCount(self: ObservableMapList&lt;TKey,TValue&gt;) → number Gets how many lists exist  ","version":null,"tagName":"h3"},{"title":"ObserveListCount​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#ObserveListCount","content":"&lt;/&gt; ObservableMapList.ObserveListCount(self: ObservableMapList&lt;TKey,TValue&gt;) → Observable&lt;number&gt; Observes how many lists exist  ","version":null,"tagName":"h3"},{"title":"GetAtListIndex​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#GetAtListIndex","content":"&lt;/&gt; ObservableMapList.GetAtListIndex( self: ObservableMapList&lt;TKey,TValue&gt;, key: TKey, index: number ) → TValue? Gets the current value at the list index  ","version":null,"tagName":"h3"},{"title":"ObserveAtListIndex​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#ObserveAtListIndex","content":"&lt;/&gt; ObservableMapList.ObserveAtListIndex( self: ObservableMapList&lt;TKey,TValue&gt;, key: TKey, index: number ) → Observable&lt;TValue?&gt; Observes the current value at the index  ","version":null,"tagName":"h3"},{"title":"GetKeyList​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#GetKeyList","content":"&lt;/&gt; ObservableMapList.GetKeyList(self: ObservableMapList&lt;TKey,TValue&gt;) → {TKey} Gets a list of all keys  ","version":null,"tagName":"h3"},{"title":"ObserveKeyList​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#ObserveKeyList","content":"&lt;/&gt; ObservableMapList.ObserveKeyList(self: ObservableMapList&lt;TKey,TValue&gt;) → Observable&lt;{TKey}&gt; Observes the list of all keys.  ","version":null,"tagName":"h3"},{"title":"ObserveKeysBrio​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#ObserveKeysBrio","content":"&lt;/&gt; ObservableMapList.ObserveKeysBrio(self: ObservableMapList&lt;TKey,TValue&gt;) → Observable&lt;Brio&lt;TKey&gt;&gt; Observes all keys in the map  ","version":null,"tagName":"h3"},{"title":"ObserveAtListIndexBrio​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#ObserveAtListIndexBrio","content":"&lt;/&gt; ObservableMapList.ObserveAtListIndexBrio( self: ObservableMapList&lt;TKey,TValue&gt;, key: TKey, index: number ) → Observable&lt;Brio&lt;TValue&gt;&gt; Observes the current value at the index  ","version":null,"tagName":"h3"},{"title":"ObserveItemsForKeyBrio​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#ObserveItemsForKeyBrio","content":"&lt;/&gt; ObservableMapList.ObserveItemsForKeyBrio( self: ObservableMapList&lt;TKey,TValue&gt;, key: TKey ) → Observable&lt;Brio&lt;TValue&gt;&gt; Observes all items at the given key  ","version":null,"tagName":"h3"},{"title":"GetListFromKey​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#GetListFromKey","content":"&lt;/&gt; ObservableMapList.GetListFromKey( self: ObservableMapList&lt;TKey,TValue&gt;, key: TKey ) → {TValue} Gets a list for a given key.  ","version":null,"tagName":"h3"},{"title":"GetListForKey​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#GetListForKey","content":"&lt;/&gt; ObservableMapList.GetListForKey( self: ObservableMapList&lt;TKey,TValue&gt;, key: TKey ) → ObservableList&lt;TValue&gt; Gets the observable list for the given key  ","version":null,"tagName":"h3"},{"title":"GetListOfValuesAtListIndex​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#GetListOfValuesAtListIndex","content":"&lt;/&gt; ObservableMapList.GetListOfValuesAtListIndex( self: ObservableMapList&lt;TKey,TValue&gt;, index: number ) → {TValue} Gets a list of all of the entries at the given index, if it exists  ","version":null,"tagName":"h3"},{"title":"ObserveList​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#ObserveList","content":"&lt;/&gt; ObservableMapList.ObserveList( self: ObservableMapList&lt;TKey,TValue&gt;, key: TKey ) → Observable&lt;ObservableList&lt;TValue&gt;&gt; Observes the observable list for the given key  ","version":null,"tagName":"h3"},{"title":"ObserveListBrio​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#ObserveListBrio","content":"&lt;/&gt; ObservableMapList.ObserveListBrio( self: ObservableMapList&lt;TKey,TValue&gt;, key: TKey ) → Observable&lt;Brio&lt;ObservableList&lt;TValue&gt;&gt;&gt; Observes the observable list for the given key  ","version":null,"tagName":"h3"},{"title":"ObserveListsBrio​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#ObserveListsBrio","content":"&lt;/&gt; ObservableMapList.ObserveListsBrio(self: ObservableMapList&lt;TKey,TValue&gt;) → Observable&lt;Brio&lt;ObservableList&lt;TValue&gt;&gt;&gt; Observes all observable lists in the map.  ","version":null,"tagName":"h3"},{"title":"ObserveCountForKey​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#ObserveCountForKey","content":"&lt;/&gt; ObservableMapList.ObserveCountForKey( self: ObservableMapList&lt;TKey,TValue&gt;, key: TKey ) → Observable&lt;number&gt; Observes the number of entries for the given key  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"ObservableMapList","url":"/NevermoreEngine/api/ObservableMapList#Destroy","content":"&lt;/&gt; ObservableMapList.Destroy(self: ObservableMapList&lt;TKey,TValue&gt;) → () Cleans up the ObservableMapList and sets the metatable to nil. ","version":null,"tagName":"h3"},{"title":"ObservableSet","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ObservableSet","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#properties","content":" ","version":null,"tagName":"h2"},{"title":"ItemAdded​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#ItemAdded","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ObservableSet.ItemAdded: Signal&lt;T&gt; Fires when an item is added  ","version":null,"tagName":"h3"},{"title":"ItemRemoved​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#ItemRemoved","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ObservableSet.ItemRemoved: Signal&lt;T&gt; Fires when an item is removed.  ","version":null,"tagName":"h3"},{"title":"CountChanged​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#CountChanged","content":"&lt;/&gt; ObservableSet.CountChanged: RBXScriptSignal  Fires when the count changes. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#new","content":"&lt;/&gt; ObservableSet.new() → ObservableSet&lt;T&gt; Constructs a new ObservableSet  ","version":null,"tagName":"h3"},{"title":"isObservableSet​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#isObservableSet","content":"&lt;/&gt; ObservableSet.isObservableSet(value: any) → boolean Returns whether the value is an observable set  ","version":null,"tagName":"h3"},{"title":"iterating over ObservableSet​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#__iter","content":"&lt;/&gt; for (T) → ( ( T, nextIndex: any ) → ...any, T? ) in ObservableSet do Allows iteration over the observable set  ","version":null,"tagName":"h3"},{"title":"ObserveItemsBrio​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#ObserveItemsBrio","content":"&lt;/&gt; ObservableSet.ObserveItemsBrio(self: ObservableSet&lt;T&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Observes all items in the set  ","version":null,"tagName":"h3"},{"title":"ObserveContains​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#ObserveContains","content":"&lt;/&gt; ObservableSet.ObserveContains( self: ObservableSet&lt;T&gt;, item: T ) → Observable&lt;boolean&gt; Observes the current value at a given index. This can be useful for observing the first entry, or matching stuff up to a given slot.  ","version":null,"tagName":"h3"},{"title":"Contains​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#Contains","content":"&lt;/&gt; ObservableSet.Contains( self: ObservableSet&lt;T&gt;, item: T ) → boolean Returns whether the set contains the item  ","version":null,"tagName":"h3"},{"title":"GetCount​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#GetCount","content":"&lt;/&gt; ObservableSet.GetCount(self: ObservableSet&lt;T&gt;) → number Gets the count of items in the set  ","version":null,"tagName":"h3"},{"title":"ObserveCount​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#ObserveCount","content":"&lt;/&gt; ObservableSet.ObserveCount(self: ObservableSet&lt;T&gt;) → Observable&lt;number&gt; Observes the count of the set  ","version":null,"tagName":"h3"},{"title":"Add​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#Add","content":"&lt;/&gt; ObservableSet.Add( self: ObservableSet&lt;T&gt;, item: T ) → callback-- Call to remove Adds the item to the set if it does not exists.  ","version":null,"tagName":"h3"},{"title":"Remove​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#Remove","content":"&lt;/&gt; ObservableSet.Remove( self: ObservableSet&lt;T&gt;, item: T ) → Trueifremoved Removes the item from the set if it exists.  ","version":null,"tagName":"h3"},{"title":"GetFirstItem​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#GetFirstItem","content":"&lt;/&gt; ObservableSet.GetFirstItem(self: ObservableSet&lt;T&gt;) → T Gets an arbitrary item in the set (not guaranteed to be ordered)  ","version":null,"tagName":"h3"},{"title":"GetList​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#GetList","content":"&lt;/&gt; ObservableSet.GetList(self: ObservableSet&lt;T&gt;) → {T} Gets a list of all entries.  ","version":null,"tagName":"h3"},{"title":"GetSetCopy​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#GetSetCopy","content":"&lt;/&gt; ObservableSet.GetSetCopy(self: ObservableSet&lt;T&gt;) → {[T]: true} Gets a copy of the set  ","version":null,"tagName":"h3"},{"title":"GetRawSet​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#GetRawSet","content":"&lt;/&gt; ObservableSet.GetRawSet(self: ObservableSet&lt;T&gt;) → {[T]: true} Gets the raw set. Do not modify this set.  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"ObservableSet","url":"/NevermoreEngine/api/ObservableSet#Destroy","content":"&lt;/&gt; ObservableSet.Destroy(self: ObservableSet&lt;T&gt;) → () Cleans up the ObservableSet and sets the metatable to nil. ","version":null,"tagName":"h3"},{"title":"ObservableMapSet","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ObservableMapSet","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"ObservableMapSet","url":"/NevermoreEngine/api/ObservableMapSet#properties","content":" ","version":null,"tagName":"h2"},{"title":"SetAdded​","type":1,"pageTitle":"ObservableMapSet","url":"/NevermoreEngine/api/ObservableMapSet#SetAdded","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ObservableMapSet.SetAdded: Signal&lt;TKey&gt; Fires when an item is added  ","version":null,"tagName":"h3"},{"title":"SetRemoved​","type":1,"pageTitle":"ObservableMapSet","url":"/NevermoreEngine/api/ObservableMapSet#SetRemoved","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ObservableMapSet.SetRemoved: Signal&lt;TKey&gt; Fires when an item is removed ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"ObservableMapSet","url":"/NevermoreEngine/api/ObservableMapSet#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"ObservableMapSet","url":"/NevermoreEngine/api/ObservableMapSet#new","content":"&lt;/&gt; ObservableMapSet.new() → ObservableMapSet&lt;TKey,TValue&gt; Constructs a new ObservableMapSet  ","version":null,"tagName":"h3"},{"title":"Push​","type":1,"pageTitle":"ObservableMapSet","url":"/NevermoreEngine/api/ObservableMapSet#Push","content":"&lt;/&gt; ObservableMapSet.Push( self: ObservableMapSet&lt;TKey,TValue&gt;, observeKey: Observable&lt;TKey&gt; | TKey, entry: TValue ) → MaidTask-- Cleanup object that will remove the entry Adds an entry with a dynamic key. This is great for caching things that need to be looked up by key. TIP If observeKey emits nil then the value will be excluded from the map.  ","version":null,"tagName":"h3"},{"title":"Add​","type":1,"pageTitle":"ObservableMapSet","url":"/NevermoreEngine/api/ObservableMapSet#Add","content":"&lt;/&gt; ObservableMapSet.Add( self: ObservableMapSet&lt;TKey,TValue&gt;, entry: TValue, observeKey: Observable&lt;TKey&gt; | TKey ) → MaidTask-- Cleanup object that will remove the entry Adds an entry with a dynamic key. This is great for caching things that need to be looked up by key. This code is legacy code since our argument order isn't intuitive TIP If observeKey emits nil then the value will be excluded from the map.  ","version":null,"tagName":"h3"},{"title":"GetKeyList​","type":1,"pageTitle":"ObservableMapSet","url":"/NevermoreEngine/api/ObservableMapSet#GetKeyList","content":"&lt;/&gt; ObservableMapSet.GetKeyList(self: ObservableMapSet&lt;TKey,TValue&gt;) → {TKey} Gets a list of all keys.  ","version":null,"tagName":"h3"},{"title":"ObserveKeyList​","type":1,"pageTitle":"ObservableMapSet","url":"/NevermoreEngine/api/ObservableMapSet#ObserveKeyList","content":"&lt;/&gt; ObservableMapSet.ObserveKeyList(self: ObservableMapSet&lt;TKey,TValue&gt;) → Observable&lt;{TKey}&gt; Observes the list of all keys.  ","version":null,"tagName":"h3"},{"title":"ObserveKeysBrio​","type":1,"pageTitle":"ObservableMapSet","url":"/NevermoreEngine/api/ObservableMapSet#ObserveKeysBrio","content":"&lt;/&gt; ObservableMapSet.ObserveKeysBrio(self: ObservableMapSet&lt;TKey,TValue&gt;) → Observable&lt;Brio&lt;TKey&gt;&gt; Observes all keys in the map  ","version":null,"tagName":"h3"},{"title":"GetSetCount​","type":1,"pageTitle":"ObservableMapSet","url":"/NevermoreEngine/api/ObservableMapSet#GetSetCount","content":"&lt;/&gt; ObservableMapSet.GetSetCount(self: ObservableMapSet&lt;TKey,TValue&gt;) → number Gets how many sets exist  ","version":null,"tagName":"h3"},{"title":"ObserveSetCount​","type":1,"pageTitle":"ObservableMapSet","url":"/NevermoreEngine/api/ObservableMapSet#ObserveSetCount","content":"&lt;/&gt; ObservableMapSet.ObserveSetCount(self: ObservableMapSet&lt;TKey,TValue&gt;) → Observable&lt;number&gt; Observes how many sets exist  ","version":null,"tagName":"h3"},{"title":"ObserveItemsForKeyBrio​","type":1,"pageTitle":"ObservableMapSet","url":"/NevermoreEngine/api/ObservableMapSet#ObserveItemsForKeyBrio","content":"&lt;/&gt; ObservableMapSet.ObserveItemsForKeyBrio( self: ObservableMapSet&lt;TKey,TValue&gt;, key: TKey ) → Observable&lt;Brio&lt;TValue&gt;&gt; Observes all items for the given key  ","version":null,"tagName":"h3"},{"title":"GetFirstItemForKey​","type":1,"pageTitle":"ObservableMapSet","url":"/NevermoreEngine/api/ObservableMapSet#GetFirstItemForKey","content":"&lt;/&gt; ObservableMapSet.GetFirstItemForKey( self: ObservableMapSet&lt;TKey,TValue&gt;, key: TKey ) → TValue? Gets the first item for the given key  ","version":null,"tagName":"h3"},{"title":"GetListForKey​","type":1,"pageTitle":"ObservableMapSet","url":"/NevermoreEngine/api/ObservableMapSet#GetListForKey","content":"&lt;/&gt; ObservableMapSet.GetListForKey( self: ObservableMapSet&lt;TKey,TValue&gt;, key: TKey ) → {TValue} Gets a list for a given key  ","version":null,"tagName":"h3"},{"title":"GetObservableSetForKey​","type":1,"pageTitle":"ObservableMapSet","url":"/NevermoreEngine/api/ObservableMapSet#GetObservableSetForKey","content":"&lt;/&gt; ObservableMapSet.GetObservableSetForKey( self: ObservableMapSet&lt;TKey,TValue&gt;, key: TKey ) → ObservableSet&lt;TValue&gt; Gets the observable set for the given key  ","version":null,"tagName":"h3"},{"title":"ObserveSetBrio​","type":1,"pageTitle":"ObservableMapSet","url":"/NevermoreEngine/api/ObservableMapSet#ObserveSetBrio","content":"&lt;/&gt; ObservableMapSet.ObserveSetBrio( self: ObservableMapSet&lt;TKey,TValue&gt;, key: TKey ) → Observable&lt;Brio&lt;ObservableSet&lt;TValue&gt;&gt;&gt; Observes the observable set for the given key  ","version":null,"tagName":"h3"},{"title":"ObserveCountForKey​","type":1,"pageTitle":"ObservableMapSet","url":"/NevermoreEngine/api/ObservableMapSet#ObserveCountForKey","content":"&lt;/&gt; ObservableMapSet.ObserveCountForKey( self: ObservableMapSet&lt;TKey,TValue&gt;, key: TKey ) → Observable&lt;number&gt; Observes the number of entries for the given key  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"ObservableMapSet","url":"/NevermoreEngine/api/ObservableMapSet#Destroy","content":"&lt;/&gt; ObservableMapSet.Destroy(self: ObservableMapSet&lt;TKey,TValue&gt;) → () Cleans up the ObservableMapSet and sets the metatable to nil. ","version":null,"tagName":"h3"},{"title":"ObservableSortedList","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ObservableSortedList","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#properties","content":" ","version":null,"tagName":"h2"},{"title":"ItemAdded​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#ItemAdded","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ObservableSortedList.ItemAdded: Signal&lt;T,number,Symbol&gt; Fires when an item is added  ","version":null,"tagName":"h3"},{"title":"ItemRemoved​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#ItemRemoved","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ObservableSortedList.ItemRemoved: Signal&lt;T,Symbol&gt; Fires when an item is removed.  ","version":null,"tagName":"h3"},{"title":"OrderChanged​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#OrderChanged","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ObservableSortedList.OrderChanged: Signal Fires when the order could have changed  ","version":null,"tagName":"h3"},{"title":"CountChanged​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#CountChanged","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ObservableSortedList.CountChanged: Signal&lt;number&gt; Fires when the count changes ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#new","content":"&lt;/&gt; ObservableSortedList.new( isReversed: boolean, compare: function ) → ObservableSortedList&lt;T&gt; Constructs a new ObservableSortedList  ","version":null,"tagName":"h3"},{"title":"isObservableSortedList​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#isObservableSortedList","content":"&lt;/&gt; ObservableSortedList.isObservableSortedList(value: any) → boolean Returns whether the value is an observable list  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#Observe","content":"&lt;/&gt; ObservableSortedList.Observe(self: ObservableSortedList&lt;T&gt;) → Observable&lt;{T}&gt; Observes the list, allocating a new list in the process.  ","version":null,"tagName":"h3"},{"title":"iterating over ObservableSortedList​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#__iter","content":"&lt;/&gt; for (T) → ( ( T, nextIndex: any ) → ...any, T? ) in ObservableSortedList do Allows iteration over the observable map  ","version":null,"tagName":"h3"},{"title":"IterateRange​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#IterateRange","content":"&lt;/&gt; ObservableSortedList.IterateRange( self: ObservableSortedList&lt;T&gt;, start: number, finish: number ) → (T) → ( ( T, nextIndex: any ) → ...any, T? ) Iterates over an index range  ","version":null,"tagName":"h3"},{"title":"FindFirstKey​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#FindFirstKey","content":"&lt;/&gt; ObservableSortedList.FindFirstKey( self: ObservableSortedList&lt;T&gt;, content: T ) → Symbol Gets the first node for a given symbol  ","version":null,"tagName":"h3"},{"title":"Contains​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#Contains","content":"&lt;/&gt; ObservableSortedList.Contains( self: ObservableSortedList&lt;T&gt;, content: T ) → boolean Returns true if the value exists  ","version":null,"tagName":"h3"},{"title":"ObserveItemsBrio​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#ObserveItemsBrio","content":"&lt;/&gt; ObservableSortedList.ObserveItemsBrio(self: ObservableSortedList&lt;T&gt;) → Observable&lt;Brio&lt;T,Symbol&gt;&gt; Observes all items in the list  ","version":null,"tagName":"h3"},{"title":"ObserveIndex​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#ObserveIndex","content":"&lt;/&gt; ObservableSortedList.ObserveIndex( self: ObservableSortedList&lt;T&gt;, indexToObserve: number ) → Observable&lt;number&gt; Observes the index as it changes, until the entry at the existing index is removed.  ","version":null,"tagName":"h3"},{"title":"ObserveAtIndex​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#ObserveAtIndex","content":"&lt;/&gt; ObservableSortedList.ObserveAtIndex( self: ObservableSortedList&lt;T&gt;, indexToObserve: number ) → Observable&lt;( T, Key )&gt; Observes the current value at a given index. This can be useful for observing the first entry, or matching stuff up to a given slot.  ","version":null,"tagName":"h3"},{"title":"ObserveIndexByKey​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#ObserveIndexByKey","content":"&lt;/&gt; ObservableSortedList.ObserveIndexByKey( self: ObservableSortedList&lt;T&gt;, node: SortedNode ) → Observable&lt;number&gt; Observes the index as it changes, until the entry at the existing node is removed.  ","version":null,"tagName":"h3"},{"title":"GetIndexByKey​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#GetIndexByKey","content":"&lt;/&gt; ObservableSortedList.GetIndexByKey( self: ObservableSortedList&lt;T&gt;, node: SortedNode ) → number Gets the current index from the node  ","version":null,"tagName":"h3"},{"title":"GetCount​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#GetCount","content":"&lt;/&gt; ObservableSortedList.GetCount(self: ObservableSortedList&lt;T&gt;) → number Gets the count of items in the list  ","version":null,"tagName":"h3"},{"title":"GetList​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#GetList","content":"&lt;/&gt; ObservableSortedList.GetList(self: ObservableSortedList&lt;T&gt;) → {T} Gets a list of all entries.  ","version":null,"tagName":"h3"},{"title":"ObserveCount​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#ObserveCount","content":"&lt;/&gt; ObservableSortedList.ObserveCount(self: ObservableSortedList&lt;T&gt;) → Observable&lt;number&gt; Observes the count of the list  ","version":null,"tagName":"h3"},{"title":"Add​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#Add","content":"&lt;/&gt; ObservableSortedList.Add( self: ObservableSortedList&lt;T&gt;, data: T, observeValue: Observable&lt;Comparable&gt; | Comparable ) → callback-- Call to remove Adds the item to the list at the specified index  ","version":null,"tagName":"h3"},{"title":"Get​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#Get","content":"&lt;/&gt; ObservableSortedList.Get( self: ObservableSortedList&lt;T&gt;, index: number ) → T? Gets the current item at the index, or nil if it is not defined.  ","version":null,"tagName":"h3"},{"title":"RemoveByKey​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#RemoveByKey","content":"&lt;/&gt; ObservableSortedList.RemoveByKey( self: ObservableSortedList&lt;T&gt;, node: SortedNode ) → T Removes the item from the list if it exists.  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"ObservableSortedList","url":"/NevermoreEngine/api/ObservableSortedList#Destroy","content":"&lt;/&gt; ObservableSortedList.Destroy(self: ObservableSortedList&lt;T&gt;) → () Cleans up the ObservableSortedList and sets the metatable to nil. ","version":null,"tagName":"h3"},{"title":"ObservableSubscriptionTable","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ObservableSubscriptionTable","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ObservableSubscriptionTable","url":"/NevermoreEngine/api/ObservableSubscriptionTable#functions","content":" ","version":null,"tagName":"h2"},{"title":"Fire​","type":1,"pageTitle":"ObservableSubscriptionTable","url":"/NevermoreEngine/api/ObservableSubscriptionTable#Fire","content":"&lt;/&gt; ObservableSubscriptionTable.Fire( self: ObservableSubscriptionTable&lt;T...&gt;, key: TKey, ...: TEmit ) → () Fires for the current key the given value  ","version":null,"tagName":"h3"},{"title":"HasSubscriptions​","type":1,"pageTitle":"ObservableSubscriptionTable","url":"/NevermoreEngine/api/ObservableSubscriptionTable#HasSubscriptions","content":"&lt;/&gt; ObservableSubscriptionTable.HasSubscriptions( self: ObservableSubscriptionTable&lt;T...&gt;, key: TKey ) → boolean Returns true if subscription exists  ","version":null,"tagName":"h3"},{"title":"Complete​","type":1,"pageTitle":"ObservableSubscriptionTable","url":"/NevermoreEngine/api/ObservableSubscriptionTable#Complete","content":"&lt;/&gt; ObservableSubscriptionTable.Complete( self: ObservableSubscriptionTable&lt;T...&gt;, key: TKey ) → () Completes the subscription  ","version":null,"tagName":"h3"},{"title":"Fail​","type":1,"pageTitle":"ObservableSubscriptionTable","url":"/NevermoreEngine/api/ObservableSubscriptionTable#Fail","content":"&lt;/&gt; ObservableSubscriptionTable.Fail( self: ObservableSubscriptionTable&lt;T...&gt;, key: TKey ) → () Fails the subscription  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"ObservableSubscriptionTable","url":"/NevermoreEngine/api/ObservableSubscriptionTable#Observe","content":"&lt;/&gt; ObservableSubscriptionTable.Observe( self: ObservableSubscriptionTable&lt;T...&gt;, key: TKey, retrieveInitialValue: callback-- Optional ) → Observable&lt;TEmit&gt; Observes for the key  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"ObservableSubscriptionTable","url":"/NevermoreEngine/api/ObservableSubscriptionTable#Destroy","content":"&lt;/&gt; ObservableSubscriptionTable.Destroy(self: ObservableSubscriptionTable&lt;T...&gt;) → () Completes all subscriptions and removes them from the list. ","version":null,"tagName":"h3"},{"title":"OctreeNode","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/OctreeNode","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"OctreeNode","url":"/NevermoreEngine/api/OctreeNode#functions","content":" ","version":null,"tagName":"h2"},{"title":"KNearestNeighborsSearch​","type":1,"pageTitle":"OctreeNode","url":"/NevermoreEngine/api/OctreeNode#KNearestNeighborsSearch","content":"&lt;/&gt; OctreeNode.KNearestNeighborsSearch( self: OctreeNode&lt;T&gt;, k: number,-- The number to retrieve radius: number-- The radius to search in ) → ( {T},-- Objects found, including self {number}-- Distances squared ) Finds the nearest neighbors to this node within the radius local octree = Octree.new() local node = octree:CreateNode(Vector3.zero, &quot;A&quot;) octree:CreateNode(Vector3.new(0, 0, 5), &quot;B&quot;) print(octree:KNearestNeighborsSearch(10, 100)) --&gt; { &quot;A&quot;, &quot;B&quot; } { 0, 25 }   ","version":null,"tagName":"h3"},{"title":"GetObject​","type":1,"pageTitle":"OctreeNode","url":"/NevermoreEngine/api/OctreeNode#GetObject","content":"&lt;/&gt; OctreeNode.GetObject(self: OctreeNode&lt;T&gt;) → T Returns the object stored in the octree local octree = Octree.new() local node = octree:CreateNode(Vector3.zero, &quot;A&quot;) print(octree:GetObject()) --&gt; &quot;A&quot;   ","version":null,"tagName":"h3"},{"title":"RadiusSearch​","type":1,"pageTitle":"OctreeNode","url":"/NevermoreEngine/api/OctreeNode#RadiusSearch","content":"&lt;/&gt; OctreeNode.RadiusSearch( self: OctreeNode&lt;T&gt;, radius: number-- The radius to search in ) → ( {any},-- Objects found {number}-- Distances squared ) Finds the nearest neighbors to the octree node  ","version":null,"tagName":"h3"},{"title":"GetPosition​","type":1,"pageTitle":"OctreeNode","url":"/NevermoreEngine/api/OctreeNode#GetPosition","content":"&lt;/&gt; OctreeNode.GetPosition(self: OctreeNode&lt;T&gt;) → Vector3?  Retrieves the position  ","version":null,"tagName":"h3"},{"title":"GetRawPosition​","type":1,"pageTitle":"OctreeNode","url":"/NevermoreEngine/api/OctreeNode#GetRawPosition","content":"&lt;/&gt; OctreeNode.GetRawPosition(self: OctreeNode&lt;T&gt;) → ( number,-- px number,-- py number-- pz ) Retrieves the as px, py, pz  ","version":null,"tagName":"h3"},{"title":"SetPosition​","type":1,"pageTitle":"OctreeNode","url":"/NevermoreEngine/api/OctreeNode#SetPosition","content":"&lt;/&gt; OctreeNode.SetPosition( self: OctreeNode&lt;T&gt;, position: Vector3 ) → () Sets the position of the octree nodes and updates the octree accordingly local octree = Octree.new() local node = octree:CreateNode(Vector3.zero, &quot;A&quot;) print(octree:RadiusSearch(Vector3.zero, 100)) --&gt; { &quot;A&quot; } node:SetPosition(Vector3.new(1000, 0, 0)) print(octree:RadiusSearch(Vector3.zero, 100)) --&gt; {}   ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"OctreeNode","url":"/NevermoreEngine/api/OctreeNode#Destroy","content":"&lt;/&gt; OctreeNode.Destroy(self: OctreeNode&lt;T&gt;) → () Removes the OctreeNode from the octree ","version":null,"tagName":"h3"},{"title":"onRenderStepFrame","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/onRenderStepFrame","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"onRenderStepFrame","url":"/NevermoreEngine/api/onRenderStepFrame#functions","content":" ","version":null,"tagName":"h2"},{"title":"onRenderStepFrame​","type":1,"pageTitle":"onRenderStepFrame","url":"/NevermoreEngine/api/onRenderStepFrame#onRenderStepFrame","content":"&lt;/&gt; onRenderStepFrame.onRenderStepFrame(priority: number) → MaidTask Executes code at a specific point in render step priority queue. ","version":null,"tagName":"h3"},{"title":"Octree","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Octree","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Octree","url":"/NevermoreEngine/api/Octree#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Octree","url":"/NevermoreEngine/api/Octree#new","content":"&lt;/&gt; Octree.new() → Octree&lt;T&gt; Constructs a new Octree.  ","version":null,"tagName":"h3"},{"title":"GetAllNodes​","type":1,"pageTitle":"Octree","url":"/NevermoreEngine/api/Octree#GetAllNodes","content":"&lt;/&gt; Octree.GetAllNodes(self: Octree&lt;T&gt;) → {OctreeNode&lt;T&gt;} Returns all octree nodes stored in the octree! local octree = Octree.new() octree:CreateNode(Vector3.zero, &quot;Hi&quot;) octree:CreateNode(Vector3.zero, &quot;Bob&quot;) print(octree:GetAllNodes()) --&gt; { &quot;Hi&quot;, &quot;Bob&quot; } Order is not guaranteed. WARNING If you have 100,000 nodes in your octree, this is going to be very slow.  ","version":null,"tagName":"h3"},{"title":"CreateNode​","type":1,"pageTitle":"Octree","url":"/NevermoreEngine/api/Octree#CreateNode","content":"&lt;/&gt; Octree.CreateNode( self: Octree&lt;T&gt;, position: Vector3 , object: T ) → OctreeNode&lt;T&gt; Creates a new OctreeNode at the given position which can be retrieved TIP Be sure to call :Destroy() on a node if the data becomes stale. Note that this is not necessary if the whole octree is removed from memory. local octree = Octree.new() octree:CreateNode(Vector3.zero, &quot;A&quot;) octree:CreateNode(Vector3.zero, &quot;B&quot;)   ","version":null,"tagName":"h3"},{"title":"RadiusSearch​","type":1,"pageTitle":"Octree","url":"/NevermoreEngine/api/Octree#RadiusSearch","content":"&lt;/&gt; Octree.RadiusSearch( self: Octree&lt;T&gt;, position: Vector3 , radius: number ) → ( {T},-- Objects found {number}-- Distances squared ) Searches at the position and radius for any objects that may be within this radius. local octree = Octree.new() octree:CreateNode(Vector3.zero, &quot;A&quot;) octree:CreateNode(Vector3.zero, &quot;B&quot;) octree:CreateNode(Vector3.new(0, 0, 1000), &quot;C&quot;) print(octree:RadiusSearch(Vector3.zero, 100)) --&gt; { &quot;A&quot;, &quot;B&quot; }   ","version":null,"tagName":"h3"},{"title":"KNearestNeighborsSearch​","type":1,"pageTitle":"Octree","url":"/NevermoreEngine/api/Octree#KNearestNeighborsSearch","content":"&lt;/&gt; Octree.KNearestNeighborsSearch( self: Octree&lt;T&gt;, position: Vector3 , k: number,-- Number of objects to find radius: number ) → ( {any},-- Objects found {number}-- Distances squared ) Searches at the position and radius for any objects that may be within this radius. Returns the knearest entries. The closest entities will be first in the list. ","version":null,"tagName":"h3"},{"title":"OctreeRegionUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/OctreeRegionUtils","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#types","content":" ","version":null,"tagName":"h2"},{"title":"OctreeVector3​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#OctreeVector3","content":"&lt;/&gt; type OctreeVector3 = { [1]: number, [2]: number, [3]: number } A Vector3 equivalent for octrees. This type is primarily internal and used for faster access than a Vector3.  ","version":null,"tagName":"h3"},{"title":"OctreeRegion<T>​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#OctreeRegion<T>","content":"&lt;/&gt; interface OctreeRegion&lt;T&gt; { subRegions: {OctreeRegion&lt;T&gt;} lowerBounds: OctreeVector3 upperBounds: OctreeVector3 position: OctreeVector3 size: OctreeVector3 parent: OctreeRegion&lt;T&gt;? parentIndex: number depth: number nodes: {OctreeNode&lt;T&gt;} node_count: number } An internal region which stores the data. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"visualize​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#visualize","content":"&lt;/&gt; OctreeRegionUtils.visualize(region: OctreeRegion&lt;T&gt;) → MaidTask Visualizes the octree region.  ","version":null,"tagName":"h3"},{"title":"create​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#create","content":"&lt;/&gt; OctreeRegionUtils.create( px: number, py: number, pz: number, sx: number, sy: number, sz: number, parent: OctreeRegion&lt;T&gt;?, parentIndex: number? ) → OctreeRegion&lt;T&gt; Creates a new OctreeRegion  ","version":null,"tagName":"h3"},{"title":"addNode​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#addNode","content":"&lt;/&gt; OctreeRegionUtils.addNode( lowestSubregion: OctreeRegion&lt;T&gt;, node: OctreeNode ) → () Adds a node to the lowest subregion  ","version":null,"tagName":"h3"},{"title":"moveNode​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#moveNode","content":"&lt;/&gt; OctreeRegionUtils.moveNode( fromLowest: OctreeRegion&lt;T&gt;, toLowest: OctreeRegion&lt;T&gt;, node: OctreeNode ) → () Moves a node from one region to another  ","version":null,"tagName":"h3"},{"title":"removeNode​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#removeNode","content":"&lt;/&gt; OctreeRegionUtils.removeNode( lowestSubregion: OctreeRegion&lt;T&gt;, node: OctreeNode ) → () Removes a node from the given region  ","version":null,"tagName":"h3"},{"title":"getSearchRadiusSquared​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#getSearchRadiusSquared","content":"&lt;/&gt; OctreeRegionUtils.getSearchRadiusSquared( radius: number, diameter: number, epsilon: number ) → number Retrieves the search radius for a given radius given the region diameter  ","version":null,"tagName":"h3"},{"title":"getNeighborsWithinRadius​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#getNeighborsWithinRadius","content":"&lt;/&gt; OctreeRegionUtils.getNeighborsWithinRadius( region: OctreeRegion&lt;T&gt;, radius: number, px: number, py: number, pz: number, objectsFound: {T}, nodeDistances2: {number}, maxDepth: number ) → () Adds all octree nod values to objectsFound See basic algorithm:https://github.com/PointCloudLibrary/pcl/blob/29f192af57a3e7bdde6ff490669b211d8148378f/octree/include/pcl/octree/impl/octree_search.hpp#L309  ","version":null,"tagName":"h3"},{"title":"getOrCreateSubRegionAtDepth​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#getOrCreateSubRegionAtDepth","content":"&lt;/&gt; OctreeRegionUtils.getOrCreateSubRegionAtDepth( region: OctreeRegion&lt;T&gt;,-- Top level region px: number, py: number, pz: number, maxDepth: number ) → OctreeRegion&lt;T&gt; Recursively ensures that a subregion exists at a given depth, and returns that region for usage.  ","version":null,"tagName":"h3"},{"title":"createSubRegion​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#createSubRegion","content":"&lt;/&gt; OctreeRegionUtils.createSubRegion( parentRegion: OctreeRegion&lt;T&gt;, parentIndex: number ) → OctreeRegion&lt;T&gt; Creates a subregion for an octree.  ","version":null,"tagName":"h3"},{"title":"inRegionBounds​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#inRegionBounds","content":"&lt;/&gt; OctreeRegionUtils.inRegionBounds( region: OctreeRegion&lt;T&gt;, px: number, py: number, pz: number ) → boolean Computes whether a region is in bounds. Consider regions to be range [px, y).  ","version":null,"tagName":"h3"},{"title":"getSubRegionIndex​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#getSubRegionIndex","content":"&lt;/&gt; OctreeRegionUtils.getSubRegionIndex( region: OctreeRegion&lt;T&gt;, px: number, py: number, pz: number ) → number Gets a subregion's internal index.  ","version":null,"tagName":"h3"},{"title":"getTopLevelRegionHash​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#getTopLevelRegionHash","content":"&lt;/&gt; OctreeRegionUtils.getTopLevelRegionHash( cx: number, cy: number, cz: number ) → number This definitely collides fairly consistently See: https://stackoverflow.com/questions/5928725/hashing-2d-3d-and-nd-vectors  ","version":null,"tagName":"h3"},{"title":"getTopLevelRegionCellIndex​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#getTopLevelRegionCellIndex","content":"&lt;/&gt; OctreeRegionUtils.getTopLevelRegionCellIndex( maxRegionSize: OctreeVector3, px: number, py: number, pz: number ) → ( number,-- rpx number,-- rpy number-- rpz ) Computes the index for a top level cell given a position  ","version":null,"tagName":"h3"},{"title":"getTopLevelRegionPosition​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#getTopLevelRegionPosition","content":"&lt;/&gt; OctreeRegionUtils.getTopLevelRegionPosition( maxRegionSize: OctreeVector3, cx: number, cy: number, cz: number ) → ( number, number, number ) Computes a top-level region's position  ","version":null,"tagName":"h3"},{"title":"areEqualTopRegions​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#areEqualTopRegions","content":"&lt;/&gt; OctreeRegionUtils.areEqualTopRegions( region: OctreeRegion&lt;T&gt;, rpx: number, rpy: number, rpz: number ) → boolean Given a top-level region, returns if the region position are equal to this region  ","version":null,"tagName":"h3"},{"title":"findRegion​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#findRegion","content":"&lt;/&gt; OctreeRegionUtils.findRegion( regionHashMap: {[number]: {OctreeRegion&lt;T&gt;}}, maxRegionSize: OctreeVector3, px: number, py: number, pz: number ) → OctreeRegion3? Given a world space position, finds the current region in the hashmap  ","version":null,"tagName":"h3"},{"title":"getOrCreateRegion​","type":1,"pageTitle":"OctreeRegionUtils","url":"/NevermoreEngine/api/OctreeRegionUtils#getOrCreateRegion","content":"&lt;/&gt; OctreeRegionUtils.getOrCreateRegion( regionHashMap: {[number]: {OctreeRegion&lt;T&gt;}}, maxRegionSize: OctreeVector3, px: number, py: number, pz: number ) → OctreeRegion&lt;T&gt; Gets the current region for a position, or creates a new one. ","version":null,"tagName":"h3"},{"title":"onSteppedFrame","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/onSteppedFrame","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"onSteppedFrame","url":"/NevermoreEngine/api/onSteppedFrame#functions","content":" ","version":null,"tagName":"h2"},{"title":"onSteppedFrame​","type":1,"pageTitle":"onSteppedFrame","url":"/NevermoreEngine/api/onSteppedFrame#onSteppedFrame","content":"&lt;/&gt; onSteppedFrame.onSteppedFrame(func: function) → RBXScriptConnection  Executes code at a specific point in Roblox's engine. ","version":null,"tagName":"h3"},{"title":"optional","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/optional","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"optional","url":"/NevermoreEngine/api/optional#functions","content":" ","version":null,"tagName":"h2"},{"title":"optional​","type":1,"pageTitle":"optional","url":"/NevermoreEngine/api/optional#optional","content":"&lt;/&gt; optional.optional( _require: function, _module: string | number | Instance ) → T? Optional require, if the instance does not exist, or errors while loading, then nil is returned. ","version":null,"tagName":"h3"},{"title":"OrthogonalUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/OrthogonalUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"OrthogonalUtils","url":"/NevermoreEngine/api/OrthogonalUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"decomposeCFrameToVectors​","type":1,"pageTitle":"OrthogonalUtils","url":"/NevermoreEngine/api/OrthogonalUtils#decomposeCFrameToVectors","content":"&lt;/&gt; OrthogonalUtils.decomposeCFrameToVectors(cframe: CFrame ) → {Vector3 } Decompose the CFrame return { Vector3 }  ","version":null,"tagName":"h3"},{"title":"getClosestVector​","type":1,"pageTitle":"OrthogonalUtils","url":"/NevermoreEngine/api/OrthogonalUtils#getClosestVector","content":"&lt;/&gt; OrthogonalUtils.getClosestVector( options: {Vector3 },-- normals unitVector: Vector3 ) → Vector3?  Gets the closest vectors to another vector. return Vector3?  ","version":null,"tagName":"h3"},{"title":"snapCFrameTo​","type":1,"pageTitle":"OrthogonalUtils","url":"/NevermoreEngine/api/OrthogonalUtils#snapCFrameTo","content":"&lt;/&gt; OrthogonalUtils.snapCFrameTo( cframe: CFrame , snapToCFrame: CFrame ) → CFrame  Snaps a CFrame to another one return CFrame ","version":null,"tagName":"h3"},{"title":"OverriddenProperty","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/OverriddenProperty","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"OverriddenProperty","url":"/NevermoreEngine/api/OverriddenProperty#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"OverriddenProperty","url":"/NevermoreEngine/api/OverriddenProperty#new","content":"&lt;/&gt; OverriddenProperty.new( robloxInstance: Instance , propertyName: string, replicateRate: number?,-- Optional replication rate and callback replicateCallback: (T)? ) → OverriddenProperty Constructs a new OverriddenProperty.  ","version":null,"tagName":"h3"},{"title":"Set​","type":1,"pageTitle":"OverriddenProperty","url":"/NevermoreEngine/api/OverriddenProperty#Set","content":"&lt;/&gt; OverriddenProperty:Set(value: T) → () Sets the property  ","version":null,"tagName":"h3"},{"title":"Get​","type":1,"pageTitle":"OverriddenProperty","url":"/NevermoreEngine/api/OverriddenProperty#Get","content":"&lt;/&gt; OverriddenProperty:Get() → T Gets the property ","version":null,"tagName":"h3"},{"title":"OverrideDefaultCameraToo","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/OverrideDefaultCameraToo","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"OverrideDefaultCameraToo","url":"/NevermoreEngine/api/OverrideDefaultCameraToo#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"OverrideDefaultCameraToo","url":"/NevermoreEngine/api/OverrideDefaultCameraToo#new","content":"&lt;/&gt; OverrideDefaultCameraToo.new( baseCamera: Camera , defaultCamera: DefaultCamera, predicate: Filteronwhethertooverrideornot ) → OverrideDefaultCameraToo Initializes a new OverrideDefaultCameraToo ","version":null,"tagName":"h3"},{"title":"PackageTracker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PackageTracker","content":"PackageTracker For each package, track subdependent packages and packages","keywords":"","version":null},{"title":"PackageTrackerProvider","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PackageTrackerProvider","content":"PackageTrackerProvider","keywords":"","version":null},{"title":"PagesProxy","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PagesProxy","content":"PagesProxy Proxy pages and cache the results to allow for reuse","keywords":"","version":null},{"title":"PagesUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PagesUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PagesUtils","url":"/NevermoreEngine/api/PagesUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseAdvanceToNextPage​","type":1,"pageTitle":"PagesUtils","url":"/NevermoreEngine/api/PagesUtils#promiseAdvanceToNextPage","content":"&lt;/&gt; PagesUtils.promiseAdvanceToNextPage(pages: Pages ) → {any} Wraps Pages.AdvanceToNextPagesAsync and returns the current content of the advancement. ","version":null,"tagName":"h3"},{"title":"PagesDatabase","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PagesDatabase","content":"PagesDatabase","keywords":"","version":null},{"title":"ParticleEmitterUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ParticleEmitterUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ParticleEmitterUtils","url":"/NevermoreEngine/api/ParticleEmitterUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"scaleSize​","type":1,"pageTitle":"ParticleEmitterUtils","url":"/NevermoreEngine/api/ParticleEmitterUtils#scaleSize","content":"&lt;/&gt; ParticleEmitterUtils.scaleSize( adornee: Instance , scale: number ) → () Scales the size of the particle emitter to a specified size  ","version":null,"tagName":"h3"},{"title":"playFromTemplate​","type":1,"pageTitle":"ParticleEmitterUtils","url":"/NevermoreEngine/api/ParticleEmitterUtils#playFromTemplate","content":"&lt;/&gt; ParticleEmitterUtils.playFromTemplate( template: Instance , attachment: Attachment ) → Maid Playes a particle emitter from a template in the parent  ","version":null,"tagName":"h3"},{"title":"getParticleEmitters​","type":1,"pageTitle":"ParticleEmitterUtils","url":"/NevermoreEngine/api/ParticleEmitterUtils#getParticleEmitters","content":"&lt;/&gt; ParticleEmitterUtils.getParticleEmitters(adornee: Instance ) → {ParticleEmitter } Retrieves particle emitters for the given adornee ","version":null,"tagName":"h3"},{"title":"ParticleEngineClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ParticleEngineClient","content":"ParticleEngineClient This item only works when running on the client. Client Legacy code written by AxisAngles to simulate particles with Guis","keywords":"","version":null},{"title":"ParticleEngineConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ParticleEngineConstants","content":"ParticleEngineConstants","keywords":"","version":null},{"title":"ParticlePlayer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ParticlePlayer","content":"ParticlePlayer This was deprecated in 2.2.2 This item is deprecated. Do not use it for new work. Plays particle effects for players","keywords":"","version":null},{"title":"ParticleEngineServer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ParticleEngineServer","content":"ParticleEngineServer This item only works when running on the server. Server Handles replication on the server side","keywords":"","version":null},{"title":"PartTouchingCalculator","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PartTouchingCalculator","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PartTouchingCalculator","url":"/NevermoreEngine/api/PartTouchingCalculator#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"PartTouchingCalculator","url":"/NevermoreEngine/api/PartTouchingCalculator#new","content":"&lt;/&gt; PartTouchingCalculator.new() → () Constructs a new PartTouchingCalculator  ","version":null,"tagName":"h3"},{"title":"GetTouching​","type":1,"pageTitle":"PartTouchingCalculator","url":"/NevermoreEngine/api/PartTouchingCalculator#GetTouching","content":"&lt;/&gt; PartTouchingCalculator:GetTouching( basePart: BasePart ,-- item to identify touching. Geometry matters padding: number-- studs of padding around the part ) → {BasePart } Retrieves parts touching a base part ","version":null,"tagName":"h3"},{"title":"PartTouchingRenderer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PartTouchingRenderer","content":"PartTouchingRenderer Renders touching parts from the PartTouchingCalculator","keywords":"","version":null},{"title":"PathfindingUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PathfindingUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PathfindingUtils","url":"/NevermoreEngine/api/PathfindingUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseComputeAsync​","type":1,"pageTitle":"PathfindingUtils","url":"/NevermoreEngine/api/PathfindingUtils#promiseComputeAsync","content":"&lt;/&gt; PathfindingUtils.promiseComputeAsync( path: Path , start: Vector3 , finish: Vector3 ) → Promise&lt;Path &gt; Computes a path wrapped in a promise.  ","version":null,"tagName":"h3"},{"title":"promiseCheckOcclusion​","type":1,"pageTitle":"PathfindingUtils","url":"/NevermoreEngine/api/PathfindingUtils#promiseCheckOcclusion","content":"&lt;/&gt; PathfindingUtils.promiseCheckOcclusion( path: Path , startIndex: number ) → Promise&lt;number&gt; Checks occlusion wrapped in a promise  ","version":null,"tagName":"h3"},{"title":"visualizePath​","type":1,"pageTitle":"PathfindingUtils","url":"/NevermoreEngine/api/PathfindingUtils#visualizePath","content":"&lt;/&gt; PathfindingUtils.visualizePath(path: Path ) → MaidTask Visualizes the current waypoints in the path. Will put the visualization in Draw libraries default parent. ","version":null,"tagName":"h3"},{"title":"PendingPromiseTracker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PendingPromiseTracker","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PendingPromiseTracker","url":"/NevermoreEngine/api/PendingPromiseTracker#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"PendingPromiseTracker","url":"/NevermoreEngine/api/PendingPromiseTracker#new","content":"&lt;/&gt; PendingPromiseTracker.new() → PendingPromiseTracker&lt;T&gt; Returns a new pending promise tracker  ","version":null,"tagName":"h3"},{"title":"Add​","type":1,"pageTitle":"PendingPromiseTracker","url":"/NevermoreEngine/api/PendingPromiseTracker#Add","content":"&lt;/&gt; PendingPromiseTracker.Add( self: PendingPromiseTracker&lt;T...&gt;, promise: Promise.Promise&lt;T...&gt; ) → () Adds a new promise to the tracker. If it's not pending it will not add.  ","version":null,"tagName":"h3"},{"title":"GetAll​","type":1,"pageTitle":"PendingPromiseTracker","url":"/NevermoreEngine/api/PendingPromiseTracker#GetAll","content":"&lt;/&gt; PendingPromiseTracker.GetAll(self: PendingPromiseTracker&lt;T...&gt;) → {Promise.Promise&lt;T...&gt;} Gets all of the promises that are pending ","version":null,"tagName":"h3"},{"title":"PerformanceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PerformanceUtils","content":"PerformanceUtils","keywords":"","version":null},{"title":"PermissionLevel","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PermissionLevel","content":"PermissionLevel","keywords":"","version":null},{"title":"PermissionLevelUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PermissionLevelUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PermissionLevelUtils","url":"/NevermoreEngine/api/PermissionLevelUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"isPermissionLevel​","type":1,"pageTitle":"PermissionLevelUtils","url":"/NevermoreEngine/api/PermissionLevelUtils#isPermissionLevel","content":"&lt;/&gt; PermissionLevelUtils.isPermissionLevel(permissionLevel: any) → boolean Returns true if a permission level ","version":null,"tagName":"h3"},{"title":"PermissionProviderConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PermissionProviderConstants","content":"PermissionProviderConstants Constants for the permission system","keywords":"","version":null},{"title":"PermissionProviderClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PermissionProviderClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PermissionProviderClient","url":"/NevermoreEngine/api/PermissionProviderClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"PromiseIsAdmin​","type":1,"pageTitle":"PermissionProviderClient","url":"/NevermoreEngine/api/PermissionProviderClient#PromiseIsAdmin","content":"&lt;/&gt; PermissionProviderClient.PromiseIsAdmin( self: PermissionProviderClient, player: Player | nil ) → Promise&lt;boolean&gt; Returns whether the local player is an admin. ","version":null,"tagName":"h3"},{"title":"PermissionProviderUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PermissionProviderUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PermissionProviderUtils","url":"/NevermoreEngine/api/PermissionProviderUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"createGroupRankConfig​","type":1,"pageTitle":"PermissionProviderUtils","url":"/NevermoreEngine/api/PermissionProviderUtils#createGroupRankConfig","content":"&lt;/&gt; PermissionProviderUtils.createGroupRankConfig(config: { groupId: number, minAdminRequiredRank: number, minCreatorRequiredRank: number }) → table Creates a group rank config  ","version":null,"tagName":"h3"},{"title":"createSingleUserConfig​","type":1,"pageTitle":"PermissionProviderUtils","url":"/NevermoreEngine/api/PermissionProviderUtils#createSingleUserConfig","content":"&lt;/&gt; PermissionProviderUtils.createSingleUserConfig(config: {userId: number}) → table Creates a single user config  ","version":null,"tagName":"h3"},{"title":"createConfigFromGame​","type":1,"pageTitle":"PermissionProviderUtils","url":"/NevermoreEngine/api/PermissionProviderUtils#createConfigFromGame","content":"&lt;/&gt; PermissionProviderUtils.createConfigFromGame() → table Creates an automatic configuration from the game. ","version":null,"tagName":"h3"},{"title":"PermissionServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PermissionServiceClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PermissionServiceClient","url":"/NevermoreEngine/api/PermissionServiceClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"PermissionServiceClient","url":"/NevermoreEngine/api/PermissionServiceClient#Init","content":"&lt;/&gt; PermissionServiceClient:Init(serviceBag: ServiceBag) → () Initializes the permission service on the client. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"PromiseIsAdmin​","type":1,"pageTitle":"PermissionServiceClient","url":"/NevermoreEngine/api/PermissionServiceClient#PromiseIsAdmin","content":"&lt;/&gt; PermissionServiceClient:PromiseIsAdmin(player: Player | nil) → Promise&lt;boolean&gt; Returns whether the player is an admin.  ","version":null,"tagName":"h3"},{"title":"PromisePermissionProvider​","type":1,"pageTitle":"PermissionServiceClient","url":"/NevermoreEngine/api/PermissionServiceClient#PromisePermissionProvider","content":"&lt;/&gt; PermissionServiceClient:PromisePermissionProvider() → Promise&lt;PermissionProviderClient&gt; Returns the permission provider ","version":null,"tagName":"h3"},{"title":"PermissionService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PermissionService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PermissionService","url":"/NevermoreEngine/api/PermissionService#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"PermissionService","url":"/NevermoreEngine/api/PermissionService#Init","content":"&lt;/&gt; PermissionService.Init( self: PermissionService, _serviceBag: ServiceBag ) → () Initializes the service. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"SetProviderFromConfig​","type":1,"pageTitle":"PermissionService","url":"/NevermoreEngine/api/PermissionService#SetProviderFromConfig","content":"&lt;/&gt; PermissionService.SetProviderFromConfig( self: PermissionService, config: {type: string} ) → () Sets the provider from a config. See PermissionProviderUtils.createGroupRankConfig and PermissionProviderUtils.createSingleUserConfig.  ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"PermissionService","url":"/NevermoreEngine/api/PermissionService#Start","content":"&lt;/&gt; PermissionService.Start(self: PermissionService) → () Starts the permission service. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"PromisePermissionProvider​","type":1,"pageTitle":"PermissionService","url":"/NevermoreEngine/api/PermissionService#PromisePermissionProvider","content":"&lt;/&gt; PermissionService.PromisePermissionProvider(self: PermissionService) → Promise&lt;BasePermissionProvider&gt; Returns the permission provider  ","version":null,"tagName":"h3"},{"title":"PromiseIsAdmin​","type":1,"pageTitle":"PermissionService","url":"/NevermoreEngine/api/PermissionService#PromiseIsAdmin","content":"&lt;/&gt; PermissionService.PromiseIsAdmin( self: PermissionService, player: Player ) → Promise&lt;boolean&gt; Returns whether the player is an admin.  ","version":null,"tagName":"h3"},{"title":"PromiseIsCreator​","type":1,"pageTitle":"PermissionService","url":"/NevermoreEngine/api/PermissionService#PromiseIsCreator","content":"&lt;/&gt; PermissionService.PromiseIsCreator( self: PermissionService, player: Player ) → Promise&lt;boolean&gt; Returns whether the player is a creator.  ","version":null,"tagName":"h3"},{"title":"PromiseIsPermissionLevel​","type":1,"pageTitle":"PermissionService","url":"/NevermoreEngine/api/PermissionService#PromiseIsPermissionLevel","content":"&lt;/&gt; PermissionService.PromiseIsPermissionLevel( self: PermissionService, player: Player , permissionLevel: PermissionLevel ) → Promise&lt;boolean&gt; Returns whether the player is a creator.  ","version":null,"tagName":"h3"},{"title":"ObservePermissionedPlayersBrio​","type":1,"pageTitle":"PermissionService","url":"/NevermoreEngine/api/PermissionService#ObservePermissionedPlayersBrio","content":"&lt;/&gt; PermissionService.ObservePermissionedPlayersBrio( self: PermissionService, permissionLevel: PermissionLevel ) → Observable&lt;Brio&lt;Player &gt;&gt; Observe all creators in the game ","version":null,"tagName":"h3"},{"title":"PhysicsUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PhysicsUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PhysicsUtils","url":"/NevermoreEngine/api/PhysicsUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getConnectedParts​","type":1,"pageTitle":"PhysicsUtils","url":"/NevermoreEngine/api/PhysicsUtils#getConnectedParts","content":"&lt;/&gt; PhysicsUtils.getConnectedParts(part: BasePart ) → {BasePart } Retrieves all connected parts of a part, plus the connected part.  ","version":null,"tagName":"h3"},{"title":"getMass​","type":1,"pageTitle":"PhysicsUtils","url":"/NevermoreEngine/api/PhysicsUtils#getMass","content":"&lt;/&gt; PhysicsUtils.getMass(parts: {BasePart }) → number Retrieves mass of all parts  ","version":null,"tagName":"h3"},{"title":"estimateBuoyancyContribution​","type":1,"pageTitle":"PhysicsUtils","url":"/NevermoreEngine/api/PhysicsUtils#estimateBuoyancyContribution","content":"&lt;/&gt; PhysicsUtils.estimateBuoyancyContribution(parts: {BasePart }) → ( number,-- buoyancy number,-- mass number-- volume ) Estimate buoyancy contributed by parts  ","version":null,"tagName":"h3"},{"title":"getCenterOfMass​","type":1,"pageTitle":"PhysicsUtils","url":"/NevermoreEngine/api/PhysicsUtils#getCenterOfMass","content":"&lt;/&gt; PhysicsUtils.getCenterOfMass(parts: {BasePart }) → ( Vector3 ,-- position number-- mass ) Return's the world vector center of mass.  ","version":null,"tagName":"h3"},{"title":"momentOfInertia​","type":1,"pageTitle":"PhysicsUtils","url":"/NevermoreEngine/api/PhysicsUtils#momentOfInertia","content":"&lt;/&gt; PhysicsUtils.momentOfInertia( part: BasePart , axis: Vector3 , origin: Vector3 ) → number Calculates the moment of inertia of a solid cuboid. WARNING This is wrong for Roblox. Roblox has hollow cuvoids as parts  ","version":null,"tagName":"h3"},{"title":"bodyMomentOfInertia​","type":1,"pageTitle":"PhysicsUtils","url":"/NevermoreEngine/api/PhysicsUtils#bodyMomentOfInertia","content":"&lt;/&gt; PhysicsUtils.bodyMomentOfInertia( parts: Thepartstouse, axis: theaxistouse( Shouldbetorque, oroffsetcrossforce ), origin: Theoriginoftheaxis(shouldbecenterofmassoftheparts) ) → number Given a connected body of parts, returns the moment of inertia of these parts  ","version":null,"tagName":"h3"},{"title":"applyForce​","type":1,"pageTitle":"PhysicsUtils","url":"/NevermoreEngine/api/PhysicsUtils#applyForce","content":"&lt;/&gt; PhysicsUtils.applyForce( part: BasePart , force: Vector3 ,-- the force vector to apply forcePosition: Vector3 -- The position that the force is to be applied from (World vector). ) → () Applies a force to a Roblox body. TIP Roblox has :ApplyImpulse now as an API surface, so I recommend using that instead. It should be noted that setting the velocity to one part of a connected part on Roblox sets the velocity of the whole physics model.http://xboxforums.create.msdn.com/forums/p/34179/196459.aspx http://www.cs.cmu.edu/~baraff/sigcourse/notesd1.pdf  ","version":null,"tagName":"h3"},{"title":"acceleratePart​","type":1,"pageTitle":"PhysicsUtils","url":"/NevermoreEngine/api/PhysicsUtils#acceleratePart","content":"&lt;/&gt; PhysicsUtils.acceleratePart( part: BasePart , emittingPart: BasePart , acceleration: Vector3 ) → () Accelerates a part utilizing newton's laws. emittingPart is the part it's emitted from. force = mass * acceleration ","version":null,"tagName":"h3"},{"title":"PillBackingUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PillBackingUtils","content":"PillBackingUtils Utilities for working with pill backings","keywords":"","version":null},{"title":"PlaneUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlaneUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlaneUtils","url":"/NevermoreEngine/api/PlaneUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"rayIntersection​","type":1,"pageTitle":"PlaneUtils","url":"/NevermoreEngine/api/PlaneUtils#rayIntersection","content":"&lt;/&gt; PlaneUtils.rayIntersection( origin: Vector3 , normal: Vector3 , rayOrigin: Vector3 , unitRayDirection: Vector3 ) → ( Vector3? ,-- Intersection point number?-- Distance to intersection point ) Finds the intersection between planes and rays. https://wiki.roblox.com/index.php?title=User:EgoMoose/Articles/Silhouettes_and_shadows#Ray_plane_intersection Originally from EgoMoose ","version":null,"tagName":"h3"},{"title":"PillBackingBuilder","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PillBackingBuilder","content":"PillBackingBuilder Builds a pill backing for Guis","keywords":"","version":null},{"title":"PlayerAssetMarketTrackerInterface","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerAssetMarketTrackerInterface","content":"PlayerAssetMarketTrackerInterface","keywords":"","version":null},{"title":"PlayerAssetMarketTracker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerAssetMarketTracker","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayerAssetMarketTracker","url":"/NevermoreEngine/api/PlayerAssetMarketTracker#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"PlayerAssetMarketTracker","url":"/NevermoreEngine/api/PlayerAssetMarketTracker#new","content":"&lt;/&gt; PlayerAssetMarketTracker.new( assetType: GameConfigAssetTypes, convertIds: function, observeIdsBrio: function ) → PlayerAssetMarketTracker Constructs a new market tracker. Generally you should not need to use this directly.  ","version":null,"tagName":"h3"},{"title":"ObservePromptOpenCount​","type":1,"pageTitle":"PlayerAssetMarketTracker","url":"/NevermoreEngine/api/PlayerAssetMarketTracker#ObservePromptOpenCount","content":"&lt;/&gt; PlayerAssetMarketTracker:ObservePromptOpenCount() → Observable&lt;number&gt; Observes the number of prompts open  ","version":null,"tagName":"h3"},{"title":"ObserveAssetPurchased​","type":1,"pageTitle":"PlayerAssetMarketTracker","url":"/NevermoreEngine/api/PlayerAssetMarketTracker#ObserveAssetPurchased","content":"&lt;/&gt; PlayerAssetMarketTracker:ObserveAssetPurchased(idOrKey: string | number) → Observable&lt;()&gt; Observes an asset purchased  ","version":null,"tagName":"h3"},{"title":"GetOwnershipTracker​","type":1,"pageTitle":"PlayerAssetMarketTracker","url":"/NevermoreEngine/api/PlayerAssetMarketTracker#GetOwnershipTracker","content":"&lt;/&gt; PlayerAssetMarketTracker:GetOwnershipTracker() → GetOwnershipTracker Gets the ownership tracker assigned to this tracker  ","version":null,"tagName":"h3"},{"title":"PromisePromptPurchase​","type":1,"pageTitle":"PlayerAssetMarketTracker","url":"/NevermoreEngine/api/PlayerAssetMarketTracker#PromisePromptPurchase","content":"&lt;/&gt; PlayerAssetMarketTracker:PromisePromptPurchase(idOrKey: number | string) → Promise&lt;boolean&gt; Prompts the player to purchase a the asset and returns a tracking promise which will resolve with the purchase state  ","version":null,"tagName":"h3"},{"title":"SetOwnershipTracker​","type":1,"pageTitle":"PlayerAssetMarketTracker","url":"/NevermoreEngine/api/PlayerAssetMarketTracker#SetOwnershipTracker","content":"&lt;/&gt; PlayerAssetMarketTracker:SetOwnershipTracker(ownershipTracker: PlayerAssetOwnershipTracker) → () Sets the ownership tracker for this asset tracker  ","version":null,"tagName":"h3"},{"title":"GetAssetType​","type":1,"pageTitle":"PlayerAssetMarketTracker","url":"/NevermoreEngine/api/PlayerAssetMarketTracker#GetAssetType","content":"&lt;/&gt; PlayerAssetMarketTracker:GetAssetType() → GameConfigAssetTypes Gets the current asset type  ","version":null,"tagName":"h3"},{"title":"HasPurchasedThisSession​","type":1,"pageTitle":"PlayerAssetMarketTracker","url":"/NevermoreEngine/api/PlayerAssetMarketTracker#HasPurchasedThisSession","content":"&lt;/&gt; PlayerAssetMarketTracker:HasPurchasedThisSession(idOrKey: string | number) → boolean Returns true if item has been purchased this session  ","version":null,"tagName":"h3"},{"title":"IsPromptOpen​","type":1,"pageTitle":"PlayerAssetMarketTracker","url":"/NevermoreEngine/api/PlayerAssetMarketTracker#IsPromptOpen","content":"&lt;/&gt; PlayerAssetMarketTracker:IsPromptOpen() → boolean Returns true if a prompt is open for the asset  ","version":null,"tagName":"h3"},{"title":"HandlePurchaseEvent​","type":1,"pageTitle":"PlayerAssetMarketTracker","url":"/NevermoreEngine/api/PlayerAssetMarketTracker#HandlePurchaseEvent","content":"&lt;/&gt; PlayerAssetMarketTracker:HandlePurchaseEvent( id: number, isPurchased: boolean ) → () Handles a purchasing event resolving any promises as needed  ","version":null,"tagName":"h3"},{"title":"HandlePromptClosedEvent​","type":1,"pageTitle":"PlayerAssetMarketTracker","url":"/NevermoreEngine/api/PlayerAssetMarketTracker#HandlePromptClosedEvent","content":"&lt;/&gt; PlayerAssetMarketTracker:HandlePromptClosedEvent(id: number) → () Handles the prompt closed ","version":null,"tagName":"h3"},{"title":"PlayerAssetOwnershipTracker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerAssetOwnershipTracker","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayerAssetOwnershipTracker","url":"/NevermoreEngine/api/PlayerAssetOwnershipTracker#functions","content":" ","version":null,"tagName":"h2"},{"title":"SetQueryOwnershipCallback​","type":1,"pageTitle":"PlayerAssetOwnershipTracker","url":"/NevermoreEngine/api/PlayerAssetOwnershipTracker#SetQueryOwnershipCallback","content":"&lt;/&gt; PlayerAssetOwnershipTracker:SetQueryOwnershipCallback(promiseOwnsAsset: function) → () Sets the callback which will query ownership  ","version":null,"tagName":"h3"},{"title":"SetOwnership​","type":1,"pageTitle":"PlayerAssetOwnershipTracker","url":"/NevermoreEngine/api/PlayerAssetOwnershipTracker#SetOwnership","content":"&lt;/&gt; PlayerAssetOwnershipTracker:SetOwnership( idOrKey: number, ownsAsset: boolean ) → () Sets the players ownership of a the asset  ","version":null,"tagName":"h3"},{"title":"PromiseOwnsAsset​","type":1,"pageTitle":"PlayerAssetOwnershipTracker","url":"/NevermoreEngine/api/PlayerAssetOwnershipTracker#PromiseOwnsAsset","content":"&lt;/&gt; PlayerAssetOwnershipTracker:PromiseOwnsAsset(idOrKey: string | number) → Promise&lt;boolean&gt; Promises true if the user owns the asset and false otherwise  ","version":null,"tagName":"h3"},{"title":"ObserveOwnsAsset​","type":1,"pageTitle":"PlayerAssetOwnershipTracker","url":"/NevermoreEngine/api/PlayerAssetOwnershipTracker#ObserveOwnsAsset","content":"&lt;/&gt; PlayerAssetOwnershipTracker:ObserveOwnsAsset(idOrKey: number | number) → Observable&lt;boolean&gt; Observes whether the player owns the asset or not ","version":null,"tagName":"h3"},{"title":"PlayerBinder","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerBinder","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayerBinder","url":"/NevermoreEngine/api/PlayerBinder#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"PlayerBinder","url":"/NevermoreEngine/api/PlayerBinder#new","content":"&lt;/&gt; PlayerBinder.new( tag: string, class: BinderContructor, ...: any ) → PlayerBinder&lt;T&gt; Returns a new PlayerBinder  ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"PlayerBinder","url":"/NevermoreEngine/api/PlayerBinder#Start","content":"&lt;/&gt; PlayerBinder:Start() → () Starts the binder. See Binder.Start. Should be done via a ServiceBag. ","version":null,"tagName":"h3"},{"title":"PlayerCharacterBinder","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerCharacterBinder","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayerCharacterBinder","url":"/NevermoreEngine/api/PlayerCharacterBinder#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"PlayerCharacterBinder","url":"/NevermoreEngine/api/PlayerCharacterBinder#new","content":"&lt;/&gt; PlayerCharacterBinder.new( tag: string, class: BinderContructor, ...: any ) → PlayerCharacterBinder&lt;T&gt; Returns a new PlayerCharacterBinder  ","version":null,"tagName":"h3"},{"title":"Init​","type":1,"pageTitle":"PlayerCharacterBinder","url":"/NevermoreEngine/api/PlayerCharacterBinder#Init","content":"&lt;/&gt; PlayerCharacterBinder:Init(...: any) → () Inits the binder. See Binder.Init. Should be done via a ServiceBag.  ","version":null,"tagName":"h3"},{"title":"SetAutomaticTagging​","type":1,"pageTitle":"PlayerCharacterBinder","url":"/NevermoreEngine/api/PlayerCharacterBinder#SetAutomaticTagging","content":"&lt;/&gt; PlayerCharacterBinder:SetAutomaticTagging(shouldTag: boolean) → () Sets whether tagging should be enabled  ","version":null,"tagName":"h3"},{"title":"ObserveAutomaticTagging​","type":1,"pageTitle":"PlayerCharacterBinder","url":"/NevermoreEngine/api/PlayerCharacterBinder#ObserveAutomaticTagging","content":"&lt;/&gt; PlayerCharacterBinder:ObserveAutomaticTagging() → Observable&lt;boolean&gt;   ","version":null,"tagName":"h3"},{"title":"ObserveAutomaticTaggingBrio​","type":1,"pageTitle":"PlayerCharacterBinder","url":"/NevermoreEngine/api/PlayerCharacterBinder#ObserveAutomaticTaggingBrio","content":"&lt;/&gt; PlayerCharacterBinder:ObserveAutomaticTaggingBrio( predicate: function-- Optional predicate ) → Observable&lt;Brio&lt;boolean&gt;&gt;   ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"PlayerCharacterBinder","url":"/NevermoreEngine/api/PlayerCharacterBinder#Start","content":"&lt;/&gt; PlayerCharacterBinder:Start() → () Starts the binder. See Binder.Start. Should be done via a ServiceBag. ","version":null,"tagName":"h3"},{"title":"PlayerDataStoreManager","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerDataStoreManager","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayerDataStoreManager","url":"/NevermoreEngine/api/PlayerDataStoreManager#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"PlayerDataStoreManager","url":"/NevermoreEngine/api/PlayerDataStoreManager#new","content":"&lt;/&gt; PlayerDataStoreManager.new( robloxDataStore: DataStore, keyGenerator: (player) → string,-- Function that takes in a player, and outputs a key skipBindingToClose: boolean? ) → PlayerDataStoreManager Constructs a new PlayerDataStoreManager.  ","version":null,"tagName":"h3"},{"title":"DisableSaveOnCloseStudio​","type":1,"pageTitle":"PlayerDataStoreManager","url":"/NevermoreEngine/api/PlayerDataStoreManager#DisableSaveOnCloseStudio","content":"&lt;/&gt; PlayerDataStoreManager.DisableSaveOnCloseStudio(self: PlayerDataStoreManager) → () For if you want to disable saving in studio for faster close time!  ","version":null,"tagName":"h3"},{"title":"AddRemovingCallback​","type":1,"pageTitle":"PlayerDataStoreManager","url":"/NevermoreEngine/api/PlayerDataStoreManager#AddRemovingCallback","content":"&lt;/&gt; PlayerDataStoreManager.AddRemovingCallback( self: PlayerDataStoreManager, callback: function-- May return a promise ) → () Adds a callback to be called before save on removal  ","version":null,"tagName":"h3"},{"title":"RemovePlayerDataStore​","type":1,"pageTitle":"PlayerDataStoreManager","url":"/NevermoreEngine/api/PlayerDataStoreManager#RemovePlayerDataStore","content":"&lt;/&gt; PlayerDataStoreManager.RemovePlayerDataStore( self: PlayerDataStoreManager, player: Player ) → () Callable to allow manual GC so things can properly clean up. This can be used to pre-emptively cleanup players.  ","version":null,"tagName":"h3"},{"title":"GetDataStore​","type":1,"pageTitle":"PlayerDataStoreManager","url":"/NevermoreEngine/api/PlayerDataStoreManager#GetDataStore","content":"&lt;/&gt; PlayerDataStoreManager.GetDataStore( self: PlayerDataStoreManager, player: Player ) → DataStore? Gets the datastore for a player. If it does not exist, it will create one. TIP Returns nil if the player is in the process of being removed.  ","version":null,"tagName":"h3"},{"title":"PromiseAllSaves​","type":1,"pageTitle":"PlayerDataStoreManager","url":"/NevermoreEngine/api/PlayerDataStoreManager#PromiseAllSaves","content":"&lt;/&gt; PlayerDataStoreManager.PromiseAllSaves(self: PlayerDataStoreManager) → Promise Removes all player data stores, and returns a promise that resolves when all pending saves are saved. ","version":null,"tagName":"h3"},{"title":"PlayerDataStoreService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerDataStoreService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayerDataStoreService","url":"/NevermoreEngine/api/PlayerDataStoreService#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"PlayerDataStoreService","url":"/NevermoreEngine/api/PlayerDataStoreService#Init","content":"&lt;/&gt; PlayerDataStoreService:Init(serviceBag: ServiceBag) → () Initializes the PlayerDataStoreService. Should be done via ServiceBag.Init.  ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"PlayerDataStoreService","url":"/NevermoreEngine/api/PlayerDataStoreService#Start","content":"&lt;/&gt; PlayerDataStoreService:Start() → () Initializes the datastore service for players. Should be done via ServiceBag.Start.  ","version":null,"tagName":"h3"},{"title":"SetDataStoreName​","type":1,"pageTitle":"PlayerDataStoreService","url":"/NevermoreEngine/api/PlayerDataStoreService#SetDataStoreName","content":"&lt;/&gt; PlayerDataStoreService:SetDataStoreName(dataStoreName: string) → () Sets the name for the datastore to retrieve. INFO Must be done before start and after init.  ","version":null,"tagName":"h3"},{"title":"SetDataStoreScope​","type":1,"pageTitle":"PlayerDataStoreService","url":"/NevermoreEngine/api/PlayerDataStoreService#SetDataStoreScope","content":"&lt;/&gt; PlayerDataStoreService:SetDataStoreScope(dataStoreScope: string) → () Sets the scope for the datastore to retrieve. INFO Must be done before start and after init.  ","version":null,"tagName":"h3"},{"title":"PromiseDataStore​","type":1,"pageTitle":"PlayerDataStoreService","url":"/NevermoreEngine/api/PlayerDataStoreService#PromiseDataStore","content":"&lt;/&gt; PlayerDataStoreService:PromiseDataStore(player: Player ) → Promise&lt;DataStore&gt; Gets the datastore for the player.  ","version":null,"tagName":"h3"},{"title":"PromiseAddRemovingCallback​","type":1,"pageTitle":"PlayerDataStoreService","url":"/NevermoreEngine/api/PlayerDataStoreService#PromiseAddRemovingCallback","content":"&lt;/&gt; PlayerDataStoreService:PromiseAddRemovingCallback( callback: function-- May return a promise ) → Promise Adds a removing callback to the manager.  ","version":null,"tagName":"h3"},{"title":"PromiseManager​","type":1,"pageTitle":"PlayerDataStoreService","url":"/NevermoreEngine/api/PlayerDataStoreService#PromiseManager","content":"&lt;/&gt; PlayerDataStoreService:PromiseManager() → Promise&lt;PlayerDataStoreManager&gt; Retrieves the manager ","version":null,"tagName":"h3"},{"title":"PlayerDeathTracker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerDeathTracker","content":"PlayerDeathTracker","keywords":"","version":null},{"title":"PlayerGuiUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerGuiUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayerGuiUtils","url":"/NevermoreEngine/api/PlayerGuiUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getPlayerGui​","type":1,"pageTitle":"PlayerGuiUtils","url":"/NevermoreEngine/api/PlayerGuiUtils#getPlayerGui","content":"&lt;/&gt; PlayerGuiUtils.getPlayerGui() → PlayerGui  Finds the current player gui for the Players.LocalPlayer property or errors. WARNING This method errors if it can't find the PlayerGui. Fortunately, the PlayerGui is pretty much guaranteed to exist in most scenarios.  ","version":null,"tagName":"h3"},{"title":"PlayerDeathTrackerClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerDeathTrackerClient","content":"PlayerDeathTrackerClient","keywords":"","version":null},{"title":"findPlayerGui​","type":1,"pageTitle":"PlayerGuiUtils","url":"/NevermoreEngine/api/PlayerGuiUtils#findPlayerGui","content":"&lt;/&gt; PlayerGuiUtils.findPlayerGui() → PlayerGui | nil Finds the current player gui for the Players.LocalPlayer property. ","version":null,"tagName":"h3"},{"title":"PlayerHasSettings","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerHasSettings","content":"PlayerHasSettings","keywords":"","version":null},{"title":"PlayerHumanoidBinder","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerHumanoidBinder","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayerHumanoidBinder","url":"/NevermoreEngine/api/PlayerHumanoidBinder#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"PlayerHumanoidBinder","url":"/NevermoreEngine/api/PlayerHumanoidBinder#new","content":"&lt;/&gt; PlayerHumanoidBinder.new( tag: string, class: BinderContructor, ...: any ) → PlayerHumanoidBinder&lt;T&gt; Returns a new PlayerHumanoidBinder  ","version":null,"tagName":"h3"},{"title":"Init​","type":1,"pageTitle":"PlayerHumanoidBinder","url":"/NevermoreEngine/api/PlayerHumanoidBinder#Init","content":"&lt;/&gt; PlayerHumanoidBinder:Init( serviceBag: ServiceBag, ...: any ) → () Inits the binder. See Binder.Init. Should be done via a ServiceBag.  ","version":null,"tagName":"h3"},{"title":"SetAutomaticTagging​","type":1,"pageTitle":"PlayerHumanoidBinder","url":"/NevermoreEngine/api/PlayerHumanoidBinder#SetAutomaticTagging","content":"&lt;/&gt; PlayerHumanoidBinder:SetAutomaticTagging(shouldTag: boolean) → () Sets whether tagging should be enabled  ","version":null,"tagName":"h3"},{"title":"ObserveAutomaticTagging​","type":1,"pageTitle":"PlayerHumanoidBinder","url":"/NevermoreEngine/api/PlayerHumanoidBinder#ObserveAutomaticTagging","content":"&lt;/&gt; PlayerHumanoidBinder:ObserveAutomaticTagging() → Observable&lt;boolean&gt;   ","version":null,"tagName":"h3"},{"title":"ObserveAutomaticTaggingBrio​","type":1,"pageTitle":"PlayerHumanoidBinder","url":"/NevermoreEngine/api/PlayerHumanoidBinder#ObserveAutomaticTaggingBrio","content":"&lt;/&gt; PlayerHumanoidBinder:ObserveAutomaticTaggingBrio( predicate: function-- Optional predicate ) → Observable&lt;Brio&lt;boolean&gt;&gt;   ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"PlayerHumanoidBinder","url":"/NevermoreEngine/api/PlayerHumanoidBinder#Start","content":"&lt;/&gt; PlayerHumanoidBinder:Start() → () Starts the binder. See Binder.Start. Should be done via a ServiceBag. ","version":null,"tagName":"h3"},{"title":"PlayerInputModeServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerInputModeServiceClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayerInputModeServiceClient","url":"/NevermoreEngine/api/PlayerInputModeServiceClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"ObservePlayerInputType​","type":1,"pageTitle":"PlayerInputModeServiceClient","url":"/NevermoreEngine/api/PlayerInputModeServiceClient#ObservePlayerInputType","content":"&lt;/&gt; PlayerInputModeServiceClient:ObservePlayerInputType(player: Player ) → Observable&lt;PlayerInputModeType&gt; Observes the player input mode type from the player  ","version":null,"tagName":"h3"},{"title":"GetPlayerInputModeType​","type":1,"pageTitle":"PlayerInputModeServiceClient","url":"/NevermoreEngine/api/PlayerInputModeServiceClient#GetPlayerInputModeType","content":"&lt;/&gt; PlayerInputModeServiceClient:GetPlayerInputModeType(player: Player ) → PlayerInputModeType Gets the player input mode type from the player ","version":null,"tagName":"h3"},{"title":"PlayerInputModeService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerInputModeService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayerInputModeService","url":"/NevermoreEngine/api/PlayerInputModeService#functions","content":" ","version":null,"tagName":"h2"},{"title":"GetPlayerInputModeType​","type":1,"pageTitle":"PlayerInputModeService","url":"/NevermoreEngine/api/PlayerInputModeService#GetPlayerInputModeType","content":"&lt;/&gt; PlayerInputModeService:GetPlayerInputModeType(player: Player ) → PlayerInputModeType Gets the player input mode type from the player  ","version":null,"tagName":"h3"},{"title":"PromisePlayerInputMode​","type":1,"pageTitle":"PlayerInputModeService","url":"/NevermoreEngine/api/PlayerInputModeService#PromisePlayerInputMode","content":"&lt;/&gt; PlayerInputModeService:PromisePlayerInputMode( player: Player , cancelToken: CancelToken ) → Promise&lt;PlayerInputModeType&gt; Promises the player input mode type from the player  ","version":null,"tagName":"h3"},{"title":"ObservePlayerInputType​","type":1,"pageTitle":"PlayerInputModeService","url":"/NevermoreEngine/api/PlayerInputModeService#ObservePlayerInputType","content":"&lt;/&gt; PlayerInputModeService:ObservePlayerInputType(player: Player ) → Observable&lt;PlayerInputModeType&gt; Observes the player input mode type from the player ","version":null,"tagName":"h3"},{"title":"PlayerInputModeServiceConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerInputModeServiceConstants","content":"PlayerInputModeServiceConstants","keywords":"","version":null},{"title":"PlayerInputModeTypes","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerInputModeTypes","content":"PlayerInputModeTypes","keywords":"","version":null},{"title":"PlayerKillTracker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerKillTracker","content":"PlayerKillTracker","keywords":"","version":null},{"title":"PlayerInputModeUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerInputModeUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayerInputModeUtils","url":"/NevermoreEngine/api/PlayerInputModeUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getPlayerInputModeType​","type":1,"pageTitle":"PlayerInputModeUtils","url":"/NevermoreEngine/api/PlayerInputModeUtils#getPlayerInputModeType","content":"&lt;/&gt; PlayerInputModeUtils.getPlayerInputModeType(player: Player ) → PlayerInputModeType? Returns the player input mode type for a player.  ","version":null,"tagName":"h3"},{"title":"observePlayerInputModeType​","type":1,"pageTitle":"PlayerInputModeUtils","url":"/NevermoreEngine/api/PlayerInputModeUtils#observePlayerInputModeType","content":"&lt;/&gt; PlayerInputModeUtils.observePlayerInputModeType(player: Player ) → Observable&lt;PlayerInputModeType?&gt; Observes the player input mode type for a player.  ","version":null,"tagName":"h3"},{"title":"promisePlayerInputMode​","type":1,"pageTitle":"PlayerInputModeUtils","url":"/NevermoreEngine/api/PlayerInputModeUtils#promisePlayerInputMode","content":"&lt;/&gt; PlayerInputModeUtils.promisePlayerInputMode( player: Player , cancelToken: CancelToken? ) → Promise&lt;string?&gt; Observes the player input mode type for a player.  ","version":null,"tagName":"h3"},{"title":"isInputModeType​","type":1,"pageTitle":"PlayerInputModeUtils","url":"/NevermoreEngine/api/PlayerInputModeUtils#isInputModeType","content":"&lt;/&gt; PlayerInputModeUtils.isInputModeType(playerInputModeType: any) → boolean Checks if the input mode type is valid.  ","version":null,"tagName":"h3"},{"title":"setPlayerInputModeType​","type":1,"pageTitle":"PlayerInputModeUtils","url":"/NevermoreEngine/api/PlayerInputModeUtils#setPlayerInputModeType","content":"&lt;/&gt; PlayerInputModeUtils.setPlayerInputModeType( player: Player , playerInputModeType: string ) → () Sets the player input mode type for a player. ","version":null,"tagName":"h3"},{"title":"PlayerKillTrackerAssigner","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerKillTrackerAssigner","content":"PlayerKillTrackerAssigner","keywords":"","version":null},{"title":"PlayerKillTrackerUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerKillTrackerUtils","content":"PlayerKillTrackerUtils","keywords":"","version":null},{"title":"PlayerKillTrackerClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerKillTrackerClient","content":"PlayerKillTrackerClient","keywords":"","version":null},{"title":"PlayerProductManager","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerProductManager","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayerProductManager","url":"/NevermoreEngine/api/PlayerProductManager#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"PlayerProductManager","url":"/NevermoreEngine/api/PlayerProductManager#new","content":"&lt;/&gt; PlayerProductManager.new( player: Player , serviceBag: ServiceBag ) → PlayerProductManager Managers players products and purchase state. Should be retrieved via binder. ","version":null,"tagName":"h3"},{"title":"PlayerProductManagerBase","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerProductManagerBase","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayerProductManagerBase","url":"/NevermoreEngine/api/PlayerProductManagerBase#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"PlayerProductManagerBase","url":"/NevermoreEngine/api/PlayerProductManagerBase#new","content":"&lt;/&gt; PlayerProductManagerBase.new( player: Player , serviceBag: ServiceBag ) → PlayerProductManagerBase Constructs a new PlayerProductManagerBase, which provides helper methods for the PlayerProductManager.  ","version":null,"tagName":"h3"},{"title":"GetPlayer​","type":1,"pageTitle":"PlayerProductManagerBase","url":"/NevermoreEngine/api/PlayerProductManagerBase#GetPlayer","content":"&lt;/&gt; PlayerProductManagerBase:GetPlayer() → Player  Gets the current player  ","version":null,"tagName":"h3"},{"title":"IsOwnable​","type":1,"pageTitle":"PlayerProductManagerBase","url":"/NevermoreEngine/api/PlayerProductManagerBase#IsOwnable","content":"&lt;/&gt; PlayerProductManagerBase:IsOwnable(assetType: GameConfigAssetType) → PlayerAssetMarketTracker Returns true if the asset type can be owned  ","version":null,"tagName":"h3"},{"title":"IsPromptOpen​","type":1,"pageTitle":"PlayerProductManagerBase","url":"/NevermoreEngine/api/PlayerProductManagerBase#IsPromptOpen","content":"&lt;/&gt; PlayerProductManagerBase:IsPromptOpen() → boolean Returns true if any prompt is open  ","version":null,"tagName":"h3"},{"title":"PromisePlayerPromptClosed​","type":1,"pageTitle":"PlayerProductManagerBase","url":"/NevermoreEngine/api/PlayerProductManagerBase#PromisePlayerPromptClosed","content":"&lt;/&gt; PlayerProductManagerBase:PromisePlayerPromptClosed() → Promise Promises that no prompt is open  ","version":null,"tagName":"h3"},{"title":"GetAssetTrackerOrError​","type":1,"pageTitle":"PlayerProductManagerBase","url":"/NevermoreEngine/api/PlayerProductManagerBase#GetAssetTrackerOrError","content":"&lt;/&gt; PlayerProductManagerBase:GetAssetTrackerOrError(assetType: GameConfigAssetType) → PlayerAssetMarketTracker Gets the current asset tracker  ","version":null,"tagName":"h3"},{"title":"GetOwnershipTrackerOrError​","type":1,"pageTitle":"PlayerProductManagerBase","url":"/NevermoreEngine/api/PlayerProductManagerBase#GetOwnershipTrackerOrError","content":"&lt;/&gt; PlayerProductManagerBase:GetOwnershipTrackerOrError(assetType: GameConfigAssetType) → PlayerAssetMarketTracker Gets the current asset tracker ","version":null,"tagName":"h3"},{"title":"PlayerProductManagerInterface","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerProductManagerInterface","content":"PlayerProductManagerInterface","keywords":"","version":null},{"title":"PlayerProductManagerClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerProductManagerClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayerProductManagerClient","url":"/NevermoreEngine/api/PlayerProductManagerClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"GetPlayer​","type":1,"pageTitle":"PlayerProductManagerClient","url":"/NevermoreEngine/api/PlayerProductManagerClient#GetPlayer","content":"&lt;/&gt; PlayerProductManagerClient:GetPlayer() → Player  Gets the current player ","version":null,"tagName":"h3"},{"title":"PlayerSettings","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerSettings","content":"PlayerSettings","keywords":"","version":null},{"title":"PlayerSettingsBase","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerSettingsBase","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayerSettingsBase","url":"/NevermoreEngine/api/PlayerSettingsBase#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"PlayerSettingsBase","url":"/NevermoreEngine/api/PlayerSettingsBase#new","content":"&lt;/&gt; PlayerSettingsBase.new( folder: Folder , serviceBag: ServiceBag ) → PlayerSettingsBase Base class for player settings  ","version":null,"tagName":"h3"},{"title":"GetPlayer​","type":1,"pageTitle":"PlayerSettingsBase","url":"/NevermoreEngine/api/PlayerSettingsBase#GetPlayer","content":"&lt;/&gt; PlayerSettingsBase.GetPlayer(self: PlayerSettingsBase) → Player  Gets the player for this setting  ","version":null,"tagName":"h3"},{"title":"GetFolder​","type":1,"pageTitle":"PlayerSettingsBase","url":"/NevermoreEngine/api/PlayerSettingsBase#GetFolder","content":"&lt;/&gt; PlayerSettingsBase.GetFolder(self: PlayerSettingsBase) → Folder  Gets the settings folder  ","version":null,"tagName":"h3"},{"title":"GetSettingProperty​","type":1,"pageTitle":"PlayerSettingsBase","url":"/NevermoreEngine/api/PlayerSettingsBase#GetSettingProperty","content":"&lt;/&gt; PlayerSettingsBase.GetSettingProperty( self: PlayerSettingsBase, settingName: string, defaultValue: any ) → SettingProperty If you want to use a setting value object instead, this works... Otherwise consider using the setting definitions in a centralized location.  ","version":null,"tagName":"h3"},{"title":"GetValue​","type":1,"pageTitle":"PlayerSettingsBase","url":"/NevermoreEngine/api/PlayerSettingsBase#GetValue","content":"&lt;/&gt; PlayerSettingsBase.GetValue( self: PlayerSettingsBase, settingName: string, defaultValue: any ) → any Gets the setting value for the given name  ","version":null,"tagName":"h3"},{"title":"SetValue​","type":1,"pageTitle":"PlayerSettingsBase","url":"/NevermoreEngine/api/PlayerSettingsBase#SetValue","content":"&lt;/&gt; PlayerSettingsBase.SetValue( self: PlayerSettingsBase, settingName: string, value: any ) → any Sets the setting value for the given name  ","version":null,"tagName":"h3"},{"title":"ObserveValue​","type":1,"pageTitle":"PlayerSettingsBase","url":"/NevermoreEngine/api/PlayerSettingsBase#ObserveValue","content":"&lt;/&gt; PlayerSettingsBase.ObserveValue( self: PlayerSettingsBase, settingName: string, defaultValue: any ) → Observable&lt;any&gt; Sets the setting value for the given name  ","version":null,"tagName":"h3"},{"title":"RestoreDefault​","type":1,"pageTitle":"PlayerSettingsBase","url":"/NevermoreEngine/api/PlayerSettingsBase#RestoreDefault","content":"&lt;/&gt; PlayerSettingsBase.RestoreDefault( self: PlayerSettingsBase, settingName: string, defaultValue: T ) → () Restores the default value for the setting  ","version":null,"tagName":"h3"},{"title":"EnsureInitialized​","type":1,"pageTitle":"PlayerSettingsBase","url":"/NevermoreEngine/api/PlayerSettingsBase#EnsureInitialized","content":"&lt;/&gt; PlayerSettingsBase.EnsureInitialized( _self: PlayerSettingsBase, settingName: string, defaultValue: any ) → () Ensures the setting is initialized on the server or client ","version":null,"tagName":"h3"},{"title":"PlayerSettingsInterface","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerSettingsInterface","content":"PlayerSettingsInterface","keywords":"","version":null},{"title":"PlayerSettingsConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerSettingsConstants","content":"PlayerSettingsConstants","keywords":"","version":null},{"title":"PlayerSettingsClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerSettingsClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayerSettingsClient","url":"/NevermoreEngine/api/PlayerSettingsClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"PlayerSettingsClient","url":"/NevermoreEngine/api/PlayerSettingsClient#new","content":"&lt;/&gt; PlayerSettingsClient.new( folder: Folder , serviceBag: ServiceBag ) → PlayerSettingsClient See [SettingsBindersClient] and SettingsServiceClient on how to properly use this class.  ","version":null,"tagName":"h3"},{"title":"GetValue​","type":1,"pageTitle":"PlayerSettingsClient","url":"/NevermoreEngine/api/PlayerSettingsClient#GetValue","content":"&lt;/&gt; PlayerSettingsClient.GetValue( self: PlayerSettingsClient, settingName: string, defaultValue: T ) → T Gets a settings value  ","version":null,"tagName":"h3"},{"title":"ObserveValue​","type":1,"pageTitle":"PlayerSettingsClient","url":"/NevermoreEngine/api/PlayerSettingsClient#ObserveValue","content":"&lt;/&gt; PlayerSettingsClient.ObserveValue( self: PlayerSettingsClient, settingName: string, defaultValue: T ) → Observable&lt;T&gt; Observes a settings value.  ","version":null,"tagName":"h3"},{"title":"SetValue​","type":1,"pageTitle":"PlayerSettingsClient","url":"/NevermoreEngine/api/PlayerSettingsClient#SetValue","content":"&lt;/&gt; PlayerSettingsClient.SetValue( self: PlayerSettingsClient, settingName: string, value: T ) → () Sets a settings value and replicates the value eventually (in a de-duplicated manner). ","version":null,"tagName":"h3"},{"title":"PlayerSettingsUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerSettingsUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayerSettingsUtils","url":"/NevermoreEngine/api/PlayerSettingsUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"create​","type":1,"pageTitle":"PlayerSettingsUtils","url":"/NevermoreEngine/api/PlayerSettingsUtils#create","content":"&lt;/&gt; PlayerSettingsUtils.create() → Folder  Creates a new player settings  ","version":null,"tagName":"h3"},{"title":"getAttributeName​","type":1,"pageTitle":"PlayerSettingsUtils","url":"/NevermoreEngine/api/PlayerSettingsUtils#getAttributeName","content":"&lt;/&gt; PlayerSettingsUtils.getAttributeName(settingName: string) → string Gets the attribute name for a setting  ","version":null,"tagName":"h3"},{"title":"getSettingName​","type":1,"pageTitle":"PlayerSettingsUtils","url":"/NevermoreEngine/api/PlayerSettingsUtils#getSettingName","content":"&lt;/&gt; PlayerSettingsUtils.getSettingName(attributeName: string) → string Gets the settings name from an attribute. May return a string that cannot be loaded into datastore.  ","version":null,"tagName":"h3"},{"title":"isSettingAttribute​","type":1,"pageTitle":"PlayerSettingsUtils","url":"/NevermoreEngine/api/PlayerSettingsUtils#isSettingAttribute","content":"&lt;/&gt; PlayerSettingsUtils.isSettingAttribute(attributeName: string) → string Returns true if the attribute name is a settings attribute  ","version":null,"tagName":"h3"},{"title":"encodeForNetwork​","type":1,"pageTitle":"PlayerSettingsUtils","url":"/NevermoreEngine/api/PlayerSettingsUtils#encodeForNetwork","content":"&lt;/&gt; PlayerSettingsUtils.encodeForNetwork(settingValue: any) → any Encodes a given value for network transfer  ","version":null,"tagName":"h3"},{"title":"decodeForNetwork​","type":1,"pageTitle":"PlayerSettingsUtils","url":"/NevermoreEngine/api/PlayerSettingsUtils#decodeForNetwork","content":"&lt;/&gt; PlayerSettingsUtils.decodeForNetwork(settingValue: any) → any Decodes a given value from network transfer  ","version":null,"tagName":"h3"},{"title":"decodeForAttribute​","type":1,"pageTitle":"PlayerSettingsUtils","url":"/NevermoreEngine/api/PlayerSettingsUtils#decodeForAttribute","content":"&lt;/&gt; PlayerSettingsUtils.decodeForAttribute(settingValue: any) → any Decodes a given value for attribute storage  ","version":null,"tagName":"h3"},{"title":"encodeForAttribute​","type":1,"pageTitle":"PlayerSettingsUtils","url":"/NevermoreEngine/api/PlayerSettingsUtils#encodeForAttribute","content":"&lt;/&gt; PlayerSettingsUtils.encodeForAttribute(settingValue: any) → any Encodes a given value for attribute storage ","version":null,"tagName":"h3"},{"title":"PlayersServicePromises","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayersServicePromises","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayersServicePromises","url":"/NevermoreEngine/api/PlayersServicePromises#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseUserIdFromName​","type":1,"pageTitle":"PlayersServicePromises","url":"/NevermoreEngine/api/PlayersServicePromises#promiseUserIdFromName","content":"&lt;/&gt; PlayersServicePromises.promiseUserIdFromName(name: string) → Promise&lt;UserId&gt; Promises the userId from a given name. ","version":null,"tagName":"h3"},{"title":"PlayerThumbnailUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerThumbnailUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayerThumbnailUtils","url":"/NevermoreEngine/api/PlayerThumbnailUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseUserThumbnail​","type":1,"pageTitle":"PlayerThumbnailUtils","url":"/NevermoreEngine/api/PlayerThumbnailUtils#promiseUserThumbnail","content":"&lt;/&gt; PlayerThumbnailUtils.promiseUserThumbnail( userId: number, thumbnailType: ThumbnailType? , thumbnailSize: ThumbnailSize? ) → Promise&lt;string&gt; Promises a user thumbnail with retry enabled. PlayerThumbnailUtils.promiseUserThumbnail(4397833):Then(function(image) imageLabel.Image = image end)   ","version":null,"tagName":"h3"},{"title":"promiseUserName​","type":1,"pageTitle":"PlayerThumbnailUtils","url":"/NevermoreEngine/api/PlayerThumbnailUtils#promiseUserName","content":"&lt;/&gt; PlayerThumbnailUtils.promiseUserName(userId: number) → Promise&lt;string&gt; Promises a player userName with retries enabled. See UserServiceUtils for display name and a more up-to-date API. ","version":null,"tagName":"h3"},{"title":"PlayerUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PlayerUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PlayerUtils","url":"/NevermoreEngine/api/PlayerUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"formatName​","type":1,"pageTitle":"PlayerUtils","url":"/NevermoreEngine/api/PlayerUtils#formatName","content":"&lt;/&gt; PlayerUtils.formatName(player: Player ) → string-- Formatted name Human-readable version of a player name. If the player's name is the same as the display name, then returns that player's name. Otherwise returns a formatted name with the player's name like this &quot;oot (@martxn)&quot; which lets you know the username and the display name. Note this is not localized, although most languages should be ok. Great for output for dev logs and command services which are less picky.  ","version":null,"tagName":"h3"},{"title":"formatDisplayName​","type":1,"pageTitle":"PlayerUtils","url":"/NevermoreEngine/api/PlayerUtils#formatDisplayName","content":"&lt;/&gt; PlayerUtils.formatDisplayName( name: string, displayName: string ) → string-- Formatted name Human-readable version of a player name. If the player's name is the same as the display name, then returns that player's name. Otherwise returns a formatted name with the player's name like this &quot;oot (@martxn)&quot; which lets you know the username and the display name. Note this is not localized, although most languages should be ok. Great for output for dev logs and command services which are less picky.  ","version":null,"tagName":"h3"},{"title":"formatDisplayNameFromUserInfo​","type":1,"pageTitle":"PlayerUtils","url":"/NevermoreEngine/api/PlayerUtils#formatDisplayNameFromUserInfo","content":"&lt;/&gt; PlayerUtils.formatDisplayNameFromUserInfo(userInfo: UserInfo) → string Formats the display name from the user info  ","version":null,"tagName":"h3"},{"title":"addVerifiedBadgeToName​","type":1,"pageTitle":"PlayerUtils","url":"/NevermoreEngine/api/PlayerUtils#addVerifiedBadgeToName","content":"&lt;/&gt; PlayerUtils.addVerifiedBadgeToName(name: string) → string Adds verified badges to the name  ","version":null,"tagName":"h3"},{"title":"getDefaultNameColor​","type":1,"pageTitle":"PlayerUtils","url":"/NevermoreEngine/api/PlayerUtils#getDefaultNameColor","content":"&lt;/&gt; PlayerUtils.getDefaultNameColor(displayName: string) → Color3  Retrieves the display name color for a given player (for the Roblox chat)  ","version":null,"tagName":"h3"},{"title":"promiseLoadCharacter​","type":1,"pageTitle":"PlayerUtils","url":"/NevermoreEngine/api/PlayerUtils#promiseLoadCharacter","content":"&lt;/&gt; PlayerUtils.promiseLoadCharacter(player: Player ) → Promise&lt;Model &gt; Calls :LoadCharacter() in a promise  ","version":null,"tagName":"h3"},{"title":"promiseLoadCharacterWithHumanoidDescription​","type":1,"pageTitle":"PlayerUtils","url":"/NevermoreEngine/api/PlayerUtils#promiseLoadCharacterWithHumanoidDescription","content":"&lt;/&gt; PlayerUtils.promiseLoadCharacterWithHumanoidDescription( player: Player , humanoidDescription: HumanoidDescription ) → Promise&lt;Model &gt; Calls :LoadCharacterWithHumanoidDescription() in a promise ","version":null,"tagName":"h3"},{"title":"PointCamera","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PointCamera","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PointCamera","url":"/NevermoreEngine/api/PointCamera#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"PointCamera","url":"/NevermoreEngine/api/PointCamera#new","content":"&lt;/&gt; PointCamera.new( originCamera: Camera ,-- A camera to use focusCamera: Camera -- The Camera to look at. ) → PointCamera Initializes a new PointCamera ","version":null,"tagName":"h3"},{"title":"PolynomialUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PolynomialUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PolynomialUtils","url":"/NevermoreEngine/api/PolynomialUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"solveOrderedRealLinear​","type":1,"pageTitle":"PolynomialUtils","url":"/NevermoreEngine/api/PolynomialUtils#solveOrderedRealLinear","content":"&lt;/&gt; PolynomialUtils.solveOrderedRealLinear( a: number, b: number ) → number? Solves a linear ordered equation  ","version":null,"tagName":"h3"},{"title":"solveOrderedRealQuadratic​","type":1,"pageTitle":"PolynomialUtils","url":"/NevermoreEngine/api/PolynomialUtils#solveOrderedRealQuadratic","content":"&lt;/&gt; PolynomialUtils.solveOrderedRealQuadratic( a: number, b: number, c: number ) → ( number?, number? ) Solves a quadratic polynomial ","version":null,"tagName":"h3"},{"title":"PolicyServiceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PolicyServiceUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PolicyServiceUtils","url":"/NevermoreEngine/api/PolicyServiceUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promisePolicyInfoForPlayer​","type":1,"pageTitle":"PolicyServiceUtils","url":"/NevermoreEngine/api/PolicyServiceUtils#promisePolicyInfoForPlayer","content":"&lt;/&gt; PolicyServiceUtils.promisePolicyInfoForPlayer(player: Player ) → Promise&lt;PolicyInfo&gt; Promises policy info for players.  ","version":null,"tagName":"h3"},{"title":"canReferenceTwitter​","type":1,"pageTitle":"PolicyServiceUtils","url":"/NevermoreEngine/api/PolicyServiceUtils#canReferenceTwitter","content":"&lt;/&gt; PolicyServiceUtils.canReferenceTwitter(policyInfo: PolicyInfo) → boolean Returns true if you can reference Twitter  ","version":null,"tagName":"h3"},{"title":"canReferenceTwitch​","type":1,"pageTitle":"PolicyServiceUtils","url":"/NevermoreEngine/api/PolicyServiceUtils#canReferenceTwitch","content":"&lt;/&gt; PolicyServiceUtils.canReferenceTwitch(policyInfo: PolicyInfo) → boolean Returns true if you can reference Twitch  ","version":null,"tagName":"h3"},{"title":"canReferenceDiscord​","type":1,"pageTitle":"PolicyServiceUtils","url":"/NevermoreEngine/api/PolicyServiceUtils#canReferenceDiscord","content":"&lt;/&gt; PolicyServiceUtils.canReferenceDiscord(policyInfo: PolicyInfo) → boolean Returns true if you can reference Discord  ","version":null,"tagName":"h3"},{"title":"canReferenceFacebook​","type":1,"pageTitle":"PolicyServiceUtils","url":"/NevermoreEngine/api/PolicyServiceUtils#canReferenceFacebook","content":"&lt;/&gt; PolicyServiceUtils.canReferenceFacebook(policyInfo: PolicyInfo) → boolean Returns true if you can reference Facebook  ","version":null,"tagName":"h3"},{"title":"canReferenceYouTube​","type":1,"pageTitle":"PolicyServiceUtils","url":"/NevermoreEngine/api/PolicyServiceUtils#canReferenceYouTube","content":"&lt;/&gt; PolicyServiceUtils.canReferenceYouTube(policyInfo: PolicyInfo) → boolean Returns true if you can reference YouTube  ","version":null,"tagName":"h3"},{"title":"canReferenceSocialMedia​","type":1,"pageTitle":"PolicyServiceUtils","url":"/NevermoreEngine/api/PolicyServiceUtils#canReferenceSocialMedia","content":"&lt;/&gt; PolicyServiceUtils.canReferenceSocialMedia( policyInfo: PolicyInfo, socialInfoName: string ) → boolean Returns true if you can reference a specific social media title ","version":null,"tagName":"h3"},{"title":"PreferredParentUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PreferredParentUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PreferredParentUtils","url":"/NevermoreEngine/api/PreferredParentUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"createPreferredParentRetriever​","type":1,"pageTitle":"PreferredParentUtils","url":"/NevermoreEngine/api/PreferredParentUtils#createPreferredParentRetriever","content":"&lt;/&gt; PreferredParentUtils.createPreferredParentRetriever( parent: Instance , name: string, forceCreate: boolean? ) → () → Instance  Creates a function that will return the preferred parent for a given name, with a cache.  ","version":null,"tagName":"h3"},{"title":"getPreferredParent​","type":1,"pageTitle":"PreferredParentUtils","url":"/NevermoreEngine/api/PreferredParentUtils#getPreferredParent","content":"&lt;/&gt; PreferredParentUtils.getPreferredParent( parent: Instance , name: string, forceCreate: boolean? ) → Instance  Gets the preferred parent for an instance ","version":null,"tagName":"h3"},{"title":"PrivateServerDataStoreService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PrivateServerDataStoreService","content":"PrivateServerDataStoreService Service which manages central access to datastore. This datastore is per a private server or reserved server. The main server will also get one, with an empty key.","keywords":"","version":null},{"title":"Probability","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Probability","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Probability","url":"/NevermoreEngine/api/Probability#functions","content":" ","version":null,"tagName":"h2"},{"title":"boxMuller​","type":1,"pageTitle":"Probability","url":"/NevermoreEngine/api/Probability#boxMuller","content":"&lt;/&gt; Probability.boxMuller() → number Returns a boxMuller random distribution  ","version":null,"tagName":"h3"},{"title":"normal​","type":1,"pageTitle":"Probability","url":"/NevermoreEngine/api/Probability#normal","content":"&lt;/&gt; Probability.normal( mean: number, standardDeviation: number ) → number Returns a normal distribution  ","version":null,"tagName":"h3"},{"title":"boundedNormal​","type":1,"pageTitle":"Probability","url":"/NevermoreEngine/api/Probability#boundedNormal","content":"&lt;/&gt; Probability.boundedNormal( mean: number, standardDeviation: number, hardMin: number, hardMax: number ) → number Returns a bounded normal, clamping the normal value  ","version":null,"tagName":"h3"},{"title":"erf​","type":1,"pageTitle":"Probability","url":"/NevermoreEngine/api/Probability#erf","content":"&lt;/&gt; Probability.erf(x: number) → number Approximation of the error function (erf) using the Abramowitz and Stegun formula https://en.wikipedia.org/wiki/Error_function  ","version":null,"tagName":"h3"},{"title":"cdf​","type":1,"pageTitle":"Probability","url":"/NevermoreEngine/api/Probability#cdf","content":"&lt;/&gt; Probability.cdf(zScore: number) → number Standard normal cumulative distribution function. Returns the value from 0 to 1. This is also known as percentile!  ","version":null,"tagName":"h3"},{"title":"erfinv​","type":1,"pageTitle":"Probability","url":"/NevermoreEngine/api/Probability#erfinv","content":"&lt;/&gt; Probability.erfinv(x: number) → number Function to calculate the inverse error function (erfinv) using Newton's method  ","version":null,"tagName":"h3"},{"title":"percentileToZScore​","type":1,"pageTitle":"Probability","url":"/NevermoreEngine/api/Probability#percentileToZScore","content":"&lt;/&gt; Probability.percentileToZScore(percentile: number) → number Standard normal cumulative distribution function. Returns the value from 0 to 1. This is also known as percentile! ","version":null,"tagName":"h3"},{"title":"promiseBoundClass","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/promiseBoundClass","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"promiseBoundClass","url":"/NevermoreEngine/api/promiseBoundClass#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseBoundClass​","type":1,"pageTitle":"promiseBoundClass","url":"/NevermoreEngine/api/promiseBoundClass#promiseBoundClass","content":"&lt;/&gt; promiseBoundClass.promiseBoundClass( binder: Binder&lt;T&gt;, inst: Instance , cancelToken: CancelToken ) → Promise&lt;T&gt; Returns a promise that resolves when the class is bound to the instance. ","version":null,"tagName":"h3"},{"title":"promiseBoundLinkedClass","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/promiseBoundLinkedClass","content":"promiseBoundLinkedClass Promise that returns an objectValue's value that has a bound value to it.","keywords":"","version":null},{"title":"Promise","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Promise","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#functions","content":" ","version":null,"tagName":"h2"},{"title":"isPromise​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#isPromise","content":"&lt;/&gt; Promise.isPromise(value: any) → boolean Determines whether a value is a promise or not.  ","version":null,"tagName":"h3"},{"title":"new​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#new","content":"&lt;/&gt; Promise.new(func: ( resolve: (...) → (), reject: (...) → () ) → ()?) → Promise&lt;T...&gt; Constructs a new promise. WARNING Do not yield within this func callback, as it will yield on the main thread. This is a performance optimization. ::  ","version":null,"tagName":"h3"},{"title":"spawn​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#spawn","content":"&lt;/&gt; Promise.spawn(func: ( resolve: (...) → (), reject: (...) → () ) → ()?) → Promise&lt;T...&gt; Initializes a new promise with the given function in a spawn wrapper.  ","version":null,"tagName":"h3"},{"title":"delay​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#delay","content":"&lt;/&gt; Promise.delay( seconds: number, func: ( resolve: (...) → (), reject: (...) → () ) → ()? ) → Promise&lt;T...&gt; Initializes a new promise with the given function in a delay wrapper.  ","version":null,"tagName":"h3"},{"title":"defer​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#defer","content":"&lt;/&gt; Promise.defer(func: ( resolve: (...) → (), reject: (...) → () ) → ()?) → Promise&lt;T...&gt; Initializes a new promise with the given function in a deferred wrapper.  ","version":null,"tagName":"h3"},{"title":"resolved​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#resolved","content":"&lt;/&gt; Promise.resolved(...: Valuestoresolveto) → Promise&lt;T...&gt; Returns a resolved promise with the following values  ","version":null,"tagName":"h3"},{"title":"rejected​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#rejected","content":"&lt;/&gt; Promise.rejected(...: Valuestorejectto) → Promise&lt;T...&gt; Returns a rejected promise with the following values  ","version":null,"tagName":"h3"},{"title":"IsPending​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#IsPending","content":"&lt;/&gt; Promise.IsPending(self: Promise&lt;T...&gt;) → bool-- True if pending, false otherwise Returns whether or not the promise is pending  ","version":null,"tagName":"h3"},{"title":"IsFulfilled​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#IsFulfilled","content":"&lt;/&gt; Promise.IsFulfilled(self: Promise&lt;T...&gt;) → bool-- True if fulfilled Returns whether or not the promise is fulfilled  ","version":null,"tagName":"h3"},{"title":"IsRejected​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#IsRejected","content":"&lt;/&gt; Promise.IsRejected(self: Promise&lt;T...&gt;) → bool-- True if rejected Returns whether or not the promise is rejected  ","version":null,"tagName":"h3"},{"title":"Wait​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#Wait","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; Promise.Wait(self: Promise&lt;T...&gt;) → T Yields until the promise is complete, and errors if an error exists, otherwise returns the fulfilled results.  ","version":null,"tagName":"h3"},{"title":"Yield​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#Yield","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; Promise.Yield(self: Promise&lt;T...&gt;) → boolean,T Yields until the promise is complete, then returns a boolean indicating the result, followed by the values from the promise.  ","version":null,"tagName":"h3"},{"title":"Reject​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#Reject","content":"&lt;/&gt; Promise.Reject( self: Promise&lt;T...&gt;, ...: T-- Params to reject with ) → () Rejects the promise with the values given  ","version":null,"tagName":"h3"},{"title":"Then​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#Then","content":"&lt;/&gt; Promise.Then( self: Promise&lt;T...&gt;, onFulfilled: function,-- Called if/when fulfilled with parameters onRejected: function-- Called if/when rejected with parameters ) → Promise&lt;T...&gt; Handlers if/when promise is fulfilled/rejected. It takes up to two arguments, callback functions for the success and failure cases of the Promise. May return the same promise if certain behavior is met. INFO We do not comply with 2.2.4 (onFulfilled or onRejected must not be called until the execution context stack contains only platform code). This means promises may stack overflow, however, it also makes promises a lot cheaper If/when promise is rejected, all respective onRejected callbacks must execute in the order of their originating calls to then. If/when promise is fulfilled, all respective onFulfilled callbacks must execute in the order of their originating calls to then.  ","version":null,"tagName":"h3"},{"title":"Tap​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#Tap","content":"&lt;/&gt; Promise.Tap( self: Promise&lt;T...&gt;, onFulfilled: function, onRejected: function ) → Promise&lt;T...&gt;-- Returns self Like then, but the value passed down the chain is the resolved value of the promise, not the value returned from onFulfilled or onRejected Will still yield for the result if a promise is returned, but will discard the result.  ","version":null,"tagName":"h3"},{"title":"Finally​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#Finally","content":"&lt;/&gt; Promise.Finally( self: Promise&lt;T...&gt;, func: function ) → Promise&lt;T...&gt; Executes upon pending stop  ","version":null,"tagName":"h3"},{"title":"Catch​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#Catch","content":"&lt;/&gt; Promise.Catch( self: Promise&lt;T...&gt;, onRejected: function ) → Promise&lt;T...&gt; Catch errors from the promise  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#Destroy","content":"&lt;/&gt; Promise.Destroy(self: Promise&lt;T...&gt;) → () Rejects the current promise. Utility left for Maid task  ","version":null,"tagName":"h3"},{"title":"GetResults​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#GetResults","content":"&lt;/&gt; Promise.GetResults(self: Promise&lt;T...&gt;) → ( boolean,-- true if resolved, false otherwise. any ) Returns the results from the promise. WARNING This API surface will error if the promise is still pending.  ","version":null,"tagName":"h3"},{"title":"Resolve​","type":1,"pageTitle":"Promise","url":"/NevermoreEngine/api/Promise#Resolve","content":"&lt;/&gt; Promise:Resolve(...: T) → () Promise resolution procedure, resolves the given values ","version":null,"tagName":"h3"},{"title":"promiseChild","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/promiseChild","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"promiseChild","url":"/NevermoreEngine/api/promiseChild#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseChild​","type":1,"pageTitle":"promiseChild","url":"/NevermoreEngine/api/promiseChild#promiseChild","content":"&lt;/&gt; promiseChild.promiseChild( parent: Instance , name: string, timeOut: number? ) → Promise&lt;Instance &gt; Wraps the :WaitForChild API with a promise ","version":null,"tagName":"h3"},{"title":"PromiseGetRemoteEvent","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PromiseGetRemoteEvent","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PromiseGetRemoteEvent","url":"/NevermoreEngine/api/PromiseGetRemoteEvent#functions","content":" ","version":null,"tagName":"h2"},{"title":"PromiseGetRemoteEvent​","type":1,"pageTitle":"PromiseGetRemoteEvent","url":"/NevermoreEngine/api/PromiseGetRemoteEvent#PromiseGetRemoteEvent","content":"&lt;/&gt; PromiseGetRemoteEvent.PromiseGetRemoteEvent(name: string) → Promise&lt;RemoteEvent &gt; Like GetRemoteEvent but in promise form. ","version":null,"tagName":"h3"},{"title":"PromiseGetRemoteFunction","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PromiseGetRemoteFunction","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PromiseGetRemoteFunction","url":"/NevermoreEngine/api/PromiseGetRemoteFunction#functions","content":" ","version":null,"tagName":"h2"},{"title":"PromiseGetRemoteFunction​","type":1,"pageTitle":"PromiseGetRemoteFunction","url":"/NevermoreEngine/api/PromiseGetRemoteFunction#PromiseGetRemoteFunction","content":"&lt;/&gt; PromiseGetRemoteFunction.PromiseGetRemoteFunction(name: string) → Promise&lt;RemoteFunction &gt; Like GetRemoteFunction but in promise form. ","version":null,"tagName":"h3"},{"title":"PromiseMaidUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PromiseMaidUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PromiseMaidUtils","url":"/NevermoreEngine/api/PromiseMaidUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"whilePromise​","type":1,"pageTitle":"PromiseMaidUtils","url":"/NevermoreEngine/api/PromiseMaidUtils#whilePromise","content":"&lt;/&gt; PromiseMaidUtils.whilePromise( promise: Promise.Promise&lt;T...&gt;, callback: (Maid.Maid) → () ) → Maid.Maid Calls the callback with a maid for the lifetime of the promise. ","version":null,"tagName":"h3"},{"title":"PromiseInstanceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PromiseInstanceUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PromiseInstanceUtils","url":"/NevermoreEngine/api/PromiseInstanceUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseRemoved​","type":1,"pageTitle":"PromiseInstanceUtils","url":"/NevermoreEngine/api/PromiseInstanceUtils#promiseRemoved","content":"&lt;/&gt; PromiseInstanceUtils.promiseRemoved(instance: Instance ) → Promise Promise that resolves when an instance is removed ","version":null,"tagName":"h3"},{"title":"PromiseRemoteEventMixin","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PromiseRemoteEventMixin","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PromiseRemoteEventMixin","url":"/NevermoreEngine/api/PromiseRemoteEventMixin#functions","content":" ","version":null,"tagName":"h2"},{"title":"Add​","type":1,"pageTitle":"PromiseRemoteEventMixin","url":"/NevermoreEngine/api/PromiseRemoteEventMixin#Add","content":"&lt;/&gt; PromiseRemoteEventMixin:Add( class: {_maid: Maid}, remoteEventName: string ) → () Adds the remote function mixin to a class local BaseObject = require(&quot;BaseObject&quot;) local Bird = setmetatable({}, BaseObject) Bird.ClassName = &quot;Bird&quot; Bird.__index = Bird require(&quot;PromiseRemoteEventMixin&quot;):Add(Bird, &quot;BirdRemoteEvent&quot;) function Bird.new(inst) local self = setmetatable(BaseObject.new(inst), Bird) self:PromiseRemoteEvent():Then(function(remoteEvent) self._maid:GiveTask(remoteEvent.OnClientEvent:Connect(function(...) self:_handleRemoteEvent(...) end) end) return self end   ","version":null,"tagName":"h3"},{"title":"PromiseRemoteEvent​","type":1,"pageTitle":"PromiseRemoteEventMixin","url":"/NevermoreEngine/api/PromiseRemoteEventMixin#PromiseRemoteEvent","content":"&lt;/&gt; PromiseRemoteEventMixin:PromiseRemoteEvent() → Promise&lt;RemoteEvent &gt; Returns a promise that returns a remote event ","version":null,"tagName":"h3"},{"title":"promisePropertyValue","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/promisePropertyValue","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"promisePropertyValue","url":"/NevermoreEngine/api/promisePropertyValue#functions","content":" ","version":null,"tagName":"h2"},{"title":"promisePropertyValue​","type":1,"pageTitle":"promisePropertyValue","url":"/NevermoreEngine/api/promisePropertyValue#promisePropertyValue","content":"&lt;/&gt; promisePropertyValue.promisePropertyValue( instance: Instance , propertyName: string ) → Promise&lt;Instance &gt; Promise that resolves when the property value is truthy. WARNING To use properly please make sure to reject the promise for proper GC if the object requiring ","version":null,"tagName":"h3"},{"title":"PromiseRemoteFunctionMixin","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PromiseRemoteFunctionMixin","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PromiseRemoteFunctionMixin","url":"/NevermoreEngine/api/PromiseRemoteFunctionMixin#functions","content":" ","version":null,"tagName":"h2"},{"title":"Add​","type":1,"pageTitle":"PromiseRemoteFunctionMixin","url":"/NevermoreEngine/api/PromiseRemoteFunctionMixin#Add","content":"&lt;/&gt; PromiseRemoteFunctionMixin:Add( class: {_maid: Maid}, remoteFunctionName: string ) → () Adds the remote function mixin to a class local BaseObject = require(&quot;BaseObject&quot;) local Bird = setmetatable({}, BaseObject) Bird.ClassName = &quot;Bird&quot; Bird.__index = Bird require(&quot;PromiseRemoteFunctionMixin&quot;):Add(Bird, &quot;BirdRemoteFunction&quot;) function Bird.new(inst) local self = setmetatable(BaseObject.new(inst), Bird) self:PromiseRemoteFunction():Then(function(remoteFunction) task.spawn(function() remoteFunction:InvokeServer() -- or whatever end) end) return self end   ","version":null,"tagName":"h3"},{"title":"PromiseRemoteFunction​","type":1,"pageTitle":"PromiseRemoteFunctionMixin","url":"/NevermoreEngine/api/PromiseRemoteFunctionMixin#PromiseRemoteFunction","content":"&lt;/&gt; PromiseRemoteFunctionMixin:PromiseRemoteFunction() → Promise&lt;RemoteFunction &gt; Returns a promise that returns a remote function ","version":null,"tagName":"h3"},{"title":"PromiseRetryUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PromiseRetryUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PromiseRetryUtils","url":"/NevermoreEngine/api/PromiseRetryUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"retry​","type":1,"pageTitle":"PromiseRetryUtils","url":"/NevermoreEngine/api/PromiseRetryUtils#retry","content":"&lt;/&gt; PromiseRetryUtils.retry( callback: function,-- Callback that returns a promise options: RetryOptions-- Options for retrying ) → Promise&lt;T&gt; Returns a promise that will retry the given callback until it succeeds or the max attempts is reached. ","version":null,"tagName":"h3"},{"title":"PromiseUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PromiseUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PromiseUtils","url":"/NevermoreEngine/api/PromiseUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"any​","type":1,"pageTitle":"PromiseUtils","url":"/NevermoreEngine/api/PromiseUtils#any","content":"&lt;/&gt; PromiseUtils.any(promises: {Promise&lt;T&gt;}) → Promise&lt;T&gt;-- Promise that resolves with first result Returns the value of the first promise resolved  ","version":null,"tagName":"h3"},{"title":"delayed​","type":1,"pageTitle":"PromiseUtils","url":"/NevermoreEngine/api/PromiseUtils#delayed","content":"&lt;/&gt; PromiseUtils.delayed(seconds: number) → Promise Returns a promise that will resolve after the set amount of seconds  ","version":null,"tagName":"h3"},{"title":"all​","type":1,"pageTitle":"PromiseUtils","url":"/NevermoreEngine/api/PromiseUtils#all","content":"&lt;/&gt; PromiseUtils.all(promises: {Promise&lt;T&gt;}) → Promise&lt;T&gt; Executes all promises. If any fails, the result will be rejected. However, it yields until every promise is complete. WARNING Passing in a spare array (i.e. {nil, promise}) will result in undefined behavior here.  ","version":null,"tagName":"h3"},{"title":"firstSuccessOrLastFailure​","type":1,"pageTitle":"PromiseUtils","url":"/NevermoreEngine/api/PromiseUtils#firstSuccessOrLastFailure","content":"&lt;/&gt; PromiseUtils.firstSuccessOrLastFailure(promises: {Promise&lt;T&gt;}) → Promise.Promise&lt;T...&gt; Keeps on trying promises until one of them succeeds, or reports the last failure.  ","version":null,"tagName":"h3"},{"title":"combine​","type":1,"pageTitle":"PromiseUtils","url":"/NevermoreEngine/api/PromiseUtils#combine","content":"&lt;/&gt; PromiseUtils.combine(stateTable: any) → Promise&lt;any&gt; Combines the result of promises together  ","version":null,"tagName":"h3"},{"title":"invert​","type":1,"pageTitle":"PromiseUtils","url":"/NevermoreEngine/api/PromiseUtils#invert","content":"&lt;/&gt; PromiseUtils.invert(promise: Promise&lt;T&gt;) → Promise&lt;T&gt; Inverts the result of a promise, turning a resolved promise into a rejected one, and a rejected one into a resolved one.  ","version":null,"tagName":"h3"},{"title":"fromSignal​","type":1,"pageTitle":"PromiseUtils","url":"/NevermoreEngine/api/PromiseUtils#fromSignal","content":"&lt;/&gt; PromiseUtils.fromSignal(signal: Signal&lt;T&gt;) → Promise&lt;T&gt; Creates a promise from a signal  ","version":null,"tagName":"h3"},{"title":"timeout​","type":1,"pageTitle":"PromiseUtils","url":"/NevermoreEngine/api/PromiseUtils#timeout","content":"&lt;/&gt; PromiseUtils.timeout( timeoutTime: number, fromPromise: Promise&lt;T&gt; ) → Promise&lt;T&gt; Creates a new promise from the given promise that will reject after the given timeoutTime ","version":null,"tagName":"h3"},{"title":"promiseWait","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/promiseWait","content":"promiseWait Wraps the task.delay() API in a promise","keywords":"","version":null},{"title":"PromptQueue","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PromptQueue","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PromptQueue","url":"/NevermoreEngine/api/PromptQueue#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"PromptQueue","url":"/NevermoreEngine/api/PromptQueue#new","content":"&lt;/&gt; PromptQueue.new() → PromptQueue Constructs a new prompt queue  ","version":null,"tagName":"h3"},{"title":"Queue​","type":1,"pageTitle":"PromptQueue","url":"/NevermoreEngine/api/PromptQueue#Queue","content":"&lt;/&gt; PromptQueue.Queue( self: PromptQueue, transitionModel: TransitionModel ) → Promise.Promise&lt;()&gt; Queues a transition model to be shown  ","version":null,"tagName":"h3"},{"title":"HasItems​","type":1,"pageTitle":"PromptQueue","url":"/NevermoreEngine/api/PromptQueue#HasItems","content":"&lt;/&gt; PromptQueue.HasItems(self: PromptQueue) → boolean Returns if the queue has any items  ","version":null,"tagName":"h3"},{"title":"Clear​","type":1,"pageTitle":"PromptQueue","url":"/NevermoreEngine/api/PromptQueue#Clear","content":"&lt;/&gt; PromptQueue.Clear( self: PromptQueue, doNotAnimate: boolean? ) → () Clears the current queue  ","version":null,"tagName":"h3"},{"title":"HideCurrent​","type":1,"pageTitle":"PromptQueue","url":"/NevermoreEngine/api/PromptQueue#HideCurrent","content":"&lt;/&gt; PromptQueue.HideCurrent( self: PromptQueue, doNotAnimate: boolean? ) → Promise Promises the current prompt to be hidden  ","version":null,"tagName":"h3"},{"title":"IsShowing​","type":1,"pageTitle":"PromptQueue","url":"/NevermoreEngine/api/PromptQueue#IsShowing","content":"&lt;/&gt; PromptQueue.IsShowing(self: PromptQueue) → boolean Returns whether or not the PromptQueue is currently showing its contents.  ","version":null,"tagName":"h3"},{"title":"ObserveIsShowing​","type":1,"pageTitle":"PromptQueue","url":"/NevermoreEngine/api/PromptQueue#ObserveIsShowing","content":"&lt;/&gt; PromptQueue.ObserveIsShowing(self: PromptQueue) → Observable&lt;boolean&gt; Observes the current state of the PromptQueue, emitting true when showing and false if not. ","version":null,"tagName":"h3"},{"title":"PropertyValue","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PropertyValue","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"PropertyValue","url":"/NevermoreEngine/api/PropertyValue#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"PropertyValue","url":"/NevermoreEngine/api/PropertyValue#new","content":"&lt;/&gt; PropertyValue.new( instance: Instance , propertyName: string ) → PropertyValue Creates a new PropertyValue  ","version":null,"tagName":"h3"},{"title":"ObserveBrio​","type":1,"pageTitle":"PropertyValue","url":"/NevermoreEngine/api/PropertyValue#ObserveBrio","content":"&lt;/&gt; PropertyValue.ObserveBrio( self: PropertyValue&lt;T&gt;, condition: Rx.Predicate&lt;T&gt;? ) → Observable&lt;Brio&lt;T&gt;&gt; Observes the property of the object.  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"PropertyValue","url":"/NevermoreEngine/api/PropertyValue#Observe","content":"&lt;/&gt; PropertyValue.Observe(self: PropertyValue&lt;T&gt;) → Observable&lt;any&gt; Observes the property of the object. ","version":null,"tagName":"h3"},{"title":"ProximityPromptInputUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ProximityPromptInputUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ProximityPromptInputUtils","url":"/NevermoreEngine/api/ProximityPromptInputUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"newInputKeyMapFromPrompt​","type":1,"pageTitle":"ProximityPromptInputUtils","url":"/NevermoreEngine/api/ProximityPromptInputUtils#newInputKeyMapFromPrompt","content":"&lt;/&gt; ProximityPromptInputUtils.newInputKeyMapFromPrompt(prompt: ProximityPrompt ) → InputKeyMapList Creates an InputKeyMapList from a proximity prompt.  ","version":null,"tagName":"h3"},{"title":"configurePromptFromInputKeyMap​","type":1,"pageTitle":"ProximityPromptInputUtils","url":"/NevermoreEngine/api/ProximityPromptInputUtils#configurePromptFromInputKeyMap","content":"&lt;/&gt; ProximityPromptInputUtils.configurePromptFromInputKeyMap( prompt: ProximityPrompt , inputKeyMapList: InputKeyMapList ) → () Sets the key codes for a proximity prompt to match an inputKeyMapList  ","version":null,"tagName":"h3"},{"title":"getFirstInputKeyCode​","type":1,"pageTitle":"ProximityPromptInputUtils","url":"/NevermoreEngine/api/ProximityPromptInputUtils#getFirstInputKeyCode","content":"&lt;/&gt; ProximityPromptInputUtils.getFirstInputKeyCode( inputKeyMapList: InputKeyMapList, inputModeType: InputModeType ) → KeyCode?  Picks the first keyCode that matches the inputModeType. ","version":null,"tagName":"h3"},{"title":"PushCamera","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PushCamera","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"PushCamera","url":"/NevermoreEngine/api/PushCamera#properties","content":" ","version":null,"tagName":"h2"},{"title":"CameraState​","type":1,"pageTitle":"PushCamera","url":"/NevermoreEngine/api/PushCamera#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; PushCamera.CameraState: CameraState The current state. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"PushCamera","url":"/NevermoreEngine/api/PushCamera#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"PushCamera","url":"/NevermoreEngine/api/PushCamera#new","content":"&lt;/&gt; PushCamera.new() → PushCamera Constructs a new PushCamera  ","version":null,"tagName":"h3"},{"title":"RotateXY​","type":1,"pageTitle":"PushCamera","url":"/NevermoreEngine/api/PushCamera#RotateXY","content":"&lt;/&gt; PushCamera.RotateXY( self: PushCamera, xzrotVector: Vector2 -- The delta rotation to apply ) → ()   ","version":null,"tagName":"h3"},{"title":"StopRotateBack​","type":1,"pageTitle":"PushCamera","url":"/NevermoreEngine/api/PushCamera#StopRotateBack","content":"&lt;/&gt; PushCamera.StopRotateBack(self: PushCamera) → () Prevents the rotation back. You need to call this every frame you want to prevent rotation.  ","version":null,"tagName":"h3"},{"title":"Reset​","type":1,"pageTitle":"PushCamera","url":"/NevermoreEngine/api/PushCamera#Reset","content":"&lt;/&gt; PushCamera.Reset(self: PushCamera) → () Resets to default position automatically ","version":null,"tagName":"h3"},{"title":"PseudoLocalize","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/PseudoLocalize","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"PseudoLocalize","url":"/NevermoreEngine/api/PseudoLocalize#properties","content":" ","version":null,"tagName":"h2"},{"title":"PSEUDO_CHARACTER_MAP​","type":1,"pageTitle":"PseudoLocalize","url":"/NevermoreEngine/api/PseudoLocalize#PSEUDO_CHARACTER_MAP","content":"&lt;/&gt; PseudoLocalize.PSEUDO_CHARACTER_MAP: {[string]: string} Mapping of English characters to pseudo localized characters. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"PseudoLocalize","url":"/NevermoreEngine/api/PseudoLocalize#functions","content":" ","version":null,"tagName":"h2"},{"title":"pseudoLocalize​","type":1,"pageTitle":"PseudoLocalize","url":"/NevermoreEngine/api/PseudoLocalize#pseudoLocalize","content":"&lt;/&gt; PseudoLocalize.pseudoLocalize( line: string-- The line to translate ) → string-- The translated line Translates a line into pseudo text while maintaining params  ","version":null,"tagName":"h3"},{"title":"getDefaultPseudoLocaleId​","type":1,"pageTitle":"PseudoLocalize","url":"/NevermoreEngine/api/PseudoLocalize#getDefaultPseudoLocaleId","content":"&lt;/&gt; PseudoLocalize.getDefaultPseudoLocaleId() → string Gets the default pseudo locale string.  ","version":null,"tagName":"h3"},{"title":"addToLocalizationTable​","type":1,"pageTitle":"PseudoLocalize","url":"/NevermoreEngine/api/PseudoLocalize#addToLocalizationTable","content":"&lt;/&gt; PseudoLocalize.addToLocalizationTable( localizationTable: LocalizationTable ,-- LocalizationTable to add to. preferredLocaleId: string?,-- Preferred locale to use. Defaults to &quot;qlp-pls&quot; preferredFromLocale: string?-- Preferred from locale. Defaults to &quot;en-us&quot; ) → string-- The translated line Parses a localization table and adds a pseudo localized locale to the table. ","version":null,"tagName":"h3"},{"title":"QFrame","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/QFrame","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"QFrame","url":"/NevermoreEngine/api/QFrame#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"QFrame","url":"/NevermoreEngine/api/QFrame#new","content":"&lt;/&gt; QFrame.new( x: number?, y: number?, z: number?, W: number?, X: number?, Y: number?, Z: number? ) → QFrame Constructs a new QFrame  ","version":null,"tagName":"h3"},{"title":"isQFrame​","type":1,"pageTitle":"QFrame","url":"/NevermoreEngine/api/QFrame#isQFrame","content":"&lt;/&gt; QFrame.isQFrame(value: any) → boolean Returns whether a value is a QFrame  ","version":null,"tagName":"h3"},{"title":"fromCFrameClosestTo​","type":1,"pageTitle":"QFrame","url":"/NevermoreEngine/api/QFrame#fromCFrameClosestTo","content":"&lt;/&gt; QFrame.fromCFrameClosestTo( cframe: CFrame , closestTo: QFrame ) → QFrame Gets the QFrame closest to that CFrame  ","version":null,"tagName":"h3"},{"title":"fromVector3​","type":1,"pageTitle":"QFrame","url":"/NevermoreEngine/api/QFrame#fromVector3","content":"&lt;/&gt; QFrame.fromVector3( vector: Vector3 , qFrame: QFrame ) → QFrame Constructs a QFrame from a position and another QFrame rotation.  ","version":null,"tagName":"h3"},{"title":"toCFrame​","type":1,"pageTitle":"QFrame","url":"/NevermoreEngine/api/QFrame#toCFrame","content":"&lt;/&gt; QFrame.toCFrame(self: QFrame) → CFrame?  Converts the QFrame to a CFrame  ","version":null,"tagName":"h3"},{"title":"toPosition​","type":1,"pageTitle":"QFrame","url":"/NevermoreEngine/api/QFrame#toPosition","content":"&lt;/&gt; QFrame.toPosition(self: QFrame) → Vector3  Converts the QFrame to a Vector3 position  ","version":null,"tagName":"h3"},{"title":"isNAN​","type":1,"pageTitle":"QFrame","url":"/NevermoreEngine/api/QFrame#isNAN","content":"&lt;/&gt; QFrame.isNAN(a: QFrame) → boolean Returns true if the QFrame contains a NaN value.  ","version":null,"tagName":"h3"},{"title":"__unm​","type":1,"pageTitle":"QFrame","url":"/NevermoreEngine/api/QFrame#__unm","content":"&lt;/&gt; QFrame.__unm(a: QFrame) → QFrame Inverts the QFrame  ","version":null,"tagName":"h3"},{"title":"__add​","type":1,"pageTitle":"QFrame","url":"/NevermoreEngine/api/QFrame#__add","content":"&lt;/&gt; QFrame.__add( a: QFrame, b: QFrame ) → QFrame Adds the QFrames together  ","version":null,"tagName":"h3"},{"title":"__sub​","type":1,"pageTitle":"QFrame","url":"/NevermoreEngine/api/QFrame#__sub","content":"&lt;/&gt; QFrame.__sub( a: QFrame, b: QFrame ) → QFrame Subtracts the QFrames together  ","version":null,"tagName":"h3"},{"title":"__pow​","type":1,"pageTitle":"QFrame","url":"/NevermoreEngine/api/QFrame#__pow","content":"&lt;/&gt; QFrame.__pow( a: QFrame, b: number ) → QFrame Takes the QFrame to the power, using quaternion power formula.  ","version":null,"tagName":"h3"},{"title":"__mul​","type":1,"pageTitle":"QFrame","url":"/NevermoreEngine/api/QFrame#__mul","content":"&lt;/&gt; QFrame.__mul( a: QFrame | number, b: QFrame | number ) → QFrame Multiplies the QFrames together  ","version":null,"tagName":"h3"},{"title":"__div​","type":1,"pageTitle":"QFrame","url":"/NevermoreEngine/api/QFrame#__div","content":"&lt;/&gt; QFrame.__div( a: QFrame, b: number ) → QFrame Divides the QFrame by the number  ","version":null,"tagName":"h3"},{"title":"__eq​","type":1,"pageTitle":"QFrame","url":"/NevermoreEngine/api/QFrame#__eq","content":"&lt;/&gt; QFrame.__eq( a: QFrame, b: QFrame ) → boolean Compares the QFrame for equality. ","version":null,"tagName":"h3"},{"title":"qGUI","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/qGUI","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"qGUI","url":"/NevermoreEngine/api/qGUI#functions","content":" ","version":null,"tagName":"h2"},{"title":"AddNinePatch​","type":1,"pageTitle":"qGUI","url":"/NevermoreEngine/api/qGUI#AddNinePatch","content":"&lt;/&gt; qGUI.AddNinePatch( frame: Frame ,-- The frame to texturize image: string,-- The URL of the image in question imageSize: Vector2 ,-- The size of the image overall, suggested to be 99/divisible by 3. Vector2 value. radius: number,-- the radius you want the image to be at type: &quot;ImageLabel&quot; | &quot;ImageButton&quot;,-- The type (Class) that the frame should be, either an ImageLabel or an ImageButton properties: any ) → () Makes a NinePatch in the frame, with the image. ","version":null,"tagName":"h3"},{"title":"Quaternion","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Quaternion","content":"Quaternion Quaternion data type Author: xXxMoNkEyMaNxXx","keywords":"","version":null},{"title":"QuaternionObject","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/QuaternionObject","content":"QuaternionObject Quaternion data type object Author: xXxMoNkEyMaNxXx","keywords":"","version":null},{"title":"Queue","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Queue","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Queue","url":"/NevermoreEngine/api/Queue#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Queue","url":"/NevermoreEngine/api/Queue#new","content":"&lt;/&gt; Queue.new() → Queue&lt;T&gt; Constructs a new queue  ","version":null,"tagName":"h3"},{"title":"__len​","type":1,"pageTitle":"Queue","url":"/NevermoreEngine/api/Queue#__len","content":"&lt;/&gt; Queue.__len(self: Queue&lt;T&gt;) → number Gets the queues length  ","version":null,"tagName":"h3"},{"title":"GetCount​","type":1,"pageTitle":"Queue","url":"/NevermoreEngine/api/Queue#GetCount","content":"&lt;/&gt; Queue.GetCount(self: Queue&lt;T&gt;) → number Returns the count of the queue  ","version":null,"tagName":"h3"},{"title":"PushLeft​","type":1,"pageTitle":"Queue","url":"/NevermoreEngine/api/Queue#PushLeft","content":"&lt;/&gt; Queue.PushLeft( self: Queue&lt;T&gt;, value: T ) → () Pushes an entry to the left of the queue  ","version":null,"tagName":"h3"},{"title":"PushRight​","type":1,"pageTitle":"Queue","url":"/NevermoreEngine/api/Queue#PushRight","content":"&lt;/&gt; Queue.PushRight( self: Queue&lt;T&gt;, value: T ) → () Pushes an entry to the right of the queue  ","version":null,"tagName":"h3"},{"title":"PopLeft​","type":1,"pageTitle":"Queue","url":"/NevermoreEngine/api/Queue#PopLeft","content":"&lt;/&gt; Queue.PopLeft(self: Queue&lt;T&gt;) → T Pops an entry from the left of the queue  ","version":null,"tagName":"h3"},{"title":"PopRight​","type":1,"pageTitle":"Queue","url":"/NevermoreEngine/api/Queue#PopRight","content":"&lt;/&gt; Queue.PopRight(self: Queue&lt;T&gt;) → T Pops an entry from the right of the queue  ","version":null,"tagName":"h3"},{"title":"IsEmpty​","type":1,"pageTitle":"Queue","url":"/NevermoreEngine/api/Queue#IsEmpty","content":"&lt;/&gt; Queue.IsEmpty(self: Queue&lt;T&gt;) → boolean Returns true if the queue is empty ","version":null,"tagName":"h3"},{"title":"RacketingRopeConstraint","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RacketingRopeConstraint","content":"RacketingRopeConstraint Tries to racket a rope constraint back down to a reasonable length. Use RopeConstraint.WinchEnabled","keywords":"","version":null},{"title":"RacketingRopeConstraintInterface","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RacketingRopeConstraintInterface","content":"RacketingRopeConstraintInterface","keywords":"","version":null},{"title":"Ragdoll","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Ragdoll","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Ragdoll","url":"/NevermoreEngine/api/Ragdoll#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Ragdoll","url":"/NevermoreEngine/api/Ragdoll#new","content":"&lt;/&gt; Ragdoll.new( humanoid: Humanoid , _serviceBag: ServiceBag ) → Ragdoll Constructs a new Ragdoll. Should be done via Binder. See RagdollBindersServer. ","version":null,"tagName":"h3"},{"title":"R15Utils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/R15Utils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#functions","content":" ","version":null,"tagName":"h2"},{"title":"searchForRigAttachment​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#searchForRigAttachment","content":"&lt;/&gt; R15Utils.searchForRigAttachment( character: Model , partName: string, attachmentName: string ) → Attachment?  Searches the rig for an attachment  ","version":null,"tagName":"h3"},{"title":"getRigMotor​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#getRigMotor","content":"&lt;/&gt; R15Utils.getRigMotor( character: Model , partName: string, motorName: string ) → Motor6D?  Finds a rig motor  ","version":null,"tagName":"h3"},{"title":"getUpperTorso​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#getUpperTorso","content":"&lt;/&gt; R15Utils.getUpperTorso(character: Model ) → BasePart?  Retrieves the upper torso  ","version":null,"tagName":"h3"},{"title":"getLowerTorso​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#getLowerTorso","content":"&lt;/&gt; R15Utils.getLowerTorso(character: Model ) → BasePart?  Retrieves the lower torso  ","version":null,"tagName":"h3"},{"title":"getWaistJoint​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#getWaistJoint","content":"&lt;/&gt; R15Utils.getWaistJoint(character: Model ) → Motor6D?  Retrieves the waist joint  ","version":null,"tagName":"h3"},{"title":"getNeckJoint​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#getNeckJoint","content":"&lt;/&gt; R15Utils.getNeckJoint(character: Model ) → Motor6D?  Retrieves the neck joint  ","version":null,"tagName":"h3"},{"title":"getHand​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#getHand","content":"&lt;/&gt; R15Utils.getHand( character: Model , side: &quot;Left&quot; | &quot;Right&quot; ) → BasePart?  Retrieves hand attachment  ","version":null,"tagName":"h3"},{"title":"getGripWeld​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#getGripWeld","content":"&lt;/&gt; R15Utils.getGripWeld( character: Model , side: &quot;Left&quot; | &quot;Right&quot; ) → Motor6D?  Retrieves grip weld  ","version":null,"tagName":"h3"},{"title":"getGripWeldName​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#getGripWeldName","content":"&lt;/&gt; R15Utils.getGripWeldName(side: &quot;Left&quot; | &quot;Right&quot;) → &quot;LeftGrip&quot; | &quot;RightGrip&quot; Retrieves grip weld name for a given side  ","version":null,"tagName":"h3"},{"title":"getHandName​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#getHandName","content":"&lt;/&gt; R15Utils.getHandName(side: &quot;Left&quot; | &quot;Right&quot;) → &quot;LeftHand&quot; | &quot;RightHand&quot; Retrieves grip weld name for a given side  ","version":null,"tagName":"h3"},{"title":"getGripAttachmentName​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#getGripAttachmentName","content":"&lt;/&gt; R15Utils.getGripAttachmentName(side: &quot;Left&quot; | &quot;Right&quot;) → &quot;LeftGripAttachment&quot; | &quot;RightGripAttachment&quot; Retrieves the grip attachment name  ","version":null,"tagName":"h3"},{"title":"getShoulderRigAttachment​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#getShoulderRigAttachment","content":"&lt;/&gt; R15Utils.getShoulderRigAttachment( character: Model , side: &quot;Left&quot; | &quot;Right&quot; ) → Attachment?  Retrieves the shoulder rig attachment  ","version":null,"tagName":"h3"},{"title":"getGripAttachment​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#getGripAttachment","content":"&lt;/&gt; R15Utils.getGripAttachment( character: Model , side: &quot;Left&quot; | &quot;Right&quot; ) → Attachment?  Retrieves the grip attachment for the given side  ","version":null,"tagName":"h3"},{"title":"getExpectedRootPartYOffset​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#getExpectedRootPartYOffset","content":"&lt;/&gt; R15Utils.getExpectedRootPartYOffset(humanoid: Humanoid ) → number? Retrieves the expected root part y offset for a humanoid  ","version":null,"tagName":"h3"},{"title":"getRigLength​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#getRigLength","content":"&lt;/&gt; R15Utils.getRigLength( character: Model , partName: string, rigAttachment0: string, rigAttachment1: string ) → number? Gets the length of a segment for a rig  ","version":null,"tagName":"h3"},{"title":"addLengthsOrNil​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#addLengthsOrNil","content":"&lt;/&gt; R15Utils.addLengthsOrNil(lengths: {number?}) → number? Adds the lengths together  ","version":null,"tagName":"h3"},{"title":"getUpperArmRigLength​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#getUpperArmRigLength","content":"&lt;/&gt; R15Utils.getUpperArmRigLength( character: Model , side: &quot;Left&quot; | &quot;Right&quot; ) → number? Retrieves the upper arm length for a character  ","version":null,"tagName":"h3"},{"title":"getLowerArmRigLength​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#getLowerArmRigLength","content":"&lt;/&gt; R15Utils.getLowerArmRigLength( character: Model , side: &quot;Left&quot; | &quot;Right&quot; ) → number? Retrieves the lower arm length for a character  ","version":null,"tagName":"h3"},{"title":"getWristToGripLength​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#getWristToGripLength","content":"&lt;/&gt; R15Utils.getWristToGripLength( character: Model , side: &quot;Left&quot; | &quot;Right&quot; ) → number? Retrieves the wrist to hand length  ","version":null,"tagName":"h3"},{"title":"getHumanoidScaleProperty​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#getHumanoidScaleProperty","content":"&lt;/&gt; R15Utils.getHumanoidScaleProperty( humanoid: Humanoid , scaleValueName: string ) → number? Retrieves the humanoid scale property  ","version":null,"tagName":"h3"},{"title":"getArmRigToGripLength​","type":1,"pageTitle":"R15Utils","url":"/NevermoreEngine/api/R15Utils#getArmRigToGripLength","content":"&lt;/&gt; R15Utils.getArmRigToGripLength( character: Model , side: &quot;Left&quot; | &quot;Right&quot; ) → number? Computes the length of an arm for a given character ","version":null,"tagName":"h3"},{"title":"RadialImage","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RadialImage","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RadialImage","url":"/NevermoreEngine/api/RadialImage#functions","content":" ","version":null,"tagName":"h2"},{"title":"SetImage​","type":1,"pageTitle":"RadialImage","url":"/NevermoreEngine/api/RadialImage#SetImage","content":"&lt;/&gt; RadialImage:SetImage(image: string) → () Sets the image to use for this radial image  ","version":null,"tagName":"h3"},{"title":"SetPercent​","type":1,"pageTitle":"RadialImage","url":"/NevermoreEngine/api/RadialImage#SetPercent","content":"&lt;/&gt; RadialImage:SetPercent(percent: number) → () Sets the percent we're at  ","version":null,"tagName":"h3"},{"title":"SetTransparency​","type":1,"pageTitle":"RadialImage","url":"/NevermoreEngine/api/RadialImage#SetTransparency","content":"&lt;/&gt; RadialImage:SetTransparency(transparency: number) → () Sets the total transparency of the radial image  ","version":null,"tagName":"h3"},{"title":"SetEnabledTransparency​","type":1,"pageTitle":"RadialImage","url":"/NevermoreEngine/api/RadialImage#SetEnabledTransparency","content":"&lt;/&gt; RadialImage:SetEnabledTransparency(transparency: number) → () Sets the enabled transparency for the radial image  ","version":null,"tagName":"h3"},{"title":"SetDisabledTransparency​","type":1,"pageTitle":"RadialImage","url":"/NevermoreEngine/api/RadialImage#SetDisabledTransparency","content":"&lt;/&gt; RadialImage:SetDisabledTransparency(transparency: number) → () Sets the disabled transparency  ","version":null,"tagName":"h3"},{"title":"SetEnabledColor​","type":1,"pageTitle":"RadialImage","url":"/NevermoreEngine/api/RadialImage#SetEnabledColor","content":"&lt;/&gt; RadialImage:SetEnabledColor(enabledColor: Color3 ) → () Sets the enabled color  ","version":null,"tagName":"h3"},{"title":"SetDisabledColor​","type":1,"pageTitle":"RadialImage","url":"/NevermoreEngine/api/RadialImage#SetDisabledColor","content":"&lt;/&gt; RadialImage:SetDisabledColor(disabledColor: Color3 ) → () Sets the disabled color ","version":null,"tagName":"h3"},{"title":"RagdollableBase","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollableBase","content":"RagdollableBase","keywords":"","version":null},{"title":"RagdollableClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollableClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RagdollableClient","url":"/NevermoreEngine/api/RagdollableClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"RagdollableClient","url":"/NevermoreEngine/api/RagdollableClient#new","content":"&lt;/&gt; RagdollableClient.new( humanoid: Humanoid , serviceBag: ServiceBag ) → RagdollableClient Constructs a new RagdollableClient. Should be done via Binder. See RagdollBindersClient. ","version":null,"tagName":"h3"},{"title":"Ragdollable","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Ragdollable","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Ragdollable","url":"/NevermoreEngine/api/Ragdollable#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Ragdollable","url":"/NevermoreEngine/api/Ragdollable#new","content":"&lt;/&gt; Ragdollable.new( humanoid: Humanoid , serviceBag: ServiceBag ) → Ragdollable Constructs a new Ragdollable. This class exports a Binder. ","version":null,"tagName":"h3"},{"title":"RagdollAdditionalAttachmentUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollAdditionalAttachmentUtils","content":"RagdollAdditionalAttachmentUtils","keywords":"","version":null},{"title":"RagdollableInterface","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollableInterface","content":"RagdollableInterface","keywords":"","version":null},{"title":"RagdollBallSocketUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollBallSocketUtils","content":"RagdollBallSocketUtils Instead of modifying this file, consider setting attributes on each motor on humanoid join.","keywords":"","version":null},{"title":"RagdollBindersClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollBindersClient","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"RagdollBindersClient","url":"/NevermoreEngine/api/RagdollBindersClient#properties","content":" ","version":null,"tagName":"h2"},{"title":"Ragdoll​","type":1,"pageTitle":"RagdollBindersClient","url":"/NevermoreEngine/api/RagdollBindersClient#Ragdoll","content":"&lt;/&gt; RagdollBindersClient.Ragdoll: Binder&lt;RagdollClient&gt; Apply this binder to a humanoid to ragdoll it. Humanoid must already have Ragdollable defined. local ragdoll = serviceBag:GetService(RagdollBindersClient).Ragdoll:Get(humanoid) if ragdoll then print(&quot;Is ragdolled&quot;) else print(&quot;Not ragdolled&quot;) end   ","version":null,"tagName":"h3"},{"title":"Ragdollable​","type":1,"pageTitle":"RagdollBindersClient","url":"/NevermoreEngine/api/RagdollBindersClient#Ragdollable","content":"&lt;/&gt; RagdollBindersClient.Ragdollable: Binder&lt;RagdollableClient&gt; Enables ragdolling on a humanoid.  ","version":null,"tagName":"h3"},{"title":"RagdollaRagdollHumanoidOnDeathble​","type":1,"pageTitle":"RagdollBindersClient","url":"/NevermoreEngine/api/RagdollBindersClient#RagdollaRagdollHumanoidOnDeathble","content":"&lt;/&gt; RagdollBindersClient.RagdollaRagdollHumanoidOnDeathble: Binder&lt;RagdollHumanoidOnDeathClient&gt; Automatically applies ragdoll upon humanoid death.  ","version":null,"tagName":"h3"},{"title":"RagdollHumanoidOnFall​","type":1,"pageTitle":"RagdollBindersClient","url":"/NevermoreEngine/api/RagdollBindersClient#RagdollHumanoidOnFall","content":"&lt;/&gt; RagdollBindersClient.RagdollHumanoidOnFall: Binder&lt;RagdollHumanoidOnFallClient&gt; Automatically applies ragdoll upon humanoid fall. ","version":null,"tagName":"h3"},{"title":"RagdollCameraShake","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollCameraShake","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RagdollCameraShake","url":"/NevermoreEngine/api/RagdollCameraShake#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"RagdollCameraShake","url":"/NevermoreEngine/api/RagdollCameraShake#new","content":"&lt;/&gt; RagdollCameraShake.new( humanoid: Humanoid , serviceBag: ServiceBag ) → RagdollCameraShake Constructs a new RagdollCameraShake. This class exports a Binder. ","version":null,"tagName":"h3"},{"title":"RagdollCameraShakeClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollCameraShakeClient","content":"RagdollCameraShakeClient","keywords":"","version":null},{"title":"RagdollBindersServer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollBindersServer","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"RagdollBindersServer","url":"/NevermoreEngine/api/RagdollBindersServer#properties","content":" ","version":null,"tagName":"h2"},{"title":"Ragdoll​","type":1,"pageTitle":"RagdollBindersServer","url":"/NevermoreEngine/api/RagdollBindersServer#Ragdoll","content":"&lt;/&gt; RagdollBindersServer.Ragdoll: Binder&lt;Ragdoll&gt; Apply this Binder to a humanoid to ragdoll it. Humanoid must already have Ragdollable defined. local ragdollBinder = serviceBag:GetService(RagdollBindersServer).Ragdoll local ragdoll = ragdollBinder:Get(humanoid) if ragdoll then print(&quot;Is ragdolled&quot;) ragdollBinder:Unbind(humanoid) else print(&quot;Not ragdolled&quot;) ragdollBinder:Bind(humanoid) end You can also use RxBinderUtils.observeBoundClass to observe whether a humanoid is ragdolled using an Observable. INFO Like any usage of Observable, be sure to give the Subscription to a [Maid] (or call Subscription.Destroy on it) once done with the event connection. local maid = Maid.new() local ragdollBinder = serviceBag:GetService(RagdollBindersServer).Ragdoll maid:GiveTask(RxBinderUtils.observeBoundClass(ragdollBinder, humanoid):Subscribe(function(ragdoll) if ragdoll then print(&quot;Ragdolled!&quot;) else print(&quot;Not ragdolled&quot;) end end))   ","version":null,"tagName":"h3"},{"title":"Ragdollable​","type":1,"pageTitle":"RagdollBindersServer","url":"/NevermoreEngine/api/RagdollBindersServer#Ragdollable","content":"&lt;/&gt; RagdollBindersServer.Ragdollable: PlayerHumanoidBinder&lt;Ragdollable&gt; Enables ragdolling on a humanoid.  ","version":null,"tagName":"h3"},{"title":"RagdollHumanoidOnDeath​","type":1,"pageTitle":"RagdollBindersServer","url":"/NevermoreEngine/api/RagdollBindersServer#RagdollHumanoidOnDeath","content":"&lt;/&gt; RagdollBindersServer.RagdollHumanoidOnDeath: PlayerHumanoidBinder&lt;RagdollHumanoidOnDeath&gt; Automatically applies ragdoll upon humanoid death.  ","version":null,"tagName":"h3"},{"title":"RagdollHumanoidOnFall​","type":1,"pageTitle":"RagdollBindersServer","url":"/NevermoreEngine/api/RagdollBindersServer#RagdollHumanoidOnFall","content":"&lt;/&gt; RagdollBindersServer.RagdollHumanoidOnFall: PlayerHumanoidBinder&lt;RagdollHumanoidOnFall&gt; Automatically applies ragdoll upon humanoid fall.  ","version":null,"tagName":"h3"},{"title":"UnragdollAutomatically​","type":1,"pageTitle":"RagdollBindersServer","url":"/NevermoreEngine/api/RagdollBindersServer#UnragdollAutomatically","content":"&lt;/&gt; RagdollBindersServer.UnragdollAutomatically: PlayerHumanoidBinder&lt;UnragdollAutomatically&gt; Automatically unragdolls the humanoid. ","version":null,"tagName":"h3"},{"title":"RagdollCollisionUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollCollisionUtils","content":"RagdollCollisionUtils","keywords":"","version":null},{"title":"RagdollClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RagdollClient","url":"/NevermoreEngine/api/RagdollClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"RagdollClient","url":"/NevermoreEngine/api/RagdollClient#new","content":"&lt;/&gt; RagdollClient.new( humanoid: Humanoid , serviceBag: ServiceBag ) → RagdollClient Constructs a new RagdollClient. This module exports a Binder. ","version":null,"tagName":"h3"},{"title":"RagdollHumanoidOnDeath","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollHumanoidOnDeath","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RagdollHumanoidOnDeath","url":"/NevermoreEngine/api/RagdollHumanoidOnDeath#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"RagdollHumanoidOnDeath","url":"/NevermoreEngine/api/RagdollHumanoidOnDeath#new","content":"&lt;/&gt; RagdollHumanoidOnDeath.new( humanoid: Humanoid , serviceBag: ServiceBag ) → RagdollHumanoidOnDeath Constructs a new RagdollHumanoidOnDeath. This class exports a Binder. ","version":null,"tagName":"h3"},{"title":"RagdollHumanoidOnDeathClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollHumanoidOnDeathClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RagdollHumanoidOnDeathClient","url":"/NevermoreEngine/api/RagdollHumanoidOnDeathClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"RagdollHumanoidOnDeathClient","url":"/NevermoreEngine/api/RagdollHumanoidOnDeathClient#new","content":"&lt;/&gt; RagdollHumanoidOnDeathClient.new( humanoid: Humanoid , serviceBag: ServiceBag ) → RagdollHumanoidOnDeathClient Constructs a new RagdollHumanoidOnDeathClient. This module exports a Binder.  ","version":null,"tagName":"h3"},{"title":"disableParticleEmittersAndFadeOutYielding​","type":1,"pageTitle":"RagdollHumanoidOnDeathClient","url":"/NevermoreEngine/api/RagdollHumanoidOnDeathClient#disableParticleEmittersAndFadeOutYielding","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; RagdollHumanoidOnDeathClient.disableParticleEmittersAndFadeOutYielding( character: Model , duration: number ) → () Disables all particle emitters and fades them out. Yields for the duration. ","version":null,"tagName":"h3"},{"title":"RagdollHumanoidOnFall","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollHumanoidOnFall","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RagdollHumanoidOnFall","url":"/NevermoreEngine/api/RagdollHumanoidOnFall#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"RagdollHumanoidOnFall","url":"/NevermoreEngine/api/RagdollHumanoidOnFall#new","content":"&lt;/&gt; RagdollHumanoidOnFall.new( humanoid: Humanoid , serviceBag: ServiceBag ) → RagdollHumanoidOnFall Constructs a new RagdollHumanoidOnFall. Should be done via Binder. See Ragdoll. ","version":null,"tagName":"h3"},{"title":"RagdollHumanoidOnFallConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollHumanoidOnFallConstants","content":"RagdollHumanoidOnFallConstants Constants for RagdollHumanoidOnFall.","keywords":"","version":null},{"title":"RagdollHumanoidOnFallClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollHumanoidOnFallClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RagdollHumanoidOnFallClient","url":"/NevermoreEngine/api/RagdollHumanoidOnFallClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"RagdollHumanoidOnFallClient","url":"/NevermoreEngine/api/RagdollHumanoidOnFallClient#new","content":"&lt;/&gt; RagdollHumanoidOnFallClient.new( humanoid: Humanoid , serviceBag: ServiceBag ) → RagdollHumanoidOnFallClient Constructs a new RagdollHumanoidOnFallClient. This module exports a Binder. ","version":null,"tagName":"h3"},{"title":"RagdollMotorData","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollMotorData","content":"RagdollMotorData","keywords":"","version":null},{"title":"RagdollMotorLimitData","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollMotorLimitData","content":"RagdollMotorLimitData Holds baseline constants for the Ragdoll TIP Do not modify this file. Instead, do this to apply new reference values. RagdollMotorLimitData.NECK_LIMITS:SetAttributes(character.UpperTorso.Neck, { UpperAngle = 30; }) ","keywords":"","version":null},{"title":"RagdollMotorUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollMotorUtils","content":"RagdollMotorUtils","keywords":"","version":null},{"title":"RagdollService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RagdollService","url":"/NevermoreEngine/api/RagdollService#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"RagdollService","url":"/NevermoreEngine/api/RagdollService#Init","content":"&lt;/&gt; RagdollService:Init(serviceBag: ServiceBag) → () Initializes the ragdoll service on the server. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"SetRagdollOnFall​","type":1,"pageTitle":"RagdollService","url":"/NevermoreEngine/api/RagdollService#SetRagdollOnFall","content":"&lt;/&gt; RagdollService:SetRagdollOnFall(ragdollOnFall: boolean) → () Sets whether ragdolls should ragdoll on fall.  ","version":null,"tagName":"h3"},{"title":"SetRagdollOnDeath​","type":1,"pageTitle":"RagdollService","url":"/NevermoreEngine/api/RagdollService#SetRagdollOnDeath","content":"&lt;/&gt; RagdollService:SetRagdollOnDeath(ragdollOnDeath: boolean) → () Sets whether ragdolls should unragdoll automatically.  ","version":null,"tagName":"h3"},{"title":"SetUnragdollAutomatically​","type":1,"pageTitle":"RagdollService","url":"/NevermoreEngine/api/RagdollService#SetUnragdollAutomatically","content":"&lt;/&gt; RagdollService:SetUnragdollAutomatically(unragdollAutomatically: boolean) → () Sets whether ragdolls should unragdoll automatically. ","version":null,"tagName":"h3"},{"title":"RagdollServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollServiceClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RagdollServiceClient","url":"/NevermoreEngine/api/RagdollServiceClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"RagdollServiceClient","url":"/NevermoreEngine/api/RagdollServiceClient#Init","content":"&lt;/&gt; RagdollServiceClient:Init(serviceBag: ServiceBag) → () Initializes the ragdoll service on the client. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"SetScreenShakeEnabled​","type":1,"pageTitle":"RagdollServiceClient","url":"/NevermoreEngine/api/RagdollServiceClient#SetScreenShakeEnabled","content":"&lt;/&gt; RagdollServiceClient:SetScreenShakeEnabled(value: boolelan) → () Sets screen shake enabled for the local player  ","version":null,"tagName":"h3"},{"title":"GetScreenShakeEnabled​","type":1,"pageTitle":"RagdollServiceClient","url":"/NevermoreEngine/api/RagdollServiceClient#GetScreenShakeEnabled","content":"&lt;/&gt; RagdollServiceClient:GetScreenShakeEnabled() → boolean Returns wheher screenshake is enabled. ","version":null,"tagName":"h3"},{"title":"RagdollServiceConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RagdollServiceConstants","content":"RagdollServiceConstants","keywords":"","version":null},{"title":"RandomSampler","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RandomSampler","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RandomSampler","url":"/NevermoreEngine/api/RandomSampler#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"RandomSampler","url":"/NevermoreEngine/api/RandomSampler#new","content":"&lt;/&gt; RandomSampler.new( samples: {T}-- The list of samples to sample from ) → RandomSampler&lt;T&gt; Constructs a new RandomSampler  ","version":null,"tagName":"h3"},{"title":"SetSamples​","type":1,"pageTitle":"RandomSampler","url":"/NevermoreEngine/api/RandomSampler#SetSamples","content":"&lt;/&gt; RandomSampler.SetSamples( self: RandomSampler&lt;T&gt;, samples: {T}-- The list of samples to sample from ) → () Sets the samples to sample from  ","version":null,"tagName":"h3"},{"title":"Sample​","type":1,"pageTitle":"RandomSampler","url":"/NevermoreEngine/api/RandomSampler#Sample","content":"&lt;/&gt; RandomSampler.Sample(self: RandomSampler&lt;T&gt;) → T-- The sample Samples from the list  ","version":null,"tagName":"h3"},{"title":"Refill​","type":1,"pageTitle":"RandomSampler","url":"/NevermoreEngine/api/RandomSampler#Refill","content":"&lt;/&gt; RandomSampler.Refill(self: RandomSampler&lt;T&gt;) → () Refills the list ","version":null,"tagName":"h3"},{"title":"RandomVector3Utils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RandomVector3Utils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RandomVector3Utils","url":"/NevermoreEngine/api/RandomVector3Utils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getRandomUnitVector​","type":1,"pageTitle":"RandomVector3Utils","url":"/NevermoreEngine/api/RandomVector3Utils#getRandomUnitVector","content":"&lt;/&gt; RandomVector3Utils.getRandomUnitVector() → Vector3  Equal distribution unit vectors around a sphere  ","version":null,"tagName":"h3"},{"title":"gaussianRandom​","type":1,"pageTitle":"RandomVector3Utils","url":"/NevermoreEngine/api/RandomVector3Utils#gaussianRandom","content":"&lt;/&gt; RandomVector3Utils.gaussianRandom( mean: Vector3 ,-- center spread: Vector3 -- std deviation ) → Vector3  Computes a gaussian random vector3.  ","version":null,"tagName":"h3"},{"title":"getDirectedRandomUnitVector​","type":1,"pageTitle":"RandomVector3Utils","url":"/NevermoreEngine/api/RandomVector3Utils#getDirectedRandomUnitVector","content":"&lt;/&gt; RandomVector3Utils.getDirectedRandomUnitVector( direction: Vector3 , angleRad: number-- Angle in radians ) → Vector3  Gets a uniformally distributed random unit vector3 in the direction specified. ","version":null,"tagName":"h3"},{"title":"RandomUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RandomUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RandomUtils","url":"/NevermoreEngine/api/RandomUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"choice​","type":1,"pageTitle":"RandomUtils","url":"/NevermoreEngine/api/RandomUtils#choice","content":"&lt;/&gt; RandomUtils.choice( list: {T}, random: Random? -- Optional ) → T? Picks an option from a list. Returns nil if the list is empty. local options = Players:GetPlayers() local choice = RandomUtils.choice(options) print(choice) Deterministic version: local options = { &quot;apples&quot;, &quot;oranges&quot;, &quot;bananas&quot; } local random = Random.new() print(RandomUtils.choice(options, random)) --&gt; &quot;apples&quot;   ","version":null,"tagName":"h3"},{"title":"shuffledCopy​","type":1,"pageTitle":"RandomUtils","url":"/NevermoreEngine/api/RandomUtils#shuffledCopy","content":"&lt;/&gt; RandomUtils.shuffledCopy( list: {T},-- A new table to copy random: Random? -- Optional random to use when shuffling ) → {T} Creates a copy of the table, but shuffled using fisher-yates shuffle local options = { &quot;apples&quot;, &quot;oranges&quot;, &quot;bananas&quot; } local random = Random.new() print(RandomUtils.shuffledCopy(options)) --&gt; shuffled copy of table print(RandomUtils.shuffledCopy(options, random)) --&gt; deterministic shuffled copy of table   ","version":null,"tagName":"h3"},{"title":"shuffle​","type":1,"pageTitle":"RandomUtils","url":"/NevermoreEngine/api/RandomUtils#shuffle","content":"&lt;/&gt; RandomUtils.shuffle( list: {T}, random: Random? -- Optional random to use when shuffling ) → () Shuffles the list in place using fisher-yates shuffle. local options = { &quot;apples&quot;, &quot;oranges&quot;, &quot;bananas&quot; } local random = Random.new() RandomUtils.shuffle(options, random) print(options) --&gt; deterministic shuffled copy of table RandomUtils.shuffle(options) print(options) --&gt; shuffled table   ","version":null,"tagName":"h3"},{"title":"weightedChoice​","type":1,"pageTitle":"RandomUtils","url":"/NevermoreEngine/api/RandomUtils#weightedChoice","content":"&lt;/&gt; RandomUtils.weightedChoice( list: {T},-- List of options weights: {number},-- Array the same length with weights. random: Random? -- Optional random ) → T?-- May return nil if the list is empty Like RandomUtils.choice but weighted options in a performance friendly way. Takes O(n) time. WARNING A weight of 0 may still be picked, and negative weights may result in undefined behavior. TIP See RandomSampler for a stateful approach where we remove items from the bag. local weights = { 1, 3, 10 } local options = { &quot;a&quot;, &quot;b&quot;, &quot;c&quot; } print(RandomUtils.weightedChoice(options, weights)) --&gt; &quot;c&quot;   ","version":null,"tagName":"h3"},{"title":"gaussianRandom​","type":1,"pageTitle":"RandomUtils","url":"/NevermoreEngine/api/RandomUtils#gaussianRandom","content":"&lt;/&gt; RandomUtils.gaussianRandom( random: Random? -- Optional random to use ) → number Computes the gaussian random function which is the independent probability curve.  ","version":null,"tagName":"h3"},{"title":"randomUnitVector3​","type":1,"pageTitle":"RandomUtils","url":"/NevermoreEngine/api/RandomUtils#randomUnitVector3","content":"&lt;/&gt; RandomUtils.randomUnitVector3( random?: Random? -- Optional random to use ) → Vector3   ","version":null,"tagName":"h3"},{"title":"Raycaster","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Raycaster","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"Raycaster","url":"/NevermoreEngine/api/Raycaster#types","content":" ","version":null,"tagName":"h2"},{"title":"RaycastData​","type":1,"pageTitle":"Raycaster","url":"/NevermoreEngine/api/Raycaster#RaycastData","content":"&lt;/&gt; interface RaycastData { Part: Instance Position: Vector3 Normal: Vector3 Material: Enum.Material } Raycast data used by filter functions of the Raycaster. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Raycaster","url":"/NevermoreEngine/api/Raycaster#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Raycaster","url":"/NevermoreEngine/api/Raycaster#new","content":"&lt;/&gt; Raycaster.new( doIgnoreFunction: (data: RaycastData) → boolean-- Returns true to ignore ) → Raycaster Constructs a new Raycaster.  ","version":null,"tagName":"h3"},{"title":"Ignore​","type":1,"pageTitle":"Raycaster","url":"/NevermoreEngine/api/Raycaster#Ignore","content":"&lt;/&gt; Raycaster.Ignore( self: Raycaster, tableOrInstance: Instance | {Instance } ) → () Ignores the value  ","version":null,"tagName":"h3"},{"title":"FindPartOnRay​","type":1,"pageTitle":"Raycaster","url":"/NevermoreEngine/api/Raycaster#FindPartOnRay","content":"&lt;/&gt; Raycaster.FindPartOnRay( self: Raycaster, ray: Ray ) → RaycastData? Repeats raycasts until exhausted attempts, or a result is found. ","version":null,"tagName":"h3"},{"title":"RateAggregator","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RateAggregator","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RateAggregator","url":"/NevermoreEngine/api/RateAggregator#functions","content":" ","version":null,"tagName":"h2"},{"title":"Promise​","type":1,"pageTitle":"RateAggregator","url":"/NevermoreEngine/api/RateAggregator#Promise","content":"&lt;/&gt; RateAggregator.Promise( self: RateAggregator&lt;TArgs...,T...&gt;, ...: any ) → Observable&lt;T&gt; Observes the aggregated data ","version":null,"tagName":"h3"},{"title":"RbxThumbnailTypes","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RbxThumbnailTypes","content":"RbxThumbnailTypes Canonical RbxThumbnailTypes","keywords":"","version":null},{"title":"RbxAssetUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RbxAssetUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RbxAssetUtils","url":"/NevermoreEngine/api/RbxAssetUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"toRbxAssetId​","type":1,"pageTitle":"RbxAssetUtils","url":"/NevermoreEngine/api/RbxAssetUtils#toRbxAssetId","content":"&lt;/&gt; RbxAssetUtils.toRbxAssetId(id: string | number) → string? Converts a string or number to a string for playback.  ","version":null,"tagName":"h3"},{"title":"isConvertableToRbxAsset​","type":1,"pageTitle":"RbxAssetUtils","url":"/NevermoreEngine/api/RbxAssetUtils#isConvertableToRbxAsset","content":"&lt;/&gt; RbxAssetUtils.isConvertableToRbxAsset(id: string | number) → boolean Returns if it's convertable to a RBXAssetId ","version":null,"tagName":"h3"},{"title":"RaycastUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RaycastUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RaycastUtils","url":"/NevermoreEngine/api/RaycastUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"raycastSingleExit​","type":1,"pageTitle":"RaycastUtils","url":"/NevermoreEngine/api/RaycastUtils#raycastSingleExit","content":"&lt;/&gt; RaycastUtils.raycastSingleExit( origin: Vector3 , direction: Vector3 , part: BasePart ) → RaycastResult What is the first exit along this line segment? Works for non-convex Assumes non-selfintersecting  ","version":null,"tagName":"h3"},{"title":"ignoreCanCollideFalse​","type":1,"pageTitle":"RaycastUtils","url":"/NevermoreEngine/api/RaycastUtils#ignoreCanCollideFalse","content":"&lt;/&gt; RaycastUtils.ignoreCanCollideFalse(part: BasePart ) → boolean Ignore function that ignores can collide false parts.  ","version":null,"tagName":"h3"},{"title":"raycast​","type":1,"pageTitle":"RaycastUtils","url":"/NevermoreEngine/api/RaycastUtils#raycast","content":"&lt;/&gt; RaycastUtils.raycast( origin: Vector3 , direction: Vector3 , ignoreListWorkingEnvironment: {Instance }, ignoreFunc: callback, keepIgnoreListChanges: boolean?, ignoreWater: boolean? ) → RaycastResult? Raycasts from a given point and repeatedly raycasts until the ignore function does not apply. ","version":null,"tagName":"h3"},{"title":"RbxThumbUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RbxThumbUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RbxThumbUtils","url":"/NevermoreEngine/api/RbxThumbUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getThumbnailUrl​","type":1,"pageTitle":"RbxThumbUtils","url":"/NevermoreEngine/api/RbxThumbUtils#getThumbnailUrl","content":"&lt;/&gt; RbxThumbUtils.getThumbnailUrl( thumbnailType: RbxThumbnailTypes, targetId: number, width: number, height: number ) → string Gets a thumbnail URL for a given content type and id https://devforum.roblox.com/t/new-contentid-format-for-easy-thumbnail-loading/357335 https://create.roblox.com/docs/studio/asset-types#rbxthumb Type: Supported Sizes: &quot;Asset&quot; 150x150, 420x420 &quot;Avatar&quot; 100x100, 352x352, 720x720 &quot;AvatarHeadShot&quot; 48x48, 60x60, 150x150 &quot;BadgeIcon&quot; 150x150 &quot;BundleThumbnail&quot; 150x150, 420x420 &quot;GameIcon&quot; 50x50, 150x150 &quot;GamePass&quot; 150x150 &quot;GroupIcon&quot; 150x150, 420x420 &quot;Outfit&quot; 150x150, 420x420  ","version":null,"tagName":"h3"},{"title":"avatarItemTypeToThumbnailType​","type":1,"pageTitle":"RbxThumbUtils","url":"/NevermoreEngine/api/RbxThumbUtils#avatarItemTypeToThumbnailType","content":"&lt;/&gt; RbxThumbUtils.avatarItemTypeToThumbnailType(avatarItemType: AvatarItemType ) → string Converts an AvatarItemType to a string thumbnailType for thumbnail generation  ","version":null,"tagName":"h3"},{"title":"getAssetThumbnailUrl​","type":1,"pageTitle":"RbxThumbUtils","url":"/NevermoreEngine/api/RbxThumbUtils#getAssetThumbnailUrl","content":"&lt;/&gt; RbxThumbUtils.getAssetThumbnailUrl( targetId: number, width: number?, height: number? ) → string Gets a Asset URL for use in an image label or other rendering application. Supported sizes: 150x150, 420x420  ","version":null,"tagName":"h3"},{"title":"getAvatarThumbnailUrl​","type":1,"pageTitle":"RbxThumbUtils","url":"/NevermoreEngine/api/RbxThumbUtils#getAvatarThumbnailUrl","content":"&lt;/&gt; RbxThumbUtils.getAvatarThumbnailUrl( targetId: number, width: number?, height: number? ) → string Gets a Avatar URL for use in an image label or other rendering application. Supported sizes: 100x100, 352x352, 720x720  ","version":null,"tagName":"h3"},{"title":"getAvatarHeadShotThumbnailUrl​","type":1,"pageTitle":"RbxThumbUtils","url":"/NevermoreEngine/api/RbxThumbUtils#getAvatarHeadShotThumbnailUrl","content":"&lt;/&gt; RbxThumbUtils.getAvatarHeadShotThumbnailUrl( targetId: number, width: number?, height: number? ) → string Gets a AvatarHeadShot URL for use in an image label or other rendering application. Supported sizes: 48x48, 60x60, 150x150  ","version":null,"tagName":"h3"},{"title":"getBadgeIconThumbnailUrl​","type":1,"pageTitle":"RbxThumbUtils","url":"/NevermoreEngine/api/RbxThumbUtils#getBadgeIconThumbnailUrl","content":"&lt;/&gt; RbxThumbUtils.getBadgeIconThumbnailUrl( targetId: number, width: number?, height: number? ) → string Gets a BadgeIcon URL for use in an image label or other rendering application. Supported sizes: 150x150  ","version":null,"tagName":"h3"},{"title":"getBundleThumbnailThumbnailUrl​","type":1,"pageTitle":"RbxThumbUtils","url":"/NevermoreEngine/api/RbxThumbUtils#getBundleThumbnailThumbnailUrl","content":"&lt;/&gt; RbxThumbUtils.getBundleThumbnailThumbnailUrl( targetId: number, width: number?, height: number? ) → string Gets a BundleThumbnail URL for use in an image label or other rendering application. Supported sizes: 150x150, 420x420  ","version":null,"tagName":"h3"},{"title":"getGameIconThumbnailUrl​","type":1,"pageTitle":"RbxThumbUtils","url":"/NevermoreEngine/api/RbxThumbUtils#getGameIconThumbnailUrl","content":"&lt;/&gt; RbxThumbUtils.getGameIconThumbnailUrl( targetId: number, width: number?, height: number? ) → string Gets a GameIcon URL for use in an image label or other rendering application. Supported sizes: 50x50, 150x150  ","version":null,"tagName":"h3"},{"title":"getGamePassThumbnailUrl​","type":1,"pageTitle":"RbxThumbUtils","url":"/NevermoreEngine/api/RbxThumbUtils#getGamePassThumbnailUrl","content":"&lt;/&gt; RbxThumbUtils.getGamePassThumbnailUrl( targetId: number, width: number?, height: number? ) → string Gets a GamePass URL for use in an image label or other rendering application. Supported sizes: 150x150  ","version":null,"tagName":"h3"},{"title":"getGroupIconThumbnailUrl​","type":1,"pageTitle":"RbxThumbUtils","url":"/NevermoreEngine/api/RbxThumbUtils#getGroupIconThumbnailUrl","content":"&lt;/&gt; RbxThumbUtils.getGroupIconThumbnailUrl( targetId: number, width: number?, height: number? ) → string Gets a GroupIcon URL for use in an image label or other rendering application. Supported sizes: 150x150, 420x420  ","version":null,"tagName":"h3"},{"title":"getOutfitThumbnailUrl​","type":1,"pageTitle":"RbxThumbUtils","url":"/NevermoreEngine/api/RbxThumbUtils#getOutfitThumbnailUrl","content":"&lt;/&gt; RbxThumbUtils.getOutfitThumbnailUrl( targetId: number, width: number?, height: number? ) → string Gets a Outfit URL for use in an image label or other rendering application. Supported sizes: 150x150, 420x420 ","version":null,"tagName":"h3"},{"title":"Region3int16Utils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Region3int16Utils","content":"Region3int16Utils Module for working with Region3int16","keywords":"","version":null},{"title":"RectUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RectUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RectUtils","url":"/NevermoreEngine/api/RectUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"contains​","type":1,"pageTitle":"RectUtils","url":"/NevermoreEngine/api/RectUtils#contains","content":"&lt;/&gt; RectUtils.contains( rect: Rect , position: Vector2 ) → boolean Returns true if the position is contained within the rect ","version":null,"tagName":"h3"},{"title":"ReceiptProcessingService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ReceiptProcessingService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ReceiptProcessingService","url":"/NevermoreEngine/api/ReceiptProcessingService#functions","content":" ","version":null,"tagName":"h2"},{"title":"SetDefaultPurchaseDecision​","type":1,"pageTitle":"ReceiptProcessingService","url":"/NevermoreEngine/api/ReceiptProcessingService#SetDefaultPurchaseDecision","content":"&lt;/&gt; ReceiptProcessingService:SetDefaultPurchaseDecision(productPurchaseDecision: ProductPurchaseDecision ) → () Sets the default purchase decision in case you want more control  ","version":null,"tagName":"h3"},{"title":"ObserveReceiptProcessedForPlayer​","type":1,"pageTitle":"ReceiptProcessingService","url":"/NevermoreEngine/api/ReceiptProcessingService#ObserveReceiptProcessedForPlayer","content":"&lt;/&gt; ReceiptProcessingService:ObserveReceiptProcessedForPlayer(player: Player ) → Observable&lt;ReceiptInfo&gt; Observes receipt by player  ","version":null,"tagName":"h3"},{"title":"ObserveReceiptProcessedForUserId​","type":1,"pageTitle":"ReceiptProcessingService","url":"/NevermoreEngine/api/ReceiptProcessingService#ObserveReceiptProcessedForUserId","content":"&lt;/&gt; ReceiptProcessingService:ObserveReceiptProcessedForUserId(userId: number) → Observable&lt;ReceiptInfo&gt; Observes receipt by userId  ","version":null,"tagName":"h3"},{"title":"RegisterReceiptProcessor​","type":1,"pageTitle":"ReceiptProcessingService","url":"/NevermoreEngine/api/ReceiptProcessingService#RegisterReceiptProcessor","content":"&lt;/&gt; ReceiptProcessingService:RegisterReceiptProcessor( processor: (receiptInfo) → ProductPurchaseDecision | Promise&lt;ProductPurchaseDecision &gt; | nil, priority: number? ) → () → () Registers a new receipt processor. This works exactly like a normal receipt processor except it will also take a Promise as a result (of which an error). ","version":null,"tagName":"h3"},{"title":"Region3Utils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Region3Utils","content":"Region3Utils Utility methods for Region3","keywords":"","version":null},{"title":"RemoteFunctionUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RemoteFunctionUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RemoteFunctionUtils","url":"/NevermoreEngine/api/RemoteFunctionUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseInvokeServer​","type":1,"pageTitle":"RemoteFunctionUtils","url":"/NevermoreEngine/api/RemoteFunctionUtils#promiseInvokeServer","content":"&lt;/&gt; RemoteFunctionUtils.promiseInvokeServer( remoteFunction: RemoteFunction , ...: any ) → Promise&lt;T&gt; Invokes the server with the remote function call.  ","version":null,"tagName":"h3"},{"title":"promiseInvokeClient​","type":1,"pageTitle":"RemoteFunctionUtils","url":"/NevermoreEngine/api/RemoteFunctionUtils#promiseInvokeClient","content":"&lt;/&gt; RemoteFunctionUtils.promiseInvokeClient( remoteFunction: RemoteFunction , player: Instance , ...: any ) → Promise&lt;T&gt; Invokes the client with the remote function call.  ","version":null,"tagName":"h3"},{"title":"promiseInvokeBindableFunction​","type":1,"pageTitle":"RemoteFunctionUtils","url":"/NevermoreEngine/api/RemoteFunctionUtils#promiseInvokeBindableFunction","content":"&lt;/&gt; RemoteFunctionUtils.promiseInvokeBindableFunction( bindableFunction: RemoteFunction , ...: any ) → Promise&lt;T&gt; Invokes the server with the remote function call.  ","version":null,"tagName":"h3"},{"title":"fromPromiseYieldResult​","type":1,"pageTitle":"RemoteFunctionUtils","url":"/NevermoreEngine/api/RemoteFunctionUtils#fromPromiseYieldResult","content":"&lt;/&gt; RemoteFunctionUtils.fromPromiseYieldResult( ok: boolean, ...: any ) → Promise&lt;T&gt; Converts a promise result into a promise ","version":null,"tagName":"h3"},{"title":"RemotingRealms","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RemotingRealms","content":"RemotingRealms","keywords":"","version":null},{"title":"RemotingMember","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RemotingMember","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RemotingMember","url":"/NevermoreEngine/api/RemotingMember#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"RemotingMember","url":"/NevermoreEngine/api/RemotingMember#new","content":"&lt;/&gt; RemotingMember.new( remoting: Remoting, memberName: string, remotingRealm: RemotingRealms ) → RemotingMember Constructs a new RemotingMember  ","version":null,"tagName":"h3"},{"title":"Bind​","type":1,"pageTitle":"RemotingMember","url":"/NevermoreEngine/api/RemotingMember#Bind","content":"&lt;/&gt; RemotingMember.Bind( self: RemotingMember, callback: function ) → MaidTask Binds to the member. On the server this will create the remote function. On the client this will connect to the remote event once it's created.  ","version":null,"tagName":"h3"},{"title":"Connect​","type":1,"pageTitle":"RemotingMember","url":"/NevermoreEngine/api/RemotingMember#Connect","content":"&lt;/&gt; RemotingMember.Connect( self: RemotingMember, callback: function ) → MaidTask Connects to the equivalent of a RemoteEvent for this member. On the server this will create the remote event. On the client this will connect to the remote event once it's created. See Remoting.Connect for additional details.  ","version":null,"tagName":"h3"},{"title":"DeclareEvent​","type":1,"pageTitle":"RemotingMember","url":"/NevermoreEngine/api/RemotingMember#DeclareEvent","content":"&lt;/&gt; RemotingMember.DeclareEvent(self: RemotingMember) → () Forward declares an event on the remoting object  ","version":null,"tagName":"h3"},{"title":"DeclareMethod​","type":1,"pageTitle":"RemotingMember","url":"/NevermoreEngine/api/RemotingMember#DeclareMethod","content":"&lt;/&gt; RemotingMember.DeclareMethod(self: RemotingMember) → () Forward declares a method on the remoting object  ","version":null,"tagName":"h3"},{"title":"FireServer​","type":1,"pageTitle":"RemotingMember","url":"/NevermoreEngine/api/RemotingMember#FireServer","content":"This item only works when running on the client. Client &lt;/&gt; RemotingMember.FireServer( self: RemotingMember, ...: any ) → () Fires the remote event on the server  ","version":null,"tagName":"h3"},{"title":"InvokeServer​","type":1,"pageTitle":"RemotingMember","url":"/NevermoreEngine/api/RemotingMember#InvokeServer","content":"This item only works when running on the client. Client &lt;/&gt; RemotingMember.InvokeServer( self: RemotingMember, ...: any ) → Promise.Promise&lt;...any&gt; Invokes the server from the client  ","version":null,"tagName":"h3"},{"title":"PromiseInvokeServer​","type":1,"pageTitle":"RemotingMember","url":"/NevermoreEngine/api/RemotingMember#PromiseInvokeServer","content":"This item only works when running on the client. Client &lt;/&gt; RemotingMember.PromiseInvokeServer( self: RemotingMember, ...: any ) → Promise.Promise&lt;...any&gt; Invokes the client from the server.  ","version":null,"tagName":"h3"},{"title":"PromiseFireServer​","type":1,"pageTitle":"RemotingMember","url":"/NevermoreEngine/api/RemotingMember#PromiseFireServer","content":"This item only works when running on the client. Client &lt;/&gt; RemotingMember.PromiseFireServer( self: RemotingMember, ...: any ) → Promise Fires the server from the client. Promise resolves once the event is sent.  ","version":null,"tagName":"h3"},{"title":"PromiseInvokeClient​","type":1,"pageTitle":"RemotingMember","url":"/NevermoreEngine/api/RemotingMember#PromiseInvokeClient","content":"This item only works when running on the server. Server &lt;/&gt; RemotingMember.PromiseInvokeClient( self: RemotingMember, player: Player , ...: any ) → Promise&lt;any&gt; Invokes the client from the server. See Remoting.PromiseInvokeClient.  ","version":null,"tagName":"h3"},{"title":"InvokeClient​","type":1,"pageTitle":"RemotingMember","url":"/NevermoreEngine/api/RemotingMember#InvokeClient","content":"This item only works when running on the server. Server &lt;/&gt; RemotingMember.InvokeClient( self: RemotingMember, player: Player , ...: any ) → ...any Invokes the client from the server See Remoting.InvokeClient.  ","version":null,"tagName":"h3"},{"title":"FireAllClients​","type":1,"pageTitle":"RemotingMember","url":"/NevermoreEngine/api/RemotingMember#FireAllClients","content":"This item only works when running on the server. Server &lt;/&gt; RemotingMember.FireAllClients( self: RemotingMember, ...: any ) → () Fires all clients. See Remoting.FireAllClients.  ","version":null,"tagName":"h3"},{"title":"FireAllClientsExcept​","type":1,"pageTitle":"RemotingMember","url":"/NevermoreEngine/api/RemotingMember#FireAllClientsExcept","content":"This item only works when running on the server. Server &lt;/&gt; RemotingMember.FireAllClientsExcept( self: RemotingMember, excludePlayer: Player | nil, ...: any ) → () Fires all clients with the event except the excluded player. The excluded player may be nil to support NPC actions.  ","version":null,"tagName":"h3"},{"title":"FireClient​","type":1,"pageTitle":"RemotingMember","url":"/NevermoreEngine/api/RemotingMember#FireClient","content":"This item only works when running on the server. Server &lt;/&gt; RemotingMember.FireClient( self: RemotingMember, player: Instance , ...: any ) → () Fires the client with the data See Remoting.FireClient. ","version":null,"tagName":"h3"},{"title":"Remoting","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Remoting","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Remoting","url":"/NevermoreEngine/api/Remoting#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Remoting","url":"/NevermoreEngine/api/Remoting#new","content":"&lt;/&gt; Remoting.new( instance: Instance , name: string, remotingRealm: RemotingRealm? ) → Remoting Creates a new remoting instance  ","version":null,"tagName":"h3"},{"title":"Connect​","type":1,"pageTitle":"Remoting","url":"/NevermoreEngine/api/Remoting#Connect","content":"&lt;/&gt; Remoting.Connect( self: Remoting, memberName: string, callback: (...) → () ) → MaidTask Connects to a given remote event.  ","version":null,"tagName":"h3"},{"title":"Bind​","type":1,"pageTitle":"Remoting","url":"/NevermoreEngine/api/Remoting#Bind","content":"&lt;/&gt; Remoting.Bind( self: Remoting, memberName: string, callback: any ) → Maid.Maid If on the server, creates a new RemoteFunction with the name memberName and binds the invoke. On the client, it waits for the event to exist and then binds to it.  ","version":null,"tagName":"h3"},{"title":"DeclareEvent​","type":1,"pageTitle":"Remoting","url":"/NevermoreEngine/api/Remoting#DeclareEvent","content":"&lt;/&gt; Remoting.DeclareEvent( self: Remoting, memberName: string ) → () Forward declares an event on the remoting object  ","version":null,"tagName":"h3"},{"title":"DeclareMethod​","type":1,"pageTitle":"Remoting","url":"/NevermoreEngine/api/Remoting#DeclareMethod","content":"&lt;/&gt; Remoting.DeclareMethod( self: Remoting, memberName: string ) → () Forward declares an event on the remoting object  ","version":null,"tagName":"h3"},{"title":"FireClient​","type":1,"pageTitle":"Remoting","url":"/NevermoreEngine/api/Remoting#FireClient","content":"&lt;/&gt; Remoting.FireClient( self: Remoting, memberName: string, player: Player , ...: any ) → () Fires the client with the individual request. Should consider this syntax instead. local remoting = Remoting.new(workspace, &quot;Test&quot;) remoting.Event:FireClient(otherPlayer, ...) Equivalent of RemoteFunction.FireClient.  ","version":null,"tagName":"h3"},{"title":"InvokeClient​","type":1,"pageTitle":"Remoting","url":"/NevermoreEngine/api/Remoting#InvokeClient","content":"This item only works when running on the server. Server &lt;/&gt; Remoting.InvokeClient( self: Remoting, memberName: string, player: Player , ...: any ) → () Invokes the client, yielding as needed Equivalent of RemoteFunction.InvokeClient.  ","version":null,"tagName":"h3"},{"title":"FireAllClients​","type":1,"pageTitle":"Remoting","url":"/NevermoreEngine/api/Remoting#FireAllClients","content":"This item only works when running on the server. Server &lt;/&gt; Remoting.FireAllClients( self: Remoting, memberName: string, ...: any ) → () Fires all clients with the event. Equivalent of RemoteEvent.FireAllClients.  ","version":null,"tagName":"h3"},{"title":"FireAllClientsExcept​","type":1,"pageTitle":"Remoting","url":"/NevermoreEngine/api/Remoting#FireAllClientsExcept","content":"This item only works when running on the server. Server &lt;/&gt; Remoting.FireAllClientsExcept( self: Remoting, memberName: string, excludePlayer: Player | nil, ...: any ) → () Fires all clients with the event except the excluded player. The excluded player may be nil to support NPC actions.  ","version":null,"tagName":"h3"},{"title":"FireServer​","type":1,"pageTitle":"Remoting","url":"/NevermoreEngine/api/Remoting#FireServer","content":"This item only works when running on the client. Client &lt;/&gt; Remoting.FireServer( self: Remoting, memberName: string, ...: any ) → () Fires the server  ","version":null,"tagName":"h3"},{"title":"PromiseFireServer​","type":1,"pageTitle":"Remoting","url":"/NevermoreEngine/api/Remoting#PromiseFireServer","content":"This item only works when running on the client. Client &lt;/&gt; Remoting.PromiseFireServer( self: Remoting, memberName: string, ...: any ) → Promise Fires the server, resolving the promise once it is fired.  ","version":null,"tagName":"h3"},{"title":"InvokeServer​","type":1,"pageTitle":"Remoting","url":"/NevermoreEngine/api/Remoting#InvokeServer","content":"This item only works when running on the client. Client &lt;/&gt; Remoting.InvokeServer( self: Remoting, memberName: string, ...: any ) → any Invokes the server from the client  ","version":null,"tagName":"h3"},{"title":"PromiseInvokeServer​","type":1,"pageTitle":"Remoting","url":"/NevermoreEngine/api/Remoting#PromiseInvokeServer","content":"This item only works when running on the client. Client &lt;/&gt; Remoting.PromiseInvokeServer( self: Remoting, memberName: string, ...: any ) → Promise&lt;...any&gt; Invokes the server from the client  ","version":null,"tagName":"h3"},{"title":"PromiseInvokeClient​","type":1,"pageTitle":"Remoting","url":"/NevermoreEngine/api/Remoting#PromiseInvokeClient","content":"This item only works when running on the server. Server &lt;/&gt; Remoting.PromiseInvokeClient( self: Remoting, memberName: string, player: Player , ...: any ) → Promise&lt;any&gt; Invokes the client from the server  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"Remoting","url":"/NevermoreEngine/api/Remoting#Destroy","content":"&lt;/&gt; Remoting.Destroy(self: Remoting) → () Cleans up the remoting object ","version":null,"tagName":"h3"},{"title":"ReplicationTypeUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ReplicationTypeUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ReplicationTypeUtils","url":"/NevermoreEngine/api/ReplicationTypeUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"isReplicationType​","type":1,"pageTitle":"ReplicationTypeUtils","url":"/NevermoreEngine/api/ReplicationTypeUtils#isReplicationType","content":"&lt;/&gt; ReplicationTypeUtils.isReplicationType(replicationType: any) → boolean Returns true if the data is a replicationType ","version":null,"tagName":"h3"},{"title":"RemotingRealmUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RemotingRealmUtils","content":"RemotingRealmUtils","keywords":"","version":null},{"title":"ReplicationType","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ReplicationType","content":"ReplicationType Different replication types we can be in.","keywords":"","version":null},{"title":"ResetServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ResetServiceClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ResetServiceClient","url":"/NevermoreEngine/api/ResetServiceClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"ResetServiceClient","url":"/NevermoreEngine/api/ResetServiceClient#Init","content":"&lt;/&gt; ResetServiceClient:Init() → () Initializes the reset service. Should be done via a ServiceBag.  ","version":null,"tagName":"h3"},{"title":"RequestResetCharacter​","type":1,"pageTitle":"ResetServiceClient","url":"/NevermoreEngine/api/ResetServiceClient#RequestResetCharacter","content":"&lt;/&gt; ResetServiceClient:RequestResetCharacter() → Promise.Promise&lt;()&gt; Requests the player's character resets ","version":null,"tagName":"h3"},{"title":"ReplicatorReferences","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ReplicatorReferences","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ReplicatorReferences","url":"/NevermoreEngine/api/ReplicatorReferences#functions","content":" ","version":null,"tagName":"h2"},{"title":"isReplicatorReferences​","type":1,"pageTitle":"ReplicatorReferences","url":"/NevermoreEngine/api/ReplicatorReferences#isReplicatorReferences","content":"&lt;/&gt; ReplicatorReferences.isReplicatorReferences(replicatorReferences: any?) → boolean Returns true if the argument is a replicator references  ","version":null,"tagName":"h3"},{"title":"ObserveReferenceChanged​","type":1,"pageTitle":"ReplicatorReferences","url":"/NevermoreEngine/api/ReplicatorReferences#ObserveReferenceChanged","content":"&lt;/&gt; ReplicatorReferences.ObserveReferenceChanged( self: ReplicatorReferences, orig: Instance , callback: function ) → () → ()-- Call to disconnect Observes when a reference changes. Discount Rx observable since we're the loader and don't want a whole copy of Rx. ","version":null,"tagName":"h3"},{"title":"ResetService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ResetService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ResetService","url":"/NevermoreEngine/api/ResetService#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"ResetService","url":"/NevermoreEngine/api/ResetService#Init","content":"&lt;/&gt; ResetService:Init() → () Initializes the reset service. Should be done via a ServiceBag.  ","version":null,"tagName":"h3"},{"title":"PushResetProvider​","type":1,"pageTitle":"ResetService","url":"/NevermoreEngine/api/ResetService#PushResetProvider","content":"&lt;/&gt; ResetService:PushResetProvider( promiseReset: function-- Reset provider ) → MaidTask Pushes a reset provider onto the reset service ","version":null,"tagName":"h3"},{"title":"Replicator","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Replicator","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Replicator","url":"/NevermoreEngine/api/Replicator#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Replicator","url":"/NevermoreEngine/api/Replicator#new","content":"&lt;/&gt; Replicator.new(references: ReplicatorReferences) → Replicator Constructs a new Replicator which will do the syncing.  ","version":null,"tagName":"h3"},{"title":"ReplicateFrom​","type":1,"pageTitle":"Replicator","url":"/NevermoreEngine/api/Replicator#ReplicateFrom","content":"&lt;/&gt; Replicator.ReplicateFrom( self: Replicator, root: Instance ) → () Replicates children from the given root  ","version":null,"tagName":"h3"},{"title":"isReplicator​","type":1,"pageTitle":"Replicator","url":"/NevermoreEngine/api/Replicator#isReplicator","content":"&lt;/&gt; Replicator.isReplicator(replicator: any?) → boolean Returns true if the argument is a replicator  ","version":null,"tagName":"h3"},{"title":"GetReplicatedDescendantCountValue​","type":1,"pageTitle":"Replicator","url":"/NevermoreEngine/api/Replicator#GetReplicatedDescendantCountValue","content":"&lt;/&gt; Replicator.GetReplicatedDescendantCountValue(self: Replicator) → IntValue  Returns the replicated descendant count value.  ","version":null,"tagName":"h3"},{"title":"SetReplicationType​","type":1,"pageTitle":"Replicator","url":"/NevermoreEngine/api/Replicator#SetReplicationType","content":"&lt;/&gt; Replicator.SetReplicationType( self: Replicator, replicationType: ReplicationType ) → () Sets the replication type for this replicator  ","version":null,"tagName":"h3"},{"title":"SetTarget​","type":1,"pageTitle":"Replicator","url":"/NevermoreEngine/api/Replicator#SetTarget","content":"&lt;/&gt; Replicator.SetTarget( self: Replicator, target: Instance? ) → () Sets the target for the replicator where the results will be parented.  ","version":null,"tagName":"h3"},{"title":"GetTarget​","type":1,"pageTitle":"Replicator","url":"/NevermoreEngine/api/Replicator#GetTarget","content":"&lt;/&gt; Replicator.GetTarget(self: Replicator) → Instance?  Gets the current target for the replicator.  ","version":null,"tagName":"h3"},{"title":"GetHasReplicatedChildrenValue​","type":1,"pageTitle":"Replicator","url":"/NevermoreEngine/api/Replicator#GetHasReplicatedChildrenValue","content":"&lt;/&gt; Replicator.GetHasReplicatedChildrenValue(self: Replicator) → BoolValue  Gets a value representing if there's any replicated children. Used to avoid leaking more server-side information than needed for the user.  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"Replicator","url":"/NevermoreEngine/api/Replicator#Destroy","content":"&lt;/&gt; Replicator.Destroy(self: Replicator) → () Cleans up the replicator disconnecting all events and cleaning up created instances. ","version":null,"tagName":"h3"},{"title":"ResourceConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ResourceConstants","content":"ResourceConstants This item is only intended to be used by the module's authors. Private Holds constants for resource retrieval.","keywords":"","version":null},{"title":"RichTextUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RichTextUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RichTextUtils","url":"/NevermoreEngine/api/RichTextUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"sanitizeRichText​","type":1,"pageTitle":"RichTextUtils","url":"/NevermoreEngine/api/RichTextUtils#sanitizeRichText","content":"&lt;/&gt; RichTextUtils.sanitizeRichText(text: string) → string Sanitizes the rich text string  ","version":null,"tagName":"h3"},{"title":"removeRichTextEncoding​","type":1,"pageTitle":"RichTextUtils","url":"/NevermoreEngine/api/RichTextUtils#removeRichTextEncoding","content":"&lt;/&gt; RichTextUtils.removeRichTextEncoding(text: string) → string Unescapes any rich text. ","version":null,"tagName":"h3"},{"title":"RigBuilderUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RigBuilderUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RigBuilderUtils","url":"/NevermoreEngine/api/RigBuilderUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"disableAnimateScript​","type":1,"pageTitle":"RigBuilderUtils","url":"/NevermoreEngine/api/RigBuilderUtils#disableAnimateScript","content":"&lt;/&gt; RigBuilderUtils.disableAnimateScript(rig: Model ) → () Typically we don't want to remove the animate script completely, just disable it.  ","version":null,"tagName":"h3"},{"title":"findAnimateScript​","type":1,"pageTitle":"RigBuilderUtils","url":"/NevermoreEngine/api/RigBuilderUtils#findAnimateScript","content":"&lt;/&gt; RigBuilderUtils.findAnimateScript(rig: Model ) → LocalScript?  Finds the animate script in the rig  ","version":null,"tagName":"h3"},{"title":"createR6MeshRig​","type":1,"pageTitle":"RigBuilderUtils","url":"/NevermoreEngine/api/RigBuilderUtils#createR6MeshRig","content":"&lt;/&gt; RigBuilderUtils.createR6MeshRig() → Model  Creates an R6 mesh rig  ","version":null,"tagName":"h3"},{"title":"createR6MeshBoyRig​","type":1,"pageTitle":"RigBuilderUtils","url":"/NevermoreEngine/api/RigBuilderUtils#createR6MeshBoyRig","content":"&lt;/&gt; RigBuilderUtils.createR6MeshBoyRig() → Model  Creates an R6 boy mesh rig  ","version":null,"tagName":"h3"},{"title":"createR6MeshGirlRig​","type":1,"pageTitle":"RigBuilderUtils","url":"/NevermoreEngine/api/RigBuilderUtils#createR6MeshGirlRig","content":"&lt;/&gt; RigBuilderUtils.createR6MeshGirlRig() → Model  Creates an R6 girl mesh rig  ","version":null,"tagName":"h3"},{"title":"promiseR15PackageRig​","type":1,"pageTitle":"RigBuilderUtils","url":"/NevermoreEngine/api/RigBuilderUtils#promiseR15PackageRig","content":"&lt;/&gt; RigBuilderUtils.promiseR15PackageRig(packageAssetId: number) → Promise&lt;Model &gt; Creates an R15 rig from a package  ","version":null,"tagName":"h3"},{"title":"promiseR15Rig​","type":1,"pageTitle":"RigBuilderUtils","url":"/NevermoreEngine/api/RigBuilderUtils#promiseR15Rig","content":"&lt;/&gt; RigBuilderUtils.promiseR15Rig() → Promise&lt;Model &gt; Creates a default R15 rig  ","version":null,"tagName":"h3"},{"title":"promiseR15ManRig​","type":1,"pageTitle":"RigBuilderUtils","url":"/NevermoreEngine/api/RigBuilderUtils#promiseR15ManRig","content":"&lt;/&gt; RigBuilderUtils.promiseR15ManRig() → Promise&lt;Model &gt; Creates an R15 man rig  ","version":null,"tagName":"h3"},{"title":"promiseR15WomanRig​","type":1,"pageTitle":"RigBuilderUtils","url":"/NevermoreEngine/api/RigBuilderUtils#promiseR15WomanRig","content":"&lt;/&gt; RigBuilderUtils.promiseR15WomanRig() → Promise&lt;Model &gt; Creates an R15 woman rig  ","version":null,"tagName":"h3"},{"title":"promiseR15MeshRig​","type":1,"pageTitle":"RigBuilderUtils","url":"/NevermoreEngine/api/RigBuilderUtils#promiseR15MeshRig","content":"&lt;/&gt; RigBuilderUtils.promiseR15MeshRig() → Promise&lt;Model &gt; Creates an R15 mesh rig  ","version":null,"tagName":"h3"},{"title":"promiseBasePlayerRig​","type":1,"pageTitle":"RigBuilderUtils","url":"/NevermoreEngine/api/RigBuilderUtils#promiseBasePlayerRig","content":"&lt;/&gt; RigBuilderUtils.promiseBasePlayerRig( userId: number, humanoidRigType: HumanoidRigType | nil, assetTypeVerification: AssetTypeVerification | nil ) → Promise&lt;Model &gt; Creates an R15 rig with the base details of a given character, but not all of them  ","version":null,"tagName":"h3"},{"title":"promiseHumanoidModelFromDescription​","type":1,"pageTitle":"RigBuilderUtils","url":"/NevermoreEngine/api/RigBuilderUtils#promiseHumanoidModelFromDescription","content":"&lt;/&gt; RigBuilderUtils.promiseHumanoidModelFromDescription( description: HumanoidDescription , rigType: HumanoidRigType | nil, assetTypeVerification: AssetTypeVerification | nil ) → Promise&lt;Model &gt; Promises humanoid model from description  ","version":null,"tagName":"h3"},{"title":"promisePlayerRig​","type":1,"pageTitle":"RigBuilderUtils","url":"/NevermoreEngine/api/RigBuilderUtils#promisePlayerRig","content":"&lt;/&gt; RigBuilderUtils.promisePlayerRig(userId: number) → Promise&lt;Model &gt; Creates an R15 rig dressed as a given player ","version":null,"tagName":"h3"},{"title":"RobloxApiClass","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RobloxApiClass","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RobloxApiClass","url":"/NevermoreEngine/api/RobloxApiClass#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"RobloxApiClass","url":"/NevermoreEngine/api/RobloxApiClass#new","content":"&lt;/&gt; RobloxApiClass.new( robloxApiDump: RobloxApiDump, data: table ) → RobloxApiClass Constructs a new RobloxApiClass. See RobloxApiDump.PromiseClass to actually construct this class.  ","version":null,"tagName":"h3"},{"title":"GetRawData​","type":1,"pageTitle":"RobloxApiClass","url":"/NevermoreEngine/api/RobloxApiClass#GetRawData","content":"&lt;/&gt; RobloxApiClass.GetRawData(self: RobloxApiClass) → table Retrieves the raw class data  ","version":null,"tagName":"h3"},{"title":"GetClassName​","type":1,"pageTitle":"RobloxApiClass","url":"/NevermoreEngine/api/RobloxApiClass#GetClassName","content":"&lt;/&gt; RobloxApiClass.GetClassName(self: RobloxApiClass) → string Gets the class name.  ","version":null,"tagName":"h3"},{"title":"GetMemberCategory​","type":1,"pageTitle":"RobloxApiClass","url":"/NevermoreEngine/api/RobloxApiClass#GetMemberCategory","content":"&lt;/&gt; RobloxApiClass.GetMemberCategory(self: RobloxApiClass) → string? Gets the class category.  ","version":null,"tagName":"h3"},{"title":"PromiseSuperClass​","type":1,"pageTitle":"RobloxApiClass","url":"/NevermoreEngine/api/RobloxApiClass#PromiseSuperClass","content":"&lt;/&gt; RobloxApiClass.PromiseSuperClass(self: RobloxApiClass) → Promise&lt;RobloxApiClass&gt; Retrieves the super class, or rejects.  ","version":null,"tagName":"h3"},{"title":"PromiseIsA​","type":1,"pageTitle":"RobloxApiClass","url":"/NevermoreEngine/api/RobloxApiClass#PromiseIsA","content":"&lt;/&gt; RobloxApiClass.PromiseIsA( self: RobloxApiClass, className: string ) → Promise&lt;boolean&gt; Returns a promise that resolves whether this class is of a specific type.  ","version":null,"tagName":"h3"},{"title":"PromiseIsDescendantOf​","type":1,"pageTitle":"RobloxApiClass","url":"/NevermoreEngine/api/RobloxApiClass#PromiseIsDescendantOf","content":"&lt;/&gt; RobloxApiClass.PromiseIsDescendantOf( self: RobloxApiClass, className: string ) → Promise&lt;boolean&gt; Returns a promise that resolves whether this class is a descendant of another specific class.  ","version":null,"tagName":"h3"},{"title":"PromiseAllSuperClasses​","type":1,"pageTitle":"RobloxApiClass","url":"/NevermoreEngine/api/RobloxApiClass#PromiseAllSuperClasses","content":"&lt;/&gt; RobloxApiClass.PromiseAllSuperClasses(self: RobloxApiClass) → Promise&lt;{RobloxApiClass}&gt; Returns a promise that resolves to all super classes.  ","version":null,"tagName":"h3"},{"title":"GetSuperClassName​","type":1,"pageTitle":"RobloxApiClass","url":"/NevermoreEngine/api/RobloxApiClass#GetSuperClassName","content":"&lt;/&gt; RobloxApiClass.GetSuperClassName(self: RobloxApiClass) → string? Returns the super class name  ","version":null,"tagName":"h3"},{"title":"HasSuperClass​","type":1,"pageTitle":"RobloxApiClass","url":"/NevermoreEngine/api/RobloxApiClass#HasSuperClass","content":"&lt;/&gt; RobloxApiClass.HasSuperClass(self: RobloxApiClass) → boolean Returns whether the class has a super class  ","version":null,"tagName":"h3"},{"title":"PromiseMembers​","type":1,"pageTitle":"RobloxApiClass","url":"/NevermoreEngine/api/RobloxApiClass#PromiseMembers","content":"&lt;/&gt; RobloxApiClass.PromiseMembers(self: RobloxApiClass) → Promise&lt;{RobloxApiMember}&gt; Retrieves all class members (events, properties, callbacks, functions).  ","version":null,"tagName":"h3"},{"title":"PromiseProperties​","type":1,"pageTitle":"RobloxApiClass","url":"/NevermoreEngine/api/RobloxApiClass#PromiseProperties","content":"&lt;/&gt; RobloxApiClass.PromiseProperties(self: RobloxApiClass) → Promise&lt;{RobloxApiMember}&gt; Gets all class properties.  ","version":null,"tagName":"h3"},{"title":"PromiseEvents​","type":1,"pageTitle":"RobloxApiClass","url":"/NevermoreEngine/api/RobloxApiClass#PromiseEvents","content":"&lt;/&gt; RobloxApiClass.PromiseEvents(self: RobloxApiClass) → Promise&lt;{RobloxApiMember}&gt; Gets all class events.  ","version":null,"tagName":"h3"},{"title":"PromiseFunctions​","type":1,"pageTitle":"RobloxApiClass","url":"/NevermoreEngine/api/RobloxApiClass#PromiseFunctions","content":"&lt;/&gt; RobloxApiClass.PromiseFunctions(self: RobloxApiClass) → Promise&lt;{RobloxApiMember}&gt; Gets all class functions (i.e. methods).  ","version":null,"tagName":"h3"},{"title":"IsService​","type":1,"pageTitle":"RobloxApiClass","url":"/NevermoreEngine/api/RobloxApiClass#IsService","content":"&lt;/&gt; RobloxApiClass.IsService(self: RobloxApiClass) → boolean Retrieves whether the class is a service  ","version":null,"tagName":"h3"},{"title":"IsNotCreatable​","type":1,"pageTitle":"RobloxApiClass","url":"/NevermoreEngine/api/RobloxApiClass#IsNotCreatable","content":"&lt;/&gt; RobloxApiClass.IsNotCreatable(self: RobloxApiClass) → boolean Retrieves whether the class is not creatable  ","version":null,"tagName":"h3"},{"title":"IsNotReplicated​","type":1,"pageTitle":"RobloxApiClass","url":"/NevermoreEngine/api/RobloxApiClass#IsNotReplicated","content":"&lt;/&gt; RobloxApiClass.IsNotReplicated(self: RobloxApiClass) → boolean Retrieves whether the class is not replicated  ","version":null,"tagName":"h3"},{"title":"HasTag​","type":1,"pageTitle":"RobloxApiClass","url":"/NevermoreEngine/api/RobloxApiClass#HasTag","content":"&lt;/&gt; RobloxApiClass.HasTag( self: RobloxApiClass, tagName: string ) → boolean Retrieves whether the class has a tag or not ","version":null,"tagName":"h3"},{"title":"RobloxApiDumpConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RobloxApiDumpConstants","content":"RobloxApiDumpConstants","keywords":"","version":null},{"title":"RobloxApiDump","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RobloxApiDump","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RobloxApiDump","url":"/NevermoreEngine/api/RobloxApiDump#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"RobloxApiDump","url":"/NevermoreEngine/api/RobloxApiDump#new","content":"&lt;/&gt; RobloxApiDump.new() → RobloxApiDump Constructs a new RobloxApiDump which will cache all results for its lifetime.  ","version":null,"tagName":"h3"},{"title":"PromiseClass​","type":1,"pageTitle":"RobloxApiDump","url":"/NevermoreEngine/api/RobloxApiDump#PromiseClass","content":"&lt;/&gt; RobloxApiDump:PromiseClass(className: string) → RobloxApiClass Promises the Roblox API class for the given class name.  ","version":null,"tagName":"h3"},{"title":"PromiseMembers​","type":1,"pageTitle":"RobloxApiDump","url":"/NevermoreEngine/api/RobloxApiDump#PromiseMembers","content":"&lt;/&gt; RobloxApiDump:PromiseMembers(className: string) → {RobloxApiMember} Promises all Roblox API members. ","version":null,"tagName":"h3"},{"title":"RobloxApiUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RobloxApiUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RobloxApiUtils","url":"/NevermoreEngine/api/RobloxApiUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseDump​","type":1,"pageTitle":"RobloxApiUtils","url":"/NevermoreEngine/api/RobloxApiUtils#promiseDump","content":"&lt;/&gt; RobloxApiUtils.promiseDump() → Promise&lt;table&gt; Retrieves the raw API dump from the web. ","version":null,"tagName":"h3"},{"title":"RoduxActionFactory","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RoduxActionFactory","content":"RoduxActionFactory","keywords":"","version":null},{"title":"RoduxActions","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RoduxActions","content":"RoduxActions","keywords":"","version":null},{"title":"RobloxApiMember","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RobloxApiMember","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#new","content":"&lt;/&gt; RobloxApiMember.new(data: table) → RobloxApiMember Constructs a new RobloxApiMember wrapping the data given. See RobloxApiDump.PromiseMembers to actually construct this class.  ","version":null,"tagName":"h3"},{"title":"GetName​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#GetName","content":"&lt;/&gt; RobloxApiMember:GetName() → string Gets the member name.  ","version":null,"tagName":"h3"},{"title":"GetCategory​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#GetCategory","content":"&lt;/&gt; RobloxApiMember:GetCategory() → string? Gets the member category.  ","version":null,"tagName":"h3"},{"title":"IsReadOnly​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#IsReadOnly","content":"&lt;/&gt; RobloxApiMember:IsReadOnly() → boolean Retrieves whether the API member is read only.  ","version":null,"tagName":"h3"},{"title":"GetMemberType​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#GetMemberType","content":"&lt;/&gt; RobloxApiMember:GetMemberType() → string Retrieves the member type.  ","version":null,"tagName":"h3"},{"title":"IsEvent​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#IsEvent","content":"&lt;/&gt; RobloxApiMember:IsEvent() → boolean Returns whether the member is an event.  ","version":null,"tagName":"h3"},{"title":"GetRawData​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#GetRawData","content":"&lt;/&gt; RobloxApiMember:GetRawData() → table Retrieves the raw member data  ","version":null,"tagName":"h3"},{"title":"IsWriteNotAccessibleSecurity​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#IsWriteNotAccessibleSecurity","content":"&lt;/&gt; RobloxApiMember:IsWriteNotAccessibleSecurity() → boolean Returns whether this member has write NotAccessibleSecurity  ","version":null,"tagName":"h3"},{"title":"IsReadNotAccessibleSecurity​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#IsReadNotAccessibleSecurity","content":"&lt;/&gt; RobloxApiMember:IsReadNotAccessibleSecurity() → boolean Returns whether this member has write NotAccessibleSecurity  ","version":null,"tagName":"h3"},{"title":"IsWriteLocalUserSecurity​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#IsWriteLocalUserSecurity","content":"&lt;/&gt; RobloxApiMember:IsWriteLocalUserSecurity() → boolean Returns whether this member has write LocalUserSecurity  ","version":null,"tagName":"h3"},{"title":"IsReadLocalUserSecurity​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#IsReadLocalUserSecurity","content":"&lt;/&gt; RobloxApiMember:IsReadLocalUserSecurity() → boolean Returns whether this member has read LocalUserSecurity  ","version":null,"tagName":"h3"},{"title":"IsReadRobloxScriptSecurity​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#IsReadRobloxScriptSecurity","content":"&lt;/&gt; RobloxApiMember:IsReadRobloxScriptSecurity() → boolean Returns whether this member has read RobloxScriptSecurity  ","version":null,"tagName":"h3"},{"title":"IsWriteRobloxScriptSecurity​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#IsWriteRobloxScriptSecurity","content":"&lt;/&gt; RobloxApiMember:IsWriteRobloxScriptSecurity() → boolean Returns whether this member has write RobloxScriptSecurity  ","version":null,"tagName":"h3"},{"title":"IsWriteRobloxSecurity​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#IsWriteRobloxSecurity","content":"&lt;/&gt; RobloxApiMember:IsWriteRobloxSecurity() → boolean Returns whether this member has write RobloxSecurity  ","version":null,"tagName":"h3"},{"title":"CanSerializeSave​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#CanSerializeSave","content":"&lt;/&gt; RobloxApiMember:CanSerializeSave() → boolean? Returns whether this can serialize save  ","version":null,"tagName":"h3"},{"title":"CanSerializeLoad​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#CanSerializeLoad","content":"&lt;/&gt; RobloxApiMember:CanSerializeLoad() → boolean? Returns whether this can serialize save  ","version":null,"tagName":"h3"},{"title":"GetWriteSecurity​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#GetWriteSecurity","content":"&lt;/&gt; RobloxApiMember:GetWriteSecurity() → string? Returns the member's write security as a string  ","version":null,"tagName":"h3"},{"title":"GetReadSecurity​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#GetReadSecurity","content":"&lt;/&gt; RobloxApiMember:GetReadSecurity() → string? Returns the member's read security as a string  ","version":null,"tagName":"h3"},{"title":"IsProperty​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#IsProperty","content":"&lt;/&gt; RobloxApiMember:IsProperty() → boolean Returns whether the member is a property.  ","version":null,"tagName":"h3"},{"title":"IsFunction​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#IsFunction","content":"&lt;/&gt; RobloxApiMember:IsFunction() → boolean Returns whether the member is a function (i.e. method).  ","version":null,"tagName":"h3"},{"title":"IsCallback​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#IsCallback","content":"&lt;/&gt; RobloxApiMember:IsCallback() → boolean Returns whether the member is a callback.  ","version":null,"tagName":"h3"},{"title":"IsNotScriptable​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#IsNotScriptable","content":"&lt;/&gt; RobloxApiMember:IsNotScriptable() → boolean Returns whether a script can modify it.  ","version":null,"tagName":"h3"},{"title":"IsNotReplicated​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#IsNotReplicated","content":"&lt;/&gt; RobloxApiMember:IsNotReplicated() → boolean Returns whether the member is not replicated.  ","version":null,"tagName":"h3"},{"title":"IsDeprecated​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#IsDeprecated","content":"&lt;/&gt; RobloxApiMember:IsDeprecated() → boolean Returns whether the member is deprecated..  ","version":null,"tagName":"h3"},{"title":"IsHidden​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#IsHidden","content":"&lt;/&gt; RobloxApiMember:IsHidden() → boolean Returns whether this api member is hidden.  ","version":null,"tagName":"h3"},{"title":"GetTags​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#GetTags","content":"&lt;/&gt; RobloxApiMember:GetTags() → {string} Returns a list of tags. Do not modify this list.  ","version":null,"tagName":"h3"},{"title":"HasTag​","type":1,"pageTitle":"RobloxApiMember","url":"/NevermoreEngine/api/RobloxApiMember#HasTag","content":"&lt;/&gt; RobloxApiMember:HasTag(tagName: string) → boolean Retrieves whether the member has a tag or not. ","version":null,"tagName":"h3"},{"title":"RogueHumanoid","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RogueHumanoid","content":"RogueHumanoid","keywords":"","version":null},{"title":"RogueAdditive","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RogueAdditive","content":"RogueAdditive","keywords":"","version":null},{"title":"RogueHumanoidClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RogueHumanoidClient","content":"RogueHumanoidClient","keywords":"","version":null},{"title":"RogueHumanoidBase","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RogueHumanoidBase","content":"RogueHumanoidBase","keywords":"","version":null},{"title":"RogueHumanoidProperties","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RogueHumanoidProperties","content":"RogueHumanoidProperties","keywords":"","version":null},{"title":"RogueHumanoidServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RogueHumanoidServiceClient","content":"RogueHumanoidServiceClient","keywords":"","version":null},{"title":"RogueModifierBase","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RogueModifierBase","content":"RogueModifierBase","keywords":"","version":null},{"title":"RogueModifierInterface","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RogueModifierInterface","content":"RogueModifierInterface","keywords":"","version":null},{"title":"RogueMultiplier","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RogueMultiplier","content":"RogueMultiplier","keywords":"","version":null},{"title":"RogueHumanoidService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RogueHumanoidService","content":"RogueHumanoidService","keywords":"","version":null},{"title":"RogueProperty","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RogueProperty","content":"RogueProperty","keywords":"","version":null},{"title":"RoguePropertyArrayConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RoguePropertyArrayConstants","content":"RoguePropertyArrayConstants","keywords":"","version":null},{"title":"RoguePropertyArrayUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RoguePropertyArrayUtils","content":"RoguePropertyArrayUtils","keywords":"","version":null},{"title":"RoguePropertyArrayHelper","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RoguePropertyArrayHelper","content":"RoguePropertyArrayHelper","keywords":"","version":null},{"title":"RoguePropertyBaseValueTypes","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RoguePropertyBaseValueTypes","content":"RoguePropertyBaseValueTypes","keywords":"","version":null},{"title":"RoguePropertyBaseValueTypeUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RoguePropertyBaseValueTypeUtils","content":"RoguePropertyBaseValueTypeUtils","keywords":"","version":null},{"title":"RoguePropertyCacheService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RoguePropertyCacheService","content":"RoguePropertyCacheService Constructing a new rogue property/rogue property table can be expensive. This caches it so frame-usage is cheap.","keywords":"","version":null},{"title":"RoguePropertyCache","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RoguePropertyCache","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RoguePropertyCache","url":"/NevermoreEngine/api/RoguePropertyCache#functions","content":" ","version":null,"tagName":"h2"},{"title":"Store​","type":1,"pageTitle":"RoguePropertyCache","url":"/NevermoreEngine/api/RoguePropertyCache#Store","content":"&lt;/&gt; RoguePropertyCache:Store( adornee: Instance , roguePropertyTable: RoguePropertyTable ) → () Caches the implementation for a given instance  ","version":null,"tagName":"h3"},{"title":"Find​","type":1,"pageTitle":"RoguePropertyCache","url":"/NevermoreEngine/api/RoguePropertyCache#Find","content":"&lt;/&gt; RoguePropertyCache:Find(adornee: Instance ) → RoguePropertyTable Retrieves the cached item ","version":null,"tagName":"h3"},{"title":"RoguePropertyConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RoguePropertyConstants","content":"RoguePropertyConstants","keywords":"","version":null},{"title":"RoguePropertyDefinition","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RoguePropertyDefinition","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RoguePropertyDefinition","url":"/NevermoreEngine/api/RoguePropertyDefinition#functions","content":" ","version":null,"tagName":"h2"},{"title":"Get​","type":1,"pageTitle":"RoguePropertyDefinition","url":"/NevermoreEngine/api/RoguePropertyDefinition#Get","content":"&lt;/&gt; RoguePropertyDefinition:Get( serviceBag: ServiceBag, adornee: Instance ) → RogueProperty   ","version":null,"tagName":"h3"},{"title":"GetName​","type":1,"pageTitle":"RoguePropertyDefinition","url":"/NevermoreEngine/api/RoguePropertyDefinition#GetName","content":"&lt;/&gt; RoguePropertyDefinition:GetName() → string Gets the name of the rogue property  ","version":null,"tagName":"h3"},{"title":"GetFullName​","type":1,"pageTitle":"RoguePropertyDefinition","url":"/NevermoreEngine/api/RoguePropertyDefinition#GetFullName","content":"&lt;/&gt; RoguePropertyDefinition:GetFullName() → string Gets the full name of the rogue property  ","version":null,"tagName":"h3"},{"title":"GetDefaultValue​","type":1,"pageTitle":"RoguePropertyDefinition","url":"/NevermoreEngine/api/RoguePropertyDefinition#GetDefaultValue","content":"&lt;/&gt; RoguePropertyDefinition:GetDefaultValue() → TProperty Gets the default value for the property ","version":null,"tagName":"h3"},{"title":"RoguePropertyDefinitionArrayHelper","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RoguePropertyDefinitionArrayHelper","content":"RoguePropertyDefinitionArrayHelper","keywords":"","version":null},{"title":"RoguePropertyModifierData","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RoguePropertyModifierData","content":"RoguePropertyModifierData","keywords":"","version":null},{"title":"RoguePropertyService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RoguePropertyService","content":"RoguePropertyService This service handles the observable part of a rogue property which allows for us to listen for all of these additives and multipliers in a centralized location.","keywords":"","version":null},{"title":"RoguePropertyTable","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RoguePropertyTable","content":"RoguePropertyTable","keywords":"","version":null},{"title":"RoguePropertyTableDefinition","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RoguePropertyTableDefinition","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RoguePropertyTableDefinition","url":"/NevermoreEngine/api/RoguePropertyTableDefinition#functions","content":" ","version":null,"tagName":"h2"},{"title":"GetDefinition​","type":1,"pageTitle":"RoguePropertyTableDefinition","url":"/NevermoreEngine/api/RoguePropertyTableDefinition#GetDefinition","content":"&lt;/&gt; RoguePropertyTableDefinition:GetDefinition(propertyName: string) → RoguePropertyDefinition? Gets the RoguePropertyDefinition if it exists  ","version":null,"tagName":"h3"},{"title":"Get​","type":1,"pageTitle":"RoguePropertyTableDefinition","url":"/NevermoreEngine/api/RoguePropertyTableDefinition#Get","content":"&lt;/&gt; RoguePropertyTableDefinition:Get( serviceBag: ServiceBag, adornee: Instance ) → RoguePropertyTable Gets a new property table for a given object, which can compute the modified value of the adornee. This will initialize the properties on the server.  ","version":null,"tagName":"h3"},{"title":"ObserveContainerBrio​","type":1,"pageTitle":"RoguePropertyTableDefinition","url":"/NevermoreEngine/api/RoguePropertyTableDefinition#ObserveContainerBrio","content":"&lt;/&gt; RoguePropertyTableDefinition:ObserveContainerBrio( serviceBag: ServiceBag.ServiceBag, adornee: Instance ) → Observable&lt;Brio&lt;Folder &gt;&gt; Observes the current container while it exists for the given adornee.  ","version":null,"tagName":"h3"},{"title":"GetContainer​","type":1,"pageTitle":"RoguePropertyTableDefinition","url":"/NevermoreEngine/api/RoguePropertyTableDefinition#GetContainer","content":"&lt;/&gt; RoguePropertyTableDefinition:GetContainer( serviceBag: ServiceBag.ServiceBag, adornee: Instance ) → Folder?  Gets the current container for the given adornee. ","version":null,"tagName":"h3"},{"title":"RoguePropertyUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RoguePropertyUtils","content":"RoguePropertyUtils","keywords":"","version":null},{"title":"RogueSetter","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RogueSetter","content":"RogueSetter","keywords":"","version":null},{"title":"RootPartUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RootPartUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RootPartUtils","url":"/NevermoreEngine/api/RootPartUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseRootPart​","type":1,"pageTitle":"RootPartUtils","url":"/NevermoreEngine/api/RootPartUtils#promiseRootPart","content":"&lt;/&gt; RootPartUtils.promiseRootPart(humanoid: Humanoid ) → Promise&lt;BasePart &gt; Given a humanoid creates a promise that will resolve once the Humanoid.RootPart property resolves properly. INFO This works around the fact that humanoid:GetPropertyChangedSignal(&quot;RootPart&quot;) does not fire when the rootpart changes on a humanoid.  ","version":null,"tagName":"h3"},{"title":"getRootPart​","type":1,"pageTitle":"RootPartUtils","url":"/NevermoreEngine/api/RootPartUtils#getRootPart","content":"&lt;/&gt; RootPartUtils.getRootPart(character: Model ) → BasePart? -- Nil if not found Gets the root part of a character, if it exists ","version":null,"tagName":"h3"},{"title":"RotatedCamera","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RotatedCamera","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"RotatedCamera","url":"/NevermoreEngine/api/RotatedCamera#properties","content":" ","version":null,"tagName":"h2"},{"title":"CameraState​","type":1,"pageTitle":"RotatedCamera","url":"/NevermoreEngine/api/RotatedCamera#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; RotatedCamera.CameraState: CameraState The current state. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"RotatedCamera","url":"/NevermoreEngine/api/RotatedCamera#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"RotatedCamera","url":"/NevermoreEngine/api/RotatedCamera#new","content":"&lt;/&gt; RotatedCamera.new() → RotatedCamera Constructs a new RotatedCamera  ","version":null,"tagName":"h3"},{"title":"RotateXY​","type":1,"pageTitle":"RotatedCamera","url":"/NevermoreEngine/api/RotatedCamera#RotateXY","content":"&lt;/&gt; RotatedCamera:RotateXY( xzrotvector: Vector2 -- The delta rotation to apply ) → ()  ","version":null,"tagName":"h3"},{"title":"RotatingCharacter","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RotatingCharacter","content":"RotatingCharacter Character that rotates for animations","keywords":"","version":null},{"title":"RotatingCharacterBuilder","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RotatingCharacterBuilder","content":"RotatingCharacterBuilder","keywords":"","version":null},{"title":"RotatingLabelBuilder","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RotatingLabelBuilder","content":"RotatingLabelBuilder Builds a new RotatingLabel. See RotatingLabel for more details. WARNING This class is not really maintained or used anymore.","keywords":"","version":null},{"title":"RotatingLabel","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RotatingLabel","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"RotatingLabel","url":"/NevermoreEngine/api/RotatingLabel#properties","content":" ","version":null,"tagName":"h2"},{"title":"Text​","type":1,"pageTitle":"RotatingLabel","url":"/NevermoreEngine/api/RotatingLabel#Text","content":"&lt;/&gt; RotatingLabel.Text: string Sets the text label, which it will automatically update  ","version":null,"tagName":"h3"},{"title":"Width​","type":1,"pageTitle":"RotatingLabel","url":"/NevermoreEngine/api/RotatingLabel#Width","content":"&lt;/&gt; RotatingLabel.Width: number Sets the general width of each character  ","version":null,"tagName":"h3"},{"title":"Transparency​","type":1,"pageTitle":"RotatingLabel","url":"/NevermoreEngine/api/RotatingLabel#Transparency","content":"&lt;/&gt; RotatingLabel.Transparency: number Sets the transparency  ","version":null,"tagName":"h3"},{"title":"Damper​","type":1,"pageTitle":"RotatingLabel","url":"/NevermoreEngine/api/RotatingLabel#Damper","content":"&lt;/&gt; RotatingLabel.Damper: number Sets the damper of the underlying spring model  ","version":null,"tagName":"h3"},{"title":"Speed​","type":1,"pageTitle":"RotatingLabel","url":"/NevermoreEngine/api/RotatingLabel#Speed","content":"&lt;/&gt; RotatingLabel.Speed: number Sets the speed of the underlying spring model  ","version":null,"tagName":"h3"},{"title":"TextXAlignment​","type":1,"pageTitle":"RotatingLabel","url":"/NevermoreEngine/api/RotatingLabel#TextXAlignment","content":"&lt;/&gt; RotatingLabel.TextXAlignment: TextXAlignment  Sets the alignment on the X axis. Cannot be Center. ","version":null,"tagName":"h3"},{"title":"RoundedBackingBuilder","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RoundedBackingBuilder","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RoundedBackingBuilder","url":"/NevermoreEngine/api/RoundedBackingBuilder#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"RoundedBackingBuilder","url":"/NevermoreEngine/api/RoundedBackingBuilder#new","content":"&lt;/&gt; RoundedBackingBuilder.new( options: {sibling: boolean}-- Options to set ) → RoundedBackingBuilder Initializes a new RoundedBackingBuilder If options.sibling is true, assumes sibling mode in the ScreenGui, defaults to true. ","version":null,"tagName":"h3"},{"title":"RoundingBehaviourTypes","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RoundingBehaviourTypes","content":"RoundingBehaviourTypes","keywords":"","version":null},{"title":"RxAttributeUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxAttributeUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxAttributeUtils","url":"/NevermoreEngine/api/RxAttributeUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeAttribute​","type":1,"pageTitle":"RxAttributeUtils","url":"/NevermoreEngine/api/RxAttributeUtils#observeAttribute","content":"&lt;/&gt; RxAttributeUtils.observeAttribute( instance: Instance , attributeName: string, defaultValue: any? ) → Observable&lt;any&gt; Observes an attribute on an instance.  ","version":null,"tagName":"h3"},{"title":"observeAttributeKeysBrio​","type":1,"pageTitle":"RxAttributeUtils","url":"/NevermoreEngine/api/RxAttributeUtils#observeAttributeKeysBrio","content":"&lt;/&gt; RxAttributeUtils.observeAttributeKeysBrio(instance: Instance ) → Observable&lt;Brio&lt;string&gt;&gt; Observes all the attribute keys that  ","version":null,"tagName":"h3"},{"title":"observeAttributeKeys​","type":1,"pageTitle":"RxAttributeUtils","url":"/NevermoreEngine/api/RxAttributeUtils#observeAttributeKeys","content":"&lt;/&gt; RxAttributeUtils.observeAttributeKeys(instance: Instance ) → Observable&lt;string&gt; Observes all the attribute keys for an instance  ","version":null,"tagName":"h3"},{"title":"observeAttributeBrio​","type":1,"pageTitle":"RxAttributeUtils","url":"/NevermoreEngine/api/RxAttributeUtils#observeAttributeBrio","content":"&lt;/&gt; RxAttributeUtils.observeAttributeBrio( instance: Instance , attributeName: string, condition: function | nil ) → Observable&lt;Brio&lt;any&gt;&gt; Observes an attribute on an instance with a conditional statement. ","version":null,"tagName":"h3"},{"title":"RxBinderGroupUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxBinderGroupUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxBinderGroupUtils","url":"/NevermoreEngine/api/RxBinderGroupUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeBinders​","type":1,"pageTitle":"RxBinderGroupUtils","url":"/NevermoreEngine/api/RxBinderGroupUtils#observeBinders","content":"&lt;/&gt; RxBinderGroupUtils.observeBinders(binderGroup: BinderGroup&lt;T&gt;) → Observable&lt;Binder&lt;T&gt;&gt; Observes all binders in a binder group  ","version":null,"tagName":"h3"},{"title":"observeAllClassesBrio​","type":1,"pageTitle":"RxBinderGroupUtils","url":"/NevermoreEngine/api/RxBinderGroupUtils#observeAllClassesBrio","content":"&lt;/&gt; RxBinderGroupUtils.observeAllClassesBrio(binderGroup: BinderGroup&lt;T&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Observes all classes in a given binder group. ","version":null,"tagName":"h3"},{"title":"RxBinderUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxBinderUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxBinderUtils","url":"/NevermoreEngine/api/RxBinderUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeLinkedBoundClassBrio​","type":1,"pageTitle":"RxBinderUtils","url":"/NevermoreEngine/api/RxBinderUtils#observeLinkedBoundClassBrio","content":"&lt;/&gt; RxBinderUtils.observeLinkedBoundClassBrio( linkName: string, parent: Instance , binder: Binder&lt;T&gt; ) → Observable&lt;Brio&lt;T&gt;&gt; Observes a structure where a parent has object values with linked objects (for example), maybe an AI has a list of linked objectvalue tasks to execute.  ","version":null,"tagName":"h3"},{"title":"observeChildrenBrio​","type":1,"pageTitle":"RxBinderUtils","url":"/NevermoreEngine/api/RxBinderUtils#observeChildrenBrio","content":"&lt;/&gt; RxBinderUtils.observeChildrenBrio( binder: Binder&lt;T&gt;, instance: Instance ) → Observable&lt;Brio&lt;T&gt;&gt; Observes bound children classes.  ","version":null,"tagName":"h3"},{"title":"observeBoundChildClassBrio​","type":1,"pageTitle":"RxBinderUtils","url":"/NevermoreEngine/api/RxBinderUtils#observeBoundChildClassBrio","content":"&lt;/&gt; RxBinderUtils.observeBoundChildClassBrio( binder: Binder&lt;T&gt;, instance: Instance ) → Observable&lt;Brio&lt;T&gt;&gt; Observes bound children classes.  ","version":null,"tagName":"h3"},{"title":"observeBoundParentClassBrio​","type":1,"pageTitle":"RxBinderUtils","url":"/NevermoreEngine/api/RxBinderUtils#observeBoundParentClassBrio","content":"&lt;/&gt; RxBinderUtils.observeBoundParentClassBrio( binder: Binder&lt;T&gt;, instance: Instance ) → Observable&lt;Brio&lt;T&gt;&gt; Observes ainstance's parent class that is bound.  ","version":null,"tagName":"h3"},{"title":"observeBoundChildClassesBrio​","type":1,"pageTitle":"RxBinderUtils","url":"/NevermoreEngine/api/RxBinderUtils#observeBoundChildClassesBrio","content":"&lt;/&gt; RxBinderUtils.observeBoundChildClassesBrio( binders: {Binder&lt;T&gt;}, instance: Instance ) → Observable&lt;Brio&lt;T&gt;&gt; Observes all bound classes that hit that list of binders  ","version":null,"tagName":"h3"},{"title":"observeBoundClass​","type":1,"pageTitle":"RxBinderUtils","url":"/NevermoreEngine/api/RxBinderUtils#observeBoundClass","content":"&lt;/&gt; RxBinderUtils.observeBoundClass( binder: Binder&lt;T&gt;, instance: Instance ) → Observable&lt;T?&gt; Observes a bound class on a given instance.  ","version":null,"tagName":"h3"},{"title":"observeBoundClassBrio​","type":1,"pageTitle":"RxBinderUtils","url":"/NevermoreEngine/api/RxBinderUtils#observeBoundClassBrio","content":"&lt;/&gt; RxBinderUtils.observeBoundClassBrio( binder: Binder&lt;T&gt;, instance: Instance ) → Observable&lt;Brio&lt;T&gt;&gt; Observes a bound class on a given instance.  ","version":null,"tagName":"h3"},{"title":"observeBoundClassesBrio​","type":1,"pageTitle":"RxBinderUtils","url":"/NevermoreEngine/api/RxBinderUtils#observeBoundClassesBrio","content":"&lt;/&gt; RxBinderUtils.observeBoundClassesBrio( binders: {Binder&lt;T&gt;}, instance: Instance ) → Observable&lt;Brio&lt;T&gt;&gt; Observes all bound classes for a given binder.  ","version":null,"tagName":"h3"},{"title":"observeAllBrio​","type":1,"pageTitle":"RxBinderUtils","url":"/NevermoreEngine/api/RxBinderUtils#observeAllBrio","content":"&lt;/&gt; RxBinderUtils.observeAllBrio(binder: Binder) → Observable&lt;Brio&lt;T&gt;&gt; Observes all instances bound to a given binder.  ","version":null,"tagName":"h3"},{"title":"observeAllArrayBrio​","type":1,"pageTitle":"RxBinderUtils","url":"/NevermoreEngine/api/RxBinderUtils#observeAllArrayBrio","content":"&lt;/&gt; RxBinderUtils.observeAllArrayBrio(binder: Binder) → Observable&lt;Brio&lt;{T}&gt;&gt; Observes all instances bound to the given binder as an unordered array. ","version":null,"tagName":"h3"},{"title":"RxBodyColorsDataUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxBodyColorsDataUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxBodyColorsDataUtils","url":"/NevermoreEngine/api/RxBodyColorsDataUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeFromAttributes​","type":1,"pageTitle":"RxBodyColorsDataUtils","url":"/NevermoreEngine/api/RxBodyColorsDataUtils#observeFromAttributes","content":"&lt;/&gt; RxBodyColorsDataUtils.observeFromAttributes(instance: Instance ) → Observable&lt;BodyColorsData&gt; Observes the current body colors data from attributes ","version":null,"tagName":"h3"},{"title":"RxCharacterUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxCharacterUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxCharacterUtils","url":"/NevermoreEngine/api/RxCharacterUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeLastCharacterBrio​","type":1,"pageTitle":"RxCharacterUtils","url":"/NevermoreEngine/api/RxCharacterUtils#observeLastCharacterBrio","content":"&lt;/&gt; RxCharacterUtils.observeLastCharacterBrio(player: Player ) → Observable&lt;Brio&lt;Model &gt;&gt; Observe a player's last character.  ","version":null,"tagName":"h3"},{"title":"observeCharacter​","type":1,"pageTitle":"RxCharacterUtils","url":"/NevermoreEngine/api/RxCharacterUtils#observeCharacter","content":"&lt;/&gt; RxCharacterUtils.observeCharacter(player: Player ) → Observable&lt;Model &gt; Observes a player's character property  ","version":null,"tagName":"h3"},{"title":"observeCharacterBrio​","type":1,"pageTitle":"RxCharacterUtils","url":"/NevermoreEngine/api/RxCharacterUtils#observeCharacterBrio","content":"&lt;/&gt; RxCharacterUtils.observeCharacterBrio(player: Player ) → Observable&lt;Brio&lt;Model &gt;&gt; Observes a player's character property as a brio  ","version":null,"tagName":"h3"},{"title":"observeIsOfLocalCharacter​","type":1,"pageTitle":"RxCharacterUtils","url":"/NevermoreEngine/api/RxCharacterUtils#observeIsOfLocalCharacter","content":"&lt;/&gt; RxCharacterUtils.observeIsOfLocalCharacter(instance: Instance ) → Observable&lt;boolean&gt; Observes whether the instance is part of the local player's character  ","version":null,"tagName":"h3"},{"title":"observeIsOfLocalCharacterBrio​","type":1,"pageTitle":"RxCharacterUtils","url":"/NevermoreEngine/api/RxCharacterUtils#observeIsOfLocalCharacterBrio","content":"&lt;/&gt; RxCharacterUtils.observeIsOfLocalCharacterBrio(instance: Instance ) → Observable&lt;Brio&lt;boolean&gt;&gt; Observes whether the instance is part of the local player's character as a brio  ","version":null,"tagName":"h3"},{"title":"observeLocalPlayerCharacter​","type":1,"pageTitle":"RxCharacterUtils","url":"/NevermoreEngine/api/RxCharacterUtils#observeLocalPlayerCharacter","content":"&lt;/&gt; RxCharacterUtils.observeLocalPlayerCharacter() → Observable&lt;Model &gt; Observes the local player's character  ","version":null,"tagName":"h3"},{"title":"observeLastHumanoidBrio​","type":1,"pageTitle":"RxCharacterUtils","url":"/NevermoreEngine/api/RxCharacterUtils#observeLastHumanoidBrio","content":"&lt;/&gt; RxCharacterUtils.observeLastHumanoidBrio(player: Player ) → Observable&lt;Brio&lt;Humanoid &gt;&gt; Observe a player's last humanoid. Note that it may not be alive!  ","version":null,"tagName":"h3"},{"title":"observeLastAliveHumanoidBrio​","type":1,"pageTitle":"RxCharacterUtils","url":"/NevermoreEngine/api/RxCharacterUtils#observeLastAliveHumanoidBrio","content":"&lt;/&gt; RxCharacterUtils.observeLastAliveHumanoidBrio(player: Player ) → Observable&lt;Brio&lt;Humanoid &gt;&gt; Observes a player's last living humanoid. local Players = game:GetService(&quot;Players&quot;) maid:GiveTask( RxCharacterUtils.observeLastAliveHumanoidBrio(Players.LocalPlayer) :Subscribe(function(humanoidBrio) local humanoid: Humanoid = humanoidBrio:GetValue() local humanoidMaid = humanoidBrio:ToMaid() print(&quot;Humanoid:&quot;, humanoid) humanoidMaid:GiveTask(function() -- The maid cleans up on humanoid death, or when given player leaves the game. print(&quot;Humanoid has been killed or destroyed!&quot;) end) end) )  ","version":null,"tagName":"h3"},{"title":"RxBrioUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxBrioUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"ofBrio​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#ofBrio","content":"&lt;/&gt; RxBrioUtils.ofBrio(callback: ((Maid.Maid) → T) | T) → Observable&lt;Brio&lt;T&gt;&gt; Creates a new observable wrapping the brio with the brio lasting for the lifetime of the observable  ","version":null,"tagName":"h3"},{"title":"toBrio​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#toBrio","content":"&lt;/&gt; RxBrioUtils.toBrio() → (source: Observable&lt;Brio&lt;T&gt; | T&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Takes a result and converts it to a brio if it is not one.  ","version":null,"tagName":"h3"},{"title":"of​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#of","content":"&lt;/&gt; RxBrioUtils.of(...: T) → Observable&lt;Brio&lt;T&gt;&gt; Same as Rx.of but wraps it in a Brio.  ","version":null,"tagName":"h3"},{"title":"completeOnDeath​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#completeOnDeath","content":"&lt;/&gt; RxBrioUtils.completeOnDeath( brio: Brio, observable: Observable&lt;T&gt; ) → Observable&lt;T&gt; Completes the observable on death  ","version":null,"tagName":"h3"},{"title":"emitWhileAllDead​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#emitWhileAllDead","content":"&lt;/&gt; RxBrioUtils.emitWhileAllDead(valueToEmitWhileAllDead: T) → (source: Observable&lt;Brio&lt;U&gt;&gt;) → Observable&lt;Brio&lt;U | T&gt;&gt; Whenever all returned brios are dead, emits this value wrapped in a brio.  ","version":null,"tagName":"h3"},{"title":"reduceToAliveList​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#reduceToAliveList","content":"&lt;/&gt; RxBrioUtils.reduceToAliveList(selectFromBrio: ((value: T) → U)?) → (source: Observable&lt;Brio&lt;T&gt;&gt;) → Observable&lt;Brio{U}&gt; This can't be cheap. Consider deeply if you want this or not.  ","version":null,"tagName":"h3"},{"title":"reemitLastBrioOnDeath​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#reemitLastBrioOnDeath","content":"&lt;/&gt; RxBrioUtils.reemitLastBrioOnDeath() → (sourceObservable&lt;Brio&lt;T&gt;&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Whenever the last brio dies, reemit it as a dead brio  ","version":null,"tagName":"h3"},{"title":"where​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#where","content":"since 3.6.0 &lt;/&gt; RxBrioUtils.where(predicate: (T) → boolean) → (source: Observable&lt;Brio&lt;T&gt;&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Unpacks the brio, and then repacks it. Ignored items still invalidate the previous brio  ","version":null,"tagName":"h3"},{"title":"flatCombineLatestBrio​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#flatCombineLatestBrio","content":"&lt;/&gt; RxBrioUtils.flatCombineLatestBrio( observables: {[any]: Observable&lt;Brio&lt;T&gt;&gt; | Observable&lt;T&gt; | T}, filter: function | nil ) → Observable&lt;Brio&lt;{[any]: T}&gt;&gt; Flattens all the brios in one brio and combines them, and then switches it to a brio so only the last state is valid.  ","version":null,"tagName":"h3"},{"title":"flatMapBrio​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#flatMapBrio","content":"since 3.6.0 &lt;/&gt; RxBrioUtils.flatMapBrio(project: (value: TBrio) → TProject | Brio&lt;TProject&gt;) → (source: Observable&lt;Brio&lt;TBrio&gt;&gt; → Observable&lt;Brio&lt;TResult&gt;&gt;) Flat map equivalent for brios. The resulting observables will be disconnected at the end of the brio. Like RxBrioUtils.flatMap, but emitted values are wrapped in brios. The lifetime of this brio is limited by the lifetime of the input brios, which are unwrapped and repackaged.  ","version":null,"tagName":"h3"},{"title":"switchMapBrio​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#switchMapBrio","content":"since 3.6.0 &lt;/&gt; RxBrioUtils.switchMapBrio(project: (value: TBrio) → TProject | Brio&lt;TProject&gt;) → (source: Observable&lt;Brio&lt;TBrio&gt;&gt;) → Observable&lt;Brio&lt;TResult&gt;&gt; Switch map but for brios. The resulting observable will be disconnected on the end of the brio's life. Like RxBrioUtils.switchMap but emitted values are wrapped in brios. The lifetime of this brio is limited by the lifetime of the input brios, which are unwrapped and repackaged.  ","version":null,"tagName":"h3"},{"title":"flatCombineLatest​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#flatCombineLatest","content":"since 3.6.0 &lt;/&gt; RxBrioUtils.flatCombineLatest(observables: {[any]: Observable&lt;Brio&lt;T&gt;&gt; | Observable&lt;T&gt; | T}) → Observable&lt;{[any]: T?}&gt; Works line combineLatest, but allow the transformation of a brio into an observable that emits the value, and then nil, on death. The issue here is this: Resources are found with combineLatest() One resource dies All resources are invalidated We still wanted to be able to use most of the resources With this method we are able to do this, as we'll re-emit a table with all resoruces except the invalidated one.  ","version":null,"tagName":"h3"},{"title":"prepend​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#prepend","content":"since 3.6.0 &lt;/&gt; RxBrioUtils.prepend(...: T) → (source: Observable&lt;Brio&lt;U&gt;&gt;) → Observable&lt;Brio&lt;U | T&gt;&gt; Prepends the value onto the emitted brio  ","version":null,"tagName":"h3"},{"title":"extend​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#extend","content":"since 3.6.0 &lt;/&gt; RxBrioUtils.extend(...: T) → (source: Observable&lt;Brio&lt;U&gt;&gt;) → Observable&lt;Brio&lt;U | T&gt;&gt; Extends the value onto the emitted brio  ","version":null,"tagName":"h3"},{"title":"map​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#map","content":"since 3.6.0 &lt;/&gt; RxBrioUtils.map(project: project(Brio&lt;T&gt; | T) → Brio&lt;U&gt; | U) → (source: Observable&lt;Brio&lt;T&gt; | T&gt;) → Observable&lt;Brio&lt;U&gt;&gt; Maps the input brios to the output observables  ","version":null,"tagName":"h3"},{"title":"mapBrioBrio​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#mapBrioBrio","content":"since 3.6.0 &lt;/&gt; RxBrioUtils.mapBrioBrio(project: (value: TBrio) → TProject | Brio&lt;TProject&gt;) → (Brio&lt;TBrio&gt;) → Brio&lt;TProject&gt; Takes in a brio and returns an observable that emits the brio, and then completes on death.  ","version":null,"tagName":"h3"},{"title":"toEmitOnDeathObservable​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#toEmitOnDeathObservable","content":"&lt;/&gt; RxBrioUtils.toEmitOnDeathObservable( brio: Brio&lt;T&gt; | T, emitOnDeathValue: U ) → Observable&lt;T | U&gt; Transforms the brio into an observable that emits the initial value of the brio, and then another value on death  ","version":null,"tagName":"h3"},{"title":"mapBrioToEmitOnDeathObservable​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#mapBrioToEmitOnDeathObservable","content":"&lt;/&gt; RxBrioUtils.mapBrioToEmitOnDeathObservable(emitOnDeathValue: U) → (brio: Brio&lt;T&gt; | T) → Observable&lt;T | U&gt; Returns a mapping function that emits the given value.  ","version":null,"tagName":"h3"},{"title":"emitOnDeath​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#emitOnDeath","content":"&lt;/&gt; RxBrioUtils.emitOnDeath(emitOnDeathValue: U) → (source: Observable&lt;Brio&lt;T&gt; | T&gt;) → Observable&lt;T | U&gt; Takes in an observable of brios and returns an observable of the inner values that will also output nil if there is no other value for the brio.  ","version":null,"tagName":"h3"},{"title":"flattenToValueAndNil​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#flattenToValueAndNil","content":"&lt;/&gt; RxBrioUtils.flattenToValueAndNil(source: Observable&lt;Brio&lt;T&gt; | T&gt;) → T | nil Flattens the observable to nil and the value  ","version":null,"tagName":"h3"},{"title":"onlyLastBrioSurvives​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#onlyLastBrioSurvives","content":"&lt;/&gt; RxBrioUtils.onlyLastBrioSurvives() → (sourceObservable&lt;Brio&lt;T&gt;&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Ensures only the last brio survives.  ","version":null,"tagName":"h3"},{"title":"switchToBrio​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#switchToBrio","content":"since 3.6.0 &lt;/&gt; RxBrioUtils.switchToBrio(predicate: ((T) → boolean)?) → (source: Observable&lt;T | Brio&lt;T&gt;&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Switches the result to a brio, and ensures only the last brio lives.  ","version":null,"tagName":"h3"},{"title":"filter​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#filter","content":"deprecated in 3.6.0 &lt;/&gt; This was deprecated in 3.6.0 This method does not wrap the resulting value in a Brio, which can sometimes lead to leaks. RxBrioUtils.filter(predicate: (T) → boolean) → (source: Observable&lt;Brio&lt;T&gt;&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Same as RxBrioUtils.where. Here to keep backwards compatability.  ","version":null,"tagName":"h3"},{"title":"combineLatest​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#combineLatest","content":"deprecated in 3.6.0 &lt;/&gt; This was deprecated in 3.6.0 This method does not wrap the resulting value in a Brio, which can sometimes lead to leaks. RxBrioUtils.combineLatest(observables: {[any]: Observable&lt;Brio&lt;T&gt;&gt; | Observable&lt;T&gt; | T}) → Observable&lt;Brio&lt;{[any]: T}&gt;&gt; Flattens all the brios in one brio and combines them. Note that this method leads to gaps in the lifetime of the brio.  ","version":null,"tagName":"h3"},{"title":"flatMap​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#flatMap","content":"deprecated in 3.6.0 &lt;/&gt; This was deprecated in 3.6.0 This method does not wrap the resulting value in a Brio, which can sometimes lead to leaks. RxBrioUtils.flatMap(project: (value: TBrio) → TProject) → (source: Observable&lt;Brio&lt;TBrio&gt;&gt; → Observable&lt;TResult&gt;) Flat map equivalent for brios. The resulting observables will be disconnected at the end of the brio.  ","version":null,"tagName":"h3"},{"title":"switchMap​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#switchMap","content":"deprecated in 3.6.0 &lt;/&gt; This was deprecated in 3.6.0 This method does not wrap the resulting value in a Brio, which can sometimes lead to leaks. RxBrioUtils.switchMap(project: (value: TBrio) → TProject) → (source: Observable&lt;Brio&lt;TBrio&gt;&gt;) → Observable&lt;TResult&gt; Switch map but for brios. The resulting observable will be disconnected on the end of the brio's life.  ","version":null,"tagName":"h3"},{"title":"mapBrio​","type":1,"pageTitle":"RxBrioUtils","url":"/NevermoreEngine/api/RxBrioUtils#mapBrio","content":"deprecated in 3.6.0 &lt;/&gt; This was deprecated in 3.6.0 This method does not wrap the resulting value in a Brio, which can sometimes lead to leaks. RxBrioUtils.mapBrio(project: (value: TBrio) → TProject) → (brio&lt;TBrio&gt;) → TProject Takes in a brio and returns an observable that emits the brio, and then completes on death. ","version":null,"tagName":"h3"},{"title":"RxClippedRectUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxClippedRectUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxClippedRectUtils","url":"/NevermoreEngine/api/RxClippedRectUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeClippedRect​","type":1,"pageTitle":"RxClippedRectUtils","url":"/NevermoreEngine/api/RxClippedRectUtils#observeClippedRect","content":"&lt;/&gt; RxClippedRectUtils.observeClippedRect(gui: Gui) → Observable&lt;Rect &gt; Observes the clipped rect for the given Gui  ","version":null,"tagName":"h3"},{"title":"observeClippedRectInScale​","type":1,"pageTitle":"RxClippedRectUtils","url":"/NevermoreEngine/api/RxClippedRectUtils#observeClippedRectInScale","content":"&lt;/&gt; RxClippedRectUtils.observeClippedRectInScale(gui: Gui) → Observable&lt;Rect &gt; Observes the clipped rect for the given Gui, but in scale coordinates ","version":null,"tagName":"h3"},{"title":"Rx","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Rx","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#properties","content":" ","version":null,"tagName":"h2"},{"title":"EMPTY​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#EMPTY","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Rx.EMPTY: Observable&lt;()&gt; An empty observable that completes immediately  ","version":null,"tagName":"h3"},{"title":"NEVER​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#NEVER","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Rx.NEVER: Observable&lt;()&gt; An observable that never completes. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#functions","content":" ","version":null,"tagName":"h2"},{"title":"pipe​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#pipe","content":"&lt;/&gt; Rx.pipe(transformers: {Observable&lt;any&gt;}) → (source: Observable&lt;T&gt;) → Observable&lt;U&gt; Pipes the tranformers through each otherhttps://rxjs-dev.firebaseapp.com/api/index/function/pipe  ","version":null,"tagName":"h3"},{"title":"of​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#of","content":"&lt;/&gt; Rx.of( ...: any-- Arguments to emit ) → Observable http://reactivex.io/documentation/operators/just.html Rx.of(1, 2, 3):Subscribe(print, function() print(&quot;Complete&quot;) end)) --&gt; 1, 2, 3, &quot;Complete&quot;   ","version":null,"tagName":"h3"},{"title":"failed​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#failed","content":"&lt;/&gt; Rx.failed( ...: any-- Failure args ) → Observable Returns a failed observable  ","version":null,"tagName":"h3"},{"title":"from​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#from","content":"&lt;/&gt; Rx.from(item: Promise | table) → Observable Converts an itemhttp://reactivex.io/documentation/operators/from.html  ","version":null,"tagName":"h3"},{"title":"toPromise​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#toPromise","content":"&lt;/&gt; Rx.toPromise( observable: Observable&lt;T&gt;, cancelToken: CancelToken? ) → Promise&lt;T&gt; Converts a promise to an observable.  ","version":null,"tagName":"h3"},{"title":"merge​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#merge","content":"&lt;/&gt; Rx.merge(observables: {Observable}) → Observable https://rxjs-dev.firebaseapp.com/api/operators/merge  ","version":null,"tagName":"h3"},{"title":"fromSignal​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#fromSignal","content":"&lt;/&gt; Rx.fromSignal(event: Signal&lt;T&gt;) → Observable&lt;T&gt; Converts a Signal into an observable.https://rxjs-dev.firebaseapp.com/api/index/function/fromEvent  ","version":null,"tagName":"h3"},{"title":"fromPromise​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#fromPromise","content":"&lt;/&gt; Rx.fromPromise(promise: Promise&lt;T&gt;) → Observable&lt;T&gt; Converts a Promise into an observable.https://rxjs-dev.firebaseapp.com/api/index/function/from  ","version":null,"tagName":"h3"},{"title":"tap​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#tap","content":"&lt;/&gt; Rx.tap( onFire: function?, onError: function?, onComplete: function? ) → (source: Observable&lt;T&gt;) → Observable&lt;T&gt; Taps into the observable and executes the onFire/onError/onComplete commands. https://rxjs-dev.firebaseapp.com/api/operators/tap  ","version":null,"tagName":"h3"},{"title":"start​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#start","content":"&lt;/&gt; Rx.start(callback: function) → (source: Observable) → Observable Starts the observable with the given value from the callback http://reactivex.io/documentation/operators/start.html  ","version":null,"tagName":"h3"},{"title":"share​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#share","content":"&lt;/&gt; Rx.share() → (source: Observable) → Observable Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will unsubscribe from the source Observable. https://rxjs.dev/api/operators/share  ","version":null,"tagName":"h3"},{"title":"shareReplay​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#shareReplay","content":"&lt;/&gt; Rx.shareReplay( bufferSize: number?,-- Number of entries to cache windowTimeSeconds: number?-- Time ) → (source: Observable) → Observable Same as Rx.share except it also replays the value  ","version":null,"tagName":"h3"},{"title":"cache​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#cache","content":"&lt;/&gt; Rx.cache() → (source: Observable) → Observable Caches the current value  ","version":null,"tagName":"h3"},{"title":"startFrom​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#startFrom","content":"&lt;/&gt; Rx.startFrom(callback: () → {T}) → (source: Observable) → Observable Like start, but also from (list!)  ","version":null,"tagName":"h3"},{"title":"startWith​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#startWith","content":"&lt;/&gt; Rx.startWith(values: {T}) → (source: Observable) → Observable Starts with the given valueshttps://rxjs-dev.firebaseapp.com/api/operators/startWith  ","version":null,"tagName":"h3"},{"title":"scan​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#scan","content":"&lt;/&gt; Rx.scan( accumulator: ( T, U... ) → T, seed: T? ) → (source: Observable) → Observable The Scan operator applies a function to the first item emitted by the source Observable and then emits the result of that function as its own first emission. It also feeds the result of the function back into the function along with the second item emitted by the source Observable in order to generate its second emission. It continues to feed back its own subsequent emissions along with the subsequent emissions from the source Observable in order to create the rest of its sequence. https://reactivex.io/documentation/operators/scan.html  ","version":null,"tagName":"h3"},{"title":"reduce​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#reduce","content":"&lt;/&gt; Rx.reduce( reducer: function, seed: any | nil ) → (source: Observable) → Observable The Reduce operator applies a function to the first item emitted by the source Observable and then feeds the result of the function back into the function along with the second item emitted by the source Observable, continuing this process until the source Observable emits its final item and completes, whereupon the Observable returned from Reduce emits the final value returned from the function. https://reactivex.io/documentation/operators/reduce.html  ","version":null,"tagName":"h3"},{"title":"defaultsTo​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#defaultsTo","content":"&lt;/&gt; Rx.defaultsTo(value: any) → (source: Observable) → Observable Defaults the observable to a value if it isn't fired immediately Rx.NEVER:Pipe({ Rx.defaultsTo(&quot;Hello&quot;) }):Subscribe(print) --&gt; Hello If empty (or failed) the the sub will fire with the value before it completes.  ","version":null,"tagName":"h3"},{"title":"defaultsToNil​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#defaultsToNil","content":"&lt;/&gt; Rx.defaultsToNil(source: Observable) → Observable Defaults the observable value to nil Rx.NEVER:Pipe({ Rx.defaultsToNil }):Subscribe(print) --&gt; nil Great for defaulting Roblox attributes and objects  ","version":null,"tagName":"h3"},{"title":"endWith​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#endWith","content":"&lt;/&gt; Rx.endWith(values: {T}) → (source: Observable) → Observable Ends the observable with these values before cancellationhttps://www.learnrxjs.io/learn-rxjs/operators/combination/endwith  ","version":null,"tagName":"h3"},{"title":"where​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#where","content":"&lt;/&gt; Rx.where(predicate: (value: T) → boolean) → (source: Observable&lt;T&gt;) → Observable&lt;T&gt; http://reactivex.io/documentation/operators/filter.html Filters out values Rx.of(1, 2, 3, 4, 5):Pipe({ Rx.where(function(value) return value % 2 == 0; end) }):Subscribe(print) --&gt; 2, 4   ","version":null,"tagName":"h3"},{"title":"distinct​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#distinct","content":"&lt;/&gt; Rx.distinct() → (source: Observable&lt;T&gt;) → Observable&lt;T&gt; Only takes distinct values from the observable stream. http://reactivex.io/documentation/operators/distinct.html Rx.of(1, 1, 2, 3, 3, 1):Pipe({ Rx.distinct(); }):Subscribe(print) --&gt; 1, 2, 3, 1   ","version":null,"tagName":"h3"},{"title":"mapTo​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#mapTo","content":"&lt;/&gt; Rx.mapTo( ...: any-- The value to map each source value to. ) → (source: Observable&lt;T&gt;) → Observable&lt;T&gt; https://rxjs.dev/api/operators/mapTo  ","version":null,"tagName":"h3"},{"title":"map​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#map","content":"&lt;/&gt; Rx.map(project: (T) → U) → (source: Observable&lt;T&gt;) → Observable&lt;U&gt; http://reactivex.io/documentation/operators/map.html Maps one value to another Rx.of(1, 2, 3, 4, 5):Pipe({ Rx.map(function(x) return x + 1 end) }):Subscribe(print) -&gt; 2, 3, 4, 5, 6   ","version":null,"tagName":"h3"},{"title":"mergeAll​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#mergeAll","content":"&lt;/&gt; Rx.mergeAll() → (source: Observable&lt;Observable&lt;T&gt;&gt;) → Observable&lt;T&gt; Merges higher order observables together. Basically, if you have an observable that is emitting an observable, this subscribes to each emitted observable and combines them into a single observable. Rx.of(Rx.of(1, 2, 3), Rx.of(4)) :Pipe({ Rx.mergeAll(); }) :Subscribe(print) -&gt; 1, 2, 3, 4   ","version":null,"tagName":"h3"},{"title":"switchAll​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#switchAll","content":"&lt;/&gt; Rx.switchAll() → (source: Observable&lt;Observable&lt;T&gt;&gt;) → Observable&lt;T&gt; Merges higher order observables together https://rxjs.dev/api/operators/switchAll Works like mergeAll, where you subscribe to an observable which is emitting observables. However, when another observable is emitted it disconnects from the other observable and subscribes to that one.  ","version":null,"tagName":"h3"},{"title":"flatMap​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#flatMap","content":"&lt;/&gt; Rx.flatMap(project: (value: T) → Observable&lt;U&gt;) → (source: Observable&lt;T&gt;) → Observable&lt;U&gt; Sort of equivalent of promise.then() This takes a stream of observables  ","version":null,"tagName":"h3"},{"title":"switchMap​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#switchMap","content":"&lt;/&gt; Rx.switchMap(project: function) → Observable Switches to a new observable from the current observable https://rxjs.dev/api/operators/switchMap As each observable shows up, a new observable is mapped from that observable. The old observable is disconnected. Use Rx.switchMap to switch to a new RunService event Rx.of(1, 2, 3):Pipe({ Rx.switchMap(function(value) local startTime = os.clock() -- Only the last observable returned will continue to emit, -- others are disconnected. return Rx.of(RunService.RenderStepped):Pipe({ Rx.map(function() return os.clock() - startTime, value end); }); end); }):Subscribe(print) --&gt; 0.002352342, 3 Use Rx.switchMap() as a simple map... Rx.of(1, 2, 3):Pipe({ Rx.switchMap(function(value) print(value) --&gt; 1 (and then 2, and then 3) return Rx.of(value*2) end); }):Subscribe(print) --&gt; 2, 4, 6 Use Rx.switchMap() with delayed input (to swap to a new one) Rx.of(1, 2, 3):Pipe({ Rx.switchMap(function(value) -- Emit 1 second later return Rx.of(value*2):Pipe({ Rx.delay(1); -- These will each get cancelled }) end); }):Subscribe(print) --&gt; 6 (other results were cancelled)   ","version":null,"tagName":"h3"},{"title":"packed​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#packed","content":"&lt;/&gt; Rx.packed(...: any) → Observable Returns an observable that takes in a tuple, and emits that tuple, then completes. Rx.packed(&quot;a&quot;, &quot;b&quot;) :Subscribe(function(first, second) print(first, second) --&gt; a, b end)   ","version":null,"tagName":"h3"},{"title":"unpacked​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#unpacked","content":"&lt;/&gt; Rx.unpacked(observable: Observable&lt;{T}&gt;) → Observable&lt;T&gt; Unpacks the observables value if a table is received  ","version":null,"tagName":"h3"},{"title":"finalize​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#finalize","content":"&lt;/&gt; Rx.finalize(finalizerCallback: () → ()) → (source: Observable&lt;T&gt;) → Observable&lt;T&gt; Acts as a finalizer callback once the subscription is unsubscribed. Rx.of(&quot;a&quot;, &quot;b&quot;):Pipe({ Rx.finalize(function() print(&quot;Subscription done!&quot;) end); }) http://reactivex.io/documentation/operators/do.html https://rxjs-dev.firebaseapp.com/api/operators/finalize https://github.com/ReactiveX/rxjs/blob/master/src/internal/operators/finalize.ts  ","version":null,"tagName":"h3"},{"title":"combineLatestAll​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#combineLatestAll","content":"&lt;/&gt; Rx.combineLatestAll() → (source: Observable&lt;Observable&lt;T&gt;&gt;) → Observable&lt;{T}&gt; Given an observable that emits observables, emit an observable that once the initial observable completes, the latest values of each emitted observable will be combined into an array that will be emitted. https://rxjs.dev/api/operators/combineLatestAll  ","version":null,"tagName":"h3"},{"title":"catchError​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#catchError","content":"&lt;/&gt; Rx.catchError(callback: (error: TError) → Observable&lt;TErrorResult&gt;) → (source: Observable&lt;T&gt;) → Observable&lt;T | TErrorResult&gt; Catches an error, and allows another observable to be subscribed in terms of handling the error. WARNING This method is not yet tested  ","version":null,"tagName":"h3"},{"title":"combineLatest​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#combineLatest","content":"&lt;/&gt; Rx.combineLatest(observables: {[TKey]: Observable&lt;TEmitted&gt; | TEmitted}) → Observable&lt;{[TKey]: TEmitted}&gt; One of the most useful functions this combines the latest values of observables at each chance! Rx.combineLatest({ child = Rx.fromSignal(Workspace.ChildAdded); lastChildRemoved = Rx.fromSignal(Workspace.ChildRemoved); value = 5; }):Subscribe(function(data) print(data.child) --&gt; last child print(data.lastChildRemoved) --&gt; other value print(data.value) --&gt; 5 end) TIP Note that the resulting observable will not emit until all input observables are emitted.  ","version":null,"tagName":"h3"},{"title":"combineLatestDefer​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#combineLatestDefer","content":"&lt;/&gt; Rx.combineLatestDefer(observables: {[TKey]: Observable&lt;TEmitted&gt; | TEmitted}) → Observable&lt;{[TKey]: TEmitted}&gt; Equivalent of Rx.combineLatest and Rx.throttleDefer but avoids copying and emitting a new table until after the frame ends. Helpful in scenarios where we write multiple times to a single value in a frame, and we don't want to create a lot of work for the garbage collector.  ","version":null,"tagName":"h3"},{"title":"using​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#using","content":"&lt;/&gt; Rx.using( resourceFactory: () → MaidTask, observableFactory: (MaidTask) → Observable&lt;T&gt; ) → Observable&lt;T&gt; http://reactivex.io/documentation/operators/using.html Each time a subscription occurs, the resource is constructed and exists for the lifetime of the observation. The observableFactory uses the resource for subscription. NOTE Note from Quenty: I haven't found this that useful.  ","version":null,"tagName":"h3"},{"title":"first​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#first","content":"&lt;/&gt; Rx.first() → (source: Observable&lt;T&gt;) → Observable&lt;T&gt; Takes the first entry and terminates the observable. Equivalent to the following: Rx.take(1) https://reactivex.io/documentation/operators/first.html  ","version":null,"tagName":"h3"},{"title":"take​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#take","content":"&lt;/&gt; Rx.take(number: number) → (source: Observable&lt;T&gt;) → Observable&lt;T&gt; Takes n entries and then completes the observation. https://rxjs.dev/api/operators/take  ","version":null,"tagName":"h3"},{"title":"skip​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#skip","content":"&lt;/&gt; Rx.skip(toSkip: number) → (source: Observable&lt;T&gt;) → Observable&lt;T&gt; Takes n entries and then completes the observation. https://rxjs.dev/api/operators/take  ","version":null,"tagName":"h3"},{"title":"defer​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#defer","content":"&lt;/&gt; Rx.defer(observableFactory: () → Observable&lt;T&gt;) → Observable&lt;T&gt; Defers the subscription and creation of the observable until the actual subscription of the observable. https://rxjs-dev.firebaseapp.com/api/index/function/defer https://netbasal.com/getting-to-know-the-defer-observable-in-rxjs-a16f092d8c09  ","version":null,"tagName":"h3"},{"title":"delay​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#delay","content":"&lt;/&gt; Rx.delay(seconds: number) → (source: Observable&lt;T&gt;) → Observable&lt;T&gt; Shift the emissions from an Observable forward in time by a particular amount.  ","version":null,"tagName":"h3"},{"title":"delayed​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#delayed","content":"&lt;/&gt; Rx.delayed(seconds: number) → Observable&lt;()&gt; Creates an observable that will emit N seconds later.  ","version":null,"tagName":"h3"},{"title":"timer​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#timer","content":"&lt;/&gt; Rx.timer( initialDelaySeconds: number, seconds: number ) → (source: Observable&lt;number&gt;) → Observable&lt;number&gt; Emits output every n seconds  ","version":null,"tagName":"h3"},{"title":"interval​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#interval","content":"&lt;/&gt; Rx.interval(seconds: number) → (source: Observable&lt;number&gt;) → Observable&lt;number&gt; https://www.learnrxjs.io/learn-rxjs/operators/creation/interval  ","version":null,"tagName":"h3"},{"title":"withLatestFrom​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#withLatestFrom","content":"&lt;/&gt; Rx.withLatestFrom(inputObservables: {Observable&lt;TInput&gt;}) → (source: Observable&lt;T&gt;) → Observable&lt;{ T, ...TInput }&gt; Honestly, I have not used this one much. https://rxjs-dev.firebaseapp.com/api/operators/withLatestFrom https://medium.com/js-in-action/rxjs-nosy-combinelatest-vs-selfish-withlatestfrom-a957e1af42bf  ","version":null,"tagName":"h3"},{"title":"throttleTime​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#throttleTime","content":"&lt;/&gt; Rx.throttleTime( duration: number, throttleConfig: {leading=true;trailing=true;} ) → (source: Observable) → Observable Throttles emission of observables. https://rxjs-dev.firebaseapp.com/api/operators/throttleTime NOTE Note that on complete, the last item is not included, for now, unlike the existing version in rxjs.  ","version":null,"tagName":"h3"},{"title":"onlyAfterDefer​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#onlyAfterDefer","content":"&lt;/&gt; Rx.onlyAfterDefer() → (source: Observable) → Observable Only emits events after the deferred first signal.  ","version":null,"tagName":"h3"},{"title":"throttleDefer​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#throttleDefer","content":"&lt;/&gt; Rx.throttleDefer() → (source: Observable) → Observable Throttles emission of observables on the defer stack to the last emission. TIP There's a limited re-entrance amount for this. However, this can prevent computation being done repeatedly if stuff is being added all at once. Use with care.  ","version":null,"tagName":"h3"},{"title":"throttle​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#throttle","content":"&lt;/&gt; Rx.throttle(durationSelector: (T: value) → Observable) → (source: Observable&lt;T&gt;) → Observable&lt;T&gt; Throttles emission of observables on the defer stack to the last emission. https://rxjs.dev/api/operators/throttle  ","version":null,"tagName":"h3"},{"title":"skipUntil​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#skipUntil","content":"&lt;/&gt; Rx.skipUntil(notifier: Observable) → (source: Observable) → Observable Skips over values emitted by the source observable until a passed-in notifier observable emits a value. https://rxjs.dev/api/operators/skipUntil  ","version":null,"tagName":"h3"},{"title":"skipWhile​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#skipWhile","content":"&lt;/&gt; Rx.skipWhile(predicate: ( index: number, ...: any ) → boolean) → (source: Observable) → Observable Skips over values emitted by the source observable as long as the given predicate is true. https://rxjs.dev/api/index/function/skipWhile  ","version":null,"tagName":"h3"},{"title":"takeWhile​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#takeWhile","content":"&lt;/&gt; Rx.takeWhile(predicate: ( index: number, ...: any ) → boolean) → (source: Observable) → Observable Emits values from the source observable as long as the given predicate is true. Completes if the predicate is false. https://rxjs.dev/api/index/function/takeWhile  ","version":null,"tagName":"h3"},{"title":"switchScan​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#switchScan","content":"&lt;/&gt; Rx.switchScan( accumulator: function, seed: any | nil ) → (source: Observable) → Observable Applies an accumulator function over the source Observable where the accumulator function itself returns an Observable, emitting values only from the most recently returned Observable. https://rxjs.dev/api/index/function/switchScan  ","version":null,"tagName":"h3"},{"title":"mergeScan​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#mergeScan","content":"&lt;/&gt; Rx.mergeScan( accumulator: function, seed: any | nil ) → (source: Observable) → Observable Applies an accumulator function over the source Observable where the accumulator function itself returns an Observable, then each intermediate Observable returned is merged into the output Observable. https://rxjs.dev/api/operators/mergeScan  ","version":null,"tagName":"h3"},{"title":"combineAll​","type":1,"pageTitle":"Rx","url":"/NevermoreEngine/api/Rx#combineAll","content":"deprecated in 1.0.0 &lt;/&gt; This was deprecated in 1.0.0 Use Rx.combineLatestAll Rx.combineAll() → (source: Observable&lt;Observable&lt;T&gt;&gt;) → Observable&lt;{T}&gt; The same as combineLatestAll. This is for backwards compatability, and is deprecated. ","version":null,"tagName":"h3"},{"title":"RxCollectionServiceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxCollectionServiceUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxCollectionServiceUtils","url":"/NevermoreEngine/api/RxCollectionServiceUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeTaggedBrio​","type":1,"pageTitle":"RxCollectionServiceUtils","url":"/NevermoreEngine/api/RxCollectionServiceUtils#observeTaggedBrio","content":"&lt;/&gt; RxCollectionServiceUtils.observeTaggedBrio(tagName: string) → Observable&lt;Brio&lt;Instance &gt;&gt; Observes tagged instances  ","version":null,"tagName":"h3"},{"title":"observeTagged​","type":1,"pageTitle":"RxCollectionServiceUtils","url":"/NevermoreEngine/api/RxCollectionServiceUtils#observeTagged","content":"&lt;/&gt; RxCollectionServiceUtils.observeTagged(tagName: string) → Observable&lt;Instance &gt; Observes tagged instances without a brio (so just when the item is added or on-init ","version":null,"tagName":"h3"},{"title":"RxCooldownUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxCooldownUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxCooldownUtils","url":"/NevermoreEngine/api/RxCooldownUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeCooldownBrio​","type":1,"pageTitle":"RxCooldownUtils","url":"/NevermoreEngine/api/RxCooldownUtils#observeCooldownBrio","content":"&lt;/&gt; RxCooldownUtils.observeCooldownBrio( cooldownBinder: Binder&lt;Cooldown | CooldownClient&gt;, parent: Instance ) → Observable&lt;Brio&lt;Cooldown | CooldownClient&gt;&gt; Observes a cooldown ","version":null,"tagName":"h3"},{"title":"RxFriendUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxFriendUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxFriendUtils","url":"/NevermoreEngine/api/RxFriendUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeFriendsInServerAsBrios​","type":1,"pageTitle":"RxFriendUtils","url":"/NevermoreEngine/api/RxFriendUtils#observeFriendsInServerAsBrios","content":"&lt;/&gt; RxFriendUtils.observeFriendsInServerAsBrios(player: Player? ) → Observable&lt;Brio&lt;Player &gt;&gt; Observe friends in the current server (not including the LocalPlayer!), useful for social GUIs. The lifetimes exist for the whole duration another player is a friend and in your server. This means if a player is unfriended + friended multiple times per session, they will have emitted multiple friend lifetimes. ","version":null,"tagName":"h3"},{"title":"RxHumanoidUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxHumanoidUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxHumanoidUtils","url":"/NevermoreEngine/api/RxHumanoidUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeRunningSpeed​","type":1,"pageTitle":"RxHumanoidUtils","url":"/NevermoreEngine/api/RxHumanoidUtils#observeRunningSpeed","content":"&lt;/&gt; RxHumanoidUtils.observeRunningSpeed(humanoid: Humanoid ) → Observable&lt;number&gt; Observes the running speed of a humanoid TIP When using :MoveTo this is the only way to know if the humanoid is walking at any speed ","version":null,"tagName":"h3"},{"title":"RxInputObjectUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxInputObjectUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxInputObjectUtils","url":"/NevermoreEngine/api/RxInputObjectUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeInputObjectEnded​","type":1,"pageTitle":"RxInputObjectUtils","url":"/NevermoreEngine/api/RxInputObjectUtils#observeInputObjectEnded","content":"&lt;/&gt; RxInputObjectUtils.observeInputObjectEnded(initialInputObject: InputObject ) → Observable&lt;()&gt; Observes the input object ended event. This will fire immediately if the input object is already ended. ","version":null,"tagName":"h3"},{"title":"RxLinkUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxLinkUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxLinkUtils","url":"/NevermoreEngine/api/RxLinkUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeLinkValueBrio​","type":1,"pageTitle":"RxLinkUtils","url":"/NevermoreEngine/api/RxLinkUtils#observeLinkValueBrio","content":"&lt;/&gt; RxLinkUtils.observeLinkValueBrio( linkName: string, parent: Instance ) → Brio&lt;Instance &gt; Observes a link value that is not nil. ","version":null,"tagName":"h3"},{"title":"RxPartBoundingBoxUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxPartBoundingBoxUtils","content":"RxPartBoundingBoxUtils","keywords":"","version":null},{"title":"RxInstanceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxInstanceUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxInstanceUtils","url":"/NevermoreEngine/api/RxInstanceUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeProperty​","type":1,"pageTitle":"RxInstanceUtils","url":"/NevermoreEngine/api/RxInstanceUtils#observeProperty","content":"&lt;/&gt; RxInstanceUtils.observeProperty( instance: Instance , propertyName: string ) → Observable&lt;T&gt; Observes an instance's property  ","version":null,"tagName":"h3"},{"title":"observeAncestry​","type":1,"pageTitle":"RxInstanceUtils","url":"/NevermoreEngine/api/RxInstanceUtils#observeAncestry","content":"&lt;/&gt; RxInstanceUtils.observeAncestry(instance: Instance ) → Observable&lt;Instance &gt; Observes an instance's ancestry  ","version":null,"tagName":"h3"},{"title":"observeFirstAncestorBrio​","type":1,"pageTitle":"RxInstanceUtils","url":"/NevermoreEngine/api/RxInstanceUtils#observeFirstAncestorBrio","content":"&lt;/&gt; RxInstanceUtils.observeFirstAncestorBrio( instance: Instance , className: string ) → Observable&lt;Brio&lt;Instance &gt;&gt; Observes an instance's ancestry with a brio  ","version":null,"tagName":"h3"},{"title":"observeParentBrio​","type":1,"pageTitle":"RxInstanceUtils","url":"/NevermoreEngine/api/RxInstanceUtils#observeParentBrio","content":"&lt;/&gt; RxInstanceUtils.observeParentBrio(instance: Instance ) → Observable&lt;Brio&lt;Instance &gt;&gt; Observes the parent of the instance as long as it exists. This is very common when initializing parent interfaces or other behaviors using binders.  ","version":null,"tagName":"h3"},{"title":"observeFirstAncestor​","type":1,"pageTitle":"RxInstanceUtils","url":"/NevermoreEngine/api/RxInstanceUtils#observeFirstAncestor","content":"&lt;/&gt; RxInstanceUtils.observeFirstAncestor( instance: Instance , className: string ) → Observable&lt;Instance? &gt; Observes an instance's ancestry  ","version":null,"tagName":"h3"},{"title":"observePropertyBrio​","type":1,"pageTitle":"RxInstanceUtils","url":"/NevermoreEngine/api/RxInstanceUtils#observePropertyBrio","content":"&lt;/&gt; RxInstanceUtils.observePropertyBrio( instance: Instance , propertyName: string, predicate: ((value: T) → boolean)?-- Optional filter ) → Observable&lt;Brio&lt;T&gt;&gt; Returns a brio of the property value  ","version":null,"tagName":"h3"},{"title":"observeLastNamedChildBrio​","type":1,"pageTitle":"RxInstanceUtils","url":"/NevermoreEngine/api/RxInstanceUtils#observeLastNamedChildBrio","content":"&lt;/&gt; RxInstanceUtils.observeLastNamedChildBrio( parent: Instance , className: string, name: string ) → Observable&lt;Brio&lt;Instance &gt;&gt; Observes the last child with a specific name.  ","version":null,"tagName":"h3"},{"title":"observeChildrenOfNameBrio​","type":1,"pageTitle":"RxInstanceUtils","url":"/NevermoreEngine/api/RxInstanceUtils#observeChildrenOfNameBrio","content":"&lt;/&gt; RxInstanceUtils.observeChildrenOfNameBrio( parent: Instance , className: string, name: string ) → Observable&lt;Brio&lt;Instance &gt;&gt; Observes the children with a specific name.  ","version":null,"tagName":"h3"},{"title":"observeChildrenOfClassBrio​","type":1,"pageTitle":"RxInstanceUtils","url":"/NevermoreEngine/api/RxInstanceUtils#observeChildrenOfClassBrio","content":"&lt;/&gt; RxInstanceUtils.observeChildrenOfClassBrio( parent: Instance , className: string ) → Observable&lt;Brio&lt;Instance &gt;&gt; Observes all children of a specific class  ","version":null,"tagName":"h3"},{"title":"observeChildrenBrio​","type":1,"pageTitle":"RxInstanceUtils","url":"/NevermoreEngine/api/RxInstanceUtils#observeChildrenBrio","content":"&lt;/&gt; RxInstanceUtils.observeChildrenBrio( parent: Instance , predicate: ((value: Instance ) → boolean)?-- Optional filter ) → Observable&lt;Brio&lt;Instance &gt;&gt; Observes all children  ","version":null,"tagName":"h3"},{"title":"observeDescendants​","type":1,"pageTitle":"RxInstanceUtils","url":"/NevermoreEngine/api/RxInstanceUtils#observeDescendants","content":"&lt;/&gt; RxInstanceUtils.observeDescendants( parent: Instance , predicate: ((value: Instance ) → boolean)?-- Optional filter ) → Observable&lt;Instance, boolean&gt; Observes all descendants that match a predicate  ","version":null,"tagName":"h3"},{"title":"observeDescendantsBrio​","type":1,"pageTitle":"RxInstanceUtils","url":"/NevermoreEngine/api/RxInstanceUtils#observeDescendantsBrio","content":"&lt;/&gt; RxInstanceUtils.observeDescendantsBrio( parent: Instance , predicate: ((value: Instance ) → boolean)?-- Optional filter ) → Observable&lt;Brio&lt;Instance &gt;&gt; Observes all descendants that match a predicate as a brio  ","version":null,"tagName":"h3"},{"title":"observeDescendantsOfClassBrio​","type":1,"pageTitle":"RxInstanceUtils","url":"/NevermoreEngine/api/RxInstanceUtils#observeDescendantsOfClassBrio","content":"&lt;/&gt; RxInstanceUtils.observeDescendantsOfClassBrio( parent: Instance , className: string ) → Observable&lt;Instance &gt; Observes all descendants of a specific class ","version":null,"tagName":"h3"},{"title":"RxPhysicsUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxPhysicsUtils","content":"RxPhysicsUtils","keywords":"","version":null},{"title":"RxPlayerUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxPlayerUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxPlayerUtils","url":"/NevermoreEngine/api/RxPlayerUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observePlayersBrio​","type":1,"pageTitle":"RxPlayerUtils","url":"/NevermoreEngine/api/RxPlayerUtils#observePlayersBrio","content":"&lt;/&gt; RxPlayerUtils.observePlayersBrio(predicate: ((Player ) → boolean)?) → Observable&lt;Brio&lt;Player &gt;&gt; Observe players for the lifetime they exist  ","version":null,"tagName":"h3"},{"title":"observeLocalPlayerBrio​","type":1,"pageTitle":"RxPlayerUtils","url":"/NevermoreEngine/api/RxPlayerUtils#observeLocalPlayerBrio","content":"&lt;/&gt; RxPlayerUtils.observeLocalPlayerBrio() → Observable&lt;Brio&lt;Player &gt;&gt; Observes the current local player  ","version":null,"tagName":"h3"},{"title":"observePlayers​","type":1,"pageTitle":"RxPlayerUtils","url":"/NevermoreEngine/api/RxPlayerUtils#observePlayers","content":"&lt;/&gt; RxPlayerUtils.observePlayers(predicate: ((Player ) → boolean)?) → Observable&lt;Player &gt; Observe players as they're added, and as they are.  ","version":null,"tagName":"h3"},{"title":"observeFirstAppearanceLoaded​","type":1,"pageTitle":"RxPlayerUtils","url":"/NevermoreEngine/api/RxPlayerUtils#observeFirstAppearanceLoaded","content":"&lt;/&gt; RxPlayerUtils.observeFirstAppearanceLoaded(player: Player ) → Observable&lt;()&gt; Observes the first time the character appearance is loaded ","version":null,"tagName":"h3"},{"title":"RxR15Utils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxR15Utils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxR15Utils","url":"/NevermoreEngine/api/RxR15Utils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeRigAttachmentBrio​","type":1,"pageTitle":"RxR15Utils","url":"/NevermoreEngine/api/RxR15Utils#observeRigAttachmentBrio","content":"&lt;/&gt; RxR15Utils.observeRigAttachmentBrio( character: Model , partName: string, attachmentName: string ) → Observable&lt;Brio&lt;Attachment &gt;&gt; Observes a rig attachment as a brio  ","version":null,"tagName":"h3"},{"title":"observeRigMotorBrio​","type":1,"pageTitle":"RxR15Utils","url":"/NevermoreEngine/api/RxR15Utils#observeRigMotorBrio","content":"&lt;/&gt; RxR15Utils.observeRigMotorBrio( character: Model , partName: string, motorName: string ) → Observable&lt;Brio&lt;Motor6D &gt;&gt; Observes a rig motor as a brio  ","version":null,"tagName":"h3"},{"title":"observeRigWeldBrio​","type":1,"pageTitle":"RxR15Utils","url":"/NevermoreEngine/api/RxR15Utils#observeRigWeldBrio","content":"&lt;/&gt; RxR15Utils.observeRigWeldBrio( character: Model , partName: string, weldName: string ) → Observable&lt;Brio&lt;Motor6D &gt;&gt; Observes a rig motor as a brio  ","version":null,"tagName":"h3"},{"title":"observeCharacterPartBrio​","type":1,"pageTitle":"RxR15Utils","url":"/NevermoreEngine/api/RxR15Utils#observeCharacterPartBrio","content":"&lt;/&gt; RxR15Utils.observeCharacterPartBrio( character: Model , partName: string ) → Observable&lt;Brio&lt;BasePart &gt;&gt; Observes a rig motor as a brio  ","version":null,"tagName":"h3"},{"title":"observeHumanoidBrio​","type":1,"pageTitle":"RxR15Utils","url":"/NevermoreEngine/api/RxR15Utils#observeHumanoidBrio","content":"&lt;/&gt; RxR15Utils.observeHumanoidBrio(character: Model ) → Observable&lt;Brio&lt;Humanoid &gt;&gt; Observes a rig motor as a brio ","version":null,"tagName":"h3"},{"title":"RxRootPartUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxRootPartUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxRootPartUtils","url":"/NevermoreEngine/api/RxRootPartUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeHumanoidRootPartBrio​","type":1,"pageTitle":"RxRootPartUtils","url":"/NevermoreEngine/api/RxRootPartUtils#observeHumanoidRootPartBrio","content":"&lt;/&gt; RxRootPartUtils.observeHumanoidRootPartBrio(character: Model ) → Observable&lt;Brio&lt;BasePart &gt;&gt; Observes the last humanoid root part of a character  ","version":null,"tagName":"h3"},{"title":"observeHumanoidRootPartBrioFromHumanoid​","type":1,"pageTitle":"RxRootPartUtils","url":"/NevermoreEngine/api/RxRootPartUtils#observeHumanoidRootPartBrioFromHumanoid","content":"&lt;/&gt; RxRootPartUtils.observeHumanoidRootPartBrioFromHumanoid(humanoid: Humanoid ) → Observvable&lt;Brio&lt;BasePart &gt;&gt; Observes the last humanoid root part of a character ","version":null,"tagName":"h3"},{"title":"RxRagdollUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxRagdollUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxRagdollUtils","url":"/NevermoreEngine/api/RxRagdollUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeRigType​","type":1,"pageTitle":"RxRagdollUtils","url":"/NevermoreEngine/api/RxRagdollUtils#observeRigType","content":"&lt;/&gt; RxRagdollUtils.observeRigType(humanoid: Humanoid ) → Observable&lt;Enum.RigType&gt; Observes the RigType of a Humanoid.  ","version":null,"tagName":"h3"},{"title":"observeCharacterBrio​","type":1,"pageTitle":"RxRagdollUtils","url":"/NevermoreEngine/api/RxRagdollUtils#observeCharacterBrio","content":"&lt;/&gt; RxRagdollUtils.observeCharacterBrio(humanoid: Humanoid ) → Observable&lt;Model &gt; Observes the character of a Humanoid. ","version":null,"tagName":"h3"},{"title":"RxSeatUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxSeatUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxSeatUtils","url":"/NevermoreEngine/api/RxSeatUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeOccupantBrio​","type":1,"pageTitle":"RxSeatUtils","url":"/NevermoreEngine/api/RxSeatUtils#observeOccupantBrio","content":"&lt;/&gt; RxSeatUtils.observeOccupantBrio(seat: Seat | VehicleSeat ) → Observable&lt;Brio&lt;Humanoid &gt;&gt; Defines occupant as the humanoid attached to the seat.  ","version":null,"tagName":"h3"},{"title":"observeOccupant​","type":1,"pageTitle":"RxSeatUtils","url":"/NevermoreEngine/api/RxSeatUtils#observeOccupant","content":"&lt;/&gt; RxSeatUtils.observeOccupant(seat: Seat | VehicleSeat ) → Observable&lt;Humanoid? &gt; Defines occupant as the humanoid attached to the seat. ","version":null,"tagName":"h3"},{"title":"RxSelectionUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxSelectionUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxSelectionUtils","url":"/NevermoreEngine/api/RxSelectionUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeFirstSelectionWhichIsA​","type":1,"pageTitle":"RxSelectionUtils","url":"/NevermoreEngine/api/RxSelectionUtils#observeFirstSelectionWhichIsA","content":"&lt;/&gt; RxSelectionUtils.observeFirstSelectionWhichIsA(className: string) → Observable&lt;Instance? &gt; Observes first selection in the selection list which is of a class RxSelectionUtils.observeFirstSelectionWhichIsA(&quot;BasePart&quot;):Subscribe(function(part) print(&quot;part&quot;, part) end)   ","version":null,"tagName":"h3"},{"title":"observeFirstSelectionWhichIsABrio​","type":1,"pageTitle":"RxSelectionUtils","url":"/NevermoreEngine/api/RxSelectionUtils#observeFirstSelectionWhichIsABrio","content":"&lt;/&gt; RxSelectionUtils.observeFirstSelectionWhichIsABrio(className: string) → Observable&lt;Brio&lt;Instance &gt;&gt; Observes first selection in the selection list which is of a class wrapped in a brio RxSelectionUtils.observeFirstSelectionWhichIsA(&quot;BasePart&quot;):Subscribe(function(brio) if brio:IsDead() then return end print(&quot;part&quot;, brio:GetValue()) end)   ","version":null,"tagName":"h3"},{"title":"observeFirstAdornee​","type":1,"pageTitle":"RxSelectionUtils","url":"/NevermoreEngine/api/RxSelectionUtils#observeFirstAdornee","content":"&lt;/&gt; RxSelectionUtils.observeFirstAdornee() → Observable&lt;Instance? &gt; Observes first selection in the selection list which is an &quot;Adornee&quot;  ","version":null,"tagName":"h3"},{"title":"observeAdorneesBrio​","type":1,"pageTitle":"RxSelectionUtils","url":"/NevermoreEngine/api/RxSelectionUtils#observeAdorneesBrio","content":"&lt;/&gt; RxSelectionUtils.observeAdorneesBrio() → Observable&lt;Brio&lt;Instance &gt;&gt; Observes selection in which are an &quot;Adornee&quot;  ","version":null,"tagName":"h3"},{"title":"observeFirstSelection​","type":1,"pageTitle":"RxSelectionUtils","url":"/NevermoreEngine/api/RxSelectionUtils#observeFirstSelection","content":"&lt;/&gt; RxSelectionUtils.observeFirstSelection(where: callback) → Observable&lt;Instance? &gt; Observes first selection which meets condition RxSelectionUtils.observeFirstSelection(function(instance) return instance:IsA(&quot;BasePart&quot;) end):Subscribe(function(part) print(&quot;part&quot;, part) end)   ","version":null,"tagName":"h3"},{"title":"observeFirstSelectionBrio​","type":1,"pageTitle":"RxSelectionUtils","url":"/NevermoreEngine/api/RxSelectionUtils#observeFirstSelectionBrio","content":"&lt;/&gt; RxSelectionUtils.observeFirstSelectionBrio(where: callback) → Observable&lt;Brio&lt;Instance &gt;&gt; Observes first selection which meets condition  ","version":null,"tagName":"h3"},{"title":"observeSelectionList​","type":1,"pageTitle":"RxSelectionUtils","url":"/NevermoreEngine/api/RxSelectionUtils#observeSelectionList","content":"&lt;/&gt; RxSelectionUtils.observeSelectionList() → Observable&lt;{Instance }&gt; Observes the current selection table.  ","version":null,"tagName":"h3"},{"title":"observeSelectionItemsBrio​","type":1,"pageTitle":"RxSelectionUtils","url":"/NevermoreEngine/api/RxSelectionUtils#observeSelectionItemsBrio","content":"&lt;/&gt; RxSelectionUtils.observeSelectionItemsBrio() → Observable&lt;Brio&lt;Instance &gt;&gt; Observes selection items by brio. De-duplicates changed events. ","version":null,"tagName":"h3"},{"title":"RxStateStackUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxStateStackUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxStateStackUtils","url":"/NevermoreEngine/api/RxStateStackUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"topOfStack​","type":1,"pageTitle":"RxStateStackUtils","url":"/NevermoreEngine/api/RxStateStackUtils#topOfStack","content":"&lt;/&gt; RxStateStackUtils.topOfStack(defaultValue: T?) → (source: Observable&lt;Brio&lt;T&gt;&gt;) → Observable&lt;T?&gt; Converts the observable of Brios into a statestack.  ","version":null,"tagName":"h3"},{"title":"createStateStack​","type":1,"pageTitle":"RxStateStackUtils","url":"/NevermoreEngine/api/RxStateStackUtils#createStateStack","content":"&lt;/&gt; RxStateStackUtils.createStateStack(observable: Observable&lt;Brio&lt;T&gt;&gt;) → StateStack&lt;T&gt; Creates a state stack from the brio's value. The state stack holds the last value seen that is valid. ","version":null,"tagName":"h3"},{"title":"RxSignal","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxSignal","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxSignal","url":"/NevermoreEngine/api/RxSignal#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"RxSignal","url":"/NevermoreEngine/api/RxSignal#new","content":"&lt;/&gt; RxSignal.new(observable: Observable&lt;T&gt; | () → Observable&lt;T&gt;) → RxSignal&lt;T&gt; Converts an observable to the Signal interface  ","version":null,"tagName":"h3"},{"title":"Connect​","type":1,"pageTitle":"RxSignal","url":"/NevermoreEngine/api/RxSignal#Connect","content":"&lt;/&gt; RxSignal.Connect( self: RxSignal&lt;T...&gt;, callback: (T...) → () ) → Subscription.Subscription&lt;T...&gt; Connects to the signal and returns a subscription  ","version":null,"tagName":"h3"},{"title":"Wait​","type":1,"pageTitle":"RxSignal","url":"/NevermoreEngine/api/RxSignal#Wait","content":"&lt;/&gt; RxSignal.Wait(self: RxSignal&lt;T...&gt;) → T... Waits for the signal to fire and returns the values  ","version":null,"tagName":"h3"},{"title":"Once​","type":1,"pageTitle":"RxSignal","url":"/NevermoreEngine/api/RxSignal#Once","content":"&lt;/&gt; RxSignal.Once( self: RxSignal&lt;T...&gt;, callback: (T...) → () ) → Subscription.Subscription&lt;T...&gt; Connects once to the signal and returns a subscription ","version":null,"tagName":"h3"},{"title":"RxTeamUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxTeamUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxTeamUtils","url":"/NevermoreEngine/api/RxTeamUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observePlayersForTeamBrio​","type":1,"pageTitle":"RxTeamUtils","url":"/NevermoreEngine/api/RxTeamUtils#observePlayersForTeamBrio","content":"&lt;/&gt; RxTeamUtils.observePlayersForTeamBrio(team: Team ) → Observable&lt;Brio&lt;Player &gt;&gt; Observes all players on a taem.  ","version":null,"tagName":"h3"},{"title":"observeEnemyTeamColorPlayersBrio​","type":1,"pageTitle":"RxTeamUtils","url":"/NevermoreEngine/api/RxTeamUtils#observeEnemyTeamColorPlayersBrio","content":"&lt;/&gt; RxTeamUtils.observeEnemyTeamColorPlayersBrio(teamColor: BrickColor ) → Observable&lt;Brio&lt;Player &gt;&gt; Observes all enemy players for a team color  ","version":null,"tagName":"h3"},{"title":"observePlayersForTeamColorBrio​","type":1,"pageTitle":"RxTeamUtils","url":"/NevermoreEngine/api/RxTeamUtils#observePlayersForTeamColorBrio","content":"&lt;/&gt; RxTeamUtils.observePlayersForTeamColorBrio(teamColor: BrickColor ) → Observable&lt;Brio&lt;Player &gt;&gt; Observes all players for a team color (given they have a team)  ","version":null,"tagName":"h3"},{"title":"observeTeamsForColorBrio​","type":1,"pageTitle":"RxTeamUtils","url":"/NevermoreEngine/api/RxTeamUtils#observeTeamsForColorBrio","content":"&lt;/&gt; RxTeamUtils.observeTeamsForColorBrio(teamColor: BrickColor ) → Observable&lt;Brio&lt;Team &gt;&gt; Observes all teams for a given color  ","version":null,"tagName":"h3"},{"title":"observeTeamsBrio​","type":1,"pageTitle":"RxTeamUtils","url":"/NevermoreEngine/api/RxTeamUtils#observeTeamsBrio","content":"&lt;/&gt; RxTeamUtils.observeTeamsBrio() → Observable&lt;Brio&lt;Team &gt;&gt; Observes all teams in the game (In Teams service) ","version":null,"tagName":"h3"},{"title":"RxTeleportUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxTeleportUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxTeleportUtils","url":"/NevermoreEngine/api/RxTeleportUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeTeleportBrio​","type":1,"pageTitle":"RxTeleportUtils","url":"/NevermoreEngine/api/RxTeleportUtils#observeTeleportBrio","content":"&lt;/&gt; RxTeleportUtils.observeTeleportBrio(player: Player ) → Observable&lt;Brio&lt;number&gt;&gt; Returns an observable that exists for the lifetime that the player is attempting to teleport to the given placeId. ","version":null,"tagName":"h3"},{"title":"RxTextBoxUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxTextBoxUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxTextBoxUtils","url":"/NevermoreEngine/api/RxTextBoxUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeIsFocused​","type":1,"pageTitle":"RxTextBoxUtils","url":"/NevermoreEngine/api/RxTextBoxUtils#observeIsFocused","content":"&lt;/&gt; RxTextBoxUtils.observeIsFocused(textBox: TextBox ) → Observable&lt;boolean&gt; Observes whether or not a TextBox is focused ","version":null,"tagName":"h3"},{"title":"RxValueBaseUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxValueBaseUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxValueBaseUtils","url":"/NevermoreEngine/api/RxValueBaseUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeBrio​","type":1,"pageTitle":"RxValueBaseUtils","url":"/NevermoreEngine/api/RxValueBaseUtils#observeBrio","content":"&lt;/&gt; RxValueBaseUtils.observeBrio( parent: Instance , className: string, name: string, predicate: callback-- Optional callback ) → Observable&lt;Brio&lt;any&gt;&gt; Observes a value base underneath a parent (last named child).  ","version":null,"tagName":"h3"},{"title":"observe​","type":1,"pageTitle":"RxValueBaseUtils","url":"/NevermoreEngine/api/RxValueBaseUtils#observe","content":"&lt;/&gt; RxValueBaseUtils.observe( parent: Instance , className: string, name: string, defaultValue: any ) → Observable&lt;any&gt; Observes a value base underneath a parent  ","version":null,"tagName":"h3"},{"title":"observeValue​","type":1,"pageTitle":"RxValueBaseUtils","url":"/NevermoreEngine/api/RxValueBaseUtils#observeValue","content":"&lt;/&gt; RxValueBaseUtils.observeValue(valueObject: Instance ) → Observable&lt;T&gt; Observables a given value object's value ","version":null,"tagName":"h3"},{"title":"RxToolUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/RxToolUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RxToolUtils","url":"/NevermoreEngine/api/RxToolUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"observeEquippedHumanoidBrio​","type":1,"pageTitle":"RxToolUtils","url":"/NevermoreEngine/api/RxToolUtils#observeEquippedHumanoidBrio","content":"&lt;/&gt; RxToolUtils.observeEquippedHumanoidBrio(tool: Instance ) → Observable&lt;Brio&lt;Humanoid &gt;&gt; Observes the equipped humanoid of a given tool ","version":null,"tagName":"h3"},{"title":"safeDestroy","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/safeDestroy","content":"safeDestroy Fixes an issue where you can't destroy already destroyed objects.","keywords":"","version":null},{"title":"ScaleModelUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ScaleModelUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ScaleModelUtils","url":"/NevermoreEngine/api/ScaleModelUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"scalePartSize​","type":1,"pageTitle":"ScaleModelUtils","url":"/NevermoreEngine/api/ScaleModelUtils#scalePartSize","content":"&lt;/&gt; ScaleModelUtils.scalePartSize( part: BasePart , scale: number ) → () Scales a given part's size and any mesh underneath it.  ","version":null,"tagName":"h3"},{"title":"scalePart​","type":1,"pageTitle":"ScaleModelUtils","url":"/NevermoreEngine/api/ScaleModelUtils#scalePart","content":"&lt;/&gt; ScaleModelUtils.scalePart( part: BasePart , scale: number, centroid: Vector3 ) → () Scales the part around the centroid  ","version":null,"tagName":"h3"},{"title":"scale​","type":1,"pageTitle":"ScaleModelUtils","url":"/NevermoreEngine/api/ScaleModelUtils#scale","content":"&lt;/&gt; ScaleModelUtils.scale( parts: {BasePart },-- Table of parts, the parts to scale scale: number,-- The scale to scale by centroid: Vector3 -- the center to scale by ) → () Scales a group of parts around a centroid  ","version":null,"tagName":"h3"},{"title":"createMeshFromPart​","type":1,"pageTitle":"ScaleModelUtils","url":"/NevermoreEngine/api/ScaleModelUtils#createMeshFromPart","content":"&lt;/&gt; ScaleModelUtils.createMeshFromPart(part: BasePart ) → Mesh? Given a part, creates a mesh for that part type if possible ","version":null,"tagName":"h3"},{"title":"ScoredAction","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ScoredAction","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"ScoredAction","url":"/NevermoreEngine/api/ScoredAction#properties","content":" ","version":null,"tagName":"h2"},{"title":"PreferredChanged​","type":1,"pageTitle":"ScoredAction","url":"/NevermoreEngine/api/ScoredAction#PreferredChanged","content":"&lt;/&gt; ScoredAction.PreferredChanged: Signal&lt;boolean&gt;   ","version":null,"tagName":"h3"},{"title":"Removing​","type":1,"pageTitle":"ScoredAction","url":"/NevermoreEngine/api/ScoredAction#Removing","content":"&lt;/&gt; ScoredAction.Removing: Signal&lt;()&gt;  ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"ScoredAction","url":"/NevermoreEngine/api/ScoredAction#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"ScoredAction","url":"/NevermoreEngine/api/ScoredAction#new","content":"&lt;/&gt; ScoredAction.new() → ScoredAction Constructs a new ScoredAction. Should not be called directly. See ScoredActionServiceClient.GetScoredAction.  ","version":null,"tagName":"h3"},{"title":"IsPreferred​","type":1,"pageTitle":"ScoredAction","url":"/NevermoreEngine/api/ScoredAction#IsPreferred","content":"&lt;/&gt; ScoredAction.IsPreferred(self: ScoredAction) → boolean Returns whether the action is currently preferred  ","version":null,"tagName":"h3"},{"title":"ObservePreferred​","type":1,"pageTitle":"ScoredAction","url":"/NevermoreEngine/api/ScoredAction#ObservePreferred","content":"&lt;/&gt; ScoredAction.ObservePreferred(self: ScoredAction) → Observable&lt;boolean&gt;   ","version":null,"tagName":"h3"},{"title":"SetScore​","type":1,"pageTitle":"ScoredAction","url":"/NevermoreEngine/api/ScoredAction#SetScore","content":"&lt;/&gt; ScoredAction.SetScore( self: ScoredAction, score: number ) → () Sets the score INFO Big number is more important. At -math.huge we won't ever set preferred  ","version":null,"tagName":"h3"},{"title":"GetScore​","type":1,"pageTitle":"ScoredAction","url":"/NevermoreEngine/api/ScoredAction#GetScore","content":"&lt;/&gt; ScoredAction.GetScore(self: ScoredAction) → number Retrieves the score  ","version":null,"tagName":"h3"},{"title":"PushPreferred​","type":1,"pageTitle":"ScoredAction","url":"/NevermoreEngine/api/ScoredAction#PushPreferred","content":"&lt;/&gt; ScoredAction.PushPreferred(self: ScoredAction) → MaidTask Pushes that we're preferred ","version":null,"tagName":"h3"},{"title":"ScoredActionPicker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ScoredActionPicker","content":"ScoredActionPicker","keywords":"","version":null},{"title":"ScoredActionPickerProvider","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ScoredActionPickerProvider","content":"ScoredActionPickerProvider","keywords":"","version":null},{"title":"ScoredActionUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ScoredActionUtils","content":"ScoredActionUtils","keywords":"","version":null},{"title":"ScoredActionService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ScoredActionService","content":"ScoredActionService","keywords":"","version":null},{"title":"ScreenGuiService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ScreenGuiService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ScreenGuiService","url":"/NevermoreEngine/api/ScreenGuiService#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"ScreenGuiService","url":"/NevermoreEngine/api/ScreenGuiService#Init","content":"&lt;/&gt; ScreenGuiService:Init(serviceBag: ServiceBag) → () Initializes the ScreenGuiService  ","version":null,"tagName":"h3"},{"title":"GetGuiParent​","type":1,"pageTitle":"ScreenGuiService","url":"/NevermoreEngine/api/ScreenGuiService#GetGuiParent","content":"&lt;/&gt; ScreenGuiService:GetGuiParent() → () Gets the current player gui to use return ScreenGui?  ","version":null,"tagName":"h3"},{"title":"SetGuiParent​","type":1,"pageTitle":"ScreenGuiService","url":"/NevermoreEngine/api/ScreenGuiService#SetGuiParent","content":"&lt;/&gt; ScreenGuiService:SetGuiParent(playerGui: PlayerGui | Instance ) → () Sets the current playerGui to use return MaidTask  ","version":null,"tagName":"h3"},{"title":"ObservePlayerGui​","type":1,"pageTitle":"ScreenGuiService","url":"/NevermoreEngine/api/ScreenGuiService#ObservePlayerGui","content":"&lt;/&gt; ScreenGuiService:ObservePlayerGui() → Observable.Observable&lt;ScreenGui? &gt; Observes the player gui to parent stuff into return Observable&lt;ScreenGui?&gt;  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"ScreenGuiService","url":"/NevermoreEngine/api/ScreenGuiService#Destroy","content":"&lt;/&gt; ScreenGuiService:Destroy() → () Cleans up the ScreenGuiService ","version":null,"tagName":"h3"},{"title":"ScoredActionServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ScoredActionServiceClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ScoredActionServiceClient","url":"/NevermoreEngine/api/ScoredActionServiceClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"ScoredActionServiceClient","url":"/NevermoreEngine/api/ScoredActionServiceClient#Init","content":"&lt;/&gt; ScoredActionServiceClient.Init( self: ScoredActionServiceClient, serviceBag: ServiceBag ) → () Initializes the ScoredActionServiceClient. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"ScoredActionServiceClient","url":"/NevermoreEngine/api/ScoredActionServiceClient#Start","content":"&lt;/&gt; ScoredActionServiceClient.Start(self: ScoredActionServiceClient) → () Starts the scored action service. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"GetScoredAction​","type":1,"pageTitle":"ScoredActionServiceClient","url":"/NevermoreEngine/api/ScoredActionServiceClient#GetScoredAction","content":"&lt;/&gt; ScoredActionServiceClient.GetScoredAction( self: ScoredActionServiceClient, inputKeyMapList: InputKeyMapList ) → ScoredAction Gets a new scored action to use  ","version":null,"tagName":"h3"},{"title":"ObserveNewFromInputKeyMapList​","type":1,"pageTitle":"ScoredActionServiceClient","url":"/NevermoreEngine/api/ScoredActionServiceClient#ObserveNewFromInputKeyMapList","content":"&lt;/&gt; ScoredActionServiceClient.ObserveNewFromInputKeyMapList( self: ScoredActionServiceClient, scoreValue: ValueObject&lt;number&gt; ) → (source: Observable&lt;InputKeyMapList&gt;) → Observable&lt;ScoredAction&gt; Observes a new scored action from a scoring value. WARNING This MUTATES state of the scored action service whenever an object is emitted. ","version":null,"tagName":"h3"},{"title":"ScreenshotHudServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ScreenshotHudServiceClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ScreenshotHudServiceClient","url":"/NevermoreEngine/api/ScreenshotHudServiceClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"PushModel​","type":1,"pageTitle":"ScreenshotHudServiceClient","url":"/NevermoreEngine/api/ScreenshotHudServiceClient#PushModel","content":"&lt;/&gt; ScreenshotHudServiceClient:PushModel(screenshotHudModel: ScreenshotHudModel) → function-- cleanup code Pushes a new screenshotHudModel to show. This will fire . ","version":null,"tagName":"h3"},{"title":"Scrollbar","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Scrollbar","content":"Scrollbar","keywords":"","version":null},{"title":"ScreenshotHudModel","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ScreenshotHudModel","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#functions","content":" ","version":null,"tagName":"h2"},{"title":"SetCloseButtonVisible​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#SetCloseButtonVisible","content":"&lt;/&gt; ScreenshotHudModel.SetCloseButtonVisible( self: ScreenshotHudModel, closeButtonVisible: boolean ) → () Sets whether the close button is visible  ","version":null,"tagName":"h3"},{"title":"ObserveCloseButtonVisible​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#ObserveCloseButtonVisible","content":"&lt;/&gt; ScreenshotHudModel.ObserveCloseButtonVisible(self: ScreenshotHudModel) → Observable&lt;boolean&gt; Observes close button visiblity  ","version":null,"tagName":"h3"},{"title":"SetCameraButtonVisible​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#SetCameraButtonVisible","content":"&lt;/&gt; ScreenshotHudModel.SetCameraButtonVisible( self: ScreenshotHudModel, cameraButtonVisible: boolean ) → () Sets whether the camera button is visible  ","version":null,"tagName":"h3"},{"title":"ObserveCameraButtonVisible​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#ObserveCameraButtonVisible","content":"&lt;/&gt; ScreenshotHudModel.ObserveCameraButtonVisible(self: ScreenshotHudModel) → Observable&lt;boolean&gt; Observes camera button visiblity  ","version":null,"tagName":"h3"},{"title":"SetKeepOpen​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#SetKeepOpen","content":"&lt;/&gt; ScreenshotHudModel.SetKeepOpen( self: ScreenshotHudModel, keepOpen: boolean ) → () Sets whether we should try to keep the UI open  ","version":null,"tagName":"h3"},{"title":"GetKeepOpen​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#GetKeepOpen","content":"&lt;/&gt; ScreenshotHudModel.GetKeepOpen(self: ScreenshotHudModel) → boolean Gets whether we should try to keep the UI open  ","version":null,"tagName":"h3"},{"title":"SetVisible​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#SetVisible","content":"&lt;/&gt; ScreenshotHudModel.SetVisible( self: ScreenshotHudModel, visible: boolean ) → () Sets whether we are visible or not  ","version":null,"tagName":"h3"},{"title":"SetCloseButtonPosition​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#SetCloseButtonPosition","content":"&lt;/&gt; ScreenshotHudModel.SetCloseButtonPosition( self: ScreenshotHudModel, position: UDim2 | nil ) → () Sets the close button's position  ","version":null,"tagName":"h3"},{"title":"ObserveCloseButtonPosition​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#ObserveCloseButtonPosition","content":"&lt;/&gt; ScreenshotHudModel.ObserveCloseButtonPosition(self: ScreenshotHudModel) → Observable&lt;UDim2 &gt; Observes the close button's position  ","version":null,"tagName":"h3"},{"title":"SetCameraButtonPosition​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#SetCameraButtonPosition","content":"&lt;/&gt; ScreenshotHudModel.SetCameraButtonPosition( self: ScreenshotHudModel, position: UDim2 | nil ) → () Sets the camera button's position  ","version":null,"tagName":"h3"},{"title":"ObserveCameraButtonPosition​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#ObserveCameraButtonPosition","content":"&lt;/&gt; ScreenshotHudModel.ObserveCameraButtonPosition(self: ScreenshotHudModel) → Observable&lt;UDim2 &gt; Observes the camera button's position  ","version":null,"tagName":"h3"},{"title":"SetOverlayFont​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#SetOverlayFont","content":"&lt;/&gt; ScreenshotHudModel.SetOverlayFont( self: ScreenshotHudModel, overlayFont: Enum.Font ) → () Sets the overlay font  ","version":null,"tagName":"h3"},{"title":"ObserveOverlayFont​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#ObserveOverlayFont","content":"&lt;/&gt; ScreenshotHudModel.ObserveOverlayFont(self: ScreenshotHudModel) → Observable&lt;Enum.Font&gt; Observes the overlay font  ","version":null,"tagName":"h3"},{"title":"SetCameraButtonIcon​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#SetCameraButtonIcon","content":"&lt;/&gt; ScreenshotHudModel.SetCameraButtonIcon( self: ScreenshotHudModel, icon: string? ) → () Sets the camera button's icon.  ","version":null,"tagName":"h3"},{"title":"ObserveCameraButtonIcon​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#ObserveCameraButtonIcon","content":"&lt;/&gt; ScreenshotHudModel.ObserveCameraButtonIcon(self: ScreenshotHudModel) → Observable&lt;string&gt; Observes the camera button's icon  ","version":null,"tagName":"h3"},{"title":"SetCloseWhenScreenshotTaken​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#SetCloseWhenScreenshotTaken","content":"&lt;/&gt; ScreenshotHudModel.SetCloseWhenScreenshotTaken( self: ScreenshotHudModel, closeWhenScreenshotTaken: boolean ) → () Sets whether to close after a screenshot if taken  ","version":null,"tagName":"h3"},{"title":"GetCloseWhenScreenshotTaken​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#GetCloseWhenScreenshotTaken","content":"&lt;/&gt; ScreenshotHudModel.GetCloseWhenScreenshotTaken(self: ScreenshotHudModel) → boolean Returns whether the model will try to close if a screenshot is taken  ","version":null,"tagName":"h3"},{"title":"ObserveCloseWhenScreenshotTaken​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#ObserveCloseWhenScreenshotTaken","content":"&lt;/&gt; ScreenshotHudModel.ObserveCloseWhenScreenshotTaken(self: ScreenshotHudModel) → Observable&lt;boolean&gt; Observes whether a screenshot is taken  ","version":null,"tagName":"h3"},{"title":"SetExperienceNameOverlayEnabled​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#SetExperienceNameOverlayEnabled","content":"&lt;/&gt; ScreenshotHudModel.SetExperienceNameOverlayEnabled( self: ScreenshotHudModel, experienceNameOverlayEnabled: boolean ) → () Sets whether to experience name overlay should be enabled  ","version":null,"tagName":"h3"},{"title":"ObserveExperienceNameOverlayEnabled​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#ObserveExperienceNameOverlayEnabled","content":"&lt;/&gt; ScreenshotHudModel.ObserveExperienceNameOverlayEnabled(self: ScreenshotHudModel) → Observable&lt;boolean&gt; Observes whether the experience name overlay is enabled  ","version":null,"tagName":"h3"},{"title":"SetUsernameOverlayEnabled​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#SetUsernameOverlayEnabled","content":"&lt;/&gt; ScreenshotHudModel.SetUsernameOverlayEnabled( self: ScreenshotHudModel, usernameOverlayEnabled: boolean ) → () Sets whether to username overlay should be enabled  ","version":null,"tagName":"h3"},{"title":"ObserveUsernameOverlayEnabled​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#ObserveUsernameOverlayEnabled","content":"&lt;/&gt; ScreenshotHudModel.ObserveUsernameOverlayEnabled(self: ScreenshotHudModel) → Observable&lt;boolean&gt; Observes whether the username name overlay is enabled  ","version":null,"tagName":"h3"},{"title":"ObserveVisible​","type":1,"pageTitle":"ScreenshotHudModel","url":"/NevermoreEngine/api/ScreenshotHudModel#ObserveVisible","content":"&lt;/&gt; ScreenshotHudModel.ObserveVisible(self: ScreenshotHudModel) → Observable&lt;boolean&gt; Observes whilet he model is visible ","version":null,"tagName":"h3"},{"title":"ScrollingDirectionUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ScrollingDirectionUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ScrollingDirectionUtils","url":"/NevermoreEngine/api/ScrollingDirectionUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"canScrollHorizontal​","type":1,"pageTitle":"ScrollingDirectionUtils","url":"/NevermoreEngine/api/ScrollingDirectionUtils#canScrollHorizontal","content":"&lt;/&gt; ScrollingDirectionUtils.canScrollHorizontal(scrollingDirection: Enum.ScrollingDirection) → boolean Determines if the scrolling direction can scroll horizontally  ","version":null,"tagName":"h3"},{"title":"canScrollVertical​","type":1,"pageTitle":"ScrollingDirectionUtils","url":"/NevermoreEngine/api/ScrollingDirectionUtils#canScrollVertical","content":"&lt;/&gt; ScrollingDirectionUtils.canScrollVertical(scrollingDirection: Enum.ScrollingDirection) → boolean Determines if the scrolling direction can scroll vertically ","version":null,"tagName":"h3"},{"title":"ScrollModel","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ScrollModel","content":"ScrollModel Scrolling model for scrolling frame","keywords":"","version":null},{"title":"ScrollingFrame","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ScrollingFrame","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ScrollingFrame","url":"/NevermoreEngine/api/ScrollingFrame#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"ScrollingFrame","url":"/NevermoreEngine/api/ScrollingFrame#new","content":"&lt;/&gt; ScrollingFrame.new( gui: BaseGui-- Gui to use ) → ScrollingFrame Creates a new ScrollingFrame which can be used. Prefer Container.Active = true so scroll wheel works. Container should be in a Frame with ClipsDescendants = true ","version":null,"tagName":"h3"},{"title":"SecretsCmdrTypeUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SecretsCmdrTypeUtils","content":"SecretsCmdrTypeUtils","keywords":"","version":null},{"title":"ScrollType","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ScrollType","content":"ScrollType ScrollType enum, determines scrolling behavior","keywords":"","version":null},{"title":"SeatUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SeatUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SeatUtils","url":"/NevermoreEngine/api/SeatUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getPlayerOccupants​","type":1,"pageTitle":"SeatUtils","url":"/NevermoreEngine/api/SeatUtils#getPlayerOccupants","content":"&lt;/&gt; SeatUtils.getPlayerOccupants(seats: {Seat }) → {Player } Gets seat player occupants for all seats ","version":null,"tagName":"h3"},{"title":"SecretsCommandService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SecretsCommandService","content":"SecretsCommandService","keywords":"","version":null},{"title":"SecretsService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SecretsService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SecretsService","url":"/NevermoreEngine/api/SecretsService#functions","content":" ","version":null,"tagName":"h2"},{"title":"SetPublicKeySeed​","type":1,"pageTitle":"SecretsService","url":"/NevermoreEngine/api/SecretsService#SetPublicKeySeed","content":"&lt;/&gt; SecretsService:SetPublicKeySeed(seed: number) → () Sets the public key seed for the cryptography-at-rest scenario  ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"SecretsService","url":"/NevermoreEngine/api/SecretsService#Start","content":"&lt;/&gt; SecretsService:Start() → () Starts the secret service. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"PromiseSecret​","type":1,"pageTitle":"SecretsService","url":"/NevermoreEngine/api/SecretsService#PromiseSecret","content":"&lt;/&gt; SecretsService:PromiseSecret(secretKey: string) → Promise&lt;string&gt; Promises a secret value  ","version":null,"tagName":"h3"},{"title":"PromiseAllSecrets​","type":1,"pageTitle":"SecretsService","url":"/NevermoreEngine/api/SecretsService#PromiseAllSecrets","content":"&lt;/&gt; SecretsService:PromiseAllSecrets() → @returnPromise&lt;{string}&gt; Promises all secret values  ","version":null,"tagName":"h3"},{"title":"ObserveSecret​","type":1,"pageTitle":"SecretsService","url":"/NevermoreEngine/api/SecretsService#ObserveSecret","content":"&lt;/&gt; SecretsService:ObserveSecret(secretKey: string) → Observable&lt;string&gt; Observes a secret value  ","version":null,"tagName":"h3"},{"title":"DeleteSecret​","type":1,"pageTitle":"SecretsService","url":"/NevermoreEngine/api/SecretsService#DeleteSecret","content":"&lt;/&gt; SecretsService:DeleteSecret(secretKey: string) → Promise.Promise&lt;()&gt; Deletes a secret from the secret store  ","version":null,"tagName":"h3"},{"title":"StoreSecret​","type":1,"pageTitle":"SecretsService","url":"/NevermoreEngine/api/SecretsService#StoreSecret","content":"&lt;/&gt; SecretsService:StoreSecret( secretKey: string, value: string ) → () Stores a secret in the secret store  ","version":null,"tagName":"h3"},{"title":"ClearAllSecrets​","type":1,"pageTitle":"SecretsService","url":"/NevermoreEngine/api/SecretsService#ClearAllSecrets","content":"&lt;/&gt; SecretsService:ClearAllSecrets() → Promise&lt;()&gt; Clears all the secrets stored in the datastore  ","version":null,"tagName":"h3"},{"title":"PromiseSecretKeyNamesList​","type":1,"pageTitle":"SecretsService","url":"/NevermoreEngine/api/SecretsService#PromiseSecretKeyNamesList","content":"&lt;/&gt; SecretsService:PromiseSecretKeyNamesList() → Promise&lt;{string}&gt; Gets a list of all available secret keys for the game ","version":null,"tagName":"h3"},{"title":"SecretsServiceConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SecretsServiceConstants","content":"SecretsServiceConstants","keywords":"","version":null},{"title":"SecretsServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SecretsServiceClient","content":"SecretsServiceClient","keywords":"","version":null},{"title":"SelectionImageUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SelectionImageUtils","content":"SelectionImageUtils Provides a utility method to clearing selection images with blank values.","keywords":"","version":null},{"title":"ServiceInitLogger","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ServiceInitLogger","content":"ServiceInitLogger","keywords":"","version":null},{"title":"setMechanismCFrame","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/setMechanismCFrame","content":"setMechanismCFrame Sets a mechanisms cframe","keywords":"","version":null},{"title":"ServiceBag","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ServiceBag","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"ServiceBag","url":"/NevermoreEngine/api/ServiceBag#types","content":" ","version":null,"tagName":"h2"},{"title":"Service​","type":1,"pageTitle":"ServiceBag","url":"/NevermoreEngine/api/ServiceBag#Service","content":"&lt;/&gt; interface Service { Init:: (serviceBag: ServiceBag) → ()? Start:: () → ()? Destroy:: () → ()? }   ","version":null,"tagName":"h3"},{"title":"ServiceType​","type":1,"pageTitle":"ServiceBag","url":"/NevermoreEngine/api/ServiceBag#ServiceType","content":"&lt;/&gt; type ServiceType = Service | ModuleScript   ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"ServiceBag","url":"/NevermoreEngine/api/ServiceBag#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"ServiceBag","url":"/NevermoreEngine/api/ServiceBag#new","content":"&lt;/&gt; ServiceBag.new( parentProvider: ServiceBag?-- Optional parent provider to find services in ) → ServiceBag Constructs a new ServiceBag  ","version":null,"tagName":"h3"},{"title":"isServiceBag​","type":1,"pageTitle":"ServiceBag","url":"/NevermoreEngine/api/ServiceBag#isServiceBag","content":"&lt;/&gt; ServiceBag.isServiceBag(value: ServiceBag?) → boolean Returns whether the value is a serviceBag  ","version":null,"tagName":"h3"},{"title":"PrintInitialization​","type":1,"pageTitle":"ServiceBag","url":"/NevermoreEngine/api/ServiceBag#PrintInitialization","content":"&lt;/&gt; ServiceBag.PrintInitialization(self: ServiceBag) → () Prints out initialization stack trace - helpful for debugging and diagnostics.  ","version":null,"tagName":"h3"},{"title":"GetService​","type":1,"pageTitle":"ServiceBag","url":"/NevermoreEngine/api/ServiceBag#GetService","content":"&lt;/&gt; ServiceBag.GetService( self: ServiceBag, serviceType: ServiceType ) → any Retrieves the service, ensuring initialization if we are in the initialization phase.  ","version":null,"tagName":"h3"},{"title":"HasService​","type":1,"pageTitle":"ServiceBag","url":"/NevermoreEngine/api/ServiceBag#HasService","content":"&lt;/&gt; ServiceBag.HasService( self: ServiceBag, serviceType: ServiceType ) → boolean Returns whether the service bag has the service.  ","version":null,"tagName":"h3"},{"title":"Init​","type":1,"pageTitle":"ServiceBag","url":"/NevermoreEngine/api/ServiceBag#Init","content":"&lt;/&gt; ServiceBag.Init(self: ServiceBag) → () Initializes the service bag and ensures recursive initialization can occur  ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"ServiceBag","url":"/NevermoreEngine/api/ServiceBag#Start","content":"&lt;/&gt; ServiceBag.Start(self: ServiceBag) → () Starts the service bag and all services  ","version":null,"tagName":"h3"},{"title":"IsStarted​","type":1,"pageTitle":"ServiceBag","url":"/NevermoreEngine/api/ServiceBag#IsStarted","content":"&lt;/&gt; ServiceBag.IsStarted(self: ServiceBag) → boolean Returns whether the service bag has fully started or not.  ","version":null,"tagName":"h3"},{"title":"CreateScope​","type":1,"pageTitle":"ServiceBag","url":"/NevermoreEngine/api/ServiceBag#CreateScope","content":"&lt;/&gt; ServiceBag.CreateScope(self: ServiceBag) → ServiceBag Creates a scoped service bag, where services within the scope will not be accessible outside of the scope.  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"ServiceBag","url":"/NevermoreEngine/api/ServiceBag#Destroy","content":"&lt;/&gt; ServiceBag.Destroy(self: ServiceBag) → () Cleans up the service bag and all services that have been initialized in the service bag. ","version":null,"tagName":"h3"},{"title":"Set","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Set","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Set","url":"/NevermoreEngine/api/Set#functions","content":" ","version":null,"tagName":"h2"},{"title":"union​","type":1,"pageTitle":"Set","url":"/NevermoreEngine/api/Set#union","content":"&lt;/&gt; Set.union( set: table, otherSet: table ) → table Unions the set with the other set, making a copy.  ","version":null,"tagName":"h3"},{"title":"unionUpdate​","type":1,"pageTitle":"Set","url":"/NevermoreEngine/api/Set#unionUpdate","content":"&lt;/&gt; Set.unionUpdate( set: table, otherSet: table ) → table Unions the set with the other set, updating the set  ","version":null,"tagName":"h3"},{"title":"intersection​","type":1,"pageTitle":"Set","url":"/NevermoreEngine/api/Set#intersection","content":"&lt;/&gt; Set.intersection( set: table, otherSet: table ) → table Finds the set intersection betwen the two sets  ","version":null,"tagName":"h3"},{"title":"copy​","type":1,"pageTitle":"Set","url":"/NevermoreEngine/api/Set#copy","content":"&lt;/&gt; Set.copy(set: table) → table Makes a copy of the set, making the values as true.  ","version":null,"tagName":"h3"},{"title":"count​","type":1,"pageTitle":"Set","url":"/NevermoreEngine/api/Set#count","content":"&lt;/&gt; Set.count(set: Set&lt;T&gt;) → number Counts the number of entries in the set (linear)  ","version":null,"tagName":"h3"},{"title":"fromKeys​","type":1,"pageTitle":"Set","url":"/NevermoreEngine/api/Set#fromKeys","content":"&lt;/&gt; Set.fromKeys(tab: table) → table Makes a new set from the given keys of a table  ","version":null,"tagName":"h3"},{"title":"fromTableValue​","type":1,"pageTitle":"Set","url":"/NevermoreEngine/api/Set#fromTableValue","content":"&lt;/&gt; Set.fromTableValue(tab: table) → table Converts a set from table values.  ","version":null,"tagName":"h3"},{"title":"fromList​","type":1,"pageTitle":"Set","url":"/NevermoreEngine/api/Set#fromList","content":"&lt;/&gt; Set.fromList(tab: table) → table Converts a set from a list  ","version":null,"tagName":"h3"},{"title":"toList​","type":1,"pageTitle":"Set","url":"/NevermoreEngine/api/Set#toList","content":"&lt;/&gt; Set.toList(set: table) → table Converts a set to a list  ","version":null,"tagName":"h3"},{"title":"differenceUpdate​","type":1,"pageTitle":"Set","url":"/NevermoreEngine/api/Set#differenceUpdate","content":"&lt;/&gt; Set.differenceUpdate( set: table, otherSet: table ) → table Converts a set to a list  ","version":null,"tagName":"h3"},{"title":"difference​","type":1,"pageTitle":"Set","url":"/NevermoreEngine/api/Set#difference","content":"&lt;/&gt; Set.difference( set: table, otherSet: table ) → table Computes the set difference between the two sets ","version":null,"tagName":"h3"},{"title":"SettingProperty","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SettingProperty","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SettingProperty","url":"/NevermoreEngine/api/SettingProperty#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"SettingProperty","url":"/NevermoreEngine/api/SettingProperty#new","content":"&lt;/&gt; SettingProperty.new( serviceBag: ServiceBag, player: Player , definition: SettingDefinition ) → SettingProperty&lt;T&gt; Constructs a new SettingProperty.  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"SettingProperty","url":"/NevermoreEngine/api/SettingProperty#Observe","content":"&lt;/&gt; SettingProperty.Observe(self: SettingProperty&lt;T&gt;) → Observable&lt;T&gt; Observes the value of the setting property  ","version":null,"tagName":"h3"},{"title":"SetValue​","type":1,"pageTitle":"SettingProperty","url":"/NevermoreEngine/api/SettingProperty#SetValue","content":"&lt;/&gt; SettingProperty.SetValue( self: SettingProperty&lt;T&gt;, value: T ) → () Sets the value of the setting property. Will warn if it cannot do so. TIP Use [PromiseSetValue] to ensure value is set.  ","version":null,"tagName":"h3"},{"title":"PromiseValue​","type":1,"pageTitle":"SettingProperty","url":"/NevermoreEngine/api/SettingProperty#PromiseValue","content":"&lt;/&gt; SettingProperty.PromiseValue(self: SettingProperty&lt;T&gt;) → Promise&lt;T&gt; Promises the value of the setting once it's loaded.  ","version":null,"tagName":"h3"},{"title":"PromiseSetValue​","type":1,"pageTitle":"SettingProperty","url":"/NevermoreEngine/api/SettingProperty#PromiseSetValue","content":"&lt;/&gt; SettingProperty.PromiseSetValue( self: SettingProperty&lt;T&gt;, value: T ) → Promise Promises to set the value  ","version":null,"tagName":"h3"},{"title":"RestoreDefault​","type":1,"pageTitle":"SettingProperty","url":"/NevermoreEngine/api/SettingProperty#RestoreDefault","content":"&lt;/&gt; SettingProperty.RestoreDefault(self: SettingProperty&lt;T&gt;) → () Restores the setting to the default value  ","version":null,"tagName":"h3"},{"title":"PromiseRestoreDefault​","type":1,"pageTitle":"SettingProperty","url":"/NevermoreEngine/api/SettingProperty#PromiseRestoreDefault","content":"&lt;/&gt; SettingProperty.PromiseRestoreDefault(self: SettingProperty&lt;T&gt;) → Promise Restores the setting to the default value. This is different than setting to the default value because it means there is no &quot;user-set&quot; value which could lead to values changing if defaults change. ","version":null,"tagName":"h3"},{"title":"SettingDefinition","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SettingDefinition","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SettingDefinition","url":"/NevermoreEngine/api/SettingDefinition#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"SettingDefinition","url":"/NevermoreEngine/api/SettingDefinition#new","content":"&lt;/&gt; SettingDefinition.new( settingName: string, defaultValue: T ) → SettingDefinition&lt;T&gt; Constructs a new setting definition which defines the name and the defaultValue  ","version":null,"tagName":"h3"},{"title":"isSettingDefinition​","type":1,"pageTitle":"SettingDefinition","url":"/NevermoreEngine/api/SettingDefinition#isSettingDefinition","content":"&lt;/&gt; SettingDefinition.isSettingDefinition(value: any) → boolean Returns true if the value is a setting definition  ","version":null,"tagName":"h3"},{"title":"Init​","type":1,"pageTitle":"SettingDefinition","url":"/NevermoreEngine/api/SettingDefinition#Init","content":"&lt;/&gt; SettingDefinition:Init(serviceBag: ServiceBag) → () Initializes the setting definition from a service bag.  ","version":null,"tagName":"h3"},{"title":"Get​","type":1,"pageTitle":"SettingDefinition","url":"/NevermoreEngine/api/SettingDefinition#Get","content":"&lt;/&gt; SettingDefinition:Get(player: Player ) → T Gets the value for the given player  ","version":null,"tagName":"h3"},{"title":"Set​","type":1,"pageTitle":"SettingDefinition","url":"/NevermoreEngine/api/SettingDefinition#Set","content":"&lt;/&gt; SettingDefinition:Set( player: Player , value: T ) → () Sets the value  ","version":null,"tagName":"h3"},{"title":"Promise​","type":1,"pageTitle":"SettingDefinition","url":"/NevermoreEngine/api/SettingDefinition#Promise","content":"&lt;/&gt; SettingDefinition:Promise(player: Player ) → Promise&lt;T&gt; Promise gets the value  ","version":null,"tagName":"h3"},{"title":"PromiseSet​","type":1,"pageTitle":"SettingDefinition","url":"/NevermoreEngine/api/SettingDefinition#PromiseSet","content":"&lt;/&gt; SettingDefinition:PromiseSet( player: Player , value: T ) → Promise&lt;T&gt; Promise gets the value  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"SettingDefinition","url":"/NevermoreEngine/api/SettingDefinition#Observe","content":"&lt;/&gt; SettingDefinition:Observe(player: Player ) → Promise&lt;T&gt; Promise gets the value  ","version":null,"tagName":"h3"},{"title":"GetSettingProperty​","type":1,"pageTitle":"SettingDefinition","url":"/NevermoreEngine/api/SettingDefinition#GetSettingProperty","content":"&lt;/&gt; SettingDefinition:GetSettingProperty( serviceBag: ServiceBag, player: Player ) → SettingProperty&lt;T&gt; Gets a new setting property for the given definition  ","version":null,"tagName":"h3"},{"title":"GetLocalPlayerSettingProperty​","type":1,"pageTitle":"SettingDefinition","url":"/NevermoreEngine/api/SettingDefinition#GetLocalPlayerSettingProperty","content":"&lt;/&gt; SettingDefinition:GetLocalPlayerSettingProperty(serviceBag: ServiceBag) → SettingProperty&lt;T&gt; Gets a new setting property for the given definition  ","version":null,"tagName":"h3"},{"title":"GetSettingName​","type":1,"pageTitle":"SettingDefinition","url":"/NevermoreEngine/api/SettingDefinition#GetSettingName","content":"&lt;/&gt; SettingDefinition:GetSettingName() → string Retrieves the default name of the setting  ","version":null,"tagName":"h3"},{"title":"GetDefaultValue​","type":1,"pageTitle":"SettingDefinition","url":"/NevermoreEngine/api/SettingDefinition#GetDefaultValue","content":"&lt;/&gt; SettingDefinition:GetDefaultValue() → T Retrieves the default value for the setting ","version":null,"tagName":"h3"},{"title":"SettingsCmdrService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SettingsCmdrService","content":"SettingsCmdrService Provides commands involving player settings","keywords":"","version":null},{"title":"SettingDefinitionProvider","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SettingDefinitionProvider","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SettingDefinitionProvider","url":"/NevermoreEngine/api/SettingDefinitionProvider#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"SettingDefinitionProvider","url":"/NevermoreEngine/api/SettingDefinitionProvider#new","content":"&lt;/&gt; SettingDefinitionProvider.new(settingDefinitions: {SettingDefinition}) → SettingDefinitionProvider Constructs a new provider with a list of SettingDefinition's. -- In one location local SettingDefinition = require(&quot;SettingDefinition&quot;) return require(&quot;SettingDefinitionProvider&quot;).new({ KeyBinding = Enum.KeyCode.X; CameraShake = true; CameraSensitivity = 1; }) Usage: local ourSettings = serviceBag:GetService(require(&quot;OurSettings&quot;)) print(ourSettings.CameraShake:Get(Players.LocalPlayer), true) ourSettings.CameraShake:Set(Players.LocalPlayer, false) ourSettings.CameraShake:Promise(Players.LocalPlayer) :Then(function(cameraShake) print(cameraShake) end)   ","version":null,"tagName":"h3"},{"title":"Init​","type":1,"pageTitle":"SettingDefinitionProvider","url":"/NevermoreEngine/api/SettingDefinitionProvider#Init","content":"&lt;/&gt; SettingDefinitionProvider:Init(serviceBag: ServiceBag) → () Initializes the provider, storing the data in SettingsDataService  ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"SettingDefinitionProvider","url":"/NevermoreEngine/api/SettingDefinitionProvider#Start","content":"&lt;/&gt; SettingDefinitionProvider:Start() → () Starts the provider. Empty.  ","version":null,"tagName":"h3"},{"title":"GetSettingDefinitions​","type":1,"pageTitle":"SettingDefinitionProvider","url":"/NevermoreEngine/api/SettingDefinitionProvider#GetSettingDefinitions","content":"&lt;/&gt; SettingDefinitionProvider:GetSettingDefinitions() → {SettingDefinition} Returns the setting definition  ","version":null,"tagName":"h3"},{"title":"__index​","type":1,"pageTitle":"SettingDefinitionProvider","url":"/NevermoreEngine/api/SettingDefinitionProvider#__index","content":"&lt;/&gt; SettingDefinitionProvider:__index(index: string) → SettingDefinition You can index the provider to get a setting. For example local SettingDefinition = require(&quot;SettingDefinition&quot;) local provider = require(&quot;SettingDefinitionProvider&quot;).new({ KeyBinding = Enum.KeyCode.X; CameraShake = true; CameraSensitivity = 1; }) local service = serviceBag:GetService(provider) -- Write a setting service.CamaraShake:GetLocalPlayerSettingProperty(serviceBag).Value = false   ","version":null,"tagName":"h3"},{"title":"Get​","type":1,"pageTitle":"SettingDefinitionProvider","url":"/NevermoreEngine/api/SettingDefinitionProvider#Get","content":"&lt;/&gt; SettingDefinitionProvider:Get(settingName: string) → SettingDefinition Gets a new setting definition if it exists  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"SettingDefinitionProvider","url":"/NevermoreEngine/api/SettingDefinitionProvider#Destroy","content":"&lt;/&gt; SettingDefinitionProvider:Destroy() → () Cleans up the setting registration ","version":null,"tagName":"h3"},{"title":"SettingsCmdrUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SettingsCmdrUtils","content":"SettingsCmdrUtils","keywords":"","version":null},{"title":"SettingsInputKeyMapService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SettingsInputKeyMapService","content":"SettingsInputKeyMapService","keywords":"","version":null},{"title":"SettingsInputKeyMapServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SettingsInputKeyMapServiceClient","content":"SettingsInputKeyMapServiceClient","keywords":"","version":null},{"title":"SettingsDataService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SettingsDataService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SettingsDataService","url":"/NevermoreEngine/api/SettingsDataService#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"SettingsDataService","url":"/NevermoreEngine/api/SettingsDataService#Init","content":"&lt;/&gt; SettingsDataService:Init(serviceBag: ServiceBag) → () Initializes the shared registry service. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"GetSettingDefinitions​","type":1,"pageTitle":"SettingsDataService","url":"/NevermoreEngine/api/SettingsDataService#GetSettingDefinitions","content":"&lt;/&gt; SettingsDataService:GetSettingDefinitions() → {SettingDefinition} Gets the setting definitions  ","version":null,"tagName":"h3"},{"title":"RegisterSettingDefinition​","type":1,"pageTitle":"SettingsDataService","url":"/NevermoreEngine/api/SettingsDataService#RegisterSettingDefinition","content":"&lt;/&gt; SettingsDataService:RegisterSettingDefinition(definition: SettingDefinition) → callback-- Cleanup callback Registers settings definitions  ","version":null,"tagName":"h3"},{"title":"ObserveRegisteredDefinitionsBrio​","type":1,"pageTitle":"SettingsDataService","url":"/NevermoreEngine/api/SettingsDataService#ObserveRegisteredDefinitionsBrio","content":"&lt;/&gt; SettingsDataService:ObserveRegisteredDefinitionsBrio() → Observable&lt;Brio&lt;SettingDefinition&gt;&gt; Observes the registered definitions  ","version":null,"tagName":"h3"},{"title":"ObservePlayerSettings​","type":1,"pageTitle":"SettingsDataService","url":"/NevermoreEngine/api/SettingsDataService#ObservePlayerSettings","content":"&lt;/&gt; SettingsDataService:ObservePlayerSettings(player: Player ) → Observable&lt;PlayerSettingsBase&gt; Observes the player's settings  ","version":null,"tagName":"h3"},{"title":"ObservePlayerSettingsBrio​","type":1,"pageTitle":"SettingsDataService","url":"/NevermoreEngine/api/SettingsDataService#ObservePlayerSettingsBrio","content":"&lt;/&gt; SettingsDataService:ObservePlayerSettingsBrio(player: Player ) → Observable&lt;Brio&lt;PlayerSettingsClient&gt;&gt; Observes the player settings in a brio  ","version":null,"tagName":"h3"},{"title":"PromisePlayerSettings​","type":1,"pageTitle":"SettingsDataService","url":"/NevermoreEngine/api/SettingsDataService#PromisePlayerSettings","content":"&lt;/&gt; SettingsDataService:PromisePlayerSettings( player: Player , cancelToken: CancelToken ) → Promise&lt;PlayerSettingsBase&gt; Promises the player's settings  ","version":null,"tagName":"h3"},{"title":"GetPlayerSettings​","type":1,"pageTitle":"SettingsDataService","url":"/NevermoreEngine/api/SettingsDataService#GetPlayerSettings","content":"&lt;/&gt; SettingsDataService:GetPlayerSettings(player: Player ) → Promise&lt;PlayerSettingsBase&gt; Gets the player's settings  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"SettingsDataService","url":"/NevermoreEngine/api/SettingsDataService#Destroy","content":"&lt;/&gt; SettingsDataService:Destroy() → () Cleans up the shared registry service ","version":null,"tagName":"h3"},{"title":"SettingsService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SettingsService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SettingsService","url":"/NevermoreEngine/api/SettingsService#functions","content":" ","version":null,"tagName":"h2"},{"title":"ObservePlayerSettingsBrio​","type":1,"pageTitle":"SettingsService","url":"/NevermoreEngine/api/SettingsService#ObservePlayerSettingsBrio","content":"&lt;/&gt; SettingsService:ObservePlayerSettingsBrio(player: Player ) → Observable&lt;Brio&lt;PlayerSettings&gt;&gt; Observes the settings for a player using Brio.  ","version":null,"tagName":"h3"},{"title":"ObservePlayerSettings​","type":1,"pageTitle":"SettingsService","url":"/NevermoreEngine/api/SettingsService#ObservePlayerSettings","content":"&lt;/&gt; SettingsService:ObservePlayerSettings(player: Player ) → Observable&lt;PlayerSettings&gt; Observes the settings for a player.  ","version":null,"tagName":"h3"},{"title":"GetPlayerSettings​","type":1,"pageTitle":"SettingsService","url":"/NevermoreEngine/api/SettingsService#GetPlayerSettings","content":"&lt;/&gt; SettingsService:GetPlayerSettings(player: Player ) → PlayerSettings Obtains the settings for a player.  ","version":null,"tagName":"h3"},{"title":"PromisePlayerSettings​","type":1,"pageTitle":"SettingsService","url":"/NevermoreEngine/api/SettingsService#PromisePlayerSettings","content":"&lt;/&gt; SettingsService:PromisePlayerSettings( player: Player , cancelToken: CancelToken? ) → Promise&lt;PlayerSettings&gt; Promises the settings for a player.  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"SettingsService","url":"/NevermoreEngine/api/SettingsService#Destroy","content":"&lt;/&gt; SettingsService:Destroy() → () Cleans up the settings service ","version":null,"tagName":"h3"},{"title":"SettingsServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SettingsServiceClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SettingsServiceClient","url":"/NevermoreEngine/api/SettingsServiceClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"SettingsServiceClient","url":"/NevermoreEngine/api/SettingsServiceClient#Init","content":"&lt;/&gt; SettingsServiceClient.Init( self: SettingsServiceClient, serviceBag: ServiceBag ) → () Initializes the setting service. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"GetLocalPlayerSettings​","type":1,"pageTitle":"SettingsServiceClient","url":"/NevermoreEngine/api/SettingsServiceClient#GetLocalPlayerSettings","content":"&lt;/&gt; SettingsServiceClient.GetLocalPlayerSettings(self: SettingsServiceClient) → PlayerSettingsClient | nil Gets the local player settings  ","version":null,"tagName":"h3"},{"title":"ObserveLocalPlayerSettingsBrio​","type":1,"pageTitle":"SettingsServiceClient","url":"/NevermoreEngine/api/SettingsServiceClient#ObserveLocalPlayerSettingsBrio","content":"&lt;/&gt; SettingsServiceClient.ObserveLocalPlayerSettingsBrio(self: SettingsServiceClient) → Observable&lt;Brio&lt;PlayerSettingsClient&gt;&gt; Observes the local player settings in a brio  ","version":null,"tagName":"h3"},{"title":"ObserveLocalPlayerSettings​","type":1,"pageTitle":"SettingsServiceClient","url":"/NevermoreEngine/api/SettingsServiceClient#ObserveLocalPlayerSettings","content":"&lt;/&gt; SettingsServiceClient.ObserveLocalPlayerSettings(self: SettingsServiceClient) → Observable&lt;PlayerSettingsClient | nil&gt; Observes the local player settings  ","version":null,"tagName":"h3"},{"title":"PromiseLocalPlayerSettings​","type":1,"pageTitle":"SettingsServiceClient","url":"/NevermoreEngine/api/SettingsServiceClient#PromiseLocalPlayerSettings","content":"&lt;/&gt; SettingsServiceClient.PromiseLocalPlayerSettings( self: SettingsServiceClient, cancelToken: CancellationToken ) → Promise&lt;PlayerSettingsClient&gt; Promises the local player settings  ","version":null,"tagName":"h3"},{"title":"ObservePlayerSettings​","type":1,"pageTitle":"SettingsServiceClient","url":"/NevermoreEngine/api/SettingsServiceClient#ObservePlayerSettings","content":"&lt;/&gt; SettingsServiceClient.ObservePlayerSettings( self: SettingsServiceClient, player: Player ) → Observable&lt;PlayerSettingsClient | nil&gt; Observes the player settings  ","version":null,"tagName":"h3"},{"title":"ObservePlayerSettingsBrio​","type":1,"pageTitle":"SettingsServiceClient","url":"/NevermoreEngine/api/SettingsServiceClient#ObservePlayerSettingsBrio","content":"&lt;/&gt; SettingsServiceClient.ObservePlayerSettingsBrio( self: SettingsServiceClient, player: Player ) → Observable&lt;Brio&lt;PlayerSettingsClient&gt;&gt; Observes the player settings in a brio  ","version":null,"tagName":"h3"},{"title":"GetPlayerSettings​","type":1,"pageTitle":"SettingsServiceClient","url":"/NevermoreEngine/api/SettingsServiceClient#GetPlayerSettings","content":"&lt;/&gt; SettingsServiceClient.GetPlayerSettings( self: SettingsServiceClient, player: Player ) → PlayerSettingsClient | nil Gets a player's settings  ","version":null,"tagName":"h3"},{"title":"PromisePlayerSettings​","type":1,"pageTitle":"SettingsServiceClient","url":"/NevermoreEngine/api/SettingsServiceClient#PromisePlayerSettings","content":"&lt;/&gt; SettingsServiceClient.PromisePlayerSettings( self: SettingsServiceClient, player: Player , cancelToken: CancellationToken ) → Promise&lt;PlayerSettingsClient&gt; Promises the player's settings ","version":null,"tagName":"h3"},{"title":"SignalUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SignalUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SignalUtils","url":"/NevermoreEngine/api/SignalUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"onNext​","type":1,"pageTitle":"SignalUtils","url":"/NevermoreEngine/api/SignalUtils#onNext","content":"&lt;/&gt; SignalUtils.onNext( event: RBXScriptSignal , callback: function ) → RBXScriptConnection  Executes on the next event connection. ","version":null,"tagName":"h3"},{"title":"ShowBody","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ShowBody","content":"ShowBody","keywords":"","version":null},{"title":"Signal","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Signal","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Signal","url":"/NevermoreEngine/api/Signal#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Signal","url":"/NevermoreEngine/api/Signal#new","content":"&lt;/&gt; Signal.new() → Signal&lt;T...&gt; Constructs a new signal.  ","version":null,"tagName":"h3"},{"title":"isSignal​","type":1,"pageTitle":"Signal","url":"/NevermoreEngine/api/Signal#isSignal","content":"&lt;/&gt; Signal.isSignal(value: any) → boolean Returns whether a class is a signal  ","version":null,"tagName":"h3"},{"title":"Connect​","type":1,"pageTitle":"Signal","url":"/NevermoreEngine/api/Signal#Connect","content":"&lt;/&gt; Signal.Connect( self: Signal&lt;T...&gt;, fn: (...T) → ()-- Function handler called when :Fire(...) is called ) → RBXScriptConnection  Connect a new handler to the event. Returns a connection object that can be disconnected.  ","version":null,"tagName":"h3"},{"title":"DisconnectAll​","type":1,"pageTitle":"Signal","url":"/NevermoreEngine/api/Signal#DisconnectAll","content":"&lt;/&gt; Signal.DisconnectAll(self: Signal&lt;T...&gt;) → () Disconnects all connected events to the signal. INFO Disconnect all handlers. Since we use a linked list it suffices to clear the reference to the head handler.  ","version":null,"tagName":"h3"},{"title":"Fire​","type":1,"pageTitle":"Signal","url":"/NevermoreEngine/api/Signal#Fire","content":"&lt;/&gt; Signal.Fire( self: Signal&lt;T...&gt;, ...: T-- Variable arguments to pass to handler ) → () Fire the event with the given arguments. All handlers will be invoked. Handlers follow ::: info Signal:Fire(...) is implemented by running the handler functions on the coRunnerThread, and any time the resulting thread yielded without returning to us, that means that it yielded to the Roblox scheduler and has been taken over by Roblox scheduling, meaning we have to make a new coroutine runner. :::  ","version":null,"tagName":"h3"},{"title":"Wait​","type":1,"pageTitle":"Signal","url":"/NevermoreEngine/api/Signal#Wait","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; Signal.Wait(self: Signal&lt;T...&gt;) → T Wait for fire to be called, and return the arguments it was given. ::: info Signal:Wait() is implemented in terms of a temporary connection using a Signal:Connect() which disconnects itself. :::  ","version":null,"tagName":"h3"},{"title":"Once​","type":1,"pageTitle":"Signal","url":"/NevermoreEngine/api/Signal#Once","content":"&lt;/&gt; Signal.Once( self: Signal&lt;T...&gt;, fn: (...T) → ()-- One-time function handler called when :Fire(...) is called ) → RBXScriptConnection  Connect a new, one-time handler to the event. Returns a connection object that can be disconnected. ::: info -- Implement Signal:Once() in terms of a connection which disconnects -- itself before running the handler. :::  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"Signal","url":"/NevermoreEngine/api/Signal#Destroy","content":"&lt;/&gt; Signal.Destroy() → () Alias for [DisconnectAll]  ","version":null,"tagName":"h3"},{"title":"isSignal​","type":1,"pageTitle":"Signal","url":"/NevermoreEngine/api/Signal#isSignal","content":"&lt;/&gt; Signal.isSignal(value: any) → boolean Returns whether a class is a signal  ","version":null,"tagName":"h3"},{"title":"new​","type":1,"pageTitle":"Signal","url":"/NevermoreEngine/api/Signal#new","content":"&lt;/&gt; Signal.new() → Signal&lt;T&gt; Constructs a new signal.  ","version":null,"tagName":"h3"},{"title":"Fire​","type":1,"pageTitle":"Signal","url":"/NevermoreEngine/api/Signal#Fire","content":"&lt;/&gt; Signal:Fire( ...: T-- Variable arguments to pass to handler ) → () Fire the event with the given arguments. All handlers will be invoked. Handlers follow  ","version":null,"tagName":"h3"},{"title":"Connect​","type":1,"pageTitle":"Signal","url":"/NevermoreEngine/api/Signal#Connect","content":"&lt;/&gt; Signal:Connect( handler: (...T) → ()-- Function handler called when :Fire(...) is called ) → RBXScriptConnection  Connect a new handler to the event. Returns a connection object that can be disconnected.  ","version":null,"tagName":"h3"},{"title":"Once​","type":1,"pageTitle":"Signal","url":"/NevermoreEngine/api/Signal#Once","content":"&lt;/&gt; Signal:Once( handler: (...T) → ()-- One-time function handler called when :Fire(...) is called ) → RBXScriptConnection  Connect a new, one-time handler to the event. Returns a connection object that can be disconnected.  ","version":null,"tagName":"h3"},{"title":"Wait​","type":1,"pageTitle":"Signal","url":"/NevermoreEngine/api/Signal#Wait","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; Signal:Wait() → T Wait for fire to be called, and return the arguments it was given.  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"Signal","url":"/NevermoreEngine/api/Signal#Destroy","content":"&lt;/&gt; Signal:Destroy() → () Disconnects all connected events to the signal. Voids the signal as unusable. Sets the metatable to nil. ","version":null,"tagName":"h3"},{"title":"Singleton","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Singleton","content":"Singleton This class converts a class into a singleton","keywords":"","version":null},{"title":"SimpleLoopedSoundPlayer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SimpleLoopedSoundPlayer","content":"SimpleLoopedSoundPlayer","keywords":"","version":null},{"title":"SlaveClock","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SlaveClock","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SlaveClock","url":"/NevermoreEngine/api/SlaveClock#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"SlaveClock","url":"/NevermoreEngine/api/SlaveClock#new","content":"&lt;/&gt; SlaveClock.new( remoteEvent: RemoteEvent , remoteFunction: RemoteFunction ) → SlaveClock Constructs a new SlaveClock  ","version":null,"tagName":"h3"},{"title":"GetClockFunction​","type":1,"pageTitle":"SlaveClock","url":"/NevermoreEngine/api/SlaveClock#GetClockFunction","content":"&lt;/&gt; SlaveClock.GetClockFunction(self: SlaveClock) → function Gets a function that can be used as a clock, like time and tick are.  ","version":null,"tagName":"h3"},{"title":"TickToSyncedTime​","type":1,"pageTitle":"SlaveClock","url":"/NevermoreEngine/api/SlaveClock#TickToSyncedTime","content":"&lt;/&gt; SlaveClock.TickToSyncedTime( self: SlaveClock, syncedTime: number ) → number Converts the syncedTime to the original tick value.  ","version":null,"tagName":"h3"},{"title":"GetTime​","type":1,"pageTitle":"SlaveClock","url":"/NevermoreEngine/api/SlaveClock#GetTime","content":"&lt;/&gt; SlaveClock.GetTime(self: SlaveClock) → number Returns the sycncronized time  ","version":null,"tagName":"h3"},{"title":"IsSynced​","type":1,"pageTitle":"SlaveClock","url":"/NevermoreEngine/api/SlaveClock#IsSynced","content":"&lt;/&gt; SlaveClock.IsSynced(self: SlaveClock) → boolean Returns true if the manager has synced with the server  ","version":null,"tagName":"h3"},{"title":"GetPing​","type":1,"pageTitle":"SlaveClock","url":"/NevermoreEngine/api/SlaveClock#GetPing","content":"&lt;/&gt; SlaveClock.GetPing(self: SlaveClock) → number Returns estimated ping in seconds ","version":null,"tagName":"h3"},{"title":"SlottedTouchButtonUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SlottedTouchButtonUtils","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"SlottedTouchButtonUtils","url":"/NevermoreEngine/api/SlottedTouchButtonUtils#types","content":" ","version":null,"tagName":"h2"},{"title":"SlottedTouchButtonData​","type":1,"pageTitle":"SlottedTouchButtonUtils","url":"/NevermoreEngine/api/SlottedTouchButtonUtils#SlottedTouchButtonData","content":"&lt;/&gt; interface SlottedTouchButtonData { slotId: string inputModeType: InputModeType } Internal data representing a slotted touch button ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"SlottedTouchButtonUtils","url":"/NevermoreEngine/api/SlottedTouchButtonUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"createSlottedTouchButton​","type":1,"pageTitle":"SlottedTouchButtonUtils","url":"/NevermoreEngine/api/SlottedTouchButtonUtils#createSlottedTouchButton","content":"&lt;/&gt; SlottedTouchButtonUtils.createSlottedTouchButton(slotId: string) → SlottedTouchButton Touch buttons should always show up in the same position We use the SlotId to determine which slot we should put these buttons in.  ","version":null,"tagName":"h3"},{"title":"isSlottedTouchButton​","type":1,"pageTitle":"SlottedTouchButtonUtils","url":"/NevermoreEngine/api/SlottedTouchButtonUtils#isSlottedTouchButton","content":"&lt;/&gt; SlottedTouchButtonUtils.isSlottedTouchButton(inputType: any) → boolean Returns whether an inputType is a SlottedTouchButton type  ","version":null,"tagName":"h3"},{"title":"createTouchButtonData​","type":1,"pageTitle":"SlottedTouchButtonUtils","url":"/NevermoreEngine/api/SlottedTouchButtonUtils#createTouchButtonData","content":"&lt;/&gt; SlottedTouchButtonUtils.createTouchButtonData( slotId: string, inputModeType: InputModeType ) → SlottedTouchButtonData Gets slotted touch button data for an inputKeyMapList  ","version":null,"tagName":"h3"},{"title":"getSlottedTouchButtonData​","type":1,"pageTitle":"SlottedTouchButtonUtils","url":"/NevermoreEngine/api/SlottedTouchButtonUtils#getSlottedTouchButtonData","content":"&lt;/&gt; SlottedTouchButtonUtils.getSlottedTouchButtonData(inputKeyMapList: InputKeyMapList) → {SlottedTouchButtonData} Gets slotted touch button data for an inputKeyMapList ","version":null,"tagName":"h3"},{"title":"SmoothRotatedCamera","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SmoothRotatedCamera","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SmoothRotatedCamera","url":"/NevermoreEngine/api/SmoothRotatedCamera#functions","content":" ","version":null,"tagName":"h2"},{"title":"RotateXY​","type":1,"pageTitle":"SmoothRotatedCamera","url":"/NevermoreEngine/api/SmoothRotatedCamera#RotateXY","content":"&lt;/&gt; SmoothRotatedCamera.RotateXY( self: SmoothRotatedCamera, xyRotateVector: Vector2 -- The delta rotation to apply ) → ()  ","version":null,"tagName":"h3"},{"title":"SmoothPositionCamera","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SmoothPositionCamera","content":"SmoothPositionCamera Lags the camera smoothly behind the position maintaining other components","keywords":"","version":null},{"title":"SmoothZoomedCamera","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SmoothZoomedCamera","content":"SmoothZoomedCamera Allow freedom of movement around a current place, much like the classic script works now. Not intended to be use with the current character script Intended to be used with a SummedCamera, relative.","keywords":"","version":null},{"title":"Snackbar","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Snackbar","content":"Snackbar Snackbars provide lightweight feedback on an operation at the base of the screen. They automatically disappear after a timeout or user interaction. There can only be one on the screen at a time.","keywords":"","version":null},{"title":"SnackbarOptionUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SnackbarOptionUtils","content":"SnackbarOptionUtils","keywords":"","version":null},{"title":"SnackbarScreenGuiProvider","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SnackbarScreenGuiProvider","content":"SnackbarScreenGuiProvider","keywords":"","version":null},{"title":"SnackbarServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SnackbarServiceClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SnackbarServiceClient","url":"/NevermoreEngine/api/SnackbarServiceClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"SnackbarServiceClient","url":"/NevermoreEngine/api/SnackbarServiceClient#Init","content":"&lt;/&gt; SnackbarServiceClient:Init(serviceBag: ServiceBag) → () Initializes the snackbar service. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"SetScreenGui​","type":1,"pageTitle":"SnackbarServiceClient","url":"/NevermoreEngine/api/SnackbarServiceClient#SetScreenGui","content":"&lt;/&gt; SnackbarServiceClient:SetScreenGui(screenGui: ScreenGui ) → SnackbarServiceClient Sets the screenGui to use  ","version":null,"tagName":"h3"},{"title":"ShowSnackbar​","type":1,"pageTitle":"SnackbarServiceClient","url":"/NevermoreEngine/api/SnackbarServiceClient#ShowSnackbar","content":"&lt;/&gt; SnackbarServiceClient:ShowSnackbar( text: string, options: SnackbarOptions ) → Snackbar.Snackbar Makes a snackbar and shows it to the user in a queue. local snackbarServiceClient = serviceBag:GetService(SnackbarServiceClient) snackbarServiceClient:ShowSnackbar(&quot;Settings saved!&quot;, { CallToAction = { Text = &quot;Undo&quot;; OnClick = function() print(&quot;Activated action&quot;) end; } })   ","version":null,"tagName":"h3"},{"title":"HideCurrent​","type":1,"pageTitle":"SnackbarServiceClient","url":"/NevermoreEngine/api/SnackbarServiceClient#HideCurrent","content":"&lt;/&gt; SnackbarServiceClient:HideCurrent(doNotAnimate: boolean) → () Hides the current snackbar shown in the queue  ","version":null,"tagName":"h3"},{"title":"ClearQueue​","type":1,"pageTitle":"SnackbarServiceClient","url":"/NevermoreEngine/api/SnackbarServiceClient#ClearQueue","content":"&lt;/&gt; SnackbarServiceClient:ClearQueue(doNotAnimate: boolean) → () Completely clears the queue  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"SnackbarServiceClient","url":"/NevermoreEngine/api/SnackbarServiceClient#Destroy","content":"&lt;/&gt; SnackbarServiceClient:Destroy() → () Cleans up the snackbar service! ","version":null,"tagName":"h3"},{"title":"SnackbarService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SnackbarService","content":"SnackbarService This item only works when running on the server. Server Server-side snackbar service. See SnackbarServiceClient for more details.","keywords":"","version":null},{"title":"SoftShutdownConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SoftShutdownConstants","content":"SoftShutdownConstants","keywords":"","version":null},{"title":"SocialServiceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SocialServiceUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SocialServiceUtils","url":"/NevermoreEngine/api/SocialServiceUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseCanSendGameInvite​","type":1,"pageTitle":"SocialServiceUtils","url":"/NevermoreEngine/api/SocialServiceUtils#promiseCanSendGameInvite","content":"&lt;/&gt; SocialServiceUtils.promiseCanSendGameInvite(player: Player ) → Promise&lt;boolean&gt; Wraps SocialService:CanSendGameInviteAsync(player)  ","version":null,"tagName":"h3"},{"title":"promisePromptGameInvite​","type":1,"pageTitle":"SocialServiceUtils","url":"/NevermoreEngine/api/SocialServiceUtils#promisePromptGameInvite","content":"&lt;/&gt; SocialServiceUtils.promisePromptGameInvite( player: Player , options: ExperienceInviteOptions? ) → Promise Prompts the user to send an in-game invite and resolves once the prompt is closed. ","version":null,"tagName":"h3"},{"title":"SoftShutdownUI","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SoftShutdownUI","content":"SoftShutdownUI","keywords":"","version":null},{"title":"SoftShutdownServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SoftShutdownServiceClient","content":"SoftShutdownServiceClient","keywords":"","version":null},{"title":"SortedNode","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SortedNode","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SortedNode","url":"/NevermoreEngine/api/SortedNode#functions","content":" ","version":null,"tagName":"h2"},{"title":"IterateNodesRange​","type":1,"pageTitle":"SortedNode","url":"/NevermoreEngine/api/SortedNode#IterateNodesRange","content":"&lt;/&gt; SortedNode.IterateNodesRange( self: SortedNode&lt;T&gt;, start: number, finish: number ) → (T) → ( ( T, nextIndex: any ) → ...any, T? ) Inclusive iterator like string.sub. Faster than skipping because we binary search our initial node  ","version":null,"tagName":"h3"},{"title":"ContainsNode​","type":1,"pageTitle":"SortedNode","url":"/NevermoreEngine/api/SortedNode#ContainsNode","content":"&lt;/&gt; SortedNode.ContainsNode( self: SortedNode&lt;T&gt;, node: SortedNode&lt;T&gt; ) → boolean Returns true if the node is contained within the parent node ","version":null,"tagName":"h3"},{"title":"SoftShutdownService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SoftShutdownService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SoftShutdownService","url":"/NevermoreEngine/api/SoftShutdownService#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"SoftShutdownService","url":"/NevermoreEngine/api/SoftShutdownService#Init","content":"&lt;/&gt; SoftShutdownService:Init(serviceBag: ServiceBag) → () Initialize the service. Should be done via ServiceBag. WARNING Initializing this service effectively initializes side effects, which is, to initialize the soft shutdown behavior. ","version":null,"tagName":"h3"},{"title":"SortedNodeValue","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SortedNodeValue","content":"SortedNodeValue Simplifies comparison logic","keywords":"","version":null},{"title":"SortFunctionUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SortFunctionUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SortFunctionUtils","url":"/NevermoreEngine/api/SortFunctionUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"reverse​","type":1,"pageTitle":"SortFunctionUtils","url":"/NevermoreEngine/api/SortFunctionUtils#reverse","content":"&lt;/&gt; SortFunctionUtils.reverse(compare: ( a: T, b: T ) → number) → ( a: T, b: T ) → number Reverses a given sort function  ","version":null,"tagName":"h3"},{"title":"default​","type":1,"pageTitle":"SortFunctionUtils","url":"/NevermoreEngine/api/SortFunctionUtils#default","content":"&lt;/&gt; SortFunctionUtils.default( a: T, b: T ) → number Sorts a given list of items using the given compare function Higher numbers last ","version":null,"tagName":"h3"},{"title":"SoundEffectService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SoundEffectService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SoundEffectService","url":"/NevermoreEngine/api/SoundEffectService#functions","content":" ","version":null,"tagName":"h2"},{"title":"RegisterSFX​","type":1,"pageTitle":"SoundEffectService","url":"/NevermoreEngine/api/SoundEffectService#RegisterSFX","content":"&lt;/&gt; SoundEffectService:RegisterSFX( sound: Sound , soundGroupPath: string?-- Optional ) → () Assigns the sound group for the given ","version":null,"tagName":"h3"},{"title":"SoundEffectsRegistry","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SoundEffectsRegistry","content":"SoundEffectsRegistry Allows us to independently apply sound effects to both sound groups and to individual sounds.","keywords":"","version":null},{"title":"SoundEffectsList","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SoundEffectsList","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SoundEffectsList","url":"/NevermoreEngine/api/SoundEffectsList#functions","content":" ","version":null,"tagName":"h2"},{"title":"HasEffects​","type":1,"pageTitle":"SoundEffectsList","url":"/NevermoreEngine/api/SoundEffectsList#HasEffects","content":"&lt;/&gt; SoundEffectsList.HasEffects(self: SoundEffectsList) → boolean Returns the number of effects that are currently applied.  ","version":null,"tagName":"h3"},{"title":"ObserveHasEffects​","type":1,"pageTitle":"SoundEffectsList","url":"/NevermoreEngine/api/SoundEffectsList#ObserveHasEffects","content":"&lt;/&gt; SoundEffectsList.ObserveHasEffects(self: SoundEffectsList) → Observable&lt;boolean&gt; Observes whether the list has any effects.  ","version":null,"tagName":"h3"},{"title":"IsActive​","type":1,"pageTitle":"SoundEffectsList","url":"/NevermoreEngine/api/SoundEffectsList#IsActive","content":"&lt;/&gt; SoundEffectsList.IsActive(self: SoundEffectsList) → boolean Rounds whether the list is effective or not.  ","version":null,"tagName":"h3"},{"title":"PushEffect​","type":1,"pageTitle":"SoundEffectsList","url":"/NevermoreEngine/api/SoundEffectsList#PushEffect","content":"&lt;/&gt; SoundEffectsList.PushEffect( self: SoundEffectsList, effect: (instance) → MaidTask ) → () → ()-- Cleanup call Pushes an affect that will be applied to the sound group or sound as it exists.  ","version":null,"tagName":"h3"},{"title":"ApplyEffects​","type":1,"pageTitle":"SoundEffectsList","url":"/NevermoreEngine/api/SoundEffectsList#ApplyEffects","content":"&lt;/&gt; SoundEffectsList.ApplyEffects( self: SoundEffectsList, instance: SoundGroup | Sound ) → () → ()-- Cleanup call Pushes an affect that will be applied to the sound group or sound as it exists. ","version":null,"tagName":"h3"},{"title":"SoundGroupService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SoundGroupService","content":"SoundGroupService","keywords":"","version":null},{"title":"SoundGroupPathUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SoundGroupPathUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SoundGroupPathUtils","url":"/NevermoreEngine/api/SoundGroupPathUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"isSoundGroupPath​","type":1,"pageTitle":"SoundGroupPathUtils","url":"/NevermoreEngine/api/SoundGroupPathUtils#isSoundGroupPath","content":"&lt;/&gt; SoundGroupPathUtils.isSoundGroupPath(soundGroupPath: string) → boolean Checks if the given string is a valid sound group path.  ","version":null,"tagName":"h3"},{"title":"toPathTable​","type":1,"pageTitle":"SoundGroupPathUtils","url":"/NevermoreEngine/api/SoundGroupPathUtils#toPathTable","content":"&lt;/&gt; SoundGroupPathUtils.toPathTable(soundGroupPath: string) → {string} Converts a sound group path into a table of strings.  ","version":null,"tagName":"h3"},{"title":"findSoundGroup​","type":1,"pageTitle":"SoundGroupPathUtils","url":"/NevermoreEngine/api/SoundGroupPathUtils#findSoundGroup","content":"&lt;/&gt; SoundGroupPathUtils.findSoundGroup( soundGroupPath: string, root: Instance? ) → SoundGroup  Converts a table of strings into a sound group path.  ","version":null,"tagName":"h3"},{"title":"findOrCreateSoundGroup​","type":1,"pageTitle":"SoundGroupPathUtils","url":"/NevermoreEngine/api/SoundGroupPathUtils#findOrCreateSoundGroup","content":"&lt;/&gt; SoundGroupPathUtils.findOrCreateSoundGroup( soundGroupPath: string, root: Instance? ) → SoundGroup  Converts a table of strings into a sound group path. ","version":null,"tagName":"h3"},{"title":"SoundGroupServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SoundGroupServiceClient","content":"SoundGroupServiceClient","keywords":"","version":null},{"title":"SoundLoopScheduleUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SoundLoopScheduleUtils","content":"SoundLoopScheduleUtils","keywords":"","version":null},{"title":"SoundGroupTracker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SoundGroupTracker","content":"SoundGroupTracker","keywords":"","version":null},{"title":"SoundPromiseUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SoundPromiseUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SoundPromiseUtils","url":"/NevermoreEngine/api/SoundPromiseUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseLoaded​","type":1,"pageTitle":"SoundPromiseUtils","url":"/NevermoreEngine/api/SoundPromiseUtils#promiseLoaded","content":"&lt;/&gt; SoundPromiseUtils.promiseLoaded(sound: Sound ) → Promise Promises that a sound is loaded  ","version":null,"tagName":"h3"},{"title":"promiseAllSoundsLoaded​","type":1,"pageTitle":"SoundPromiseUtils","url":"/NevermoreEngine/api/SoundPromiseUtils#promiseAllSoundsLoaded","content":"&lt;/&gt; SoundPromiseUtils.promiseAllSoundsLoaded(sounds: {Sound }) → Promise Promises that all sounds are loaded ","version":null,"tagName":"h3"},{"title":"SoundUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SoundUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SoundUtils","url":"/NevermoreEngine/api/SoundUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"playFromId​","type":1,"pageTitle":"SoundUtils","url":"/NevermoreEngine/api/SoundUtils#playFromId","content":"&lt;/&gt; SoundUtils.playFromId(id: string | number | SoundOptions) → Sound  Plays back a template given asset id. SoundUtils.playFromId(&quot;rbxassetid://4255432837&quot;) -- Plays a wooshing sound TIP The sound will be automatically cleaned up after the sound is played.  ","version":null,"tagName":"h3"},{"title":"createSoundFromId​","type":1,"pageTitle":"SoundUtils","url":"/NevermoreEngine/api/SoundUtils#createSoundFromId","content":"&lt;/&gt; SoundUtils.createSoundFromId(id: string | number | SoundOptions) → Sound  Creates a new sound object from the given id  ","version":null,"tagName":"h3"},{"title":"playFromIdInParent​","type":1,"pageTitle":"SoundUtils","url":"/NevermoreEngine/api/SoundUtils#playFromIdInParent","content":"&lt;/&gt; SoundUtils.playFromIdInParent( id: string | number | SoundOptions, parent: Instance ) → Sound  Plays back a template given asset id in the parent  ","version":null,"tagName":"h3"},{"title":"removeAfterTimeLength​","type":1,"pageTitle":"SoundUtils","url":"/NevermoreEngine/api/SoundUtils#removeAfterTimeLength","content":"&lt;/&gt; SoundUtils.removeAfterTimeLength(sound: Sound ) → () Loads the sound and then cleans up the sound after load.  ","version":null,"tagName":"h3"},{"title":"playTemplate​","type":1,"pageTitle":"SoundUtils","url":"/NevermoreEngine/api/SoundUtils#playTemplate","content":"&lt;/&gt; SoundUtils.playTemplate( templates: TemplateProvider, templateName: string ) → Sound  Plays back a template given the templateName. TIP The sound will be automatically cleaned up after the sound is played.  ","version":null,"tagName":"h3"},{"title":"toRbxAssetId​","type":1,"pageTitle":"SoundUtils","url":"/NevermoreEngine/api/SoundUtils#toRbxAssetId","content":"&lt;/&gt; SoundUtils.toRbxAssetId(id: string? | number) → string? Converts a string or number to a string for playback.  ","version":null,"tagName":"h3"},{"title":"playTemplateInParent​","type":1,"pageTitle":"SoundUtils","url":"/NevermoreEngine/api/SoundUtils#playTemplateInParent","content":"&lt;/&gt; SoundUtils.playTemplateInParent( templates: TemplateProvider, templateName: string, parent: Instance ) → Sound  Plays back a sound template in a specific parent. TIP The sound will be automatically cleaned up after the sound is played. ","version":null,"tagName":"h3"},{"title":"SpawnCmdrService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SpawnCmdrService","content":"SpawnCmdrService","keywords":"","version":null},{"title":"SpawnBinderGroupsServer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SpawnBinderGroupsServer","content":"SpawnBinderGroupsServer","keywords":"","version":null},{"title":"SpawnerUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SpawnerUtils","content":"SpawnerUtils","keywords":"","version":null},{"title":"SpawnService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SpawnService","content":"SpawnService Handles spawning stuff in the game","keywords":"","version":null},{"title":"SpawnServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SpawnServiceClient","content":"SpawnServiceClient","keywords":"","version":null},{"title":"SphereUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SphereUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SphereUtils","url":"/NevermoreEngine/api/SphereUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"intersectsRay​","type":1,"pageTitle":"SphereUtils","url":"/NevermoreEngine/api/SphereUtils#intersectsRay","content":"&lt;/&gt; SphereUtils.intersectsRay( sphereCenter: Vector3 , sphereRadius: number, rayOrigin: Vector3 , rayDirection: Vector3 ) → boolean Determines whether the ray intersects with the sphere. ","version":null,"tagName":"h3"},{"title":"Spring","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Spring","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"Spring","url":"/NevermoreEngine/api/Spring#properties","content":" ","version":null,"tagName":"h2"},{"title":"Position​","type":1,"pageTitle":"Spring","url":"/NevermoreEngine/api/Spring#Position","content":"&lt;/&gt; Spring.Position: T The current position at the given clock time. Assigning the position will change the spring to have that position. local spring = Spring.new(0) print(spring.Position) --&gt; 0   ","version":null,"tagName":"h3"},{"title":"p​","type":1,"pageTitle":"Spring","url":"/NevermoreEngine/api/Spring#p","content":"&lt;/&gt; Spring.p: T Alias for Spring.Position  ","version":null,"tagName":"h3"},{"title":"Velocity​","type":1,"pageTitle":"Spring","url":"/NevermoreEngine/api/Spring#Velocity","content":"&lt;/&gt; Spring.Velocity: T The current velocity. Assigning the velocity will change the spring to have that velocity. local spring = Spring.new(0) print(spring.Velocity) --&gt; 0   ","version":null,"tagName":"h3"},{"title":"v​","type":1,"pageTitle":"Spring","url":"/NevermoreEngine/api/Spring#v","content":"&lt;/&gt; Spring.v: T Alias for Spring.Velocity  ","version":null,"tagName":"h3"},{"title":"Target​","type":1,"pageTitle":"Spring","url":"/NevermoreEngine/api/Spring#Target","content":"&lt;/&gt; Spring.Target: T The current target. Assigning the target will change the spring to have that target. local spring = Spring.new(0) print(spring.Target) --&gt; 0   ","version":null,"tagName":"h3"},{"title":"t​","type":1,"pageTitle":"Spring","url":"/NevermoreEngine/api/Spring#t","content":"&lt;/&gt; Spring.t: T Alias for Spring.Target  ","version":null,"tagName":"h3"},{"title":"Damper​","type":1,"pageTitle":"Spring","url":"/NevermoreEngine/api/Spring#Damper","content":"&lt;/&gt; Spring.Damper: number The current damper, defaults to 1. At 1 the spring is critically damped. At less than 1, it will be underdamped, and thus, bounce, and at over 1, it will be critically damped.  ","version":null,"tagName":"h3"},{"title":"d​","type":1,"pageTitle":"Spring","url":"/NevermoreEngine/api/Spring#d","content":"&lt;/&gt; Spring.d: number Alias for Spring.Damper  ","version":null,"tagName":"h3"},{"title":"Speed​","type":1,"pageTitle":"Spring","url":"/NevermoreEngine/api/Spring#Speed","content":"&lt;/&gt; Spring.Speed: number The speed, defaults to 1, but should be between [0, infinity)  ","version":null,"tagName":"h3"},{"title":"s​","type":1,"pageTitle":"Spring","url":"/NevermoreEngine/api/Spring#s","content":"&lt;/&gt; Spring.s: number Alias for Spring.Speed  ","version":null,"tagName":"h3"},{"title":"Clock​","type":1,"pageTitle":"Spring","url":"/NevermoreEngine/api/Spring#Clock","content":"&lt;/&gt; Spring.Clock: () → number The current clock object to syncronize the spring against. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Spring","url":"/NevermoreEngine/api/Spring#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Spring","url":"/NevermoreEngine/api/Spring#new","content":"&lt;/&gt; Spring.new( initial: T,-- The initial parameter is a number or Vector3 (anything with * number and addition/subtraction). clock?: () → number-- The clock function is optional, and is used to update the spring ) → Spring&lt;T&gt; Constructs a new Spring at the position and target specified, of type T. -- Linear spring local linearSpring = Spring.new(0) -- Vector2 spring local vector2Spring = Spring.new(Vector2.zero) -- Vector3 spring local vector3Spring = Spring.new(Vector3.zero)   ","version":null,"tagName":"h3"},{"title":"Impulse​","type":1,"pageTitle":"Spring","url":"/NevermoreEngine/api/Spring#Impulse","content":"&lt;/&gt; Spring.Impulse( self: Spring&lt;T&gt;, velocity: T-- The velocity to impulse with ) → () Impulses the spring, increasing velocity by the amount given. This is useful to make something shake, like a Mac password box failing.  ","version":null,"tagName":"h3"},{"title":"TimeSkip​","type":1,"pageTitle":"Spring","url":"/NevermoreEngine/api/Spring#TimeSkip","content":"&lt;/&gt; Spring.TimeSkip( self: Spring&lt;T&gt;, delta: number-- Time to skip forwards ) → () Instantly skips the spring forwards by that amount time  ","version":null,"tagName":"h3"},{"title":"SetTarget​","type":1,"pageTitle":"Spring","url":"/NevermoreEngine/api/Spring#SetTarget","content":"&lt;/&gt; Spring.SetTarget( self: Spring&lt;T&gt;, value: T,-- The target to set doNotAnimate: boolean?-- Whether or not to animate ) → () Sets the actual target. If doNotAnimate is set, then animation will be skipped. ","version":null,"tagName":"h3"},{"title":"SpringObject","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SpringObject","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#properties","content":" ","version":null,"tagName":"h2"},{"title":"Changed​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#Changed","content":"&lt;/&gt; SpringObject.Changed: Signal&lt;()&gt;--Fireswheneverthespringinitiallychangesstate Event fires when the spring value changes ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#new","content":"&lt;/&gt; SpringObject.new( target: T, speed: number | Observable&lt;number&gt; | ValueObject&lt;number&gt; | NumberValue | any, damper: number | Observable&lt;number&gt; | NumberValue | any ) → Spring&lt;T&gt; Constructs a new SpringObject. The spring object is initially initialized as a spring at 0, with a target of 0. Upon setting a target or position, it will be initialized and begin emitting events. If two observables emit different types the spring will retain the speed, damper, and switch to an initializes.  ","version":null,"tagName":"h3"},{"title":"isSpringObject​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#isSpringObject","content":"&lt;/&gt; SpringObject.isSpringObject(value: any) → boolean Returns whether an object is a SpringObject.  ","version":null,"tagName":"h3"},{"title":"ObserveRenderStepped​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#ObserveRenderStepped","content":"&lt;/&gt; SpringObject:ObserveRenderStepped() → Observable&lt;T&gt; Observes the spring animating  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#Observe","content":"&lt;/&gt; SpringObject:Observe() → Observable&lt;T&gt; Alias for [ObserveRenderStepped]  ","version":null,"tagName":"h3"},{"title":"ObserveTarget​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#ObserveTarget","content":"&lt;/&gt; SpringObject:ObserveTarget() → Observable&lt;T&gt; Observes the current target of the spring  ","version":null,"tagName":"h3"},{"title":"PromiseFinished​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#PromiseFinished","content":"&lt;/&gt; SpringObject:PromiseFinished(signal: RBXScriptSignal | nil) → Observable&lt;T&gt; Promises that the spring is done, based upon the animating property Relatively expensive.  ","version":null,"tagName":"h3"},{"title":"ObserveOnSignal​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#ObserveOnSignal","content":"&lt;/&gt; SpringObject:ObserveOnSignal(signal: RBXScriptSignal ) → Observable&lt;T&gt; Observes the spring animating  ","version":null,"tagName":"h3"},{"title":"IsAnimating​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#IsAnimating","content":"&lt;/&gt; SpringObject:IsAnimating() → boolean-- True if animating Returns true when we're animating  ","version":null,"tagName":"h3"},{"title":"Impulse​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#Impulse","content":"&lt;/&gt; SpringObject:Impulse( velocity: T-- The velocity to impulse with ) → () Impulses the spring, increasing velocity by the amount given. This is useful to make something shake, like a Mac password box failing.  ","version":null,"tagName":"h3"},{"title":"SetTarget​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#SetTarget","content":"&lt;/&gt; SpringObject:SetTarget( target: T,-- The target to set doNotAnimate: boolean?-- Whether or not to animate ) → () Sets the actual target. If doNotAnimate is set, then animation will be skipped.  ","version":null,"tagName":"h3"},{"title":"SetVelocity​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#SetVelocity","content":"&lt;/&gt; SpringObject:SetVelocity(velocity: T) → () Sets the velocity for the spring  ","version":null,"tagName":"h3"},{"title":"SetPosition​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#SetPosition","content":"&lt;/&gt; SpringObject:SetPosition(position: T) → () Sets the position for the spring  ","version":null,"tagName":"h3"},{"title":"SetDamper​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#SetDamper","content":"&lt;/&gt; SpringObject:SetDamper(damper: number | Observable&lt;number&gt;) → () Sets the damper for the spring  ","version":null,"tagName":"h3"},{"title":"SetSpeed​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#SetSpeed","content":"&lt;/&gt; SpringObject:SetSpeed(speed: number | Observable&lt;number&gt;) → () Sets the damper for the spring  ","version":null,"tagName":"h3"},{"title":"SetClock​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#SetClock","content":"&lt;/&gt; SpringObject:SetClock(clock: () → (number)) → () Sets the clock function for the spring  ","version":null,"tagName":"h3"},{"title":"SetEpsilon​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#SetEpsilon","content":"&lt;/&gt; SpringObject:SetEpsilon(epsilon: number) → () Sets the epsilon for the spring to stop animating  ","version":null,"tagName":"h3"},{"title":"TimeSkip​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#TimeSkip","content":"&lt;/&gt; SpringObject:TimeSkip( delta: number-- Time to skip forwards ) → () Instantly skips the spring forwards by that amount time  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"SpringObject","url":"/NevermoreEngine/api/SpringObject#Destroy","content":"&lt;/&gt; SpringObject:Destroy() → () Cleans up the BaseObject and sets the metatable to nil ","version":null,"tagName":"h3"},{"title":"SpringUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SpringUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SpringUtils","url":"/NevermoreEngine/api/SpringUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"animating​","type":1,"pageTitle":"SpringUtils","url":"/NevermoreEngine/api/SpringUtils#animating","content":"&lt;/&gt; SpringUtils.animating( spring: Spring&lt;T&gt;, epsilon: number?-- Optional epsilon ) → boolean,T Utility function that returns whether or not a spring is animating based upon velocity and closeness to target, and as the second value, the value that should be used.  ","version":null,"tagName":"h3"},{"title":"getVelocityAdjustment​","type":1,"pageTitle":"SpringUtils","url":"/NevermoreEngine/api/SpringUtils#getVelocityAdjustment","content":"&lt;/&gt; SpringUtils.getVelocityAdjustment( velocity: T, dampen: number, speed: number ) → T Add to spring position to adjust for velocity of target. May have to set clock to time().  ","version":null,"tagName":"h3"},{"title":"toLinearIfNeeded​","type":1,"pageTitle":"SpringUtils","url":"/NevermoreEngine/api/SpringUtils#toLinearIfNeeded","content":"&lt;/&gt; SpringUtils.toLinearIfNeeded(value: T) → LinearValue&lt;T&gt; | T Converts an arbitrary value to a LinearValue if Roblox has not defined this value for multiplication and addition.  ","version":null,"tagName":"h3"},{"title":"fromLinearIfNeeded​","type":1,"pageTitle":"SpringUtils","url":"/NevermoreEngine/api/SpringUtils#fromLinearIfNeeded","content":"&lt;/&gt; SpringUtils.fromLinearIfNeeded(value: LinearValue&lt;T&gt; | any) → T | any Extracts the base value out of a packed linear value if needed. ","version":null,"tagName":"h3"},{"title":"SpringTransitionModel","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SpringTransitionModel","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SpringTransitionModel","url":"/NevermoreEngine/api/SpringTransitionModel#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"SpringTransitionModel","url":"/NevermoreEngine/api/SpringTransitionModel#new","content":"&lt;/&gt; SpringTransitionModel.new( showTarget: T?,-- Defaults to 1 hideTarget: T?-- Defaults to 0*showTarget ) → SpringTransitionModel&lt;T&gt; A transition model that has a spring underlying it. Very useful for animations on tracks that need to be on a spring.  ","version":null,"tagName":"h3"},{"title":"SetShowTarget​","type":1,"pageTitle":"SpringTransitionModel","url":"/NevermoreEngine/api/SpringTransitionModel#SetShowTarget","content":"&lt;/&gt; SpringTransitionModel.SetShowTarget( self: SpringTransitionModel&lt;T&gt;, showTarget: T?, doNotAnimate: boolean? ) → () Sets the show target for the transition model  ","version":null,"tagName":"h3"},{"title":"SetHideTarget​","type":1,"pageTitle":"SpringTransitionModel","url":"/NevermoreEngine/api/SpringTransitionModel#SetHideTarget","content":"&lt;/&gt; SpringTransitionModel.SetHideTarget( self: SpringTransitionModel&lt;T&gt;, hideTarget: T?, doNotAnimate: boolean? ) → () Sets the hide target for the transition model  ","version":null,"tagName":"h3"},{"title":"IsShowingComplete​","type":1,"pageTitle":"SpringTransitionModel","url":"/NevermoreEngine/api/SpringTransitionModel#IsShowingComplete","content":"&lt;/&gt; SpringTransitionModel.IsShowingComplete(self: SpringTransitionModel&lt;T&gt;) → boolean Returns true if showing is complete  ","version":null,"tagName":"h3"},{"title":"IsHidingComplete​","type":1,"pageTitle":"SpringTransitionModel","url":"/NevermoreEngine/api/SpringTransitionModel#IsHidingComplete","content":"&lt;/&gt; SpringTransitionModel.IsHidingComplete(self: SpringTransitionModel&lt;T&gt;) → boolean Returns true if hiding is complete  ","version":null,"tagName":"h3"},{"title":"ObserveIsShowingComplete​","type":1,"pageTitle":"SpringTransitionModel","url":"/NevermoreEngine/api/SpringTransitionModel#ObserveIsShowingComplete","content":"&lt;/&gt; SpringTransitionModel.ObserveIsShowingComplete(self: SpringTransitionModel&lt;T&gt;) → Observable&lt;boolean&gt; Observe is showing is complete  ","version":null,"tagName":"h3"},{"title":"ObserveIsHidingComplete​","type":1,"pageTitle":"SpringTransitionModel","url":"/NevermoreEngine/api/SpringTransitionModel#ObserveIsHidingComplete","content":"&lt;/&gt; SpringTransitionModel.ObserveIsHidingComplete(self: SpringTransitionModel&lt;T&gt;) → Observable&lt;boolean&gt; Observe is hiding is complete  ","version":null,"tagName":"h3"},{"title":"BindToPaneVisbility​","type":1,"pageTitle":"SpringTransitionModel","url":"/NevermoreEngine/api/SpringTransitionModel#BindToPaneVisbility","content":"&lt;/&gt; SpringTransitionModel.BindToPaneVisbility( self: SpringTransitionModel&lt;T&gt;, pane: BasicPane ) → function-- Cleanup function Binds the transition model to the actual visiblity of the pane  ","version":null,"tagName":"h3"},{"title":"GetVelocity​","type":1,"pageTitle":"SpringTransitionModel","url":"/NevermoreEngine/api/SpringTransitionModel#GetVelocity","content":"&lt;/&gt; SpringTransitionModel.GetVelocity(self: SpringTransitionModel&lt;T&gt;) → T Returns the spring's velocity  ","version":null,"tagName":"h3"},{"title":"SetEpsilon​","type":1,"pageTitle":"SpringTransitionModel","url":"/NevermoreEngine/api/SpringTransitionModel#SetEpsilon","content":"&lt;/&gt; SpringTransitionModel.SetEpsilon( self: SpringTransitionModel&lt;T&gt;, epsilon: number ) → () Sets the springs epsilon. This can affect how long the spring takes to finish.  ","version":null,"tagName":"h3"},{"title":"SetSpeed​","type":1,"pageTitle":"SpringTransitionModel","url":"/NevermoreEngine/api/SpringTransitionModel#SetSpeed","content":"&lt;/&gt; SpringTransitionModel.SetSpeed( self: SpringTransitionModel&lt;T&gt;, speed: number ) → () Sets the springs speed  ","version":null,"tagName":"h3"},{"title":"SetDamper​","type":1,"pageTitle":"SpringTransitionModel","url":"/NevermoreEngine/api/SpringTransitionModel#SetDamper","content":"&lt;/&gt; SpringTransitionModel.SetDamper( self: SpringTransitionModel&lt;T&gt;, damper: number ) → () Sets the springs damper  ","version":null,"tagName":"h3"},{"title":"ObserveRenderStepped​","type":1,"pageTitle":"SpringTransitionModel","url":"/NevermoreEngine/api/SpringTransitionModel#ObserveRenderStepped","content":"&lt;/&gt; SpringTransitionModel.ObserveRenderStepped(self: SpringTransitionModel&lt;T&gt;) → Observable&lt;T&gt; Observes the spring animating  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"SpringTransitionModel","url":"/NevermoreEngine/api/SpringTransitionModel#Observe","content":"&lt;/&gt; SpringTransitionModel.Observe(self: SpringTransitionModel&lt;T&gt;) → Observable&lt;T&gt; Alias to spring transition model observation!  ","version":null,"tagName":"h3"},{"title":"PromiseShow​","type":1,"pageTitle":"SpringTransitionModel","url":"/NevermoreEngine/api/SpringTransitionModel#PromiseShow","content":"&lt;/&gt; SpringTransitionModel.PromiseShow( self: SpringTransitionModel&lt;T&gt;, doNotAnimate: boolean ) → Promise Shows the model and promises when the showing is complete.  ","version":null,"tagName":"h3"},{"title":"PromiseHide​","type":1,"pageTitle":"SpringTransitionModel","url":"/NevermoreEngine/api/SpringTransitionModel#PromiseHide","content":"&lt;/&gt; SpringTransitionModel.PromiseHide( self: SpringTransitionModel&lt;T&gt;, doNotAnimate: boolean ) → Promise Hides the model and promises when the showing is complete.  ","version":null,"tagName":"h3"},{"title":"PromiseToggle​","type":1,"pageTitle":"SpringTransitionModel","url":"/NevermoreEngine/api/SpringTransitionModel#PromiseToggle","content":"&lt;/&gt; SpringTransitionModel.PromiseToggle( self: SpringTransitionModel&lt;T&gt;, doNotAnimate: boolean ) → Promise Toggles the model and promises when the transition is complete. ","version":null,"tagName":"h3"},{"title":"Sprite","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Sprite","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"Sprite","url":"/NevermoreEngine/api/Sprite#types","content":" ","version":null,"tagName":"h2"},{"title":"SpriteData​","type":1,"pageTitle":"Sprite","url":"/NevermoreEngine/api/Sprite#SpriteData","content":"&lt;/&gt; interface SpriteData { Texture: string Size: Vector2 Position: Vector2 Name: string } Data used to construct a sprite. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Sprite","url":"/NevermoreEngine/api/Sprite#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Sprite","url":"/NevermoreEngine/api/Sprite#new","content":"&lt;/&gt; Sprite.new(data: SpriteData) → Sprite Constructs a new sprite  ","version":null,"tagName":"h3"},{"title":"Style​","type":1,"pageTitle":"Sprite","url":"/NevermoreEngine/api/Sprite#Style","content":"&lt;/&gt; Sprite:Style(gui: ImageLabel | ImageButton ) → Instance  Applies the styling to the gui  ","version":null,"tagName":"h3"},{"title":"Get​","type":1,"pageTitle":"Sprite","url":"/NevermoreEngine/api/Sprite#Get","content":"&lt;/&gt; Sprite:Get(instanceType: &quot;ImageLabel&quot; | &quot;ImageButton&quot;) → ImageLabel | ImageButton  Returns a new sprite with the specified instanceType ","version":null,"tagName":"h3"},{"title":"Spritesheet","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Spritesheet","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Spritesheet","url":"/NevermoreEngine/api/Spritesheet#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Spritesheet","url":"/NevermoreEngine/api/Spritesheet#new","content":"&lt;/&gt; Spritesheet.new(texture: string) → Spritesheet Constructs a new Spritesheet  ","version":null,"tagName":"h3"},{"title":"GetPreloadAssetId​","type":1,"pageTitle":"Spritesheet","url":"/NevermoreEngine/api/Spritesheet#GetPreloadAssetId","content":"&lt;/&gt; Spritesheet:GetPreloadAssetId() → string Retrieves the preload asset ids to use  ","version":null,"tagName":"h3"},{"title":"AddSprite​","type":1,"pageTitle":"Spritesheet","url":"/NevermoreEngine/api/Spritesheet#AddSprite","content":"&lt;/&gt; Spritesheet:AddSprite( keyCode: any, position: Vector2 , size: Vector2 ) → Sprite.Sprite Adds a named sprite at the given keyCode  ","version":null,"tagName":"h3"},{"title":"GetSprite​","type":1,"pageTitle":"Spritesheet","url":"/NevermoreEngine/api/Spritesheet#GetSprite","content":"&lt;/&gt; Spritesheet:GetSprite(keyCode: any | EnumItem ) → Sprite? Retrieves the sprite for the given keyCode  ","version":null,"tagName":"h3"},{"title":"HasSprite​","type":1,"pageTitle":"Spritesheet","url":"/NevermoreEngine/api/Spritesheet#HasSprite","content":"&lt;/&gt; Spritesheet:HasSprite(keyCode: any | EnumItem ) → boolean Returns true if the sprite exists ","version":null,"tagName":"h3"},{"title":"StepUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/StepUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"StepUtils","url":"/NevermoreEngine/api/StepUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"bindToRenderStep​","type":1,"pageTitle":"StepUtils","url":"/NevermoreEngine/api/StepUtils#bindToRenderStep","content":"&lt;/&gt; StepUtils.bindToRenderStep( update: () → boolean-- should return true while it needs to update ) → ( (...) → (),-- Connect function () → ()-- Disconnect function ) Binds the given update function to RunService.RenderStepped. local spring = Spring.new(0) local maid = Maid.new() local startAnimation, maid._stopAnimation = StepUtils.bindToRenderStep(function() local animating, position = SpringUtils.animating(spring) print(position) return animating end) spring.t = 1 startAnimation() TIP Be sure to call the disconnect function when cleaning up, otherwise you may memory leak.  ","version":null,"tagName":"h3"},{"title":"deferWait​","type":1,"pageTitle":"StepUtils","url":"/NevermoreEngine/api/StepUtils#deferWait","content":"&lt;/&gt; StepUtils.deferWait() → () Yields until the frame deferral is done  ","version":null,"tagName":"h3"},{"title":"bindToStepped​","type":1,"pageTitle":"StepUtils","url":"/NevermoreEngine/api/StepUtils#bindToStepped","content":"&lt;/&gt; StepUtils.bindToStepped( update: () → boolean-- should return true while it needs to update ) → ( (...) → (),-- Connect function () → ()-- Disconnect function ) Binds the given update function to RunService.Stepped. See StepUtils.bindToRenderStep for details. TIP Be sure to call the disconnect function when cleaning up, otherwise you may memory leak.  ","version":null,"tagName":"h3"},{"title":"bindToSignal​","type":1,"pageTitle":"StepUtils","url":"/NevermoreEngine/api/StepUtils#bindToSignal","content":"&lt;/&gt; StepUtils.bindToSignal( signal: Signal | RBXScriptSignal , update: () → boolean-- should return true while it needs to update ) → ( (...) → (),-- Connect function () → ()-- Disconnect function ) Binds an update event to a signal until the update function stops returning a truthy value.  ","version":null,"tagName":"h3"},{"title":"onceAtRenderPriority​","type":1,"pageTitle":"StepUtils","url":"/NevermoreEngine/api/StepUtils#onceAtRenderPriority","content":"&lt;/&gt; StepUtils.onceAtRenderPriority( priority: number, func: function-- Function to call ) → function-- Call this function to cancel call Calls the function once at the given priority level, unless the cancel callback is invoked.  ","version":null,"tagName":"h3"},{"title":"onceAtStepped​","type":1,"pageTitle":"StepUtils","url":"/NevermoreEngine/api/StepUtils#onceAtStepped","content":"deprecated in 3.5.2 &lt;/&gt; This was deprecated in 3.5.2 This item is deprecated. Do not use it for new work. StepUtils.onceAtStepped( func: function-- Function to call ) → function-- Call this function to cancel call Invokes the function once at stepped, unless the cancel callback is called. -- Sometimes you need to defer the execution of code to make physics happy maid:GiveTask(StepUtils.onceAtStepped(function() part.CFrame = CFrame.new(0, 0, ) end)) TIP use RunService.Stepped:Once() instead  ","version":null,"tagName":"h3"},{"title":"onceAtRenderStepped​","type":1,"pageTitle":"StepUtils","url":"/NevermoreEngine/api/StepUtils#onceAtRenderStepped","content":"deprecated in 3.5.2 &lt;/&gt; This was deprecated in 3.5.2 This item is deprecated. Do not use it for new work. StepUtils.onceAtRenderStepped( func: function-- Function to call ) → function-- Call this function to cancel call Invokes the function once at renderstepped, unless the cancel callback is called. TIP use RunService.RenderStepped:Once() instead  ","version":null,"tagName":"h3"},{"title":"onceAtEvent​","type":1,"pageTitle":"StepUtils","url":"/NevermoreEngine/api/StepUtils#onceAtEvent","content":"deprecated in 3.5.2 &lt;/&gt; This was deprecated in 3.5.2 This item is deprecated. Do not use it for new work. StepUtils.onceAtEvent( event: Signal | RBXScriptSignal , func: function-- Function to call ) → function-- Call this function to cancel call Invokes the function once at the given event, unless the cancel callback is called. ","version":null,"tagName":"h3"},{"title":"StreamingUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/StreamingUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"StreamingUtils","url":"/NevermoreEngine/api/StreamingUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseStreamAround​","type":1,"pageTitle":"StreamingUtils","url":"/NevermoreEngine/api/StreamingUtils#promiseStreamAround","content":"&lt;/&gt; StreamingUtils.promiseStreamAround( player: Player , position: Vector3 , timeOut: number?-- Optional ) → Promise Promises to stream the area around the player at the given position. See Player.RequestStreamAroundAsync. Can be called on both the client and the server. StreamingUtils.promiseStreamAround(Players.LocalPlayer, Vector3.new(0, 10, 0), 30) :Then(function() print(&quot;Done streaming&quot;) end) Returns a resolved promise if streaming is not enabled as the area is guaranteed to be streamed in already. WARNING Requesting streaming around an area is not a guarantee that the content will be present when the request completes, as streaming is affected by the client's network bandwidth, memory limitations, and other factors. ","version":null,"tagName":"h3"},{"title":"String","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/String","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"String","url":"/NevermoreEngine/api/String#functions","content":" ","version":null,"tagName":"h2"},{"title":"trim​","type":1,"pageTitle":"String","url":"/NevermoreEngine/api/String#trim","content":"&lt;/&gt; String.trim( str: string, pattern: string?-- Defaults to whitespace ) → string Trims the string of the given pattern  ","version":null,"tagName":"h3"},{"title":"toCamelCase​","type":1,"pageTitle":"String","url":"/NevermoreEngine/api/String#toCamelCase","content":"&lt;/&gt; String.toCamelCase(str: string) → string Converts the string to UpperCamelCase from camelCase or snakeCase or YELL_CASE  ","version":null,"tagName":"h3"},{"title":"uppercaseFirstLetter​","type":1,"pageTitle":"String","url":"/NevermoreEngine/api/String#uppercaseFirstLetter","content":"&lt;/&gt; String.uppercaseFirstLetter(str: string) → string Uppercases the first letter of the string  ","version":null,"tagName":"h3"},{"title":"toLowerCamelCase​","type":1,"pageTitle":"String","url":"/NevermoreEngine/api/String#toLowerCamelCase","content":"&lt;/&gt; String.toLowerCamelCase(str: string) → string Converts to the string to lowerCamelCase from camelCase or snakeCase or YELL_CASE  ","version":null,"tagName":"h3"},{"title":"toPrivateCase​","type":1,"pageTitle":"String","url":"/NevermoreEngine/api/String#toPrivateCase","content":"&lt;/&gt; String.toPrivateCase(str: string) → string Converts the string to _privateCamelCase  ","version":null,"tagName":"h3"},{"title":"trimFront​","type":1,"pageTitle":"String","url":"/NevermoreEngine/api/String#trimFront","content":"&lt;/&gt; String.trimFront( str: string, pattern: string?-- Defaults to whitespace ) → string Like trim, but only applied to the beginning of the setring  ","version":null,"tagName":"h3"},{"title":"checkNumOfCharacterInString​","type":1,"pageTitle":"String","url":"/NevermoreEngine/api/String#checkNumOfCharacterInString","content":"&lt;/&gt; String.checkNumOfCharacterInString( str: string, char: string ) → number Counts the number of times a char appears in a string. NOTE Note that this is not UTF8 safe  ","version":null,"tagName":"h3"},{"title":"isEmptyOrWhitespaceOrNil​","type":1,"pageTitle":"String","url":"/NevermoreEngine/api/String#isEmptyOrWhitespaceOrNil","content":"&lt;/&gt; String.isEmptyOrWhitespaceOrNil(str: string) → boolean Checks if a string is empty or nil  ","version":null,"tagName":"h3"},{"title":"isWhitespace​","type":1,"pageTitle":"String","url":"/NevermoreEngine/api/String#isWhitespace","content":"&lt;/&gt; String.isWhitespace(str: string) → boolean Returns whether or not text is only whitespace  ","version":null,"tagName":"h3"},{"title":"elipseLimit​","type":1,"pageTitle":"String","url":"/NevermoreEngine/api/String#elipseLimit","content":"&lt;/&gt; String.elipseLimit( str: string, characterLimit: number ) → string Converts text to have a ... after it if it's too long.  ","version":null,"tagName":"h3"},{"title":"removePrefix​","type":1,"pageTitle":"String","url":"/NevermoreEngine/api/String#removePrefix","content":"&lt;/&gt; String.removePrefix( str: string, prefix: string ) → string Removes a prefix from a string if it exists  ","version":null,"tagName":"h3"},{"title":"removePostfix​","type":1,"pageTitle":"String","url":"/NevermoreEngine/api/String#removePostfix","content":"&lt;/&gt; String.removePostfix( str: string, postfix: string ) → string Removes a postfix from a string if it exists  ","version":null,"tagName":"h3"},{"title":"endsWith​","type":1,"pageTitle":"String","url":"/NevermoreEngine/api/String#endsWith","content":"&lt;/&gt; String.endsWith( str: string, postfix: string ) → boolean Returns if a string ends with a postfix  ","version":null,"tagName":"h3"},{"title":"startsWith​","type":1,"pageTitle":"String","url":"/NevermoreEngine/api/String#startsWith","content":"&lt;/&gt; String.startsWith( str: string, prefix: string ) → boolean Returns if a string starts with a postfix  ","version":null,"tagName":"h3"},{"title":"addCommas​","type":1,"pageTitle":"String","url":"/NevermoreEngine/api/String#addCommas","content":"&lt;/&gt; String.addCommas( number: string | number, seperator: string? ) → string Adds commas to a number. Not culture aware. See NumberLocalizationUtils.abbreviate for a culture aware version. ","version":null,"tagName":"h3"},{"title":"StateStack","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/StateStack","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"StateStack","url":"/NevermoreEngine/api/StateStack#properties","content":" ","version":null,"tagName":"h2"},{"title":"Changed​","type":1,"pageTitle":"StateStack","url":"/NevermoreEngine/api/StateStack#Changed","content":"&lt;/&gt; StateStack.Changed: Signal&lt;T&gt; Fires with the new state ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"StateStack","url":"/NevermoreEngine/api/StateStack#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"StateStack","url":"/NevermoreEngine/api/StateStack#new","content":"&lt;/&gt; StateStack.new( defaultValue: any,-- The default value to use for the statestack. checkType: string? ) → StateStack Constructs a new StateStack.  ","version":null,"tagName":"h3"},{"title":"GetCount​","type":1,"pageTitle":"StateStack","url":"/NevermoreEngine/api/StateStack#GetCount","content":"&lt;/&gt; StateStack.GetCount(self: StateStack&lt;T&gt;) → number Gets the count of the stack  ","version":null,"tagName":"h3"},{"title":"GetState​","type":1,"pageTitle":"StateStack","url":"/NevermoreEngine/api/StateStack#GetState","content":"&lt;/&gt; StateStack.GetState(self: StateStack&lt;T&gt;) → T Gets the current state  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"StateStack","url":"/NevermoreEngine/api/StateStack#Observe","content":"&lt;/&gt; StateStack.Observe(self: StateStack&lt;T&gt;) → Observable&lt;T&gt; Observes the current value of stack  ","version":null,"tagName":"h3"},{"title":"ObserveBrio​","type":1,"pageTitle":"StateStack","url":"/NevermoreEngine/api/StateStack#ObserveBrio","content":"&lt;/&gt; StateStack.ObserveBrio( self: StateStack&lt;T&gt;, predicate: function ) → Observable&lt;T&gt; Observes the current value of stack  ","version":null,"tagName":"h3"},{"title":"PushState​","type":1,"pageTitle":"StateStack","url":"/NevermoreEngine/api/StateStack#PushState","content":"&lt;/&gt; StateStack.PushState( self: StateStack&lt;T&gt;, state: T ) → function-- Cleanup function to invoke Pushes the current state onto the stack  ","version":null,"tagName":"h3"},{"title":"PushBrio​","type":1,"pageTitle":"StateStack","url":"/NevermoreEngine/api/StateStack#PushBrio","content":"&lt;/&gt; StateStack.PushBrio( self: StateStack&lt;T&gt;, brio: Brio ) → function-- Cleanup function Pushes the brio's content onto the stack for the lifetime of the brio  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"StateStack","url":"/NevermoreEngine/api/StateStack#Destroy","content":"&lt;/&gt; StateStack:Destroy() → () Cleans up the StateStack and sets the metatable to nil. TIP Be sure to call this to clean up the state stack! ","version":null,"tagName":"h3"},{"title":"StudioRigAnimator","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/StudioRigAnimator","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"StudioRigAnimator","url":"/NevermoreEngine/api/StudioRigAnimator#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"StudioRigAnimator","url":"/NevermoreEngine/api/StudioRigAnimator#new","content":"&lt;/&gt; StudioRigAnimator.new(animatorOrHumanoid: Animator | Humanoid ) → StudioRigAnimator Constructs a new rig animator which will play the animations for the lifetime of the object. ","version":null,"tagName":"h3"},{"title":"Subscription","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Subscription","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Subscription","url":"/NevermoreEngine/api/Subscription#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Subscription","url":"/NevermoreEngine/api/Subscription#new","content":"&lt;/&gt; Subscription.new( fireCallback: function?, failCallback: function?, completeCallback: function?, observableSource: string? ) → Subscription Constructs a new Subscription  ","version":null,"tagName":"h3"},{"title":"Fire​","type":1,"pageTitle":"Subscription","url":"/NevermoreEngine/api/Subscription#Fire","content":"&lt;/&gt; Subscription.Fire( self: Subscription&lt;T...&gt;, ...: any ) → () Fires the subscription  ","version":null,"tagName":"h3"},{"title":"Fail​","type":1,"pageTitle":"Subscription","url":"/NevermoreEngine/api/Subscription#Fail","content":"&lt;/&gt; Subscription.Fail( self: Subscription&lt;T...&gt;, ...: any ) → () Fails the subscription, preventing anything else from emitting.  ","version":null,"tagName":"h3"},{"title":"GetFireFailComplete​","type":1,"pageTitle":"Subscription","url":"/NevermoreEngine/api/Subscription#GetFireFailComplete","content":"&lt;/&gt; Subscription.GetFireFailComplete(self: Subscription&lt;T...&gt;) → ( function, function, function ) Returns a tuple of fire, fail and complete functions which can be chained into the the next subscription. return function(source) return Observable.new(function(sub) sub:Fire(&quot;hi&quot;) return source:Subscribe(sub:GetFireFailComplete()) end) end   ","version":null,"tagName":"h3"},{"title":"GetFailComplete​","type":1,"pageTitle":"Subscription","url":"/NevermoreEngine/api/Subscription#GetFailComplete","content":"&lt;/&gt; Subscription.GetFailComplete(self: Subscription&lt;T...&gt;) → ( function, function ) Returns a tuple of fail and complete functions which can be chained into the the next subscription. return function(source) return Observable.new(function(sub) return source:Subscribe(function(result) sub:Fire(tostring(result)) end, sub:GetFailComplete()) -- Reuse is easy here! end) end   ","version":null,"tagName":"h3"},{"title":"Complete​","type":1,"pageTitle":"Subscription","url":"/NevermoreEngine/api/Subscription#Complete","content":"&lt;/&gt; Subscription.Complete( self: Subscription&lt;T...&gt;, ...: any ) → () Completes the subscription, preventing anything else from being emitted.  ","version":null,"tagName":"h3"},{"title":"IsPending​","type":1,"pageTitle":"Subscription","url":"/NevermoreEngine/api/Subscription#IsPending","content":"&lt;/&gt; Subscription.IsPending(self: Subscription&lt;T...&gt;) → boolean Returns whether the subscription is pending.  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"Subscription","url":"/NevermoreEngine/api/Subscription#Destroy","content":"&lt;/&gt; Subscription.Destroy(self: Subscription&lt;T...&gt;) → () Cleans up the subscription TIP This will be invoked by the Observable automatically, and should not be called within the usage of a subscription.  ","version":null,"tagName":"h3"},{"title":"Disconnect​","type":1,"pageTitle":"Subscription","url":"/NevermoreEngine/api/Subscription#Disconnect","content":"&lt;/&gt; Subscription:Disconnect() → () Alias for Subscription.Destroy. ","version":null,"tagName":"h3"},{"title":"SummedCamera","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SummedCamera","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SummedCamera","url":"/NevermoreEngine/api/SummedCamera#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"SummedCamera","url":"/NevermoreEngine/api/SummedCamera#new","content":"&lt;/&gt; SummedCamera.new( cameraA: CameraEffect,-- A CameraState or another CameraEffect to be used cameraB: CameraEffect-- A CameraState or another CameraEffect to be used ) → SummedCamera Construct a new summed camera  ","version":null,"tagName":"h3"},{"title":"SetMode​","type":1,"pageTitle":"SummedCamera","url":"/NevermoreEngine/api/SummedCamera#SetMode","content":"&lt;/&gt; SummedCamera.SetMode( self: SummedCamera, mode: &quot;World&quot; | &quot;Relative&quot;-- Mode to set ) → SummedCamera Sets the summation mode. If &quot;World&quot;, then it just adds positions. If &quot;Relative&quot;, then it moves position relative to cameraA's CFrame. ","version":null,"tagName":"h3"},{"title":"SurfaceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SurfaceUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SurfaceUtils","url":"/NevermoreEngine/api/SurfaceUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getSurfaceCFrame​","type":1,"pageTitle":"SurfaceUtils","url":"/NevermoreEngine/api/SurfaceUtils#getSurfaceCFrame","content":"&lt;/&gt; SurfaceUtils.getSurfaceCFrame( part: Part , lnormal: Vector3 ) → CFrame  Finds a CFrame on the surface. WARNING This only works with Part objects that are rectangles. ","version":null,"tagName":"h3"},{"title":"SunPositionUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SunPositionUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SunPositionUtils","url":"/NevermoreEngine/api/SunPositionUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getGeographicalLatitudeFromDirection​","type":1,"pageTitle":"SunPositionUtils","url":"/NevermoreEngine/api/SunPositionUtils#getGeographicalLatitudeFromDirection","content":"&lt;/&gt; SunPositionUtils.getGeographicalLatitudeFromDirection(direction: Vector3 ) → number Gets the geographical latitude from a vector pointing at the sun.  ","version":null,"tagName":"h3"},{"title":"getClockTimeFromDirection​","type":1,"pageTitle":"SunPositionUtils","url":"/NevermoreEngine/api/SunPositionUtils#getClockTimeFromDirection","content":"&lt;/&gt; SunPositionUtils.getClockTimeFromDirection(direction: Vector3 ) → number Gets the clock time for the given direction.  ","version":null,"tagName":"h3"},{"title":"getClockTimeFromMoonDirection​","type":1,"pageTitle":"SunPositionUtils","url":"/NevermoreEngine/api/SunPositionUtils#getClockTimeFromMoonDirection","content":"&lt;/&gt; SunPositionUtils.getClockTimeFromMoonDirection(direction: Vector3 ) → number Gets the clock time from the given moon direction.  ","version":null,"tagName":"h3"},{"title":"getDirection​","type":1,"pageTitle":"SunPositionUtils","url":"/NevermoreEngine/api/SunPositionUtils#getDirection","content":"&lt;/&gt; SunPositionUtils.getDirection( azimuthRad: number, altitudeRad: number, north: Vector3? ) → number Gets the direction the sun should be facing given the azimuth and altitude  ","version":null,"tagName":"h3"},{"title":"getSunPosition​","type":1,"pageTitle":"SunPositionUtils","url":"/NevermoreEngine/api/SunPositionUtils#getSunPosition","content":"&lt;/&gt; SunPositionUtils.getSunPosition( clockTime: number, geoLatitude: number ) → ( Vector3 ,-- Sun position Vector3 -- Moon position ) Estimates the sun position given the clockTime and geographical latitude. ","version":null,"tagName":"h3"},{"title":"SwingTwistUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SwingTwistUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SwingTwistUtils","url":"/NevermoreEngine/api/SwingTwistUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"swingTwist​","type":1,"pageTitle":"SwingTwistUtils","url":"/NevermoreEngine/api/SwingTwistUtils#swingTwist","content":"&lt;/&gt; SwingTwistUtils.swingTwist( cf: CFrame , direction: Vector3 ) → ( CFrame ,-- swing CFrame -- twist ) Decomposes a CFrame into a swing and a twist.  ","version":null,"tagName":"h3"},{"title":"twistAngle​","type":1,"pageTitle":"SwingTwistUtils","url":"/NevermoreEngine/api/SwingTwistUtils#twistAngle","content":"&lt;/&gt; SwingTwistUtils.twistAngle( cf: CFrame , direction: Vector3 ) → number  ","version":null,"tagName":"h3"},{"title":"Symbol","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Symbol","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Symbol","url":"/NevermoreEngine/api/Symbol#functions","content":" ","version":null,"tagName":"h2"},{"title":"named​","type":1,"pageTitle":"Symbol","url":"/NevermoreEngine/api/Symbol#named","content":"&lt;/&gt; Symbol.named(name: string) → Symbol Creates a Symbol with the given name. When printed or coerced to a string, the symbol will turn into the string given as its name.  ","version":null,"tagName":"h3"},{"title":"isSymbol​","type":1,"pageTitle":"Symbol","url":"/NevermoreEngine/api/Symbol#isSymbol","content":"&lt;/&gt; Symbol.isSymbol(value: boolean) → boolean Returns true if a symbol ","version":null,"tagName":"h3"},{"title":"SustainModel","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/SustainModel","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"SustainModel","url":"/NevermoreEngine/api/SustainModel#functions","content":" ","version":null,"tagName":"h2"},{"title":"SetPromiseSustain​","type":1,"pageTitle":"SustainModel","url":"/NevermoreEngine/api/SustainModel#SetPromiseSustain","content":"&lt;/&gt; SustainModel.SetPromiseSustain( self: SustainModel, sustainCallback: function?-- Callback which should return a promise ) → () Sets the callback which will handle sustaining the animation.  ","version":null,"tagName":"h3"},{"title":"SetIsSustained​","type":1,"pageTitle":"SustainModel","url":"/NevermoreEngine/api/SustainModel#SetIsSustained","content":"&lt;/&gt; SustainModel.SetIsSustained( self: SustainModel, isSustained: boolean, doNotAnimate: boolean?-- True if animation should be skipped ) → () Sets whether we should be sustaining or not  ","version":null,"tagName":"h3"},{"title":"Sustain​","type":1,"pageTitle":"SustainModel","url":"/NevermoreEngine/api/SustainModel#Sustain","content":"&lt;/&gt; SustainModel.Sustain( self: SustainModel, doNotAnimate: boolean?-- True if animation should be skipped ) → () Starts sustaining  ","version":null,"tagName":"h3"},{"title":"Stop​","type":1,"pageTitle":"SustainModel","url":"/NevermoreEngine/api/SustainModel#Stop","content":"&lt;/&gt; SustainModel.Stop( self: SustainModel, doNotAnimate: boolean?-- True if animation should be skipped ) → () Stops sustaining  ","version":null,"tagName":"h3"},{"title":"PromiseSustain​","type":1,"pageTitle":"SustainModel","url":"/NevermoreEngine/api/SustainModel#PromiseSustain","content":"&lt;/&gt; SustainModel.PromiseSustain( self: SustainModel, doNotAnimate: boolean?-- True if animation should be skipped ) → Promise Starts sustaining. The promise will resolve when sustaining is done. If sustaining is already happening, it will not start, but will continue to sustain until the promise is done. ","version":null,"tagName":"h3"},{"title":"TaggedTemplateProvider","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TaggedTemplateProvider","content":"TaggedTemplateProvider Like a template provider, but it also reparents and retrieves tagged objects","keywords":"","version":null},{"title":"TeamKillTracker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TeamKillTracker","content":"TeamKillTracker","keywords":"","version":null},{"title":"Table","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Table","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#functions","content":" ","version":null,"tagName":"h2"},{"title":"append​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#append","content":"&lt;/&gt; Table.append( target: table,-- Table to append to source: table-- Table read from ) → table-- parameter table Concats target with source in-place, modifying the target  ","version":null,"tagName":"h3"},{"title":"merge​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#merge","content":"&lt;/&gt; Table.merge( orig: table,-- Original table new: table-- Result ) → table Shallow merges two tables without modifying either.  ","version":null,"tagName":"h3"},{"title":"reverse​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#reverse","content":"&lt;/&gt; Table.reverse( orig: table-- Original table ) → table Reverses the list and returns the reversed copy  ","version":null,"tagName":"h3"},{"title":"values​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#values","content":"&lt;/&gt; Table.values( source: table-- Table source to extract values from ) → table-- A list with all the values the table has Returns a list of all of the values that a table has.  ","version":null,"tagName":"h3"},{"title":"keys​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#keys","content":"&lt;/&gt; Table.keys( source: table-- Table source to extract keys from ) → table-- A list with all the keys the table has Returns a list of all of the keys that a table has. (In order of pairs)  ","version":null,"tagName":"h3"},{"title":"mergeLists​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#mergeLists","content":"&lt;/&gt; Table.mergeLists( orig: table,-- Original table new: table-- Result ) → table Shallow merges two lists without modifying either.  ","version":null,"tagName":"h3"},{"title":"swapKeyValue​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#swapKeyValue","content":"&lt;/&gt; Table.swapKeyValue( orig: table-- Original table ) → table Swaps keys with values, overwriting additional values if duplicated.  ","version":null,"tagName":"h3"},{"title":"toList​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#toList","content":"&lt;/&gt; Table.toList( _table: table-- Table to convert to a list ) → table Converts a table to a list.  ","version":null,"tagName":"h3"},{"title":"count​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#count","content":"&lt;/&gt; Table.count( _table: table-- Table to count ) → number-- count Counts the number of items in _table. Useful since __len on table in Lua 5.2 returns just the array length.  ","version":null,"tagName":"h3"},{"title":"Table.copy​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#Table.copy","content":"&lt;/&gt; Table.Table.copy( target: table-- Table to copy ) → table-- Result Shallow copies a table from target into a new table  ","version":null,"tagName":"h3"},{"title":"deepCopy​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#deepCopy","content":"&lt;/&gt; Table.deepCopy( target: table,-- Table to deep copy _deepCopyContext: table?-- Context to deepCopy the value in ) → table-- Result Deep copies a table including metatables  ","version":null,"tagName":"h3"},{"title":"deepOverwrite​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#deepOverwrite","content":"&lt;/&gt; Table.deepOverwrite( target: table,-- Target table source: table-- Table to read from ) → table-- target Overwrites a table's value  ","version":null,"tagName":"h3"},{"title":"getIndex​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#getIndex","content":"&lt;/&gt; Table.getIndex( haystack: table,-- To search in needle: Valuetosearchfor ) → ( Theindexofthevalue,iffound, nil-- if not found ) Gets an index by value, returning nil if no index is found.  ","version":null,"tagName":"h3"},{"title":"stringify​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#stringify","content":"&lt;/&gt; Table.stringify( _table: table,-- Table to stringify indent: number?,-- Indent level output: string?-- Output string, used recursively ) → string-- The table in string form Recursively prints the table. Does not handle recursive tables.  ","version":null,"tagName":"h3"},{"title":"contains​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#contains","content":"&lt;/&gt; Table.contains( _table: table,-- To search in for value value: any-- Value to search for ) → boolean-- true if within, false otherwise Returns whether value is within table  ","version":null,"tagName":"h3"},{"title":"overwrite​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#overwrite","content":"&lt;/&gt; Table.overwrite( target: table,-- Table to overwite source: table-- Source table to read from ) → table-- target Overwrites an existing table with the source values.  ","version":null,"tagName":"h3"},{"title":"deepEquivalent​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#deepEquivalent","content":"&lt;/&gt; Table.deepEquivalent( target: table,-- Table to check source: table-- Other table to check ) → boolean Deep equivalent comparison of a table assuming keys are indexable in the same way.  ","version":null,"tagName":"h3"},{"title":"take​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#take","content":"&lt;/&gt; Table.take( source: table,-- Source table to retrieve values from count: number-- Number of entries to take ) → table-- List with the entries retrieved Takes count entries from the table. If the table does not have that many entries, will return up to the number the table has to provide.  ","version":null,"tagName":"h3"},{"title":"readonly​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#readonly","content":"&lt;/&gt; Table.readonly( target: table-- Table to error on indexing ) → table-- The same table, with the metatable set to readonly Sets a metatable on a table such that it errors when indexing a nil value  ","version":null,"tagName":"h3"},{"title":"errorOnNilIndex​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#errorOnNilIndex","content":"&lt;/&gt; Table.errorOnNilIndex( target: table-- Table to error on indexing ) → table-- The same table, with the target set to error on nil Sets a metatable on a table such that it errors when indexing a nil value  ","version":null,"tagName":"h3"},{"title":"deepReadonly​","type":1,"pageTitle":"Table","url":"/NevermoreEngine/api/Table#deepReadonly","content":"&lt;/&gt; Table.deepReadonly( target: table-- Table to error on indexing ) → table-- The same table Recursively sets the table as ReadOnly ","version":null,"tagName":"h3"},{"title":"TeamKillTrackerUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TeamKillTrackerUtils","content":"TeamKillTrackerUtils","keywords":"","version":null},{"title":"TeamKillTrackerClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TeamKillTrackerClient","content":"TeamKillTrackerClient","keywords":"","version":null},{"title":"TeamTracker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TeamTracker","content":"TeamTracker Tracks a player's current team, since the Team property is unreliable","keywords":"","version":null},{"title":"TeamUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TeamUtils","content":"TeamUtils Team utility methods","keywords":"","version":null},{"title":"TeleportServiceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TeleportServiceUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TeleportServiceUtils","url":"/NevermoreEngine/api/TeleportServiceUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseReserveServer​","type":1,"pageTitle":"TeleportServiceUtils","url":"/NevermoreEngine/api/TeleportServiceUtils#promiseReserveServer","content":"&lt;/&gt; TeleportServiceUtils.promiseReserveServer(placeId: number) → Promise&lt;string&gt;-- Code Wraps TeleportService:ReserveServer(placeId)  ","version":null,"tagName":"h3"},{"title":"promiseTeleport​","type":1,"pageTitle":"TeleportServiceUtils","url":"/NevermoreEngine/api/TeleportServiceUtils#promiseTeleport","content":"&lt;/&gt; TeleportServiceUtils.promiseTeleport( placeId: number, players: {Player }, teleportOptions: TeleportOptions ) → Promise&lt;string&gt;-- Code Wraps TeleportService:PromiseTeleport(placeId, players, teleportOptions) ","version":null,"tagName":"h3"},{"title":"TemplateReplicationModes","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TemplateReplicationModes","content":"TemplateReplicationModes","keywords":"","version":null},{"title":"TemplateReplicationModesUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TemplateReplicationModesUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TemplateReplicationModesUtils","url":"/NevermoreEngine/api/TemplateReplicationModesUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"inferReplicationMode​","type":1,"pageTitle":"TemplateReplicationModesUtils","url":"/NevermoreEngine/api/TemplateReplicationModesUtils#inferReplicationMode","content":"&lt;/&gt; TemplateReplicationModesUtils.inferReplicationMode() → TemplateReplicationModes.TemplateReplicationMode Uses run service to infer the replication mode ","version":null,"tagName":"h3"},{"title":"TemplateProvider","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TemplateProvider","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TemplateProvider","url":"/NevermoreEngine/api/TemplateProvider#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"TemplateProvider","url":"/NevermoreEngine/api/TemplateProvider#new","content":"&lt;/&gt; TemplateProvider.new( providerName: string, initialTemplates: TemplateDeclaration ) → TemplateProvider ","version":null,"tagName":"h3"},{"title":"Types","type":1,"pageTitle":"TemplateProvider","url":"/NevermoreEngine/api/TemplateProvider##","content":"","version":null,"tagName":"h3"},{"title":"​","type":1,"pageTitle":"TemplateProvider","url":"/NevermoreEngine/api/TemplateProvider#TemplateDeclaration","content":"type TemplateDeclaration = Instance | Observable&lt;Brio&lt;Instance &gt;&gt; | table  Constructs a new TemplateProvider.  ","version":null,"tagName":"h3"},{"title":"isTemplateProvider​","type":1,"pageTitle":"TemplateProvider","url":"/NevermoreEngine/api/TemplateProvider#isTemplateProvider","content":"&lt;/&gt; TemplateProvider.isTemplateProvider(value: any) → boolean Returns if the value is a template provider  ","version":null,"tagName":"h3"},{"title":"Init​","type":1,"pageTitle":"TemplateProvider","url":"/NevermoreEngine/api/TemplateProvider#Init","content":"&lt;/&gt; TemplateProvider.Init( self: TemplateProvider, serviceBag: ServiceBag ) → () Initializes the container provider. Should be done via ServiceBag.  ","version":null,"tagName":"h3"},{"title":"ObserveTemplate​","type":1,"pageTitle":"TemplateProvider","url":"/NevermoreEngine/api/TemplateProvider#ObserveTemplate","content":"&lt;/&gt; TemplateProvider.ObserveTemplate( self: TemplateProvider, templateName: string ) → Observable&lt;Instance &gt; Observes the given template by name  ","version":null,"tagName":"h3"},{"title":"GetTemplate​","type":1,"pageTitle":"TemplateProvider","url":"/NevermoreEngine/api/TemplateProvider#GetTemplate","content":"&lt;/&gt; TemplateProvider.GetTemplate( self: TemplateProvider, templateName: string ) → Instance?  Returns the raw template  ","version":null,"tagName":"h3"},{"title":"PromiseCloneTemplate​","type":1,"pageTitle":"TemplateProvider","url":"/NevermoreEngine/api/TemplateProvider#PromiseCloneTemplate","content":"&lt;/&gt; TemplateProvider.PromiseCloneTemplate( self: TemplateProvider, templateName: string ) → Promise&lt;Instance &gt; Promises to clone the template as soon as it exists  ","version":null,"tagName":"h3"},{"title":"PromiseTemplate​","type":1,"pageTitle":"TemplateProvider","url":"/NevermoreEngine/api/TemplateProvider#PromiseTemplate","content":"&lt;/&gt; TemplateProvider.PromiseTemplate( self: TemplateProvider, templateName: string ) → Promise&lt;Instance &gt; Promise to resolve the raw template as soon as it exists  ","version":null,"tagName":"h3"},{"title":"CloneTemplate​","type":1,"pageTitle":"TemplateProvider","url":"/NevermoreEngine/api/TemplateProvider#CloneTemplate","content":"&lt;/&gt; TemplateProvider.CloneTemplate( self: TemplateProvider, templateName: string ) → Instance?  Clones the template. INFO If the template name has a prefix of &quot;Template&quot; then it will remove it on the cloned instance.  ","version":null,"tagName":"h3"},{"title":"AddTemplates​","type":1,"pageTitle":"TemplateProvider","url":"/NevermoreEngine/api/TemplateProvider#AddTemplates","content":"&lt;/&gt; TemplateProvider.AddTemplates( self: TemplateProvider, container: Template ) → MaidTask Adds a new container to the provider for provision of assets. The initial container is considered a template. Additionally, we will include any children that are in a folder as a potential root TIP The last template with a given name added will be considered the canonical template.  ","version":null,"tagName":"h3"},{"title":"IsTemplateAvailable​","type":1,"pageTitle":"TemplateProvider","url":"/NevermoreEngine/api/TemplateProvider#IsTemplateAvailable","content":"&lt;/&gt; TemplateProvider.IsTemplateAvailable( self: TemplateProvider, templateName: string ) → boolean Returns whether or not a template is registered at the time  ","version":null,"tagName":"h3"},{"title":"GetTemplateList​","type":1,"pageTitle":"TemplateProvider","url":"/NevermoreEngine/api/TemplateProvider#GetTemplateList","content":"&lt;/&gt; TemplateProvider.GetTemplateList(self: TemplateProvider) → {Instance } Returns all current registered items.  ","version":null,"tagName":"h3"},{"title":"GetContainerList​","type":1,"pageTitle":"TemplateProvider","url":"/NevermoreEngine/api/TemplateProvider#GetContainerList","content":"&lt;/&gt; TemplateProvider.GetContainerList(self: TemplateProvider) → {Instance } Gets all current the containers.  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"TemplateProvider","url":"/NevermoreEngine/api/TemplateProvider#Destroy","content":"&lt;/&gt; TemplateProvider.Destroy(self: TemplateProvider) → () Cleans up the provider ","version":null,"tagName":"h3"},{"title":"TestInputKeyMap","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TestInputKeyMap","content":"TestInputKeyMap Test input key map provider","keywords":"","version":null},{"title":"TerrainUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TerrainUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TerrainUtils","url":"/NevermoreEngine/api/TerrainUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getTerrainRegion3​","type":1,"pageTitle":"TerrainUtils","url":"/NevermoreEngine/api/TerrainUtils#getTerrainRegion3","content":"&lt;/&gt; TerrainUtils.getTerrainRegion3( position: Vector3 , size: Vector3 , resolution: number ) → Region3  Gets the terrain region from the position and size  ","version":null,"tagName":"h3"},{"title":"getTerrainRegion3int16FromRegion3​","type":1,"pageTitle":"TerrainUtils","url":"/NevermoreEngine/api/TerrainUtils#getTerrainRegion3int16FromRegion3","content":"&lt;/&gt; TerrainUtils.getTerrainRegion3int16FromRegion3( region3: Region3 , resolution: number ) → Region3int16  Gets the terrain region3int16 from a terrain region (in world space) at the resolution requested.  ","version":null,"tagName":"h3"},{"title":"getCorner​","type":1,"pageTitle":"TerrainUtils","url":"/NevermoreEngine/api/TerrainUtils#getCorner","content":"&lt;/&gt; TerrainUtils.getCorner(region3: Region3 ) → Vector3  Gets the corner of terrain for a region3  ","version":null,"tagName":"h3"},{"title":"getCornerint16​","type":1,"pageTitle":"TerrainUtils","url":"/NevermoreEngine/api/TerrainUtils#getCornerint16","content":"&lt;/&gt; TerrainUtils.getCornerint16( region3: Region3 , resolution: number ) → Vector3int16  Gets the corner of the region in Vector3int16 ","version":null,"tagName":"h3"},{"title":"TestMantleConfigProvider","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TestMantleConfigProvider","content":"TestMantleConfigProvider","keywords":"","version":null},{"title":"TextChannelUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TextChannelUtils","content":"TextChannelUtils Utility functions for querying text channels.","keywords":"","version":null},{"title":"TextFilterService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TextFilterService","content":"TextFilterService","keywords":"","version":null},{"title":"TextFilterServiceClient","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TextFilterServiceClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TextFilterServiceClient","url":"/NevermoreEngine/api/TextFilterServiceClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"PromiseNonChatStringForUser​","type":1,"pageTitle":"TextFilterServiceClient","url":"/NevermoreEngine/api/TextFilterServiceClient#PromiseNonChatStringForUser","content":"&lt;/&gt; TextFilterServiceClient:PromiseNonChatStringForUser( text: string, fromUserId: number ) → Promise&lt;string&gt; Filters a non-chat string for a user  ","version":null,"tagName":"h3"},{"title":"PromiseNonChatStringForBroadcast​","type":1,"pageTitle":"TextFilterServiceClient","url":"/NevermoreEngine/api/TextFilterServiceClient#PromiseNonChatStringForBroadcast","content":"&lt;/&gt; TextFilterServiceClient:PromiseNonChatStringForBroadcast( text: string, fromUserId: number ) → Promise&lt;string&gt; Filters a non-chat string for a broadcast  ","version":null,"tagName":"h3"},{"title":"PromisePreviewNonChatStringForBroadcast​","type":1,"pageTitle":"TextFilterServiceClient","url":"/NevermoreEngine/api/TextFilterServiceClient#PromisePreviewNonChatStringForBroadcast","content":"&lt;/&gt; TextFilterServiceClient:PromisePreviewNonChatStringForBroadcast(text: string) → Promise&lt;string&gt; Filters a preview-non-chat string for a broadcast  ","version":null,"tagName":"h3"},{"title":"ObservePreviewNonChatStringForBroadcast​","type":1,"pageTitle":"TextFilterServiceClient","url":"/NevermoreEngine/api/TextFilterServiceClient#ObservePreviewNonChatStringForBroadcast","content":"&lt;/&gt; TextFilterServiceClient:ObservePreviewNonChatStringForBroadcast(text: string) → Promise&lt;string&gt; Observes a non-chat string preview for broadcast ","version":null,"tagName":"h3"},{"title":"TextFilterServiceConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TextFilterServiceConstants","content":"TextFilterServiceConstants","keywords":"","version":null},{"title":"throttle","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/throttle","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"throttle","url":"/NevermoreEngine/api/throttle#functions","content":" ","version":null,"tagName":"h2"},{"title":"throttle​","type":1,"pageTitle":"throttle","url":"/NevermoreEngine/api/throttle#throttle","content":"&lt;/&gt; throttle.throttle( timeoutInSeconds: number, func: function, throttleConfig?: {leading=true;trailing=true;} ) → function Provides a debounce function call on an operation. ","version":null,"tagName":"h3"},{"title":"TextServiceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TextServiceUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TextServiceUtils","url":"/NevermoreEngine/api/TextServiceUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getSizeForLabel​","type":1,"pageTitle":"TextServiceUtils","url":"/NevermoreEngine/api/TextServiceUtils#getSizeForLabel","content":"&lt;/&gt; TextServiceUtils.getSizeForLabel( textLabel: TextLabel , text: string, maxWidth: number ) → Vector2  Gets the size for the label using legacy API surface. WARNING This will not handle new font faces well.  ","version":null,"tagName":"h3"},{"title":"promiseTextBounds​","type":1,"pageTitle":"TextServiceUtils","url":"/NevermoreEngine/api/TextServiceUtils#promiseTextBounds","content":"&lt;/&gt; TextServiceUtils.promiseTextBounds(params: GetTextBoundsParams ) → Promise&lt;Vector2 &gt; Promises the text bounds for the given parameters  ","version":null,"tagName":"h3"},{"title":"observeSizeForLabelProps​","type":1,"pageTitle":"TextServiceUtils","url":"/NevermoreEngine/api/TextServiceUtils#observeSizeForLabelProps","content":"&lt;/&gt; TextServiceUtils.observeSizeForLabelProps(props: table) → Observable&lt;Vector2 &gt;-- The text bounds reported Observes the current size for the current props. The properties can be anything Blend would accept as an input. If FontFace is defined, it will be used before Font. The following properties are available: Text - string TextSize - number Font - Enum.Font FontFace Font MaxSize - Vector2 LineHeight - number local stringValue = Instance.new(&quot;StringValue&quot;) stringValue.Text = &quot;Hello&quot; local observe = TextServiceUtils.observeSizeForLabelProps({ Text = stringValue; Font = Enum.Font.; MaxSize = Vector2.new(250, 100); TextSize = 24; }) -- Be sure to clean up the subscription observe:Subscribe(function(size) print(size) end)  ","version":null,"tagName":"h3"},{"title":"TextFilterUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TextFilterUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TextFilterUtils","url":"/NevermoreEngine/api/TextFilterUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseNonChatStringForBroadcast​","type":1,"pageTitle":"TextFilterUtils","url":"/NevermoreEngine/api/TextFilterUtils#promiseNonChatStringForBroadcast","content":"&lt;/&gt; TextFilterUtils.promiseNonChatStringForBroadcast( text: string, fromUserId: number, textFilterContext: TextFilterContext ) → Promise&lt;string&gt; Returns a filtered string for broadcast. Tends to look like this: TextFilterUtils.promiseNonChatStringForBroadcast(text, player.UserId, Enum.TextFilterContext.PublicChat) :Then(function(filtered) print(filtered) end) The two options for textFilterContext are Enum.TextFilterContext.PublicChat and Enum.TextFilterContext.PrivateChat.  ","version":null,"tagName":"h3"},{"title":"promiseLegacyChatFilter​","type":1,"pageTitle":"TextFilterUtils","url":"/NevermoreEngine/api/TextFilterUtils#promiseLegacyChatFilter","content":"&lt;/&gt; TextFilterUtils.promiseLegacyChatFilter( playerFrom: Player , text: string ) → Promise&lt;string&gt; Legacy filter broadcast using the Chat:FilterStringForBroadcast API call. It's recommended you use TextFilterUtils.promiseNonChatStringForBroadcast instead.  ","version":null,"tagName":"h3"},{"title":"promiseNonChatStringForUserAsync​","type":1,"pageTitle":"TextFilterUtils","url":"/NevermoreEngine/api/TextFilterUtils#promiseNonChatStringForUserAsync","content":"&lt;/&gt; TextFilterUtils.promiseNonChatStringForUserAsync( text: string, fromUserId: number, toUserId: number, textFilterContext: TextFilterContext ) → Promise&lt;string&gt; Returns a filtered string for a specific user to another user. This is preferable over broadcast if possible.  ","version":null,"tagName":"h3"},{"title":"getNonChatStringForBroadcastAsync​","type":1,"pageTitle":"TextFilterUtils","url":"/NevermoreEngine/api/TextFilterUtils#getNonChatStringForBroadcastAsync","content":"&lt;/&gt; TextFilterUtils.getNonChatStringForBroadcastAsync( text: string, fromUserId: number, textFilterContext: TextFilterContext ) → ( string?, string? ) Blocking call to get a non-chat string for broadcast. Wraps TextService.FilterStringAsync.  ","version":null,"tagName":"h3"},{"title":"getNonChatStringForUserAsync​","type":1,"pageTitle":"TextFilterUtils","url":"/NevermoreEngine/api/TextFilterUtils#getNonChatStringForUserAsync","content":"&lt;/&gt; TextFilterUtils.getNonChatStringForUserAsync( text: string, fromUserId: number, toUserId: number, textFilterContext: TextFilterContext ) → ( string?, string? ) Blocking call to get a non-chat string for a user.  ","version":null,"tagName":"h3"},{"title":"hasNonFilteredText​","type":1,"pageTitle":"TextFilterUtils","url":"/NevermoreEngine/api/TextFilterUtils#hasNonFilteredText","content":"&lt;/&gt; TextFilterUtils.hasNonFilteredText(text: string) → boolean Returns true if there's non-filtered text or characters in the text  ","version":null,"tagName":"h3"},{"title":"getProportionFiltered​","type":1,"pageTitle":"TextFilterUtils","url":"/NevermoreEngine/api/TextFilterUtils#getProportionFiltered","content":"&lt;/&gt; TextFilterUtils.getProportionFiltered(text: string) → number Computes proportional text that is filtered ignoring whitespace.  ","version":null,"tagName":"h3"},{"title":"countFilteredCharacters​","type":1,"pageTitle":"TextFilterUtils","url":"/NevermoreEngine/api/TextFilterUtils#countFilteredCharacters","content":"&lt;/&gt; TextFilterUtils.countFilteredCharacters(text: string) → ( number,-- filtered characters number,-- Unfiltered characters number-- White space characters ) Gets the number of filtered characters in the text string  ","version":null,"tagName":"h3"},{"title":"addBackInNewLinesAndWhitespace​","type":1,"pageTitle":"TextFilterUtils","url":"/NevermoreEngine/api/TextFilterUtils#addBackInNewLinesAndWhitespace","content":"&lt;/&gt; TextFilterUtils.addBackInNewLinesAndWhitespace( text: string, filteredText: string ) → string Adds in new lines and whitespace to the text ","version":null,"tagName":"h3"},{"title":"ThrottledFunction","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ThrottledFunction","content":"ThrottledFunction Throttles execution of a functon. Does both leading, and following","keywords":"","version":null},{"title":"TieImplementation","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TieImplementation","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TieImplementation","url":"/NevermoreEngine/api/TieImplementation#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"TieImplementation","url":"/NevermoreEngine/api/TieImplementation#new","content":"&lt;/&gt; TieImplementation.new( tieDefinition: TieDefinition, adornee: Instance , implementer: table, implementationTieRealm: TieRealm ) → () Constructs a new implementation. Use TieDefinition.Implement instead of using this directly. ","version":null,"tagName":"h3"},{"title":"TieMemberDefinition","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TieMemberDefinition","content":"TieMemberDefinition Base class for a member definition/declaration.","keywords":"","version":null},{"title":"TieInterface","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TieInterface","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TieInterface","url":"/NevermoreEngine/api/TieInterface#functions","content":" ","version":null,"tagName":"h2"},{"title":"IsImplemented​","type":1,"pageTitle":"TieInterface","url":"/NevermoreEngine/api/TieInterface#IsImplemented","content":"&lt;/&gt; TieInterface:IsImplemented() → boolean Returns whether this version of the definition is implemented to standard or not.  ","version":null,"tagName":"h3"},{"title":"GetTieAdornee​","type":1,"pageTitle":"TieInterface","url":"/NevermoreEngine/api/TieInterface#GetTieAdornee","content":"&lt;/&gt; TieInterface:GetTieAdornee() → Instance?  Gets the adornee the tie interface is on if it can be found.  ","version":null,"tagName":"h3"},{"title":"ObserveIsImplemented​","type":1,"pageTitle":"TieInterface","url":"/NevermoreEngine/api/TieInterface#ObserveIsImplemented","content":"&lt;/&gt; TieInterface:ObserveIsImplemented() → Observable&lt;boolean&gt; Observes if the interface is implemented ","version":null,"tagName":"h3"},{"title":"TieDefinition","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TieDefinition","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#new","content":"&lt;/&gt; TieDefinition.new( definitionName: string, members: any ) → TieDefinition Constructs a new TieDefinition with the given members  ","version":null,"tagName":"h3"},{"title":"GetImplementations​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#GetImplementations","content":"&lt;/&gt; TieDefinition:GetImplementations( adornee: Instance , tieRealm: TieRealm? ) → {TieInterface} Gets all valid interfaces for this adornee  ","version":null,"tagName":"h3"},{"title":"ObserveChildrenBrio​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#ObserveChildrenBrio","content":"&lt;/&gt; TieDefinition:ObserveChildrenBrio( adornee: Instance , tieRealm: TieRealm? ) → Observable&lt;Brio&lt;TieInterface&gt;&gt; Observes all the children implementations for this adornee  ","version":null,"tagName":"h3"},{"title":"Promise​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#Promise","content":"&lt;/&gt; TieDefinition:Promise( adornee: Adornee, tieRealm: TieRealm? ) → Promise&lt;TieInterface&gt; Promises the implementation  ","version":null,"tagName":"h3"},{"title":"GetChildren​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#GetChildren","content":"&lt;/&gt; TieDefinition:GetChildren( adornee: Instance , tieRealm: TieRealm? ) → {TieInterface} Gets all valid interfaces for this adornee's children  ","version":null,"tagName":"h3"},{"title":"Find​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#Find","content":"&lt;/&gt; TieDefinition:Find( adornee: Adornee, tieRealm: TieRealm? ) → TieInterface | nil Finds the implementation on the adornee. Alais for [FindFirstImplementation]  ","version":null,"tagName":"h3"},{"title":"ObserveAllTaggedBrio​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#ObserveAllTaggedBrio","content":"&lt;/&gt; TieDefinition:ObserveAllTaggedBrio( tagName: string, tieRealm: TieRealm? ) → TieInterface | nil Observes all implementations that are tagged with the given tag name  ","version":null,"tagName":"h3"},{"title":"FindFirstImplementation​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#FindFirstImplementation","content":"&lt;/&gt; TieDefinition:FindFirstImplementation( adornee: Instance , tieRealm: TieRealm? ) → TieInterface Finds the first valid interfaces for this adornee  ","version":null,"tagName":"h3"},{"title":"HasImplementation​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#HasImplementation","content":"&lt;/&gt; TieDefinition:HasImplementation( adornee: Instance , tieRealm: TieRealm? ) → boolean Returns true if the adornee implements the interface, and false otherwise.  ","version":null,"tagName":"h3"},{"title":"ObserveIsImplemented​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#ObserveIsImplemented","content":"&lt;/&gt; TieDefinition:ObserveIsImplemented( adornee: Instance , tieRealm: TieRealm? ) → Observable&lt;boolean&gt;&gt; Observes whether the adornee implements the interface.  ","version":null,"tagName":"h3"},{"title":"ObserveIsImplementation​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#ObserveIsImplementation","content":"&lt;/&gt; TieDefinition:ObserveIsImplementation( implParent: Instance , tieRealm: TieRealm? ) → Observable&lt;boolean&gt;&gt; Observes whether the implParent is a valid implementation  ","version":null,"tagName":"h3"},{"title":"ObserveIsImplementedOn​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#ObserveIsImplementedOn","content":"&lt;/&gt; TieDefinition:ObserveIsImplementedOn( implParent: Instance , adornee: Instance , tieRealm: TieRealm? ) → Observable&lt;boolean&gt;&gt; Observes whether the implParent is a valid implementation on the given adornee  ","version":null,"tagName":"h3"},{"title":"ObserveBrio​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#ObserveBrio","content":"&lt;/&gt; TieDefinition:ObserveBrio( adornee: Instance , tieRealm: TieRealm? ) → Observable&lt;Brio&lt;TieImplementation&lt;T&gt;&gt;&gt; Observes a valid implementation wrapped in a brio if it exists.  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#Observe","content":"&lt;/&gt; TieDefinition:Observe( adornee: Instance , tieRealm: TieRealm? ) → Observable&lt;TieImplementation&lt;T&gt; | nil&gt;&gt; Observes a valid implementation if it exists, or nil  ","version":null,"tagName":"h3"},{"title":"ObserveImplementationsBrio​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#ObserveImplementationsBrio","content":"&lt;/&gt; TieDefinition:ObserveImplementationsBrio( adornee: Instance , tieRealm: TieRealm? ) → Observable&lt;Brio&lt;TieImplementation&lt;T&gt;&gt;&gt; Observes valid implementations wrapped in a brio if it exists.  ","version":null,"tagName":"h3"},{"title":"Implement​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#Implement","content":"&lt;/&gt; TieDefinition:Implement( adornee: Instance ,-- Adornee to implement interface on implementer: table?,-- Table with all interface values or nil tieRealm: TieRealm? ) → TieImplementation&lt;T&gt; Ensures implementation of the object, binding table values and Lua OOP objects to Roblox objects that can be invoked generally.  ","version":null,"tagName":"h3"},{"title":"Get​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#Get","content":"&lt;/&gt; TieDefinition:Get( adornee: Instance ,-- Adornee to get interface on tieRealm: TieRealm? ) → TieInterface&lt;T&gt; Gets an interface to the tie definition. Not this can be done on any Roblox instance. If the instance does not implement the interface, invoking interface methods, or querying the interface will result in errors. TIP Probably use :Find() instead of Get, since this always returns an interface.  ","version":null,"tagName":"h3"},{"title":"GetName​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#GetName","content":"&lt;/&gt; TieDefinition:GetName() → string Gets the name of the definition  ","version":null,"tagName":"h3"},{"title":"GetValidContainerNameSet​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#GetValidContainerNameSet","content":"&lt;/&gt; TieDefinition:GetValidContainerNameSet(tieRealm: TieRealm) → {[string]: boolean} Gets the valid container name set for the tie definition  ","version":null,"tagName":"h3"},{"title":"GetNewContainerName​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#GetNewContainerName","content":"&lt;/&gt; TieDefinition:GetNewContainerName(tieRealm: TieRealm) → string Gets a container name for a new container. See [GetValidContainerNameSet] for the full set of valid container names for the tie definition.  ","version":null,"tagName":"h3"},{"title":"IsImplementation​","type":1,"pageTitle":"TieDefinition","url":"/NevermoreEngine/api/TieDefinition#IsImplementation","content":"&lt;/&gt; TieDefinition:IsImplementation( implParent: Instance , tieRealm: TieRealm?-- Optional tie realm ) → boolean Returns true if the implParent is an implementation ","version":null,"tagName":"h3"},{"title":"TieMemberInterface","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TieMemberInterface","content":"TieMemberInterface","keywords":"","version":null},{"title":"TieMethodDefinition","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TieMethodDefinition","content":"TieMethodDefinition","keywords":"","version":null},{"title":"TieMethodInterfaceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TieMethodInterfaceUtils","content":"TieMethodInterfaceUtils","keywords":"","version":null},{"title":"TieMethodImplementation","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TieMethodImplementation","content":"TieMethodImplementation","keywords":"","version":null},{"title":"TiePropertyDefinition","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TiePropertyDefinition","content":"TiePropertyDefinition","keywords":"","version":null},{"title":"TiePropertyImplementation","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TiePropertyImplementation","content":"TiePropertyImplementation","keywords":"","version":null},{"title":"TiePropertyImplementationUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TiePropertyImplementationUtils","content":"TiePropertyImplementationUtils","keywords":"","version":null},{"title":"TieRealms","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TieRealms","content":"TieRealms Realms sort of have to be a first class citizen...","keywords":"","version":null},{"title":"TiePropertyInterface","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TiePropertyInterface","content":"TiePropertyInterface","keywords":"","version":null},{"title":"TieRealmService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TieRealmService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TieRealmService","url":"/NevermoreEngine/api/TieRealmService#functions","content":" ","version":null,"tagName":"h2"},{"title":"SetTieRealm​","type":1,"pageTitle":"TieRealmService","url":"/NevermoreEngine/api/TieRealmService#SetTieRealm","content":"&lt;/&gt; TieRealmService.SetTieRealm( self: TieRealmService, tieRealm: TieRealms.TieRealm ) → () Sets the tie realm for this service bag  ","version":null,"tagName":"h3"},{"title":"GetTieRealm​","type":1,"pageTitle":"TieRealmService","url":"/NevermoreEngine/api/TieRealmService#GetTieRealm","content":"&lt;/&gt; TieRealmService.GetTieRealm(self: TieRealmService) → TieRealms.TieRealm Get the tie realm for this service bag ","version":null,"tagName":"h3"},{"title":"TieRealmUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TieRealmUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TieRealmUtils","url":"/NevermoreEngine/api/TieRealmUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"isTieRealm​","type":1,"pageTitle":"TieRealmUtils","url":"/NevermoreEngine/api/TieRealmUtils#isTieRealm","content":"&lt;/&gt; TieRealmUtils.isTieRealm(tieRealm: any) → boolean Returns true if the value is a tie realm  ","version":null,"tagName":"h3"},{"title":"inferTieRealm​","type":1,"pageTitle":"TieRealmUtils","url":"/NevermoreEngine/api/TieRealmUtils#inferTieRealm","content":"&lt;/&gt; TieRealmUtils.inferTieRealm() → TieRealm Infers the tie realm from the current RunService state ","version":null,"tagName":"h3"},{"title":"TieSignalConnection","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TieSignalConnection","content":"TieSignalConnection","keywords":"","version":null},{"title":"TieSignalDefinition","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TieSignalDefinition","content":"TieSignalDefinition","keywords":"","version":null},{"title":"TieSignalImplementation","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TieSignalImplementation","content":"TieSignalImplementation","keywords":"","version":null},{"title":"TieSignalInterface","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TieSignalInterface","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TieSignalInterface","url":"/NevermoreEngine/api/TieSignalInterface#functions","content":" ","version":null,"tagName":"h2"},{"title":"Fire​","type":1,"pageTitle":"TieSignalInterface","url":"/NevermoreEngine/api/TieSignalInterface#Fire","content":"&lt;/&gt; TieSignalInterface:Fire(...: T) → () Fires the signal  ","version":null,"tagName":"h3"},{"title":"Connect​","type":1,"pageTitle":"TieSignalInterface","url":"/NevermoreEngine/api/TieSignalInterface#Connect","content":"&lt;/&gt; TieSignalInterface:Connect(callback: (T...) → ()) → TieSignalConnection Connects like an RBXSignalConnection ","version":null,"tagName":"h3"},{"title":"TieUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TieUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TieUtils","url":"/NevermoreEngine/api/TieUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"encode​","type":1,"pageTitle":"TieUtils","url":"/NevermoreEngine/api/TieUtils#encode","content":"&lt;/&gt; TieUtils.encode(...: any) → ...any Encoding arguments for Tie consumption. Namely this will convert any table into a closure for encoding.  ","version":null,"tagName":"h3"},{"title":"encodeCallback​","type":1,"pageTitle":"TieUtils","url":"/NevermoreEngine/api/TieUtils#encodeCallback","content":"&lt;/&gt; TieUtils.encodeCallback(callback: function) → () Encodes a given callback so it can be assigned to a BindableFunction  ","version":null,"tagName":"h3"},{"title":"invokeEncodedBindableFunction​","type":1,"pageTitle":"TieUtils","url":"/NevermoreEngine/api/TieUtils#invokeEncodedBindableFunction","content":"&lt;/&gt; TieUtils.invokeEncodedBindableFunction( bindableFunction: BindableFunction , ...: any ) → any Encodes a given callback so it can be assigned to a BindableFunction  ","version":null,"tagName":"h3"},{"title":"decode​","type":1,"pageTitle":"TieUtils","url":"/NevermoreEngine/api/TieUtils#decode","content":"&lt;/&gt; TieUtils.decode(...: any) → ...any Decodes arguments for Tie consumption. ","version":null,"tagName":"h3"},{"title":"TimeSyncConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TimeSyncConstants","content":"TimeSyncConstants","keywords":"","version":null},{"title":"TimedTween","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TimedTween","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TimedTween","url":"/NevermoreEngine/api/TimedTween#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"TimedTween","url":"/NevermoreEngine/api/TimedTween#new","content":"&lt;/&gt; TimedTween.new( transitionTime: number?-- Optional ) → TimedTween Timed transition module  ","version":null,"tagName":"h3"},{"title":"SetTransitionTime​","type":1,"pageTitle":"TimedTween","url":"/NevermoreEngine/api/TimedTween#SetTransitionTime","content":"&lt;/&gt; TimedTween.SetTransitionTime( self: TimedTween, transitionTime: number | Observable&lt;number&gt; ) → MaidTask Sets the transition time  ","version":null,"tagName":"h3"},{"title":"GetTransitionTime​","type":1,"pageTitle":"TimedTween","url":"/NevermoreEngine/api/TimedTween#GetTransitionTime","content":"&lt;/&gt; TimedTween.GetTransitionTime(self: TimedTween) → number Gets the transition time  ","version":null,"tagName":"h3"},{"title":"ObserveTransitionTime​","type":1,"pageTitle":"TimedTween","url":"/NevermoreEngine/api/TimedTween#ObserveTransitionTime","content":"&lt;/&gt; TimedTween.ObserveTransitionTime(self: TimedTween) → Observable&lt;number&gt; Observes the transition time  ","version":null,"tagName":"h3"},{"title":"ObserveRenderStepped​","type":1,"pageTitle":"TimedTween","url":"/NevermoreEngine/api/TimedTween#ObserveRenderStepped","content":"&lt;/&gt; TimedTween.ObserveRenderStepped(self: TimedTween) → Observable&lt;number&gt; Observes how far into the transition we are, from 0 to 1  ","version":null,"tagName":"h3"},{"title":"ObserveOnSignal​","type":1,"pageTitle":"TimedTween","url":"/NevermoreEngine/api/TimedTween#ObserveOnSignal","content":"&lt;/&gt; TimedTween.ObserveOnSignal( self: TimedTween, signal: Signal ) → Observable&lt;number&gt; Observes the transition on a specific signal  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"TimedTween","url":"/NevermoreEngine/api/TimedTween#Observe","content":"&lt;/&gt; TimedTween.Observe(self: TimedTween) → Observable&lt;number&gt; Observes the transition  ","version":null,"tagName":"h3"},{"title":"PromiseFinished​","type":1,"pageTitle":"TimedTween","url":"/NevermoreEngine/api/TimedTween#PromiseFinished","content":"&lt;/&gt; TimedTween.PromiseFinished(self: TimedTween) → Promise Promises when the tween is finished ","version":null,"tagName":"h3"},{"title":"TimedTransitionModel","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TimedTransitionModel","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TimedTransitionModel","url":"/NevermoreEngine/api/TimedTransitionModel#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"TimedTransitionModel","url":"/NevermoreEngine/api/TimedTransitionModel#new","content":"&lt;/&gt; TimedTransitionModel.new( transitionTime: number?-- Optional ) → TimedTransitionModel A transition model that has a spring underlying it. Very useful for animations on tracks that need to be on a spring.  ","version":null,"tagName":"h3"},{"title":"SetTransitionTime​","type":1,"pageTitle":"TimedTransitionModel","url":"/NevermoreEngine/api/TimedTransitionModel#SetTransitionTime","content":"&lt;/&gt; TimedTransitionModel.SetTransitionTime( self: TimedTransitionModel, transitionTime: number ) → () Sets the transition time  ","version":null,"tagName":"h3"},{"title":"IsShowingComplete​","type":1,"pageTitle":"TimedTransitionModel","url":"/NevermoreEngine/api/TimedTransitionModel#IsShowingComplete","content":"&lt;/&gt; TimedTransitionModel.IsShowingComplete(self: TimedTransitionModel) → boolean Returns true if showing is complete  ","version":null,"tagName":"h3"},{"title":"IsHidingComplete​","type":1,"pageTitle":"TimedTransitionModel","url":"/NevermoreEngine/api/TimedTransitionModel#IsHidingComplete","content":"&lt;/&gt; TimedTransitionModel.IsHidingComplete(self: TimedTransitionModel) → boolean Returns true if hiding is complete  ","version":null,"tagName":"h3"},{"title":"ObserveIsShowingComplete​","type":1,"pageTitle":"TimedTransitionModel","url":"/NevermoreEngine/api/TimedTransitionModel#ObserveIsShowingComplete","content":"&lt;/&gt; TimedTransitionModel.ObserveIsShowingComplete(self: TimedTransitionModel) → Observable&lt;boolean&gt; Observe is showing is complete  ","version":null,"tagName":"h3"},{"title":"ObserveIsHidingComplete​","type":1,"pageTitle":"TimedTransitionModel","url":"/NevermoreEngine/api/TimedTransitionModel#ObserveIsHidingComplete","content":"&lt;/&gt; TimedTransitionModel.ObserveIsHidingComplete(self: TimedTransitionModel) → Observable&lt;boolean&gt; Observe is hiding is complete  ","version":null,"tagName":"h3"},{"title":"BindToPaneVisbility​","type":1,"pageTitle":"TimedTransitionModel","url":"/NevermoreEngine/api/TimedTransitionModel#BindToPaneVisbility","content":"&lt;/&gt; TimedTransitionModel.BindToPaneVisbility( self: TimedTransitionModel, pane: BasicPane ) → function-- Cleanup function Binds the transition model to the actual visiblity of the pane  ","version":null,"tagName":"h3"},{"title":"ObserveRenderStepped​","type":1,"pageTitle":"TimedTransitionModel","url":"/NevermoreEngine/api/TimedTransitionModel#ObserveRenderStepped","content":"&lt;/&gt; TimedTransitionModel.ObserveRenderStepped(self: TimedTransitionModel) → Observable&lt;number&gt; Observes the spring animating  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"TimedTransitionModel","url":"/NevermoreEngine/api/TimedTransitionModel#Observe","content":"&lt;/&gt; TimedTransitionModel.Observe(self: TimedTransitionModel) → Observable&lt;number&gt; Alias to spring transition model observation!  ","version":null,"tagName":"h3"},{"title":"PromiseShow​","type":1,"pageTitle":"TimedTransitionModel","url":"/NevermoreEngine/api/TimedTransitionModel#PromiseShow","content":"&lt;/&gt; TimedTransitionModel.PromiseShow( self: TimedTransitionModel, doNotAnimate: boolean? ) → Promise Shows the model and promises when the showing is complete.  ","version":null,"tagName":"h3"},{"title":"PromiseHide​","type":1,"pageTitle":"TimedTransitionModel","url":"/NevermoreEngine/api/TimedTransitionModel#PromiseHide","content":"&lt;/&gt; TimedTransitionModel.PromiseHide( self: TimedTransitionModel, doNotAnimate: boolean? ) → Promise Hides the model and promises when the showing is complete.  ","version":null,"tagName":"h3"},{"title":"PromiseToggle​","type":1,"pageTitle":"TimedTransitionModel","url":"/NevermoreEngine/api/TimedTransitionModel#PromiseToggle","content":"&lt;/&gt; TimedTransitionModel.PromiseToggle( self: TimedTransitionModel, doNotAnimate: boolean ) → Promise Toggles the model and promises when the transition is complete. ","version":null,"tagName":"h3"},{"title":"Time","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Time","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#functions","content":" ","version":null,"tagName":"h2"},{"title":"getDaysMonthTable​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getDaysMonthTable","content":"&lt;/&gt; Time.getDaysMonthTable(year: number) → {[number]: number} Returns a Days in months table for the given year  ","version":null,"tagName":"h3"},{"title":"getSecond​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getSecond","content":"&lt;/&gt; Time.getSecond(currentTime: number) → number Returns the second of the given time.  ","version":null,"tagName":"h3"},{"title":"getMinute​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getMinute","content":"&lt;/&gt; Time.getMinute(currentTime: number) → number Returns the minute of the given time.  ","version":null,"tagName":"h3"},{"title":"getHour​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getHour","content":"&lt;/&gt; Time.getHour(currentTime: number) → number Returns the hour of the given time in 24-hour format.  ","version":null,"tagName":"h3"},{"title":"getDay​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getDay","content":"&lt;/&gt; Time.getDay(currentTime: number) → number Returns the day of the year for the given time.  ","version":null,"tagName":"h3"},{"title":"getYear​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getYear","content":"&lt;/&gt; Time.getYear(currentTime: number) → number Returns the year for the given time.  ","version":null,"tagName":"h3"},{"title":"getYearShort​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getYearShort","content":"&lt;/&gt; Time.getYearShort(currentTime: number) → number Returns the last two digits of the year for the given time.  ","version":null,"tagName":"h3"},{"title":"getYearShortFormatted​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getYearShortFormatted","content":"&lt;/&gt; Time.getYearShortFormatted(currentTime: number) → string Returns the last two digits of the year formatted as a string.  ","version":null,"tagName":"h3"},{"title":"getMonth​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getMonth","content":"&lt;/&gt; Time.getMonth(currentTime: number) → number? Returns the month of the given time.  ","version":null,"tagName":"h3"},{"title":"getFormattedMonth​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getFormattedMonth","content":"&lt;/&gt; Time.getFormattedMonth(currentTime: number) → string Returns the month formatted as a two-digit string.  ","version":null,"tagName":"h3"},{"title":"getDayOfTheMonth​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getDayOfTheMonth","content":"&lt;/&gt; Time.getDayOfTheMonth(currentTime: number) → number? Returns the day of the month for the given time.  ","version":null,"tagName":"h3"},{"title":"getFormattedDayOfTheMonth​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getFormattedDayOfTheMonth","content":"&lt;/&gt; Time.getFormattedDayOfTheMonth(currentTime: number) → string Returns the day of the month formatted as a two-digit string.  ","version":null,"tagName":"h3"},{"title":"getMonthName​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getMonthName","content":"&lt;/&gt; Time.getMonthName(currentTime: number) → string Returns the full name of the month for the given time.  ","version":null,"tagName":"h3"},{"title":"getMonthNameShort​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getMonthNameShort","content":"&lt;/&gt; Time.getMonthNameShort(currentTime: number) → string Returns the abbreviated name of the month for the given time.  ","version":null,"tagName":"h3"},{"title":"getJulianDate​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getJulianDate","content":"&lt;/&gt; Time.getJulianDate(currentTime: number) → number Calculates the Julian date for the given time.  ","version":null,"tagName":"h3"},{"title":"getDayOfTheWeek​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getDayOfTheWeek","content":"&lt;/&gt; Time.getDayOfTheWeek(currentTime: number) → number Returns the day of the week as a number (0-6) for the given time.  ","version":null,"tagName":"h3"},{"title":"getDayOfTheWeekName​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getDayOfTheWeekName","content":"&lt;/&gt; Time.getDayOfTheWeekName(currentTime: number) → string Returns the full name of the day of the week for the given time.  ","version":null,"tagName":"h3"},{"title":"getDayOfTheWeekNameShort​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getDayOfTheWeekNameShort","content":"&lt;/&gt; Time.getDayOfTheWeekNameShort(currentTime: number) → string Returns the abbreviated name of the day of the week for the given time.  ","version":null,"tagName":"h3"},{"title":"getOrdinalOfNumber​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getOrdinalOfNumber","content":"&lt;/&gt; Time.getOrdinalOfNumber(number: number) → string Returns the ordinal suffix (e.g., &quot;st&quot;, &quot;nd&quot;, &quot;rd&quot;, &quot;th&quot;) for a given number.  ","version":null,"tagName":"h3"},{"title":"getDayOfTheMonthOrdinal​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getDayOfTheMonthOrdinal","content":"&lt;/&gt; Time.getDayOfTheMonthOrdinal(currentTime: number) → string? Returns the ordinal suffix for the day of the month for the given time.  ","version":null,"tagName":"h3"},{"title":"getFormattedSecond​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getFormattedSecond","content":"&lt;/&gt; Time.getFormattedSecond(currentTime: number) → string Returns the second formatted as a two-digit string.  ","version":null,"tagName":"h3"},{"title":"getFormattedMinute​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getFormattedMinute","content":"&lt;/&gt; Time.getFormattedMinute(currentTime: number) → string Returns the minute formatted as a two-digit string.  ","version":null,"tagName":"h3"},{"title":"getRegularHour​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getRegularHour","content":"&lt;/&gt; Time.getRegularHour(currentTime: number) → number Returns the hour in 12-hour format.  ","version":null,"tagName":"h3"},{"title":"getHourFormatted​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getHourFormatted","content":"&lt;/&gt; Time.getHourFormatted(currentTime: number) → string Returns the hour formatted as a two-digit string in 24-hour format.  ","version":null,"tagName":"h3"},{"title":"getRegularHourFormatted​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getRegularHourFormatted","content":"&lt;/&gt; Time.getRegularHourFormatted(currentTime: number) → string Returns the hour formatted as a two-digit string in 12-hour format.  ","version":null,"tagName":"h3"},{"title":"getamOrpm​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getamOrpm","content":"&lt;/&gt; Time.getamOrpm(currentTime: number) → &quot;am&quot; | &quot;pm&quot; Returns &quot;am&quot; or &quot;pm&quot; based on the given time.  ","version":null,"tagName":"h3"},{"title":"getAMorPM​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getAMorPM","content":"&lt;/&gt; Time.getAMorPM(currentTime: number) → &quot;AM&quot; | &quot;PM&quot; Returns &quot;AM&quot; or &quot;PM&quot; based on the given time.  ","version":null,"tagName":"h3"},{"title":"getMilitaryHour​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getMilitaryHour","content":"&lt;/&gt; Time.getMilitaryHour(currentTime: number) → string Reports the time in 24-hour format as a two-digit string.  ","version":null,"tagName":"h3"},{"title":"isLeapYear​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#isLeapYear","content":"&lt;/&gt; Time.isLeapYear(currentTime: number) → boolean Determines if the year of the given time is a leap year.  ","version":null,"tagName":"h3"},{"title":"getDaysInMonth​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getDaysInMonth","content":"&lt;/&gt; Time.getDaysInMonth(currentTime: number) → number Returns the number of days in the month for the given time.  ","version":null,"tagName":"h3"},{"title":"getFormattedTime​","type":1,"pageTitle":"Time","url":"/NevermoreEngine/api/Time#getFormattedTime","content":"&lt;/&gt; Time.getFormattedTime( format: string, currentTime: number ) → string Formats the given time based on the provided format string. ","version":null,"tagName":"h3"},{"title":"TimeSyncService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TimeSyncService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TimeSyncService","url":"/NevermoreEngine/api/TimeSyncService#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"TimeSyncService","url":"/NevermoreEngine/api/TimeSyncService#Init","content":"&lt;/&gt; TimeSyncService.Init(self: TimeSyncService) → () Initializes the TimeSyncService  ","version":null,"tagName":"h3"},{"title":"IsSynced​","type":1,"pageTitle":"TimeSyncService","url":"/NevermoreEngine/api/TimeSyncService#IsSynced","content":"&lt;/&gt; TimeSyncService.IsSynced(self: TimeSyncService) → boolean Returns true if the clock is synced. If the clock is synced, then it can be retrieved.  ","version":null,"tagName":"h3"},{"title":"WaitForSyncedClock​","type":1,"pageTitle":"TimeSyncService","url":"/NevermoreEngine/api/TimeSyncService#WaitForSyncedClock","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; TimeSyncService.WaitForSyncedClock(self: TimeSyncService) → MasterClock | SlaveClock Waits for the synced clock, or throws an error.  ","version":null,"tagName":"h3"},{"title":"GetSyncedClock​","type":1,"pageTitle":"TimeSyncService","url":"/NevermoreEngine/api/TimeSyncService#GetSyncedClock","content":"&lt;/&gt; TimeSyncService.GetSyncedClock(self: TimeSyncService) → MasterClock | SlaveClock | nil Returns a synced clock if there is one available. Otherwise, returns nil.  ","version":null,"tagName":"h3"},{"title":"PromiseSyncedClock​","type":1,"pageTitle":"TimeSyncService","url":"/NevermoreEngine/api/TimeSyncService#PromiseSyncedClock","content":"&lt;/&gt; TimeSyncService.PromiseSyncedClock(self: TimeSyncService) → Promise&lt;MasterClock | SlaveClock&gt; Promises a synced clock  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"TimeSyncService","url":"/NevermoreEngine/api/TimeSyncService#Destroy","content":"&lt;/&gt; TimeSyncService.Destroy(self: TimeSyncService) → () Cleans up the time syncronization service. ","version":null,"tagName":"h3"},{"title":"ToolUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ToolUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ToolUtils","url":"/NevermoreEngine/api/ToolUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getEquippedHumanoid​","type":1,"pageTitle":"ToolUtils","url":"/NevermoreEngine/api/ToolUtils#getEquippedHumanoid","content":"&lt;/&gt; ToolUtils.getEquippedHumanoid(tool: Tool ) → Humanoid?  Gets the equipped humanoid for a given tool  ","version":null,"tagName":"h3"},{"title":"getEquippedPlayer​","type":1,"pageTitle":"ToolUtils","url":"/NevermoreEngine/api/ToolUtils#getEquippedPlayer","content":"&lt;/&gt; ToolUtils.getEquippedPlayer(tool: Tool ) → Player?  Gets the equipped player for a given tool ","version":null,"tagName":"h3"},{"title":"TimeSyncUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TimeSyncUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TimeSyncUtils","url":"/NevermoreEngine/api/TimeSyncUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseClockSynced​","type":1,"pageTitle":"TimeSyncUtils","url":"/NevermoreEngine/api/TimeSyncUtils#promiseClockSynced","content":"&lt;/&gt; TimeSyncUtils.promiseClockSynced(clock: MasterClock | SlaveClock) → Promise&lt;MasterClock | SlaveClock&gt; Given a clock, returns a promise that resolves when the clock is syncronized. ","version":null,"tagName":"h3"},{"title":"TorsoIKBase","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TorsoIKBase","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TorsoIKBase","url":"/NevermoreEngine/api/TorsoIKBase#functions","content":" ","version":null,"tagName":"h2"},{"title":"GetTargetUpperTorsoCFrame​","type":1,"pageTitle":"TorsoIKBase","url":"/NevermoreEngine/api/TorsoIKBase#GetTargetUpperTorsoCFrame","content":"&lt;/&gt; TorsoIKBase:GetTargetUpperTorsoCFrame() → CFrame?  Helper method used for other IK ","version":null,"tagName":"h3"},{"title":"TorsoIKUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TorsoIKUtils","content":"TorsoIKUtils","keywords":"","version":null},{"title":"TouchingPartUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TouchingPartUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TouchingPartUtils","url":"/NevermoreEngine/api/TouchingPartUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getAllTouchingParts​","type":1,"pageTitle":"TouchingPartUtils","url":"/NevermoreEngine/api/TouchingPartUtils#getAllTouchingParts","content":"&lt;/&gt; TouchingPartUtils.getAllTouchingParts(part: BasePart ) → {BasePart } Gets all the touching parts to a base part  ","version":null,"tagName":"h3"},{"title":"getBoundingBoxParts​","type":1,"pageTitle":"TouchingPartUtils","url":"/NevermoreEngine/api/TouchingPartUtils#getBoundingBoxParts","content":"&lt;/&gt; TouchingPartUtils.getBoundingBoxParts( cframe: CFrame , size: Vector3 ) → {BasePart } Returns all parts that are touching the given part. ","version":null,"tagName":"h3"},{"title":"TouchButtonScoredActionPicker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TouchButtonScoredActionPicker","content":"TouchButtonScoredActionPicker We need to handle touch buttons separately because we may have as many of these as we want.","keywords":"","version":null},{"title":"TrackCamera","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TrackCamera","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"TrackCamera","url":"/NevermoreEngine/api/TrackCamera#properties","content":" ","version":null,"tagName":"h2"},{"title":"CameraState​","type":1,"pageTitle":"TrackCamera","url":"/NevermoreEngine/api/TrackCamera#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; TrackCamera.CameraState: CameraState The current state.  ","version":null,"tagName":"h3"},{"title":"FieldOfView​","type":1,"pageTitle":"TrackCamera","url":"/NevermoreEngine/api/TrackCamera#FieldOfView","content":"&lt;/&gt; TrackCamera.FieldOfView: number The current field of view.  ","version":null,"tagName":"h3"},{"title":"CameraSubject​","type":1,"pageTitle":"TrackCamera","url":"/NevermoreEngine/api/TrackCamera#CameraSubject","content":"&lt;/&gt; TrackCamera.CameraSubject: Instance  The current field of view. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"TrackCamera","url":"/NevermoreEngine/api/TrackCamera#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"TrackCamera","url":"/NevermoreEngine/api/TrackCamera#new","content":"&lt;/&gt; TrackCamera.new( cameraSubject: Instance? -- The CameraSubject to look at. A Roblox part of Roblox model ) → TrackCamera Constructs a new TrackCamera ","version":null,"tagName":"h3"},{"title":"trajectory","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/trajectory","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"trajectory","url":"/NevermoreEngine/api/trajectory#functions","content":" ","version":null,"tagName":"h2"},{"title":"trajectory​","type":1,"pageTitle":"trajectory","url":"/NevermoreEngine/api/trajectory#trajectory","content":"&lt;/&gt; trajectory.trajectory( origin: Vector3 ,-- Origin the the bullet target: Vector3 ,-- Target for the bullet initialVelocity: number,-- Magnitude of the initial velocity gravityForce: number-- Force of the gravity ) → ( Vector3? ,-- lowTrajectory Initial velocity for a low trajectory arc Vector3? ,-- highTrajectory Initial velocity for a high trajectory arc Vector3? -- fallbackTrajectory Trajectory directly at target as afallback ) Returns two possible paths from origin to target where the magnitude of the initial velocity is initialVelocity ","version":null,"tagName":"h3"},{"title":"TrajectoryDrawUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TrajectoryDrawUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TrajectoryDrawUtils","url":"/NevermoreEngine/api/TrajectoryDrawUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"draw​","type":1,"pageTitle":"TrajectoryDrawUtils","url":"/NevermoreEngine/api/TrajectoryDrawUtils#draw","content":"&lt;/&gt; TrajectoryDrawUtils.draw( velocity: Vector3 , origin: Vector3 , target: Vector3 , accel: Vector3 ) → Maid.MaidTask Draws a trajectory out for debugging purposes ","version":null,"tagName":"h3"},{"title":"TransitionUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TransitionUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TransitionUtils","url":"/NevermoreEngine/api/TransitionUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"isTransition​","type":1,"pageTitle":"TransitionUtils","url":"/NevermoreEngine/api/TransitionUtils#isTransition","content":"&lt;/&gt; TransitionUtils.isTransition(value: any) → boolean Returns true if the value is a transition, that is, it implements the following methods: PromiseShow PromiseHide PromiseToggle ","version":null,"tagName":"h3"},{"title":"TransitionModel","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TransitionModel","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TransitionModel","url":"/NevermoreEngine/api/TransitionModel#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"TransitionModel","url":"/NevermoreEngine/api/TransitionModel#new","content":"&lt;/&gt; TransitionModel.new() → TransitionModel A transition model that takes a set amount of time to show and hide. Can be used just like a BasicPane (in fact, it inherits from it), but additionally allows for variable length show and hide calls.  ","version":null,"tagName":"h3"},{"title":"isTransitionModel​","type":1,"pageTitle":"TransitionModel","url":"/NevermoreEngine/api/TransitionModel#isTransitionModel","content":"&lt;/&gt; TransitionModel.isTransitionModel(value: any) → boolean Returnes true if it's a transition model  ","version":null,"tagName":"h3"},{"title":"PromiseShow​","type":1,"pageTitle":"TransitionModel","url":"/NevermoreEngine/api/TransitionModel#PromiseShow","content":"&lt;/&gt; TransitionModel.PromiseShow( self: TransitionModel, doNotAnimate: boolean ) → Promise Shows the model and promises when the showing is complete.  ","version":null,"tagName":"h3"},{"title":"PromiseHide​","type":1,"pageTitle":"TransitionModel","url":"/NevermoreEngine/api/TransitionModel#PromiseHide","content":"&lt;/&gt; TransitionModel.PromiseHide( self: TransitionModel, doNotAnimate: boolean ) → Promise Hides the model and promises when the showing is complete.  ","version":null,"tagName":"h3"},{"title":"PromiseToggle​","type":1,"pageTitle":"TransitionModel","url":"/NevermoreEngine/api/TransitionModel#PromiseToggle","content":"&lt;/&gt; TransitionModel.PromiseToggle( self: TransitionModel, doNotAnimate: boolean ) → Promise Toggles the model and promises when the transition is complete.  ","version":null,"tagName":"h3"},{"title":"IsShowingComplete​","type":1,"pageTitle":"TransitionModel","url":"/NevermoreEngine/api/TransitionModel#IsShowingComplete","content":"&lt;/&gt; TransitionModel.IsShowingComplete(self: TransitionModel) → boolean? Returns true if showing is complete  ","version":null,"tagName":"h3"},{"title":"IsHidingComplete​","type":1,"pageTitle":"TransitionModel","url":"/NevermoreEngine/api/TransitionModel#IsHidingComplete","content":"&lt;/&gt; TransitionModel.IsHidingComplete(self: TransitionModel) → boolean? Returns true if hiding is complete  ","version":null,"tagName":"h3"},{"title":"ObserveIsShowingComplete​","type":1,"pageTitle":"TransitionModel","url":"/NevermoreEngine/api/TransitionModel#ObserveIsShowingComplete","content":"&lt;/&gt; TransitionModel.ObserveIsShowingComplete(self: TransitionModel) → Observable&lt;boolean&gt; Observe is showing is complete  ","version":null,"tagName":"h3"},{"title":"ObserveIsHidingComplete​","type":1,"pageTitle":"TransitionModel","url":"/NevermoreEngine/api/TransitionModel#ObserveIsHidingComplete","content":"&lt;/&gt; TransitionModel.ObserveIsHidingComplete(self: TransitionModel) → Observable&lt;boolean&gt; Observe is hiding is complete  ","version":null,"tagName":"h3"},{"title":"BindToPaneVisbility​","type":1,"pageTitle":"TransitionModel","url":"/NevermoreEngine/api/TransitionModel#BindToPaneVisbility","content":"&lt;/&gt; TransitionModel.BindToPaneVisbility( self: TransitionModel, pane: BasicPane ) → function-- Cleanup function Binds the transition model to the actual visiblity of the pane  ","version":null,"tagName":"h3"},{"title":"SetPromiseShow​","type":1,"pageTitle":"TransitionModel","url":"/NevermoreEngine/api/TransitionModel#SetPromiseShow","content":"&lt;/&gt; TransitionModel.SetPromiseShow( self: TransitionModel, showCallback: function?-- Callback which should return a promise ) → () Sets the callback which will handle showing the transition  ","version":null,"tagName":"h3"},{"title":"SetPromiseHide​","type":1,"pageTitle":"TransitionModel","url":"/NevermoreEngine/api/TransitionModel#SetPromiseHide","content":"&lt;/&gt; TransitionModel.SetPromiseHide( self: TransitionModel, hideCallback: function?-- Callback which should return a promise ) → () Sets the callback which will handle hiding the transition ","version":null,"tagName":"h3"},{"title":"TranslationKeyUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TranslationKeyUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TranslationKeyUtils","url":"/NevermoreEngine/api/TranslationKeyUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"getTranslationKey​","type":1,"pageTitle":"TranslationKeyUtils","url":"/NevermoreEngine/api/TranslationKeyUtils#getTranslationKey","content":"&lt;/&gt; TranslationKeyUtils.getTranslationKey( prefix: string, text: string ) → string Converts a string to a translation key in a fixed format, with a maximum length ","version":null,"tagName":"h3"},{"title":"TranslatorService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TranslatorService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TranslatorService","url":"/NevermoreEngine/api/TranslatorService#functions","content":" ","version":null,"tagName":"h2"},{"title":"ObserveTranslator​","type":1,"pageTitle":"TranslatorService","url":"/NevermoreEngine/api/TranslatorService#ObserveTranslator","content":"&lt;/&gt; TranslatorService.ObserveTranslator(self: TranslatorService) → Observable&lt;Translator &gt; Observes Roblox translator  ","version":null,"tagName":"h3"},{"title":"PromiseTranslator​","type":1,"pageTitle":"TranslatorService","url":"/NevermoreEngine/api/TranslatorService#PromiseTranslator","content":"&lt;/&gt; TranslatorService.PromiseTranslator(self: TranslatorService) → Observable&lt;Translator &gt; Promises the Roblox translator  ","version":null,"tagName":"h3"},{"title":"GetTranslator​","type":1,"pageTitle":"TranslatorService","url":"/NevermoreEngine/api/TranslatorService#GetTranslator","content":"&lt;/&gt; TranslatorService.GetTranslator(self: TranslatorService) → Translator?  Gets the current translator to use  ","version":null,"tagName":"h3"},{"title":"ObserveLocaleId​","type":1,"pageTitle":"TranslatorService","url":"/NevermoreEngine/api/TranslatorService#ObserveLocaleId","content":"&lt;/&gt; TranslatorService.ObserveLocaleId(self: TranslatorService) → Observable&lt;string&gt; Observes the current locale id for this translator.  ","version":null,"tagName":"h3"},{"title":"GetLocaleId​","type":1,"pageTitle":"TranslatorService","url":"/NevermoreEngine/api/TranslatorService#GetLocaleId","content":"&lt;/&gt; TranslatorService.GetLocaleId(self: TranslatorService) → string Gets the localeId to use ","version":null,"tagName":"h3"},{"title":"TransparencyService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TransparencyService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TransparencyService","url":"/NevermoreEngine/api/TransparencyService#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"TransparencyService","url":"/NevermoreEngine/api/TransparencyService#Init","content":"&lt;/&gt; TransparencyService.Init(self: TransparencyService) → () Initializes the transparency service  ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"TransparencyService","url":"/NevermoreEngine/api/TransparencyService#Destroy","content":"&lt;/&gt; TransparencyService.Destroy(self: TransparencyService) → () Uninitializes the transparency service, restoring transparency to original values.  ","version":null,"tagName":"h3"},{"title":"SetTransparency​","type":1,"pageTitle":"TransparencyService","url":"/NevermoreEngine/api/TransparencyService#SetTransparency","content":"&lt;/&gt; TransparencyService.SetTransparency( self: TransparencyService, key: any, part: Instance , transparency: number ) → () Sets the transparency of the part  ","version":null,"tagName":"h3"},{"title":"SetLocalTransparencyModifier​","type":1,"pageTitle":"TransparencyService","url":"/NevermoreEngine/api/TransparencyService#SetLocalTransparencyModifier","content":"&lt;/&gt; TransparencyService.SetLocalTransparencyModifier( self: TransparencyService, key: any, part: Instance , transparency: number ) → () Sets the local transparency modifier of the part ","version":null,"tagName":"h3"},{"title":"TupleLookup","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TupleLookup","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TupleLookup","url":"/NevermoreEngine/api/TupleLookup#functions","content":" ","version":null,"tagName":"h2"},{"title":"ToTuple​","type":1,"pageTitle":"TupleLookup","url":"/NevermoreEngine/api/TupleLookup#ToTuple","content":"&lt;/&gt; TupleLookup.ToTuple( self: TupleLookup, ...: any ) → Tuple&lt;T...&gt; Gets a shared tuple with a weak table ","version":null,"tagName":"h3"},{"title":"TypeUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/TypeUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"TypeUtils","url":"/NevermoreEngine/api/TypeUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"anyValue​","type":1,"pageTitle":"TypeUtils","url":"/NevermoreEngine/api/TypeUtils#anyValue","content":"&lt;/&gt; TypeUtils.anyValue(...: any) → ...any Type checking hack to convert a typed variable argument parameter to a type of any ","version":null,"tagName":"h3"},{"title":"Tuple","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Tuple","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Tuple","url":"/NevermoreEngine/api/Tuple#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Tuple","url":"/NevermoreEngine/api/Tuple#new","content":"&lt;/&gt; Tuple.new(...: any) → Tuple&lt;T...&gt; Constructs a new tuple  ","version":null,"tagName":"h3"},{"title":"isTuple​","type":1,"pageTitle":"Tuple","url":"/NevermoreEngine/api/Tuple#isTuple","content":"&lt;/&gt; Tuple.isTuple(value: any) → boolean Returns true of the value is a tuple  ","version":null,"tagName":"h3"},{"title":"Unpack​","type":1,"pageTitle":"Tuple","url":"/NevermoreEngine/api/Tuple#Unpack","content":"&lt;/&gt; Tuple.Unpack(self: Tuple&lt;T...&gt;) → T Unpacks the tuple  ","version":null,"tagName":"h3"},{"title":"ToArray​","type":1,"pageTitle":"Tuple","url":"/NevermoreEngine/api/Tuple#ToArray","content":"&lt;/&gt; Tuple.ToArray(self: Tuple&lt;T...&gt;) → {T...} Converts to array  ","version":null,"tagName":"h3"},{"title":"__tostring​","type":1,"pageTitle":"Tuple","url":"/NevermoreEngine/api/Tuple#__tostring","content":"&lt;/&gt; Tuple.__tostring(self: Tuple&lt;T...&gt;) → string Converts the tuple to a string for easy debugging  ","version":null,"tagName":"h3"},{"title":"__len​","type":1,"pageTitle":"Tuple","url":"/NevermoreEngine/api/Tuple#__len","content":"&lt;/&gt; Tuple.__len(self: Tuple&lt;T...&gt;) → number Returns the length of the tuple  ","version":null,"tagName":"h3"},{"title":"__eq​","type":1,"pageTitle":"Tuple","url":"/NevermoreEngine/api/Tuple#__eq","content":"&lt;/&gt; Tuple.__eq( self: Tuple&lt;T...&gt;, other: Tuple ) → boolean Compares the tuple to another tuple  ","version":null,"tagName":"h3"},{"title":"__add​","type":1,"pageTitle":"Tuple","url":"/NevermoreEngine/api/Tuple#__add","content":"&lt;/&gt; Tuple.__add( self: Tuple&lt;T...&gt;, other: Tuple ) → Tuple&lt;T...&gt; Combines the tuple  ","version":null,"tagName":"h3"},{"title":"Tuple()​","type":1,"pageTitle":"Tuple","url":"/NevermoreEngine/api/Tuple#__call","content":"&lt;/&gt; Tuple(self: Tuple&lt;T...&gt;) → ... Unpacks the tuple ","version":null,"tagName":"h3"},{"title":"UICornerUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/UICornerUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"UICornerUtils","url":"/NevermoreEngine/api/UICornerUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"fromScale​","type":1,"pageTitle":"UICornerUtils","url":"/NevermoreEngine/api/UICornerUtils#fromScale","content":"&lt;/&gt; UICornerUtils.fromScale( scale: number, parent: Instance ) → UICorner  Creates a new UI corner  ","version":null,"tagName":"h3"},{"title":"fromOffset​","type":1,"pageTitle":"UICornerUtils","url":"/NevermoreEngine/api/UICornerUtils#fromOffset","content":"&lt;/&gt; UICornerUtils.fromOffset( offset: number, parent: Instance ) → UICorner  Creates a new UI corner from offset  ","version":null,"tagName":"h3"},{"title":"clampPositionToFrame​","type":1,"pageTitle":"UICornerUtils","url":"/NevermoreEngine/api/UICornerUtils#clampPositionToFrame","content":"&lt;/&gt; UICornerUtils.clampPositionToFrame( framePosition: Vector2 ,-- From top left corner frameSize: Vector2 , radius: number, point: Vector2 ) → ( Vector2? ,-- Position Vector2? -- Normal ) Clamps a position to a frame with a rounded corner ","version":null,"tagName":"h3"},{"title":"UIPaddingUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/UIPaddingUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"UIPaddingUtils","url":"/NevermoreEngine/api/UIPaddingUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"fromUDim​","type":1,"pageTitle":"UIPaddingUtils","url":"/NevermoreEngine/api/UIPaddingUtils#fromUDim","content":"&lt;/&gt; UIPaddingUtils.fromUDim(udim: UDim ) → UIPadding  Constructs a new UIPadding from a UDim  ","version":null,"tagName":"h3"},{"title":"getTotalPadding​","type":1,"pageTitle":"UIPaddingUtils","url":"/NevermoreEngine/api/UIPaddingUtils#getTotalPadding","content":"&lt;/&gt; UIPaddingUtils.getTotalPadding(uiPadding: UIPadding ) → UDim2  Compute the total padding for the UIPadding  ","version":null,"tagName":"h3"},{"title":"getTotalAbsolutePadding​","type":1,"pageTitle":"UIPaddingUtils","url":"/NevermoreEngine/api/UIPaddingUtils#getTotalAbsolutePadding","content":"&lt;/&gt; UIPaddingUtils.getTotalAbsolutePadding( uiPadding: UIPadding , absoluteSize: Vector2 ) → Vector2  Computes the total absolute padding for a UIPadding  ","version":null,"tagName":"h3"},{"title":"getHorizontalPadding​","type":1,"pageTitle":"UIPaddingUtils","url":"/NevermoreEngine/api/UIPaddingUtils#getHorizontalPadding","content":"&lt;/&gt; UIPaddingUtils.getHorizontalPadding(uiPadding: UIPadding ) → UDim  Compute the horizontal Padding ","version":null,"tagName":"h3"},{"title":"UIAlignmentUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/UIAlignmentUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"UIAlignmentUtils","url":"/NevermoreEngine/api/UIAlignmentUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"toNumber​","type":1,"pageTitle":"UIAlignmentUtils","url":"/NevermoreEngine/api/UIAlignmentUtils#toNumber","content":"&lt;/&gt; UIAlignmentUtils.toNumber(alignment: HorizontalAlignment | VertialAlignment) → number Converts alignment to 0, 0.5 or 1  ","version":null,"tagName":"h3"},{"title":"verticalToHorizontalAlignment​","type":1,"pageTitle":"UIAlignmentUtils","url":"/NevermoreEngine/api/UIAlignmentUtils#verticalToHorizontalAlignment","content":"&lt;/&gt; UIAlignmentUtils.verticalToHorizontalAlignment(verticalAlignment: HorizontalAlignment ) → HorizontalAlignment  Converts the HorizontalAlignment to a HorizontalAlignment  ","version":null,"tagName":"h3"},{"title":"horizontalToVerticalAlignment​","type":1,"pageTitle":"UIAlignmentUtils","url":"/NevermoreEngine/api/UIAlignmentUtils#horizontalToVerticalAlignment","content":"&lt;/&gt; UIAlignmentUtils.horizontalToVerticalAlignment(horizontalAlignment: HorizontalAlignment ) → VertialAlignment Converts the HorizontalAlignment to a VertialAlignment  ","version":null,"tagName":"h3"},{"title":"toBias​","type":1,"pageTitle":"UIAlignmentUtils","url":"/NevermoreEngine/api/UIAlignmentUtils#toBias","content":"&lt;/&gt; UIAlignmentUtils.toBias(alignment: HorizontalAlignment | VertialAlignment) → number Converts alignment to bias, as -1, 0, or 1  ","version":null,"tagName":"h3"},{"title":"horizontalAlignmentToNumber​","type":1,"pageTitle":"UIAlignmentUtils","url":"/NevermoreEngine/api/UIAlignmentUtils#horizontalAlignmentToNumber","content":"&lt;/&gt; UIAlignmentUtils.horizontalAlignmentToNumber(horizontalAlignment: HorizontalAlignment ) → number Converts alignment to a number from 0 to 1  ","version":null,"tagName":"h3"},{"title":"horizontalAlignmentToBias​","type":1,"pageTitle":"UIAlignmentUtils","url":"/NevermoreEngine/api/UIAlignmentUtils#horizontalAlignmentToBias","content":"&lt;/&gt; UIAlignmentUtils.horizontalAlignmentToBias(horizontalAlignment: HorizontalAlignment ) → number Converts alignment to a number from -1 to 1  ","version":null,"tagName":"h3"},{"title":"verticalAlignmentToNumber​","type":1,"pageTitle":"UIAlignmentUtils","url":"/NevermoreEngine/api/UIAlignmentUtils#verticalAlignmentToNumber","content":"&lt;/&gt; UIAlignmentUtils.verticalAlignmentToNumber(verticalAlignment: VerticalAlignment ) → number Converts alignment to a number from 0 to 1  ","version":null,"tagName":"h3"},{"title":"verticalAlignmentToBias​","type":1,"pageTitle":"UIAlignmentUtils","url":"/NevermoreEngine/api/UIAlignmentUtils#verticalAlignmentToBias","content":"&lt;/&gt; UIAlignmentUtils.verticalAlignmentToBias(verticalAlignment: VerticalAlignment ) → number Converts alignment to a number from -1 to 1 ","version":null,"tagName":"h3"},{"title":"UIRotationUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/UIRotationUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"UIRotationUtils","url":"/NevermoreEngine/api/UIRotationUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"toUnitCircle​","type":1,"pageTitle":"UIRotationUtils","url":"/NevermoreEngine/api/UIRotationUtils#toUnitCircle","content":"&lt;/&gt; UIRotationUtils.toUnitCircle(rotationDegrees: number) → number Converts a rotation to the unit circle  ","version":null,"tagName":"h3"},{"title":"toUnitCircleDirection​","type":1,"pageTitle":"UIRotationUtils","url":"/NevermoreEngine/api/UIRotationUtils#toUnitCircleDirection","content":"&lt;/&gt; UIRotationUtils.toUnitCircleDirection(rotationDegrees: number) → Vector2  Converts a rotation to the unit circle direction  ","version":null,"tagName":"h3"},{"title":"toGuiDirection​","type":1,"pageTitle":"UIRotationUtils","url":"/NevermoreEngine/api/UIRotationUtils#toGuiDirection","content":"&lt;/&gt; UIRotationUtils.toGuiDirection(unitCircleDirection: Vector2 ) → Vector2  Converts a rotation to the gui rotation vector ","version":null,"tagName":"h3"},{"title":"UltrawideContainerUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/UltrawideContainerUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"UltrawideContainerUtils","url":"/NevermoreEngine/api/UltrawideContainerUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"createContainer​","type":1,"pageTitle":"UltrawideContainerUtils","url":"/NevermoreEngine/api/UltrawideContainerUtils#createContainer","content":"&lt;/&gt; UltrawideContainerUtils.createContainer( parent: Instance? -- The parent of the container. If nil, it will be set to nil. ) → ( Frame , UISizeConstraint )-- The created frame and the UISizeConstraint. Creates a new container for ultrawide screens. This is a frame with a UISizeConstraint that will scale the UI to 1920x1080.  ","version":null,"tagName":"h3"},{"title":"scaleSizeConstraint​","type":1,"pageTitle":"UltrawideContainerUtils","url":"/NevermoreEngine/api/UltrawideContainerUtils#scaleSizeConstraint","content":"&lt;/&gt; UltrawideContainerUtils.scaleSizeConstraint( container: Frame , uiSizeConstraint: UISizeConstraint , scale: number ) → () Scales the size constraint of the container to the given scale. ","version":null,"tagName":"h3"},{"title":"UndoableReducer","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/UndoableReducer","content":"UndoableReducer Simple undo redo stack history","keywords":"","version":null},{"title":"UndoStackEntry","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/UndoStackEntry","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"UndoStackEntry","url":"/NevermoreEngine/api/UndoStackEntry#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"UndoStackEntry","url":"/NevermoreEngine/api/UndoStackEntry#new","content":"&lt;/&gt; UndoStackEntry.new() → UndoStackEntry Constructs a new undo restack entry. See UndoStack for usage.  ","version":null,"tagName":"h3"},{"title":"isUndoStackEntry​","type":1,"pageTitle":"UndoStackEntry","url":"/NevermoreEngine/api/UndoStackEntry#isUndoStackEntry","content":"&lt;/&gt; UndoStackEntry.isUndoStackEntry(value: any) → boolean Returns true if the etnry is an undo stack entry  ","version":null,"tagName":"h3"},{"title":"SetPromiseUndo​","type":1,"pageTitle":"UndoStackEntry","url":"/NevermoreEngine/api/UndoStackEntry#SetPromiseUndo","content":"&lt;/&gt; UndoStackEntry.SetPromiseUndo( self: UndoStackEntry, promiseUndo: function | nil ) → () Sets the handler that will undo the result  ","version":null,"tagName":"h3"},{"title":"SetPromiseRedo​","type":1,"pageTitle":"UndoStackEntry","url":"/NevermoreEngine/api/UndoStackEntry#SetPromiseRedo","content":"&lt;/&gt; UndoStackEntry.SetPromiseRedo( self: UndoStackEntry, promiseRedo: function | nil ) → () Sets the handler that will redo the result  ","version":null,"tagName":"h3"},{"title":"HasUndo​","type":1,"pageTitle":"UndoStackEntry","url":"/NevermoreEngine/api/UndoStackEntry#HasUndo","content":"&lt;/&gt; UndoStackEntry.HasUndo(self: UndoStackEntry) → boolean Returns true if this entry can be undone  ","version":null,"tagName":"h3"},{"title":"HasRedo​","type":1,"pageTitle":"UndoStackEntry","url":"/NevermoreEngine/api/UndoStackEntry#HasRedo","content":"&lt;/&gt; UndoStackEntry.HasRedo(self: UndoStackEntry) → boolean Returns true if this entry can be redone  ","version":null,"tagName":"h3"},{"title":"PromiseUndo​","type":1,"pageTitle":"UndoStackEntry","url":"/NevermoreEngine/api/UndoStackEntry#PromiseUndo","content":"&lt;/&gt; UndoStackEntry.PromiseUndo( self: UndoStackEntry, maid: Maid ) → Promise Promises undo. Should be done via UndoStack.PromiseUndo  ","version":null,"tagName":"h3"},{"title":"PromiseRedo​","type":1,"pageTitle":"UndoStackEntry","url":"/NevermoreEngine/api/UndoStackEntry#PromiseRedo","content":"&lt;/&gt; UndoStackEntry.PromiseRedo( self: UndoStackEntry, maid: Maid ) → Promise Promises redo execution. Should be done via UndoStack.PromiseRedo ","version":null,"tagName":"h3"},{"title":"UndoStack","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/UndoStack","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"UndoStack","url":"/NevermoreEngine/api/UndoStack#functions","content":" ","version":null,"tagName":"h2"},{"title":"ClearRedoStack​","type":1,"pageTitle":"UndoStack","url":"/NevermoreEngine/api/UndoStack#ClearRedoStack","content":"&lt;/&gt; UndoStack.ClearRedoStack(self: UndoStack) → boolean Clears the redo stack manually. This may be required if you do an action but can't push an undo.  ","version":null,"tagName":"h3"},{"title":"IsActionExecuting​","type":1,"pageTitle":"UndoStack","url":"/NevermoreEngine/api/UndoStack#IsActionExecuting","content":"&lt;/&gt; UndoStack.IsActionExecuting(self: UndoStack) → boolean Returns true if an action is executing  ","version":null,"tagName":"h3"},{"title":"ObserveHasUndoEntries​","type":1,"pageTitle":"UndoStack","url":"/NevermoreEngine/api/UndoStack#ObserveHasUndoEntries","content":"&lt;/&gt; UndoStack.ObserveHasUndoEntries(self: UndoStack) → Observable&lt;boolean&gt; Observes whether the stack has undo entries  ","version":null,"tagName":"h3"},{"title":"ObserveHasRedoEntries​","type":1,"pageTitle":"UndoStack","url":"/NevermoreEngine/api/UndoStack#ObserveHasRedoEntries","content":"&lt;/&gt; UndoStack.ObserveHasRedoEntries(self: UndoStack) → Observable&lt;boolean&gt; Observes whether the stack has redo entries  ","version":null,"tagName":"h3"},{"title":"HasUndoEntries​","type":1,"pageTitle":"UndoStack","url":"/NevermoreEngine/api/UndoStack#HasUndoEntries","content":"&lt;/&gt; UndoStack.HasUndoEntries(self: UndoStack) → boolean Returns true if there are undo entries on the stack  ","version":null,"tagName":"h3"},{"title":"HasRedoEntries​","type":1,"pageTitle":"UndoStack","url":"/NevermoreEngine/api/UndoStack#HasRedoEntries","content":"&lt;/&gt; UndoStack.HasRedoEntries(self: UndoStack) → boolean Returns true if there are redo entries on the stack  ","version":null,"tagName":"h3"},{"title":"Push​","type":1,"pageTitle":"UndoStack","url":"/NevermoreEngine/api/UndoStack#Push","content":"&lt;/&gt; UndoStack.Push( self: UndoStack, undoStackEntry: UndoStackEntry ) → function-- Callback that removes the action Pushes an action to be undone. local entry = UndoStackEntry.new() entry:SetPromiseUndo(function() return buildService:PromiseSellItem(item) end) entry:SetPromiseRedo(function() return buildService:PromisePlaceItem(item) end) maid:GiveTask(undoStack:Push(entry))   ","version":null,"tagName":"h3"},{"title":"Remove​","type":1,"pageTitle":"UndoStack","url":"/NevermoreEngine/api/UndoStack#Remove","content":"&lt;/&gt; UndoStack.Remove( self: UndoStack, undoStackEntry: Theundostackentrytoremove ) → () Removes the action specified from the stack entirely. If the action was queued to run, it may still run.  ","version":null,"tagName":"h3"},{"title":"PromiseUndo​","type":1,"pageTitle":"UndoStack","url":"/NevermoreEngine/api/UndoStack#PromiseUndo","content":"&lt;/&gt; UndoStack.PromiseUndo(self: UndoStack) → Promise Undoes from the stack. If a current action is going on, it will finish running.  ","version":null,"tagName":"h3"},{"title":"PromiseRedo​","type":1,"pageTitle":"UndoStack","url":"/NevermoreEngine/api/UndoStack#PromiseRedo","content":"&lt;/&gt; UndoStack.PromiseRedo(self: UndoStack) → Promise Redoes the from the stack. If a current action is going on, it will be queued. ","version":null,"tagName":"h3"},{"title":"UnragdollAutomatically","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/UnragdollAutomatically","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"UnragdollAutomatically","url":"/NevermoreEngine/api/UnragdollAutomatically#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"UnragdollAutomatically","url":"/NevermoreEngine/api/UnragdollAutomatically#new","content":"&lt;/&gt; UnragdollAutomatically.new( humanoid: Humanoid , serviceBag: ServiceBag ) → UnragdollAutomatically Constructs a new UnragdollAutomatically. This class exports a Binder. ","version":null,"tagName":"h3"},{"title":"UnragdollAutomaticallyConstants","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/UnragdollAutomaticallyConstants","content":"UnragdollAutomaticallyConstants","keywords":"","version":null},{"title":"UserInfoAggregator","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/UserInfoAggregator","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"UserInfoAggregator","url":"/NevermoreEngine/api/UserInfoAggregator#functions","content":" ","version":null,"tagName":"h2"},{"title":"PromiseUserInfo​","type":1,"pageTitle":"UserInfoAggregator","url":"/NevermoreEngine/api/UserInfoAggregator#PromiseUserInfo","content":"&lt;/&gt; UserInfoAggregator:PromiseUserInfo(userId: number) → Promise&lt;UserInfo&gt; Promises the user info for the given user, aggregating all requests to reduce calls into Roblox.  ","version":null,"tagName":"h3"},{"title":"PromiseDisplayName​","type":1,"pageTitle":"UserInfoAggregator","url":"/NevermoreEngine/api/UserInfoAggregator#PromiseDisplayName","content":"&lt;/&gt; UserInfoAggregator:PromiseDisplayName(userId: number) → Promise&lt;string&gt; Promises the user display name for the userId  ","version":null,"tagName":"h3"},{"title":"PromiseUsername​","type":1,"pageTitle":"UserInfoAggregator","url":"/NevermoreEngine/api/UserInfoAggregator#PromiseUsername","content":"&lt;/&gt; UserInfoAggregator:PromiseUsername(userId: number) → Promise&lt;string&gt; Promises the Username for the userId  ","version":null,"tagName":"h3"},{"title":"PromiseHasVerifiedBadge​","type":1,"pageTitle":"UserInfoAggregator","url":"/NevermoreEngine/api/UserInfoAggregator#PromiseHasVerifiedBadge","content":"&lt;/&gt; UserInfoAggregator:PromiseHasVerifiedBadge(userId: number) → Promise&lt;boolean&gt; Promises the user display name for the userId  ","version":null,"tagName":"h3"},{"title":"ObserveUserInfo​","type":1,"pageTitle":"UserInfoAggregator","url":"/NevermoreEngine/api/UserInfoAggregator#ObserveUserInfo","content":"&lt;/&gt; UserInfoAggregator:ObserveUserInfo(userId: number) → Observable&lt;UserInfo&gt; Observes the user display name for the userId  ","version":null,"tagName":"h3"},{"title":"ObserveDisplayName​","type":1,"pageTitle":"UserInfoAggregator","url":"/NevermoreEngine/api/UserInfoAggregator#ObserveDisplayName","content":"&lt;/&gt; UserInfoAggregator:ObserveDisplayName(userId: number) → Observable&lt;string&gt; Observes the user display name for the userId  ","version":null,"tagName":"h3"},{"title":"ObserveUsername​","type":1,"pageTitle":"UserInfoAggregator","url":"/NevermoreEngine/api/UserInfoAggregator#ObserveUsername","content":"&lt;/&gt; UserInfoAggregator:ObserveUsername(userId: number) → Observable&lt;string&gt; Observes the Username for the userId  ","version":null,"tagName":"h3"},{"title":"ObserveHasVerifiedBadge​","type":1,"pageTitle":"UserInfoAggregator","url":"/NevermoreEngine/api/UserInfoAggregator#ObserveHasVerifiedBadge","content":"&lt;/&gt; UserInfoAggregator:ObserveHasVerifiedBadge(userId: number) → Observable&lt;boolean&gt; Observes the user display name for the userId ","version":null,"tagName":"h3"},{"title":"UTF8","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/UTF8","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"UTF8","url":"/NevermoreEngine/api/UTF8#properties","content":" ","version":null,"tagName":"h2"},{"title":"UPPER_MAP​","type":1,"pageTitle":"UTF8","url":"/NevermoreEngine/api/UTF8#UPPER_MAP","content":"&lt;/&gt; UTF8.UPPER_MAP: {[string]: string} UTF8 lower to uppercase map  ","version":null,"tagName":"h3"},{"title":"LOWER_MAP​","type":1,"pageTitle":"UTF8","url":"/NevermoreEngine/api/UTF8#LOWER_MAP","content":"&lt;/&gt; UTF8.LOWER_MAP: {[string]: string} UTF8 uppercase to lowercase map ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"UTF8","url":"/NevermoreEngine/api/UTF8#functions","content":" ","version":null,"tagName":"h2"},{"title":"upper​","type":1,"pageTitle":"UTF8","url":"/NevermoreEngine/api/UTF8#upper","content":"&lt;/&gt; UTF8.upper(str: string) → string UTF8 uppercase  ","version":null,"tagName":"h3"},{"title":"lower​","type":1,"pageTitle":"UTF8","url":"/NevermoreEngine/api/UTF8#lower","content":"&lt;/&gt; UTF8.lower(str: string) → string UTF8 lowercase ","version":null,"tagName":"h3"},{"title":"UserInfoService","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/UserInfoService","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"UserInfoService","url":"/NevermoreEngine/api/UserInfoService#functions","content":" ","version":null,"tagName":"h2"},{"title":"PromiseUserInfo​","type":1,"pageTitle":"UserInfoService","url":"/NevermoreEngine/api/UserInfoService#PromiseUserInfo","content":"&lt;/&gt; UserInfoService:PromiseUserInfo(userId: number) → Promise&lt;UserInfo&gt; Promises the user info for the given user, aggregating all requests to reduce calls into Roblox.  ","version":null,"tagName":"h3"},{"title":"ObserveUserInfo​","type":1,"pageTitle":"UserInfoService","url":"/NevermoreEngine/api/UserInfoService#ObserveUserInfo","content":"&lt;/&gt; UserInfoService:ObserveUserInfo(userId: number) → Observable&lt;UserInfo&gt; Observes the user info for the user  ","version":null,"tagName":"h3"},{"title":"PromiseDisplayName​","type":1,"pageTitle":"UserInfoService","url":"/NevermoreEngine/api/UserInfoService#PromiseDisplayName","content":"&lt;/&gt; UserInfoService:PromiseDisplayName(userId: number) → Promise&lt;string&gt; Promises the user display name for the userId  ","version":null,"tagName":"h3"},{"title":"PromiseUsername​","type":1,"pageTitle":"UserInfoService","url":"/NevermoreEngine/api/UserInfoService#PromiseUsername","content":"&lt;/&gt; UserInfoService:PromiseUsername(userId: number) → Promise&lt;string&gt; Promises the Username for the userId  ","version":null,"tagName":"h3"},{"title":"ObserveDisplayName​","type":1,"pageTitle":"UserInfoService","url":"/NevermoreEngine/api/UserInfoService#ObserveDisplayName","content":"&lt;/&gt; UserInfoService:ObserveDisplayName(userId: number) → Observable&lt;string&gt; Observes the user display name for the userId ","version":null,"tagName":"h3"},{"title":"UserServiceUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/UserServiceUtils","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"UserServiceUtils","url":"/NevermoreEngine/api/UserServiceUtils#types","content":" ","version":null,"tagName":"h2"},{"title":"UserInfo​","type":1,"pageTitle":"UserServiceUtils","url":"/NevermoreEngine/api/UserServiceUtils#UserInfo","content":"&lt;/&gt; interface UserInfo { Id: number-- The Id associated with the UserInfoResponse object Username: string-- The username associated with the UserInfoResponse object DisplayName: string-- The display name associated with the UserInfoResponse object HasVerifiedBadge: boolean-- The HasVerifiedBadge value associated with the user. }  ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"UserServiceUtils","url":"/NevermoreEngine/api/UserServiceUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseUserInfosByUserIds​","type":1,"pageTitle":"UserServiceUtils","url":"/NevermoreEngine/api/UserServiceUtils#promiseUserInfosByUserIds","content":"&lt;/&gt; UserServiceUtils.promiseUserInfosByUserIds(userIds: {number}) → Promise&lt;{UserInfo}&gt; Wraps UserService:GetUserInfosByUserIdsAsync(userIds) ::: tip User UserInfoAggregator via UserInfoService to get this deduplicated. :::  ","version":null,"tagName":"h3"},{"title":"promiseUserInfo​","type":1,"pageTitle":"UserServiceUtils","url":"/NevermoreEngine/api/UserServiceUtils#promiseUserInfo","content":"&lt;/&gt; UserServiceUtils.promiseUserInfo(userId: number) → Promise&lt;UserInfo&gt; Wraps UserService:GetUserInfosByUserIdsAsync({ userId })[1] ::: tip User UserInfoAggregator via UserInfoService to get this deduplicated. :::  ","version":null,"tagName":"h3"},{"title":"promiseDisplayName​","type":1,"pageTitle":"UserServiceUtils","url":"/NevermoreEngine/api/UserServiceUtils#promiseDisplayName","content":"&lt;/&gt; UserServiceUtils.promiseDisplayName(userId: number) → Promise&lt;string&gt; Wraps UserService:GetUserInfosByUserIdsAsync({ userId })[1].DisplayName ::: tip User UserInfoAggregator via UserInfoService to get this deduplicated. :::  ","version":null,"tagName":"h3"},{"title":"promiseUserName​","type":1,"pageTitle":"UserServiceUtils","url":"/NevermoreEngine/api/UserServiceUtils#promiseUserName","content":"&lt;/&gt; UserServiceUtils.promiseUserName(userId: number) → Promise&lt;string&gt; Wraps UserService:GetUserInfosByUserIdsAsync({ userId })[1].Username ::: tip User UserInfoAggregator via UserInfoService to get this deduplicated. ::: ","version":null,"tagName":"h3"},{"title":"Utils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Utils","content":"Utils This item is only intended to be used by the module's authors. Private Utility methods to help with loader functionality.","keywords":"","version":null},{"title":"ValueBaseUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ValueBaseUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ValueBaseUtils","url":"/NevermoreEngine/api/ValueBaseUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"isValueBase​","type":1,"pageTitle":"ValueBaseUtils","url":"/NevermoreEngine/api/ValueBaseUtils#isValueBase","content":"&lt;/&gt; ValueBaseUtils.isValueBase(instance: Instance ) → boolean Returns true if the value is a ValueBase instance  ","version":null,"tagName":"h3"},{"title":"getValueBaseType​","type":1,"pageTitle":"ValueBaseUtils","url":"/NevermoreEngine/api/ValueBaseUtils#getValueBaseType","content":"&lt;/&gt; ValueBaseUtils.getValueBaseType(valueBaseClassName: string) → string? Gets the lua type for the given class name  ","version":null,"tagName":"h3"},{"title":"getClassNameFromType​","type":1,"pageTitle":"ValueBaseUtils","url":"/NevermoreEngine/api/ValueBaseUtils#getClassNameFromType","content":"&lt;/&gt; ValueBaseUtils.getClassNameFromType(luaType: string) → string? Gets class type for the given lua type  ","version":null,"tagName":"h3"},{"title":"getOrCreateValue​","type":1,"pageTitle":"ValueBaseUtils","url":"/NevermoreEngine/api/ValueBaseUtils#getOrCreateValue","content":"&lt;/&gt; ValueBaseUtils.getOrCreateValue( parent: Instance , instanceType: string, name: string, defaultValue: any? ) → Instance  Initializes the value as needed  ","version":null,"tagName":"h3"},{"title":"setValue​","type":1,"pageTitle":"ValueBaseUtils","url":"/NevermoreEngine/api/ValueBaseUtils#setValue","content":"&lt;/&gt; ValueBaseUtils.setValue( parent: Instance , instanceType: string, name: string, value: any ) → any Sets the value for the parent  ","version":null,"tagName":"h3"},{"title":"getValue​","type":1,"pageTitle":"ValueBaseUtils","url":"/NevermoreEngine/api/ValueBaseUtils#getValue","content":"&lt;/&gt; ValueBaseUtils.getValue( parent: Instance , instanceType: string, name: string, default: any? ) → any Gets the value in the children  ","version":null,"tagName":"h3"},{"title":"createGetSet​","type":1,"pageTitle":"ValueBaseUtils","url":"/NevermoreEngine/api/ValueBaseUtils#createGetSet","content":"&lt;/&gt; ValueBaseUtils.createGetSet( instanceType: string, name: string ) → ( function, function, function ) Gets a getter, setter, and initializer for the instance type and name. ","version":null,"tagName":"h3"},{"title":"ValueBaseValue","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ValueBaseValue","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ValueBaseValue","url":"/NevermoreEngine/api/ValueBaseValue#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"ValueBaseValue","url":"/NevermoreEngine/api/ValueBaseValue#new","content":"&lt;/&gt; ValueBaseValue.new( parent: Instance , className: string, name: string, defaultValue: any? ) → ValueBaseValue Constructs a ValueBaseValue object. This is a wrapper around the value base underneath the parent. It will create the value base if it does not exist.  ","version":null,"tagName":"h3"},{"title":"ObserveBrio​","type":1,"pageTitle":"ValueBaseValue","url":"/NevermoreEngine/api/ValueBaseValue#ObserveBrio","content":"&lt;/&gt; ValueBaseValue.ObserveBrio( self: ValueBaseValue, predicate: ((any) → boolean)?-- Optional callback ) → Observable&lt;Brio&lt;any&gt;&gt; Observes the value base value. This will return a brio of the value base underneath the parent.  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"ValueBaseValue","url":"/NevermoreEngine/api/ValueBaseValue#Observe","content":"&lt;/&gt; ValueBaseValue.Observe(self: ValueBaseValue) → Observable&lt;any&gt; Observes the value base value's ","version":null,"tagName":"h3"},{"title":"ValueColorPicker","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ValueColorPicker","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ValueColorPicker","url":"/NevermoreEngine/api/ValueColorPicker#functions","content":" ","version":null,"tagName":"h2"},{"title":"SetSize​","type":1,"pageTitle":"ValueColorPicker","url":"/NevermoreEngine/api/ValueColorPicker#SetSize","content":"&lt;/&gt; ValueColorPicker:SetSize(height: number) → () Sets the size (height) of the value color picker  ","version":null,"tagName":"h3"},{"title":"HintBackgroundColor​","type":1,"pageTitle":"ValueColorPicker","url":"/NevermoreEngine/api/ValueColorPicker#HintBackgroundColor","content":"&lt;/&gt; ValueColorPicker:HintBackgroundColor(color: Color3 ) → () Hints what the background color should be to ensure contrast  ","version":null,"tagName":"h3"},{"title":"SetHSVColor​","type":1,"pageTitle":"ValueColorPicker","url":"/NevermoreEngine/api/ValueColorPicker#SetHSVColor","content":"&lt;/&gt; ValueColorPicker:SetHSVColor(hsvColor: Vector3 ) → () Sets the HSV Color for the value picker  ","version":null,"tagName":"h3"},{"title":"GetHSVColor​","type":1,"pageTitle":"ValueColorPicker","url":"/NevermoreEngine/api/ValueColorPicker#GetHSVColor","content":"&lt;/&gt; ValueColorPicker:GetHSVColor() → Vector3  Returns the HSV color3  ","version":null,"tagName":"h3"},{"title":"SetColor​","type":1,"pageTitle":"ValueColorPicker","url":"/NevermoreEngine/api/ValueColorPicker#SetColor","content":"&lt;/&gt; ValueColorPicker:SetColor(color: Color3 ) → () Setes the current color  ","version":null,"tagName":"h3"},{"title":"GetColor​","type":1,"pageTitle":"ValueColorPicker","url":"/NevermoreEngine/api/ValueColorPicker#GetColor","content":"&lt;/&gt; ValueColorPicker:GetColor() → Color3  Gets the current color ","version":null,"tagName":"h3"},{"title":"ValueObjectUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ValueObjectUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ValueObjectUtils","url":"/NevermoreEngine/api/ValueObjectUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"syncValue​","type":1,"pageTitle":"ValueObjectUtils","url":"/NevermoreEngine/api/ValueObjectUtils#syncValue","content":"&lt;/&gt; ValueObjectUtils.syncValue( from: ValueObject&lt;T&gt;, to: ValueObject&lt;T&gt; ) → MaidTask Syncs the value from from to to.  ","version":null,"tagName":"h3"},{"title":"observeValueBrio​","type":1,"pageTitle":"ValueObjectUtils","url":"/NevermoreEngine/api/ValueObjectUtils#observeValueBrio","content":"&lt;/&gt; ValueObjectUtils.observeValueBrio(valueObject: ValueObject&lt;T&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Observes the current value of the ValueObject  ","version":null,"tagName":"h3"},{"title":"observeValue​","type":1,"pageTitle":"ValueObjectUtils","url":"/NevermoreEngine/api/ValueObjectUtils#observeValue","content":"deprecated in 13.18.0 &lt;/&gt; This was deprecated in 13.18.0 This item is deprecated. Do not use it for new work. ValueObjectUtils.observeValue(valueObject: ValueObject&lt;T&gt;) → Observable&lt;T&gt; Observes the current value of the ValueObject ","version":null,"tagName":"h3"},{"title":"ValueObject","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ValueObject","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ValueObject","url":"/NevermoreEngine/api/ValueObject#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"ValueObject","url":"/NevermoreEngine/api/ValueObject#new","content":"&lt;/&gt; ValueObject.new( baseValue: T, checkType: string? | (value: T) → ( boolean, string? ) ) → ValueObject Constructs a new value object  ","version":null,"tagName":"h3"},{"title":"GetCheckType​","type":1,"pageTitle":"ValueObject","url":"/NevermoreEngine/api/ValueObject#GetCheckType","content":"&lt;/&gt; ValueObject.GetCheckType(self: ValueObject&lt;T&gt;) → string? | (value: T) → ( boolean, string ) Returns the current check type, if any  ","version":null,"tagName":"h3"},{"title":"fromObservable​","type":1,"pageTitle":"ValueObject","url":"/NevermoreEngine/api/ValueObject#fromObservable","content":"&lt;/&gt; ValueObject.fromObservable(observable: Observable&lt;T&gt;) → ValueObject&lt;T&gt; Constructs a new value object  ","version":null,"tagName":"h3"},{"title":"isValueObject​","type":1,"pageTitle":"ValueObject","url":"/NevermoreEngine/api/ValueObject#isValueObject","content":"&lt;/&gt; ValueObject.isValueObject(value: any) → boolean Returns whether the object is a ValueObject class  ","version":null,"tagName":"h3"},{"title":"Mount​","type":1,"pageTitle":"ValueObject","url":"/NevermoreEngine/api/ValueObject#Mount","content":"&lt;/&gt; ValueObject.Mount( self: ValueObject&lt;T&gt;, value: Observable | T ) → MaidTask Mounts the value to the observable. Overrides the last mount.  ","version":null,"tagName":"h3"},{"title":"Observe​","type":1,"pageTitle":"ValueObject","url":"/NevermoreEngine/api/ValueObject#Observe","content":"&lt;/&gt; ValueObject.Observe(self: ValueObject&lt;T&gt;) → Observable&lt;T?&gt; Observes the current value of the ValueObject  ","version":null,"tagName":"h3"},{"title":"ObserveBrio​","type":1,"pageTitle":"ValueObject","url":"/NevermoreEngine/api/ValueObject#ObserveBrio","content":"&lt;/&gt; ValueObject.ObserveBrio( self: ValueObject&lt;T&gt;, condition: function | nil-- optional ) → Observable&lt;Brio&lt;T&gt;&gt; Observes the value as a brio. The condition defaults to truthy or nil.  ","version":null,"tagName":"h3"},{"title":"SetValue​","type":1,"pageTitle":"ValueObject","url":"/NevermoreEngine/api/ValueObject#SetValue","content":"&lt;/&gt; ValueObject.SetValue( self: ValueObject&lt;T&gt;, value: T, ...: any-- Additional args. Can be used to pass event changing state args with value ) → () → ()-- Cleanup Allows you to set a value, and provide additional event context for the actual change. For example, you might do. self.IsVisible:SetValue(isVisible, true) print(self.IsVisible.Changed:Connect(function(isVisible, _, doNotAnimate) print(doNotAnimate) end))   ","version":null,"tagName":"h3"},{"title":"Destroy​","type":1,"pageTitle":"ValueObject","url":"/NevermoreEngine/api/ValueObject#Destroy","content":"&lt;/&gt; ValueObject.Destroy(self: ValueObject&lt;T&gt;) → () Forces the value to be nil on cleanup, cleans up the Maid Does not fire the event since 3.5.0 ","version":null,"tagName":"h3"},{"title":"Vector3int16Utils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Vector3int16Utils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Vector3int16Utils","url":"/NevermoreEngine/api/Vector3int16Utils#functions","content":" ","version":null,"tagName":"h2"},{"title":"fromVector3​","type":1,"pageTitle":"Vector3int16Utils","url":"/NevermoreEngine/api/Vector3int16Utils#fromVector3","content":"&lt;/&gt; Vector3int16Utils.fromVector3(vector3: Vector3 ) → Vector3int16  Creates a Vector3int16 from a Vector3 ","version":null,"tagName":"h3"},{"title":"Vector3SerializationUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Vector3SerializationUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Vector3SerializationUtils","url":"/NevermoreEngine/api/Vector3SerializationUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"isSerializedVector3​","type":1,"pageTitle":"Vector3SerializationUtils","url":"/NevermoreEngine/api/Vector3SerializationUtils#isSerializedVector3","content":"&lt;/&gt; Vector3SerializationUtils.isSerializedVector3(data: any) → boolean Returns true if this data is a serialized Vector3  ","version":null,"tagName":"h3"},{"title":"serialize​","type":1,"pageTitle":"Vector3SerializationUtils","url":"/NevermoreEngine/api/Vector3SerializationUtils#serialize","content":"&lt;/&gt; Vector3SerializationUtils.serialize(vector3: Vector3 ) → SerializedVector3 Serialized a Vector3 into a Lua table, which should encode in JSON and be network safe.  ","version":null,"tagName":"h3"},{"title":"deserialize​","type":1,"pageTitle":"Vector3SerializationUtils","url":"/NevermoreEngine/api/Vector3SerializationUtils#deserialize","content":"&lt;/&gt; Vector3SerializationUtils.deserialize(data: SerializedVector3) → Vector3  Deserializes a Vector3 from a Lua table ","version":null,"tagName":"h3"},{"title":"Viewport","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Viewport","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Viewport","url":"/NevermoreEngine/api/Viewport#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Viewport","url":"/NevermoreEngine/api/Viewport#new","content":"&lt;/&gt; Viewport.new() → Viewport Constructs a new viewport. Unlike a normal BasicPane this will not render anything immediately. See Viewport.Render for details.  ","version":null,"tagName":"h3"},{"title":"blend​","type":1,"pageTitle":"Viewport","url":"/NevermoreEngine/api/Viewport#blend","content":"&lt;/&gt; Viewport.blend(props: {string}) → Observable&lt;Instance &gt; Creates a Viewport and render it to Blend. The following properties are supported Ambient - Color3 AnchorPoint - Vector2 FieldOfView - number Instance - Instance LayoutOrder - number LightColor - Color3 Parent - Instance Position - UDim2 Size - Vector3 Transparency - number Properties may be anything Blend would take as computable. See Blend for details.  ","version":null,"tagName":"h3"},{"title":"SetControlsEnabled​","type":1,"pageTitle":"Viewport","url":"/NevermoreEngine/api/Viewport#SetControlsEnabled","content":"&lt;/&gt; Viewport.SetControlsEnabled( self: Viewport, enabled: boolean ) → () Sets the enabled state of the ViewportControls  ","version":null,"tagName":"h3"},{"title":"SetTransparency​","type":1,"pageTitle":"Viewport","url":"/NevermoreEngine/api/Viewport#SetTransparency","content":"&lt;/&gt; Viewport.SetTransparency( self: Viewport, transparency: number ) → () Sets the field of view on the viewport.  ","version":null,"tagName":"h3"},{"title":"SetFieldOfView​","type":1,"pageTitle":"Viewport","url":"/NevermoreEngine/api/Viewport#SetFieldOfView","content":"&lt;/&gt; Viewport.SetFieldOfView( self: Viewport, fieldOfView: number ) → () Sets the field of view on the viewport.  ","version":null,"tagName":"h3"},{"title":"SetInstance​","type":1,"pageTitle":"Viewport","url":"/NevermoreEngine/api/Viewport#SetInstance","content":"&lt;/&gt; Viewport.SetInstance( self: Viewport, instance: Instance? ) → () → () Set the instance to be rendered. The instance will be reparented to the viewport. WARNING The instance you set here will NOT be destroyed by the viewport. This lets the performance be optimized or the instance used in good transitions. However, be sure to destroy it if you need to.  ","version":null,"tagName":"h3"},{"title":"NotifyInstanceSizeChanged​","type":1,"pageTitle":"Viewport","url":"/NevermoreEngine/api/Viewport#NotifyInstanceSizeChanged","content":"&lt;/&gt; Viewport.NotifyInstanceSizeChanged(self: Viewport) → () Notifies the viewport of the instance size changing. We don't connect to any events here because the instance can be anything.  ","version":null,"tagName":"h3"},{"title":"Render​","type":1,"pageTitle":"Viewport","url":"/NevermoreEngine/api/Viewport#Render","content":"&lt;/&gt; Viewport.Render( self: Viewport, props: {any} ) → Observable&lt;ViewportFrame &gt; Renders the viewport. Allows the following properties. Ambient - Color3 ImageColor3 - Color3 AnchorPoint - Vector2 LayoutOrder - number LightColor - Color3 Parent - Instance Position - UDim2 Size - Vector3 Transparency - number WARNING This should only be called once per a Viewport instance, since the Instance property is not duplicated. ","version":null,"tagName":"h3"},{"title":"ViewportControls","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ViewportControls","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ViewportControls","url":"/NevermoreEngine/api/ViewportControls#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"ViewportControls","url":"/NevermoreEngine/api/ViewportControls#new","content":"&lt;/&gt; ViewportControls.new( viewport: Instance , viewportModel: Viewport ) → BaseObject Create the controls for dragging.  ","version":null,"tagName":"h3"},{"title":"SetEnabled​","type":1,"pageTitle":"ViewportControls","url":"/NevermoreEngine/api/ViewportControls#SetEnabled","content":"&lt;/&gt; ViewportControls.SetEnabled( self: ViewportControls, enabled: boolean ) → () Sets the enabled state of the controls ","version":null,"tagName":"h3"},{"title":"Vector3Utils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/Vector3Utils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Vector3Utils","url":"/NevermoreEngine/api/Vector3Utils#functions","content":" ","version":null,"tagName":"h2"},{"title":"fromVector2XY​","type":1,"pageTitle":"Vector3Utils","url":"/NevermoreEngine/api/Vector3Utils#fromVector2XY","content":"&lt;/&gt; Vector3Utils.fromVector2XY(vector2: Vector2 ) → Vector3  Creates a Vector3 from a Vector2 in the XY plane  ","version":null,"tagName":"h3"},{"title":"fromVector2XZ​","type":1,"pageTitle":"Vector3Utils","url":"/NevermoreEngine/api/Vector3Utils#fromVector2XZ","content":"&lt;/&gt; Vector3Utils.fromVector2XZ(vector2: Vector2 ) → Vector3  Creates a Vector3 from a Vector2 in the XZ plane  ","version":null,"tagName":"h3"},{"title":"getAngleRad​","type":1,"pageTitle":"Vector3Utils","url":"/NevermoreEngine/api/Vector3Utils#getAngleRad","content":"&lt;/&gt; Vector3Utils.getAngleRad( a: Vector3 , b: Vector3 ) → number? Computes the angle between 2 vectors in radians  ","version":null,"tagName":"h3"},{"title":"reflect​","type":1,"pageTitle":"Vector3Utils","url":"/NevermoreEngine/api/Vector3Utils#reflect","content":"&lt;/&gt; Vector3Utils.reflect( vector: Vector3 , unitNormal: Vector3 ) → Vector3  Reflects a vector over a unit normal  ","version":null,"tagName":"h3"},{"title":"angleBetweenVectors​","type":1,"pageTitle":"Vector3Utils","url":"/NevermoreEngine/api/Vector3Utils#angleBetweenVectors","content":"&lt;/&gt; Vector3Utils.angleBetweenVectors( a: Vector3 , b: Vector3 ) → number Computes the angle between 2 vectors in radians  ","version":null,"tagName":"h3"},{"title":"slerp​","type":1,"pageTitle":"Vector3Utils","url":"/NevermoreEngine/api/Vector3Utils#slerp","content":"&lt;/&gt; Vector3Utils.slerp( start: Vector3 , finish: Vector3 , t: number-- Amount to slerp. 0 is start, 1 is finish. beyond that is extended as expected. ) → Vector3  Spherically lerps between start and finish  ","version":null,"tagName":"h3"},{"title":"constrainToCone​","type":1,"pageTitle":"Vector3Utils","url":"/NevermoreEngine/api/Vector3Utils#constrainToCone","content":"&lt;/&gt; Vector3Utils.constrainToCone( direction: Vector3 ,-- The vector direction to constrain coneDirection: Vector3 ,-- The direction of the cone. coneAngleRad: number-- Angle of the cone ) → Vector3 -- Constrained angle Constrains a Vector3 into a cone.  ","version":null,"tagName":"h3"},{"title":"round​","type":1,"pageTitle":"Vector3Utils","url":"/NevermoreEngine/api/Vector3Utils#round","content":"&lt;/&gt; Vector3Utils.round( vector3: Vector3 , amount: number ) → Vector3  Rounds the vector to the nearest number -- Snaps to a grid! local snapped = Vector3Utils.round(position, 4)   ","version":null,"tagName":"h3"},{"title":"areClose​","type":1,"pageTitle":"Vector3Utils","url":"/NevermoreEngine/api/Vector3Utils#areClose","content":"&lt;/&gt; Vector3Utils.areClose( a: Vector3 , b: Vector3 , epsilon: number ) → boolean Checks if 2 Vector3 values are clsoe to each other ","version":null,"tagName":"h3"},{"title":"VoiceChatUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/VoiceChatUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"VoiceChatUtils","url":"/NevermoreEngine/api/VoiceChatUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"promiseIsVoiceEnabledForPlayer​","type":1,"pageTitle":"VoiceChatUtils","url":"/NevermoreEngine/api/VoiceChatUtils#promiseIsVoiceEnabledForPlayer","content":"&lt;/&gt; VoiceChatUtils.promiseIsVoiceEnabledForPlayer(player: Player ) → Promise&lt;boolean&gt; Reports whether voice chat is enabled  ","version":null,"tagName":"h3"},{"title":"promiseIsVoiceEnabledForUserId​","type":1,"pageTitle":"VoiceChatUtils","url":"/NevermoreEngine/api/VoiceChatUtils#promiseIsVoiceEnabledForUserId","content":"&lt;/&gt; VoiceChatUtils.promiseIsVoiceEnabledForUserId(userId: number) → Promise&lt;boolean&gt; Wraps whether voice chat is enabled ","version":null,"tagName":"h3"},{"title":"WellKnownSoundGroups","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/WellKnownSoundGroups","content":"WellKnownSoundGroups","keywords":"","version":null},{"title":"WeldConstraintUtils","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/WeldConstraintUtils","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"WeldConstraintUtils","url":"/NevermoreEngine/api/WeldConstraintUtils#functions","content":" ","version":null,"tagName":"h2"},{"title":"namedBetween​","type":1,"pageTitle":"WeldConstraintUtils","url":"/NevermoreEngine/api/WeldConstraintUtils#namedBetween","content":"&lt;/&gt; WeldConstraintUtils.namedBetween( name: string, part0: BasePart , part1: BasePart , parent: Instance? -- Optional ) → Weld | WeldConstraint  Creates a new weld constraint between the given parts. INFO Actually generally defaults to a weld because the weld constraint system is buggy.https://devforum.roblox.com/t/weld-constraint-behaves-differently-on-server-compared-to-client/445036 INFO We tend to create a weld constraint between parts and terrain, because terrain will remove welds when it deforms for non-touching parts. https://devforum.roblox.com/t/allow-way-to-prevent-terrain-after-deforming-from-removing-welds/631061  ","version":null,"tagName":"h3"},{"title":"namedBetweenForceWeldConstraint​","type":1,"pageTitle":"WeldConstraintUtils","url":"/NevermoreEngine/api/WeldConstraintUtils#namedBetweenForceWeldConstraint","content":"&lt;/&gt; WeldConstraintUtils.namedBetweenForceWeldConstraint( name: string, part0: BasePart , part1: BasePart , parent: Instance? -- Optional ) → WeldConstraint  Creates a new weld constraint between the given parts guaranteed. INFO This may not always work in ways you want, because Roblox is complicated. When in doubt, it is recommend you use WeldConstraintUtils.namedBetween for all welding scenarios. ","version":null,"tagName":"h3"},{"title":"WeightedRandomChooser","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/WeightedRandomChooser","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"WeightedRandomChooser","url":"/NevermoreEngine/api/WeightedRandomChooser#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"WeightedRandomChooser","url":"/NevermoreEngine/api/WeightedRandomChooser#new","content":"&lt;/&gt; WeightedRandomChooser.new() → WeightedRandomChooser&lt;T&gt; Creates a new weighted random chooser  ","version":null,"tagName":"h3"},{"title":"SetWeight​","type":1,"pageTitle":"WeightedRandomChooser","url":"/NevermoreEngine/api/WeightedRandomChooser#SetWeight","content":"&lt;/&gt; WeightedRandomChooser.SetWeight( self: WeightedRandomChooser&lt;T&gt;, option: T, weight: number | nil ) → () Sets the weight for a given option. Setting the weight to nil removes the option.  ","version":null,"tagName":"h3"},{"title":"Remove​","type":1,"pageTitle":"WeightedRandomChooser","url":"/NevermoreEngine/api/WeightedRandomChooser#Remove","content":"&lt;/&gt; WeightedRandomChooser.Remove( self: WeightedRandomChooser&lt;T&gt;, option: T ) → () Removes the option from the chooser. Equivalent of setting the weight to nil  ","version":null,"tagName":"h3"},{"title":"GetWeight​","type":1,"pageTitle":"WeightedRandomChooser","url":"/NevermoreEngine/api/WeightedRandomChooser#GetWeight","content":"&lt;/&gt; WeightedRandomChooser.GetWeight( self: WeightedRandomChooser&lt;T&gt;, option: T ) → number? Gets the weight for the option  ","version":null,"tagName":"h3"},{"title":"GetProbability​","type":1,"pageTitle":"WeightedRandomChooser","url":"/NevermoreEngine/api/WeightedRandomChooser#GetProbability","content":"&lt;/&gt; WeightedRandomChooser.GetProbability( self: WeightedRandomChooser&lt;T&gt;, option: T ) → number? Gets the percent probability from 0 to 1  ","version":null,"tagName":"h3"},{"title":"Choose​","type":1,"pageTitle":"WeightedRandomChooser","url":"/NevermoreEngine/api/WeightedRandomChooser#Choose","content":"&lt;/&gt; WeightedRandomChooser.Choose( self: WeightedRandomChooser&lt;T&gt;, random: Random ) → T Picks a weighted choise ","version":null,"tagName":"h3"},{"title":"XZPlaneLockCamera","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/XZPlaneLockCamera","content":"XZPlaneLockCamera Lock camera to only XZPlane, preventing TrackerCameras from making players sick.","keywords":"","version":null},{"title":"Build Nevermore locally","type":0,"sectionRef":"#","url":"/NevermoreEngine/docs/build","content":"","keywords":"","version":"Next"},{"title":"What you need to be comfortable with​","type":1,"pageTitle":"Build Nevermore locally","url":"/NevermoreEngine/docs/build#what-you-need-to-be-comfortable-with","content":" Contributing to Nevermore is a little bit more difficult than consuming it. That being said, it shouldn't be too bad.  Programming in LuaGitA bit of command line usageUse of linter and other tools  ","version":"Next","tagName":"h2"},{"title":"Tools and technologies we use​","type":1,"pageTitle":"Build Nevermore locally","url":"/NevermoreEngine/docs/build#tools-and-technologies-we-use","content":" There are certain open source technologies that Nevermore uses to keep the build pipeline clean and working well. These are as follows.  NPM - Package managerGit - Source controlRojo - Build system (syncs into Studio)Selene - LinterAftman - Toolchain managerLerna - Helps manage multiple repositoriesTestEz - Unit testing systemHoarcekat - Story book (testing)  info We use a custom version of Rojo to allow symlinks between components.  Additionally in the cloud we use  Github - To host codeGithub Actions - Build pipelineAuto - Publishing workflow  ","version":"Next","tagName":"h2"},{"title":"Versioning in Nevermore​","type":1,"pageTitle":"Build Nevermore locally","url":"/NevermoreEngine/docs/build#versioning-in-nevermore","content":" There are some additional ideas worth reviewing which are relatively unique to this repository.  Conventional Commits - The Conventional Commits specification is a lightweight convention on top of commit messages.Semantic Versioning - In systems with many dependencies, releasing new package versions can quickly become a nightmare. This versioning provides a simple set of rules and requirements that dictate how version numbers are assigned and incremented.  In general, our CHANGELOG.md are generated by our commits, which also dictates our semantic versioning.  ","version":"Next","tagName":"h2"},{"title":"Get the repo setup to develop locally.​","type":1,"pageTitle":"Build Nevermore locally","url":"/NevermoreEngine/docs/build#get-the-repo-setup-to-develop-locally","content":" Unlike consuming Nevermore, building and changing Nevermore for general production is a little bit trickier. This is because:  Unlike consuming, we want changes to show up immediately so we can test everything at once.We need to consider people consuming the code to make versioning good.  However, this build workflow is highly optimized to not cost any development time once setup. So while there is a fixed cost, the total cost is a monorepo that anyone can consume, but that development can also occur on. This was a very important design decision.  In general you want to install the following by hand.  NPMGitAftman  After than you will want to clone Nevermore to a folder.  git clone https://github.com/Quenty/NevermoreEngine.git   ","version":"Next","tagName":"h2"},{"title":"Why does building need a custom version of Rojo?​","type":1,"pageTitle":"Build Nevermore locally","url":"/NevermoreEngine/docs/build#why-does-building-need-a-custom-version-of-rojo","content":" Nevermore does not need a custom version of Rojo to be consumed, but it does need one to be built. This custom version of Rojo understands symlinks and turn them into ObjectValues. These symlinks link the packages together and means that a change to a transient dependency, or direct dependency will immediately be shown in the upstream package.  As an added bonus, this custom version of Rojo also supports live-syncing mesh parts. ","version":"Next","tagName":"h2"},{"title":"Nevermore design principles","type":0,"sectionRef":"#","url":"/NevermoreEngine/docs/design","content":"","keywords":"","version":"Next"},{"title":"Testing ideas​","type":1,"pageTitle":"Nevermore design principles","url":"/NevermoreEngine/docs/design#testing-ideas","content":" Nevermore has three testing strategies  Unit tests - Used sparingly for core libraries that don't depend on Roblox. These files are .spec.lua files. See testez for details.Battle-testing - Run code in production under a high variety of conditions.  ","version":"Next","tagName":"h2"},{"title":"Package types​","type":1,"pageTitle":"Nevermore design principles","url":"/NevermoreEngine/docs/design#package-types","content":" There are different types of packages in Nevermore. It's useful to reason about a package  ","version":"Next","tagName":"h2"},{"title":"Utility libraries​","type":1,"pageTitle":"Nevermore design principles","url":"/NevermoreEngine/docs/design#utility-libraries","content":" Library packages tend to be packages that export one or multiple libraries. These are usually pure utility functions. Here are some sample library packages:  TableMathRandomUtilsSetElo  ","version":"Next","tagName":"h3"},{"title":"Object utility libraries​","type":1,"pageTitle":"Nevermore design principles","url":"/NevermoreEngine/docs/design#object-utility-libraries","content":" These are very similiar to libraries but they tend to export an object, and some supporting objects. These objects are concepts that are useful to learn, and generally exist outside of Roblox (although they may not). These are fundamental building blocks and patterns in Roblox.  OctreeMaidRxPromiseBinderQueue  ","version":"Next","tagName":"h3"},{"title":"Integration services​","type":1,"pageTitle":"Nevermore design principles","url":"/NevermoreEngine/docs/design#integration-services","content":" There services are primary about providing a contract between two services.  GameConfigServiceCameraStackServicePlayerDataStoreService  ","version":"Next","tagName":"h3"},{"title":"Design criteria​","type":1,"pageTitle":"Nevermore design principles","url":"/NevermoreEngine/docs/design#design-criteria","content":" Nevermore has been evolving for a long time. As Roblox has improved its platform capabilities, parts of Nevermore have become unneeded, while new parts are necessary to keep things working. Nevermore is a repository of useful generalized modules that can be used to make games quicker. Note these modules while opinionated to some level, try to not be opinionated about...  Your games architectureConsumption of code (plugin, game, et cetera)  Code is designed to be copied and pasted as needed, but first and foremost, is designed to empower James's (Quenty's) workflow. For this reason, while Nevermore tries its best to be useful to as wide of an audience as possible, in many ways document and design notes are lacking because this is not its first purpose.  ","version":"Next","tagName":"h2"},{"title":"Loading system​","type":1,"pageTitle":"Nevermore design principles","url":"/NevermoreEngine/docs/design#loading-system","content":" Nevermore's loading system has changed over time, but is generally responsible for loading many modules. ","version":"Next","tagName":"h2"},{"title":"ZoomedCamera","type":0,"sectionRef":"#","url":"/NevermoreEngine/api/ZoomedCamera","content":"ZoomedCamera Allow freedom of movement around a current place, much like the classic script works now. Not intended to be use with the current character script Intended to be used with a SummedCamera, relative. local zoom = ZoomedCamera.new() zoom.Zoom = 30 -- Distance from original point zoom.MaxZoom = 100 -- max distance away zoom.MinZoom = 0.5 -- min distance away Assigning .Zoom will automatically clamp","keywords":"","version":null},{"title":"Getting started with Nevermore","type":0,"sectionRef":"#","url":"/NevermoreEngine/docs/intro","content":"","keywords":"","version":"Next"},{"title":"Why should I use Nevermore?​","type":1,"pageTitle":"Getting started with Nevermore","url":"/NevermoreEngine/docs/intro#why-should-i-use-nevermore","content":" Nevermore provides a variety of easy-to-use utility modules that provide a shared language to build a game with. This includes both conceptual modules, as well as modules for common things you may find difficult to program in a game. Nevermore will not make a game for you, but it can provide or deeply accelerate the creation of a game on Roblox, allowing you to focus on important parts of making a game, such as game design, progression, user experience, and more.  ","version":"Next","tagName":"h2"},{"title":"Nevermore has significant packages that have had cultural impact​","type":1,"pageTitle":"Getting started with Nevermore","url":"/NevermoreEngine/docs/intro#nevermore-has-significant-packages-that-have-had-cultural-impact","content":" Nevermore has had significant cultural impact. There are some packages this repository is known for containing, and have had significant cultural impact on Roblox.  Maid - Utility object to clean up connectionsRx - Reactive programming implementationBinder - Bind Roblox objects and instancesSpring and AccelTween - Animation objectsSignal - Signal implementationPromise - Promise implementation on RobloxOctree - Spatial data structure that helps with performanceBlend - Declarative UI framework that makes animations and state-management easyDataStore - Battle-tested datastore wrapperCamera - Layered camera system that interops with Roblox's cameras  ","version":"Next","tagName":"h2"},{"title":"Nevermore can by used in many cases​","type":1,"pageTitle":"Getting started with Nevermore","url":"/NevermoreEngine/docs/intro#nevermore-can-by-used-in-many-cases","content":" While Nevermore was originally designed to make games, in general Nevermore is now a collection of utility libraries that can be used in the following. These use cases have been carefully battle tested. Nevermore is in many top games, gamejams, plugins, and other components across Roblox.  Top Games - Both built originally with Nevermore, or games that use other systems and frameworks but may want to include NevermorePlugins - Roblox Studio plugins that want to use UI, techniques, and other approaches.Stand alone models - Models that need to operate but still may want to consume dependencies.  To learn more about the design philosophy of Nevermore see the Design guide.  ","version":"Next","tagName":"h2"},{"title":"Why NPM or a package manager at all?​","type":1,"pageTitle":"Getting started with Nevermore","url":"/NevermoreEngine/docs/intro#why-npm-or-a-package-manager-at-all","content":" NPM is a package manager originally intended for JavaScript and node. The alternative option is Wally, Roblox's packages or another package manager. NPM was selected after careful consideration. NPM works best for now, because it has a significant amount of CI/CD pipeline support for monorepos. It works well with the existing Roblox Typescript community, and it was easy to refactor. A package manager is very important because it allows us to consume code without breaking things. This allows for code reuse.  There is no silver bullet for code reuse, but it is better to pay for the cost of code-reuse through the complexity of a package manager, than it is to pay for the cost of maintaining multiple codebases. Nevermore's code-reuse strategy allows for us to invest deeper in marginal systems and bring up the quality of all games at once.  NPM helps deduplicate dependencies and handle conflicts with dependencies.  ","version":"Next","tagName":"h2"},{"title":"Why a mono repo?​","type":1,"pageTitle":"Getting started with Nevermore","url":"/NevermoreEngine/docs/intro#why-a-mono-repo","content":" A mono-repo is a repository with many packages in it. Nevermore is a mono-repo. ","version":"Next","tagName":"h2"},{"title":"Installing Nevermore","type":0,"sectionRef":"#","url":"/NevermoreEngine/docs/install","content":"","keywords":"","version":"Next"},{"title":"Available installation methods​","type":1,"pageTitle":"Installing Nevermore","url":"/NevermoreEngine/docs/install#available-installation-methods","content":" Available installation methodsFast track: Installing via NPM and the Nevermore CLI (recommended) What is NPM and why are we using it?How do I install additional packages?What is package-lock.json? Installing via NPM into an existing game via RojoManually installing via NPM for a stand-alone module.Manually installing with NPM for Plugins  ","version":"Next","tagName":"h2"},{"title":"Fast track: Installing via NPM and the Nevermore CLI (recommended)​","type":1,"pageTitle":"Installing Nevermore","url":"/NevermoreEngine/docs/install#fast-track-installing-via-npm-and-the-nevermore-cli-recommended","content":" If you want to just try out Nevermore, making a new templated game can be the easiest way to do this. For this reason, there is now a Nevermore CLI that can be used. A CLI stands for command line interface.  Install Node.js v14+ on your computer.Install rojo v7+ on your computer.  We can then use the npm command line to generate a working directory.  Open a terminal, like Command Prompt, PowerShell, or Windows Terminal (recommended).Change directory to the location you would like to initialize and create files. You can do this by typing mkdir MyGame and then cd MyGame. You can use dir or ls to list out the current directory.Run the command npx nevermore init to generate a new game.Run the command npm install @quenty/maid or whatever package you want.  tip You can globally install the nevermore CLI by running the following command in the terminal. npm install -g @quenty/nevermore-cli   This will install the current version of Maid and all dependencies into the node_modules folder. To upgrade you will want to run npm upgrade You should ignore the node_modules folder in your source control system.  ","version":"Next","tagName":"h2"},{"title":"What is NPM and why are we using it?​","type":1,"pageTitle":"Installing Nevermore","url":"/NevermoreEngine/docs/install#what-is-npm-and-why-are-we-using-it","content":" npm is a package manager. Nevermore uses npm to manage package versions and install transient dependencies. A transient dependency is a dependency of a dependency (for example, Blend depends upon Maid.  ","version":"Next","tagName":"h3"},{"title":"How do I install additional packages?​","type":1,"pageTitle":"Installing Nevermore","url":"/NevermoreEngine/docs/install#how-do-i-install-additional-packages","content":" The default installation comes with very few packages. This is normal. You can see which packages are installed by looking at the package.json file in a text editor. To install additional packages, simply run the following command in a terminal:  npm install @quenty/servicebag   This will install the packages into the node_modules folder.  ","version":"Next","tagName":"h3"},{"title":"What is package-lock.json?​","type":1,"pageTitle":"Installing Nevermore","url":"/NevermoreEngine/docs/install#what-is-package-lockjson","content":" When you run npm install you end up with a package-lock.json. You should commit this to source control. See NPM's documentation for details.  ","version":"Next","tagName":"h3"},{"title":"Installing via NPM into an existing game via Rojo​","type":1,"pageTitle":"Installing Nevermore","url":"/NevermoreEngine/docs/install#installing-via-npm-into-an-existing-game-via-rojo","content":" Nevermore is designed to work with games with existing architecture. If you're using Knit, a multi-script architecture, a custom framework or a single-script architecture, Nevermore provides a lot of utility modules that are useful in any of these scenarios. Nevermore's latest version also supports multiple copies of Nevermore running at once as long as bootstrapping is carefully managed. This can allow you to develop your game in an isolated way, or introduce Nevermore dependencies slowly as you need them.  If you want to install this into an existing game follow these instructions:  Ensure that you have Node.js v14+ installed on your computer.  Ensure that you have rojo v7+ installed on your computer.  Run npm init to create a package.jsonInstall npm install @quenty/loaderSync in the node_modules folder using Rojo. A common file format is something like this:  This is an example of a Rojo project.json file that is generated by the Nevermore CLI:  { &quot;name&quot;: &quot;MyGame&quot;, &quot;globIgnorePaths&quot;: [ &quot;**/.package-lock.json&quot; ], &quot;tree&quot;: { &quot;$className&quot;: &quot;DataModel&quot;, &quot;ServerScriptService&quot;: { &quot;MyGame&quot;: { &quot;$className&quot;: &quot;Folder&quot;, &quot;game&quot;: { &quot;$path&quot;: &quot;src/modules&quot; }, &quot;node_modules&quot;: { &quot;$path&quot;: &quot;node_modules&quot; } }, &quot;GameNameScripts&quot;: { &quot;$path&quot;: &quot;src/scripts/Server&quot; } }, &quot;StarterPlayer&quot;: { &quot;StarterPlayerScripts&quot;: { &quot;GameNameScripts&quot;: { &quot;$path&quot;: &quot;src/scripts/Client&quot; } } } } }   You can put the MyGame folder wherever you want, but the recommended location is ServerScriptService.  In your main script you will need to &quot;bootstrap&quot; the components such that script.Parent.loader is defined. To do this the following snippet will work, and is generated by the Nevermore CLI as ServerMain.server.lua:  local ServerScriptService = game:GetService(&quot;ServerScriptService&quot;) local loader = ServerScriptService.MyGame:FindFirstChild(&quot;LoaderUtils&quot;, true).Parent local require = require(loader).bootstrapGame(ServerScriptService.MyGame)   This will create the following folders in ReplicatedStorage when the game loads:  MyGame game ClientSharedServer node_modules  caution You might notice that the Server folder is also cloned to the game folder in ReplicatedStorage. This is an intentional optimization that only happens in Studio.  From here, every exported package will exist in the node_modules folder, populated only by modules that need to be replicated to that context.  To access the exported packages on the client, you perform the same bootstrap operation on the new replicated location (also generated, as ClientMain.client.lua):  local ReplicatedStorage = game:GetService(&quot;ReplicatedStorage&quot;) local loader = ReplicatedStorage:WaitForChild(&quot;MyGame&quot;):WaitForChild(&quot;loader&quot;) local require = require(loader).bootstrapGame(loader.Parent)   Assuming you've changed nothing, the path to the replicated modules should be the same as the one used on the server, just indexed under ReplicatedStorage instead.  ","version":"Next","tagName":"h2"},{"title":"Manually installing via NPM for a stand-alone module.​","type":1,"pageTitle":"Installing Nevermore","url":"/NevermoreEngine/docs/install#manually-installing-via-npm-for-a-stand-alone-module","content":" If you want to use Nevermore for more stand-alone or reusable scenarios (where you can't assume that a packages folder will be reused, you can manually bootstrap the components using the loader system.  Ensure that you have Node.js v14+ installed on your computer.  Ensure that you have rojo v7+ installed on your computer.  Run npm initRun npm install @quenty/loader and whatever packages you want.  In your bootstrapping code you can write something like this for your server code.  Notice we manually transform and parent our returned loader components. this allows us to bootstrap the components. We then parent the client component into ReplicatedFirst with dependencies.  --[[ @class ServerMain ]] local ReplicatedFirst = game:GetService(&quot;ReplicatedFirst&quot;) local client, server, shared = require(script:FindFirstChild(&quot;LoaderUtils&quot;, true)).toWallyFormat(script.src, false) server.Name = &quot;_SoftShutdownServerPackages&quot; server.Parent = script client.Name = &quot;_SoftShutdownClientPackages&quot; client.Parent = ReplicatedFirst shared.Name = &quot;_SoftShutdownSharedPackages&quot; shared.Parent = ReplicatedFirst local clientScript = script.ClientScript clientScript.Name = &quot;QuentySoftShutdownClientScript&quot; clientScript:Clone().Parent = ReplicatedFirst local serviceBag = require(server.ServiceBag).new() serviceBag:GetService(require(server.SoftShutdownService)) serviceBag:Init() serviceBag:Start()   The client code is as follows.  --[[ @class ClientMain ]] local ReplicatedFirst = game:GetService(&quot;ReplicatedFirst&quot;) local packages = ReplicatedFirst:WaitForChild(&quot;_SoftShutdownClientPackages&quot;) local SoftShutdownServiceClient = require(packages.SoftShutdownServiceClient) local serviceBag = require(packages.ServiceBag).new() serviceBag:GetService(SoftShutdownServiceClient) serviceBag:Init() serviceBag:Start()   ","version":"Next","tagName":"h2"},{"title":"Manually installing with NPM for Plugins​","type":1,"pageTitle":"Installing Nevermore","url":"/NevermoreEngine/docs/install#manually-installing-with-npm-for-plugins","content":" You can use the Nevermore CLI to generate a project structure for a new plugin.  Ensure that you have Node.js v14+ installed on your computer.  Ensure that you have rojo v7+ installed on your computer.  npx nevermore init-plugin  ","version":"Next","tagName":"h2"},{"title":"Using services in Nevermore","type":0,"sectionRef":"#","url":"/NevermoreEngine/docs/servicebag","content":"","keywords":"","version":"Next"},{"title":"tl;dr​","type":1,"pageTitle":"Using services in Nevermore","url":"/NevermoreEngine/docs/servicebag#tldr","content":" Nevermore services are initialized and required withServiceBag. This document explains what you need to know, but here are the key points:  You will not be able to use services as expected if they are not required through the ServiceBag that initializes them.Your services cannot yield the main thread.  ","version":"Next","tagName":"h2"},{"title":"What is a service?​","type":1,"pageTitle":"Using services in Nevermore","url":"/NevermoreEngine/docs/servicebag#what-is-a-service","content":" A service is a singleton, that is, a module of which exactly one exists. This is oftentimes very useful, especially in de-duplicating behavior. Services are actually something you should be familiar with on Roblox, if you've been programming on Roblox for a while.  -- Workspace is an example of a service in Roblox local workspace = game:GetService(&quot;Workspace&quot;)   It's useful to define our own services. A canonical service in Nevermore looks like this. Note the Init, Start, and Destroy methods:  --[=[ A canonical service in Nevermore @class ServiceName ]=] local require = require(script.Parent.loader).load(script) local Maid = require(&quot;Maid&quot;) local ServiceName = {} ServiceName.ServiceName = &quot;ServiceName&quot; function ServiceName:Init(serviceBag) assert(not self._serviceBag, &quot;Already initialized&quot;) self._serviceBag = assert(serviceBag, &quot;No serviceBag&quot;) self._maid = Maid.new() -- External self._serviceBag:GetService(require(&quot;OtherService&quot;)) end function ServiceName:Start() print(&quot;Started&quot;) end function ServiceName:MyMethod() print(&quot;Hello&quot;) end function ServiceName:Destroy() self._maid:DoCleaning() end return ServiceName   ","version":"Next","tagName":"h2"},{"title":"Service lifecycle methods​","type":1,"pageTitle":"Using services in Nevermore","url":"/NevermoreEngine/docs/servicebag#service-lifecycle-methods","content":" There are 3 methods in a service that are precoded in a ServiceBag.  All three of these services are optional. However, if you want to have services bootstrapped that this service depends upon, then you should do this in Init.  ","version":"Next","tagName":"h2"},{"title":"ServiceBag:Init(serviceBag)​","type":1,"pageTitle":"Using services in Nevermore","url":"/NevermoreEngine/docs/servicebag#servicebaginitservicebag","content":" Initializes the service. Cannot yield. If any more services need to be initialized then this should also get those services at this time.  When ServiceBag:Init() is called, ServiceBag will call :Init() on any service that has been retrieved. If any of these services retrieve additional services then these will also be initialized and stored in the ServiceBag. Notably ServiceBag will not use the direct memory of the service, but instead create a new table and store the state in the ServiceBag itself.  tip If you're using the Nevermore CLI to generate your project structure, you will notice something similar in the ClientMain and ServerMain scripts.  local serviceBag = ServiceBag.new() serviceBag:GetService(packages.MyModuleScript) serviceBag:Init() serviceBag:Start()   warning An important detail of ServiceBag is that it does not allow your services to yield in the :Init() methods. This is to prevent a service from delaying your entires game start. If you need to yield, do work in :Start() or export your API calls as promises. See Cmdr for a good example of how this works.  Retrieving a service from inside of :Init() that service is guaranteed to be initialized. Services are started in the order they're initialized.  function MyService:Init(serviceBag) self._myOtherService = serviceBag:GetService(require(&quot;MyOtherService&quot;)) -- Services are guaranteed to be initialized if you retrieve them in an -- init of another service, assuming that :Init() is done via ServiceBag. self._myOtherService:Register(self) end   When init is over, no more services can be added to the ServiceBag.  ","version":"Next","tagName":"h3"},{"title":"ServiceBag:Start()​","type":1,"pageTitle":"Using services in Nevermore","url":"/NevermoreEngine/docs/servicebag#servicebagstart","content":" Called when the game starts. Cannot yield. Starts actual behavior, including logic that depends on other services.  When Start happens the ServiceBag will go through each of its services that have been initialized and attempt to call the :Start() method on it if it exists.  This is a good place to use other services that you may have needed as they are guaranteed to be initialized. However, you can also typically assume initialization is done in the :Init() method. However, sometimes you may assume initialization but no start.  ","version":"Next","tagName":"h3"},{"title":"ServiceBag:Destroy()​","type":1,"pageTitle":"Using services in Nevermore","url":"/NevermoreEngine/docs/servicebag#servicebagdestroy","content":" Cleans up the existing service.  When :Destroy() is called, all services are destroyed. The ServiceBag will call:Destroy() on services if they offer it. This functionality is useful if you're initializing services during Hoarcekat stories or unit tests.  ","version":"Next","tagName":"h3"},{"title":"How do I retrieve services?​","type":1,"pageTitle":"Using services in Nevermore","url":"/NevermoreEngine/docs/servicebag#how-do-i-retrieve-services","content":" You can retrieve a service by calling GetService. GetService takes in a table. If you pass it a module script, the ServiceBag will require the module script and use the resulting definition as the service definition.  local serviceBag = ServiceBag.new() local myService = serviceBag:GetService(packages.MyModuleScript) serviceBag:Init() serviceBag:Start()   As soon as you retrieve the service you should be able to call methods on it. You may want to call :Init() or :Start() before using methods on the service, because the state of the service will be whatever it is before Init or Start.  To retrieve services in other services, you can do something similar to what is provided in the canonical service example. Take a look at this example service:  function OtherService:Init() self._value = &quot;foo&quot; end function OtherService:GetSomeValue() return self._value end   If you wanted to call the GetSomeValue method from another service, you would do something like this:  local OtherService = require(&quot;OtherService&quot;) function ServiceName:Init(serviceBag: ServiceBag.ServiceBag) assert(not self._serviceBag, &quot;Already initialized&quot;) self._serviceBag = assert(serviceBag, &quot;No serviceBag&quot;) self._otherService = self._serviceBag:GetService(OtherService) -- If you try to use the method on a service without requiring it through -- the ServiceBag, it might not behave as expected. For example: print(OtherService:GetSomeValue()) --&gt; nil -- However, once we retrieve the service through the ServiceBag, we can -- call methods on it: print(self._otherService:GetSomeValue()) --&gt; &quot;foo&quot; end   ","version":"Next","tagName":"h2"},{"title":"Extras​","type":1,"pageTitle":"Using services in Nevermore","url":"/NevermoreEngine/docs/servicebag#extras","content":" ","version":"Next","tagName":"h2"},{"title":"Why is understanding ServiceBag is important?​","type":1,"pageTitle":"Using services in Nevermore","url":"/NevermoreEngine/docs/servicebag#why-is-understanding-servicebag-is-important","content":" Nevermore tries to be a collection of libraries that can be plugged together, and not exist as a set framework that forces specific design decisions. While there are certainly some design patterns these libraries will guide you to, you shouldn't necessarily feel forced to operate within these set of scenarios.  That being said, in order to use certain services, like CmdrService or permission service, you need to be familiar with ServiceBag.  If you're making a game with Nevermore, serviceBag solves a wide variety of problems with the lifecycle of the game, and is fundamental to the fast iteration cycle intended with Nevermore.  Many prebuilt systems depend upon ServiceBag and expect to be initialized through ServiceBag.  ","version":"Next","tagName":"h3"},{"title":"Is ServiceBag good?​","type":1,"pageTitle":"Using services in Nevermore","url":"/NevermoreEngine/docs/servicebag#is-servicebag-good","content":" ServiceBag supports multiple production games. It allows for functionality that isn't otherwise available in traditional programming techniques in Roblox. More specifically:  Your games initialization can be controlled specificallyRecursive initialization (transient dependencies) will not cause refactoring requirements at higher level games. Lower-level packages can add additional dependencies without fear of breaking their downstream consumers.Life cycle management is maintained in a standardized wayYou can technically have multiple copies of your service running at once. This is useful for plugins and stuff.  While serviceBag isn't required to make a quality Roblox game, and may seem confusing at first, ServiceBag or an equivalent lifecycle management system and dependency injection system is a really good idea.  ","version":"Next","tagName":"h3"},{"title":"What ServiceBag tries to achieve​","type":1,"pageTitle":"Using services in Nevermore","url":"/NevermoreEngine/docs/servicebag#what-servicebag-tries-to-achieve","content":" ServiceBag does service dependency injection and initialization. These words may be unfamiliar with you. Dependency injection is the process of retrieving dependencies instead of constructing them in an object. Lifecycle management is the process of managing the life of services, which often includes the game.  For the most part, ServiceBag is interested in the initialization of services within your game, since most services will not deconstruct. This allows for services that cross-depend upon each other, for example, if service A and service B both need to know about each other, serviceBag will allow for this to happen. A traditional module script will not allow for a circular dependency in the same way.  ServiceBag achieves circular dependency support by having a lifecycle hook system.  ","version":"Next","tagName":"h3"},{"title":"Why can't you pass in arguments into :GetService()​","type":1,"pageTitle":"Using services in Nevermore","url":"/NevermoreEngine/docs/servicebag#why-cant-you-pass-in-arguments-into-","content":" Service configuration is not offered in the retrieval of :GetService() because inherently we don't want unstable or random behavior in our games. If we had arguments in ServiceBag then you better hope that your initialization order gets to configure the first service first. Otherwise, if another package adds a service in the future then you will have different behavior.  ","version":"Next","tagName":"h3"},{"title":"How do you configure a service instead of arguments?​","type":1,"pageTitle":"Using services in Nevermore","url":"/NevermoreEngine/docs/servicebag#how-do-you-configure-a-service-instead-of-arguments","content":" Typically, you can configure a service by calling a method after :Init() is called, or after :Start() is called.  ","version":"Next","tagName":"h3"},{"title":"Should services have side effects when initialized or started?​","type":1,"pageTitle":"Using services in Nevermore","url":"/NevermoreEngine/docs/servicebag#should-services-have-side-effects-when-initialized-or-started","content":" Services should typically not have side effects when initialized or started.  ","version":"Next","tagName":"h3"},{"title":"Dependency injection​","type":1,"pageTitle":"Using services in Nevermore","url":"/NevermoreEngine/docs/servicebag#dependency-injection","content":" ServiceBag is also effectively a dependency injection system. In this system you can of course, inject services into other services.  For this reason, we inject the ServiceBag into the actual package itself.  -- Service bag injection function CarCommandService:Init(serviceBag) self._serviceBag = assert(serviceBag, &quot;No serviceBag&quot;) self._cmdrService = self._serviceBag:GetService(require(&quot;CmdrService&quot;)) end   ","version":"Next","tagName":"h2"},{"title":"Dependency injection in objects​","type":1,"pageTitle":"Using services in Nevermore","url":"/NevermoreEngine/docs/servicebag#dependency-injection-in-objects","content":" If you've got an object, it's typical you may need a service there  --[=[ @class MyClass ]=] local require = require(script.Parent.loader).load(script) local BaseObject = require(&quot;BaseObject&quot;) local MyClass = setmetatable({}, BaseObject) MyClass.ClassName = &quot;MyClass&quot; MyClass.__index = MyClass function MyClass.new(serviceBag) local self = setmetatable(BaseObject.new(), MyClass) self._serviceBag = assert(serviceBag, &quot;No serviceBag&quot;) self._cameraStackService = self._serviceBag:GetService(require(&quot;CameraStackService&quot;)) return self end return MyClass   It's very common to pass or inject a service bag into the service  ","version":"Next","tagName":"h3"},{"title":"Dependency injection in binders​","type":1,"pageTitle":"Using services in Nevermore","url":"/NevermoreEngine/docs/servicebag#dependency-injection-in-binders","content":" Binders explicitly support dependency injection. You can see that a BinderProvider here retrieves a ServiceBag (or any argument you want) and then the binder retrieves the extra argument.  return BinderProvider.new(script.Name, function(self, serviceBag) -- ... self:Add(Binder.new(&quot;Ragdoll&quot;, require(&quot;RagdollClient&quot;), serviceBag)) -- ... end)   Binders then will get the ServiceBag as the second argument.  function Ragdoll.new(humanoid, serviceBag) local self = setmetatable(BaseObject.new(humanoid), Ragdoll) self._serviceBag = assert(serviceBag, &quot;No serviceBag&quot;) -- Use services here. return self end   ","version":"Next","tagName":"h3"},{"title":"Memory management - ServiceBag will annotate stuff for you​","type":1,"pageTitle":"Using services in Nevermore","url":"/NevermoreEngine/docs/servicebag#memory-management---servicebag-will-annotate-stuff-for-you","content":" ServiceBag will automatically annotate your service with a memory profile name so that it is easy to track down which part of your codebase is using memory. This fixes a standard issue with diagnosing memory in a single-script architecture.  ","version":"Next","tagName":"h3"},{"title":"Using ServiceBag with stuff that doesn't have access to ServiceBag​","type":1,"pageTitle":"Using services in Nevermore","url":"/NevermoreEngine/docs/servicebag#using-servicebag-with-stuff-that-doesnt-have-access-to-servicebag","content":" If you're working with legacy code, or external code, you may not want to pass an initialized ServiceBag around. This will typically make the code less testable, so take this with caution, but you can typically use a few helper methods to return fully initialized services instead of having to retrieve them through the ServiceBag.  local function getAnyModule(module) if serviceBag:HasService(module) then return serviceBag:GetService(module) else return module end end   It's preferably your systems interop with ServiceBag directly as ServiceBag provides more control, better testability, and more clarity on where things are coming from. ","version":"Next","tagName":"h3"}],"options":{"id":"default"}}